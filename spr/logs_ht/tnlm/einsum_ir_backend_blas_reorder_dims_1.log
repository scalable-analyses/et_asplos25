parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.02482
  time (eval):    6.37154
  gflops (eval):  1110.7
  gflops (total): 1106.39
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.02482,6.37154,1110.7,1106.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60926
  gflops (eval):  4397.61
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60926,4397.61,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0257407
  time (eval):    6.26103
  gflops (eval):  1130.31
  gflops (total): 1125.68
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0257407,6.26103,1130.31,1125.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.62362
  gflops (eval):  4358.72
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.62362,4358.72,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0261734
  time (eval):    6.33575
  gflops (eval):  1116.98
  gflops (total): 1112.38
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0261734,6.33575,1116.98,1112.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61514
  gflops (eval):  4381.6
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61514,4381.6,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0256333
  time (eval):    6.22279
  gflops (eval):  1137.26
  gflops (total): 1132.59
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0256333,6.22279,1137.26,1132.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.62092
  gflops (eval):  4365.97
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.62092,4365.97,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0250973
  time (eval):    6.28168
  gflops (eval):  1126.59
  gflops (total): 1122.11
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0250973,6.28168,1126.59,1122.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61251
  gflops (eval):  4388.74
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61251,4388.74,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0252264
  time (eval):    6.43223
  gflops (eval):  1100.23
  gflops (total): 1095.93
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0252264,6.43223,1100.23,1095.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61245
  gflops (eval):  4388.91
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61245,4388.91,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0250015
  time (eval):    6.39304
  gflops (eval):  1106.97
  gflops (total): 1102.66
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0250015,6.39304,1106.97,1102.66

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61364
  gflops (eval):  4385.68
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61364,4385.68,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0256841
  time (eval):    6.41099
  gflops (eval):  1103.87
  gflops (total): 1099.46
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0256841,6.41099,1103.87,1099.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61382
  gflops (eval):  4385.2
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61382,4385.2,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0256122
  time (eval):    6.41017
  gflops (eval):  1104.01
  gflops (total): 1099.62
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0256122,6.41017,1104.01,1099.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60939
  gflops (eval):  4397.25
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60939,4397.25,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0247462
  time (eval):    6.26591
  gflops (eval):  1129.43
  gflops (total): 1124.99
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0247462,6.26591,1129.43,1124.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61586
  gflops (eval):  4379.64
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61586,4379.64,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.025025
  time (eval):    6.37418
  gflops (eval):  1110.25
  gflops (total): 1105.9
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.025025,6.37418,1110.25,1105.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61929
  gflops (eval):  4370.38
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61929,4370.38,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.02484
  time (eval):    6.40705
  gflops (eval):  1104.55
  gflops (total): 1100.28
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.02484,6.40705,1104.55,1100.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61659
  gflops (eval):  4377.67
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61659,4377.67,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0259757
  time (eval):    6.35172
  gflops (eval):  1114.17
  gflops (total): 1109.63
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0259757,6.35172,1114.17,1109.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61561
  gflops (eval):  4380.34
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61561,4380.34,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0252393
  time (eval):    6.29733
  gflops (eval):  1123.79
  gflops (total): 1119.31
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0252393,6.29733,1123.79,1119.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61172
  gflops (eval):  4390.9
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61172,4390.9,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0253934
  time (eval):    6.42366
  gflops (eval):  1101.69
  gflops (total): 1097.35
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0253934,6.42366,1101.69,1097.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.62335
  gflops (eval):  4359.45
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.62335,4359.45,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0250243
  time (eval):    6.39537
  gflops (eval):  1106.57
  gflops (total): 1102.25
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0250243,6.39537,1106.57,1102.25

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61886
  gflops (eval):  4371.52
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61886,4371.52,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0254289
  time (eval):    6.30406
  gflops (eval):  1122.59
  gflops (total): 1118.08
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0254289,6.30406,1122.59,1118.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60685
  gflops (eval):  4404.21
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60685,4404.21,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0248365
  time (eval):    6.42523
  gflops (eval):  1101.42
  gflops (total): 1097.18
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0248365,6.42523,1101.42,1097.18

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.6177
  gflops (eval):  4374.66
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.6177,4374.66,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.026603
  time (eval):    6.26322
  gflops (eval):  1129.91
  gflops (total): 1125.13
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.026603,6.26322,1129.91,1125.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60454
  gflops (eval):  4410.54
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60454,4410.54,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0261891
  time (eval):    6.35393
  gflops (eval):  1113.78
  gflops (total): 1109.21
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0261891,6.35393,1113.78,1109.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61548
  gflops (eval):  4380.69
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61548,4380.69,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0249729
  time (eval):    6.29703
  gflops (eval):  1123.85
  gflops (total): 1119.41
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0249729,6.29703,1123.85,1119.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61838
  gflops (eval):  4372.83
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61838,4372.83,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0245321
  time (eval):    6.28068
  gflops (eval):  1126.77
  gflops (total): 1122.39
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0245321,6.28068,1126.77,1122.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60378
  gflops (eval):  4412.63
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60378,4412.63,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0262829
  time (eval):    6.367
  gflops (eval):  1111.5
  gflops (total): 1106.93
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0262829,6.367,1111.5,1106.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61858
  gflops (eval):  4372.29
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61858,4372.29,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0263432
  time (eval):    6.35423
  gflops (eval):  1113.73
  gflops (total): 1109.13
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0263432,6.35423,1113.73,1109.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.6174
  gflops (eval):  4375.49
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.6174,4375.49,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.025811
  time (eval):    6.3861
  gflops (eval):  1108.17
  gflops (total): 1103.71
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.025811,6.3861,1108.17,1103.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61259
  gflops (eval):  4388.53
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61259,4388.53,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0257984
  time (eval):    6.28815
  gflops (eval):  1125.43
  gflops (total): 1120.84
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0257984,6.28815,1125.43,1120.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61066
  gflops (eval):  4393.78
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61066,4393.78,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0249354
  time (eval):    6.39354
  gflops (eval):  1106.88
  gflops (total): 1102.58
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0249354,6.39354,1106.88,1102.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60776
  gflops (eval):  4401.71
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60776,4401.71,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0257849
  time (eval):    6.4184
  gflops (eval):  1102.6
  gflops (total): 1098.18
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0257849,6.4184,1102.6,1098.18

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60918
  gflops (eval):  4397.83
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60918,4397.83,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0245282
  time (eval):    6.36941
  gflops (eval):  1111.08
  gflops (total): 1106.81
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0245282,6.36941,1111.08,1106.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61583
  gflops (eval):  4379.74
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61583,4379.74,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0257872
  time (eval):    6.18917
  gflops (eval):  1143.43
  gflops (total): 1138.69
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0257872,6.18917,1143.43,1138.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61246
  gflops (eval):  4388.88
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61246,4388.88,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0245158
  time (eval):    6.33108
  gflops (eval):  1117.8
  gflops (total): 1113.49
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0245158,6.33108,1117.8,1113.49

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61561
  gflops (eval):  4380.33
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61561,4380.33,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0243677
  time (eval):    6.39765
  gflops (eval):  1106.17
  gflops (total): 1101.98
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0243677,6.39765,1106.17,1101.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60848
  gflops (eval):  4399.74
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60848,4399.74,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0248114
  time (eval):    6.39052
  gflops (eval):  1107.41
  gflops (total): 1103.12
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0248114,6.39052,1107.41,1103.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.62054
  gflops (eval):  4367
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.62054,4367,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0251399
  time (eval):    6.38713
  gflops (eval):  1107.99
  gflops (total): 1103.65
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0251399,6.38713,1107.99,1103.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60741
  gflops (eval):  4402.66
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60741,4402.66,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0249724
  time (eval):    6.41885
  gflops (eval):  1102.52
  gflops (total): 1098.25
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0249724,6.41885,1102.52,1098.25

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.62081
  gflops (eval):  4366.27
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.62081,4366.27,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0247091
  time (eval):    6.31348
  gflops (eval):  1120.92
  gflops (total): 1116.55
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0247091,6.31348,1120.92,1116.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61084
  gflops (eval):  4393.29
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61084,4393.29,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0256193
  time (eval):    6.3532
  gflops (eval):  1113.91
  gflops (total): 1109.44
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0256193,6.3532,1113.91,1109.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.6117
  gflops (eval):  4390.95
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.6117,4390.95,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0259109
  time (eval):    6.32915
  gflops (eval):  1118.14
  gflops (total): 1113.58
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0259109,6.32915,1118.14,1113.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61513
  gflops (eval):  4381.63
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61513,4381.63,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0246457
  time (eval):    6.22843
  gflops (eval):  1136.22
  gflops (total): 1131.75
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0246457,6.22843,1136.22,1131.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61074
  gflops (eval):  4393.56
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61074,4393.56,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0248408
  time (eval):    6.32964
  gflops (eval):  1118.06
  gflops (total): 1113.69
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0248408,6.32964,1118.06,1113.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61333
  gflops (eval):  4386.52
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61333,4386.52,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0259184
  time (eval):    6.28207
  gflops (eval):  1126.52
  gflops (total): 1121.89
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0259184,6.28207,1126.52,1121.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.6154
  gflops (eval):  4380.9
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.6154,4380.9,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.02572
  time (eval):    6.38541
  gflops (eval):  1108.29
  gflops (total): 1103.85
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.02572,6.38541,1108.29,1103.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61698
  gflops (eval):  4376.61
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61698,4376.61,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0254801
  time (eval):    6.26637
  gflops (eval):  1129.35
  gflops (total): 1124.77
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0254801,6.26637,1129.35,1124.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61695
  gflops (eval):  4376.71
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61695,4376.71,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0254854
  time (eval):    6.21425
  gflops (eval):  1138.82
  gflops (total): 1134.17
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0254854,6.21425,1138.82,1134.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.6149
  gflops (eval):  4382.27
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.6149,4382.27,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0246484
  time (eval):    6.31699
  gflops (eval):  1120.3
  gflops (total): 1115.94
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0246484,6.31699,1120.3,1115.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61577
  gflops (eval):  4379.91
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61577,4379.91,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0252842
  time (eval):    6.46707
  gflops (eval):  1094.3
  gflops (total): 1090.04
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0252842,6.46707,1094.3,1090.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61135
  gflops (eval):  4391.9
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61135,4391.9,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0257674
  time (eval):    6.23033
  gflops (eval):  1135.88
  gflops (total): 1131.2
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0257674,6.23033,1135.88,1131.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61571
  gflops (eval):  4380.06
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61571,4380.06,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0253373
  time (eval):    6.41546
  gflops (eval):  1103.1
  gflops (total): 1098.76
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0253373,6.41546,1103.1,1098.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60438
  gflops (eval):  4410.98
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60438,4410.98,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0252868
  time (eval):    6.32695
  gflops (eval):  1118.53
  gflops (total): 1114.08
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0252868,6.32695,1118.53,1114.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61684
  gflops (eval):  4377.01
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61684,4377.01,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0252138
  time (eval):    6.33001
  gflops (eval):  1117.99
  gflops (total): 1113.56
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0252138,6.33001,1117.99,1113.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60872
  gflops (eval):  4399.08
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60872,4399.08,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0260795
  time (eval):    6.35192
  gflops (eval):  1114.14
  gflops (total): 1109.58
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0260795,6.35192,1114.14,1109.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61297
  gflops (eval):  4387.51
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61297,4387.51,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.026273
  time (eval):    6.40787
  gflops (eval):  1104.41
  gflops (total): 1099.9
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.026273,6.40787,1104.41,1099.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60114
  gflops (eval):  4419.93
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60114,4419.93,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0247573
  time (eval):    6.37626
  gflops (eval):  1109.88
  gflops (total): 1105.59
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0247573,6.37626,1109.88,1105.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61532
  gflops (eval):  4381.12
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61532,4381.12,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0261001
  time (eval):    6.37958
  gflops (eval):  1109.31
  gflops (total): 1104.79
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0261001,6.37958,1109.31,1104.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61515
  gflops (eval):  4381.59
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61515,4381.59,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.025019
  time (eval):    6.42808
  gflops (eval):  1100.93
  gflops (total): 1096.67
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.025019,6.42808,1100.93,1096.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61797
  gflops (eval):  4373.93
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61797,4373.93,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0257865
  time (eval):    6.35582
  gflops (eval):  1113.45
  gflops (total): 1108.95
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0257865,6.35582,1113.45,1108.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60527
  gflops (eval):  4408.54
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60527,4408.54,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0243388
  time (eval):    6.22365
  gflops (eval):  1137.1
  gflops (total): 1132.67
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0243388,6.22365,1137.1,1132.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.6054
  gflops (eval):  4408.19
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.6054,4408.19,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0248857
  time (eval):    6.40612
  gflops (eval):  1104.71
  gflops (total): 1100.43
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0248857,6.40612,1104.71,1100.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.59911
  gflops (eval):  4425.54
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.59911,4425.54,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0256797
  time (eval):    6.25431
  gflops (eval):  1131.52
  gflops (total): 1126.9
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0256797,6.25431,1131.52,1126.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61788
  gflops (eval):  4374.18
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61788,4374.18,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0243958
  time (eval):    6.4232
  gflops (eval):  1101.77
  gflops (total): 1097.6
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0243958,6.4232,1101.77,1097.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61269
  gflops (eval):  4388.26
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61269,4388.26,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0242469
  time (eval):    6.34622
  gflops (eval):  1115.14
  gflops (total): 1110.89
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0242469,6.34622,1115.14,1110.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61588
  gflops (eval):  4379.6
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61588,4379.6,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0253754
  time (eval):    6.30229
  gflops (eval):  1122.91
  gflops (total): 1118.41
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0253754,6.30229,1122.91,1118.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.6061
  gflops (eval):  4406.26
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.6061,4406.26,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.025895
  time (eval):    6.24223
  gflops (eval):  1133.71
  gflops (total): 1129.03
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.025895,6.24223,1133.71,1129.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.62449
  gflops (eval):  4356.39
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.62449,4356.39,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0251372
  time (eval):    6.33161
  gflops (eval):  1117.71
  gflops (total): 1113.29
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0251372,6.33161,1117.71,1113.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61595
  gflops (eval):  4379.39
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61595,4379.39,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0243411
  time (eval):    6.37634
  gflops (eval):  1109.87
  gflops (total): 1105.65
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0243411,6.37634,1109.87,1105.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61759
  gflops (eval):  4374.97
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61759,4374.97,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0255774
  time (eval):    6.43485
  gflops (eval):  1099.78
  gflops (total): 1095.42
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0255774,6.43485,1099.78,1095.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61163
  gflops (eval):  4391.16
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61163,4391.16,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0252512
  time (eval):    6.41525
  gflops (eval):  1103.14
  gflops (total): 1098.81
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0252512,6.41525,1103.14,1098.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.6166
  gflops (eval):  4377.63
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.6166,4377.63,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0254668
  time (eval):    6.40516
  gflops (eval):  1104.88
  gflops (total): 1100.5
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0254668,6.40516,1104.88,1100.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61393
  gflops (eval):  4384.9
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61393,4384.9,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0249765
  time (eval):    6.3356
  gflops (eval):  1117.01
  gflops (total): 1112.62
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0249765,6.3356,1117.01,1112.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61423
  gflops (eval):  4384.09
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61423,4384.09,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0248242
  time (eval):    6.32263
  gflops (eval):  1119.3
  gflops (total): 1114.92
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0248242,6.32263,1119.3,1114.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61546
  gflops (eval):  4380.74
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61546,4380.74,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0247697
  time (eval):    6.39259
  gflops (eval):  1107.05
  gflops (total): 1102.77
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0247697,6.39259,1107.05,1102.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60893
  gflops (eval):  4398.52
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60893,4398.52,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0251998
  time (eval):    6.32437
  gflops (eval):  1118.99
  gflops (total): 1114.55
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0251998,6.32437,1118.99,1114.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61445
  gflops (eval):  4383.49
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61445,4383.49,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0247285
  time (eval):    6.34678
  gflops (eval):  1115.04
  gflops (total): 1110.71
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0247285,6.34678,1115.04,1110.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60897
  gflops (eval):  4398.42
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60897,4398.42,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.025272
  time (eval):    6.21102
  gflops (eval):  1139.41
  gflops (total): 1134.79
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.025272,6.21102,1139.41,1134.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60728
  gflops (eval):  4403.02
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60728,4403.02,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0256183
  time (eval):    6.35352
  gflops (eval):  1113.85
  gflops (total): 1109.38
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0256183,6.35352,1113.85,1109.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61328
  gflops (eval):  4386.65
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61328,4386.65,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.024911
  time (eval):    6.3248
  gflops (eval):  1118.91
  gflops (total): 1114.52
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.024911,6.3248,1118.91,1114.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61361
  gflops (eval):  4385.74
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61361,4385.74,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0257984
  time (eval):    6.41061
  gflops (eval):  1103.94
  gflops (total): 1099.51
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0257984,6.41061,1103.94,1099.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61121
  gflops (eval):  4392.28
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61121,4392.28,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0260018
  time (eval):    6.30874
  gflops (eval):  1121.76
  gflops (total): 1117.16
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0260018,6.30874,1121.76,1117.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61129
  gflops (eval):  4392.07
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61129,4392.07,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0247749
  time (eval):    6.33056
  gflops (eval):  1117.9
  gflops (total): 1113.54
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0247749,6.33056,1117.9,1113.54

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60797
  gflops (eval):  4401.14
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60797,4401.14,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0253585
  time (eval):    6.36451
  gflops (eval):  1111.93
  gflops (total): 1107.52
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0253585,6.36451,1111.93,1107.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61437
  gflops (eval):  4383.7
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61437,4383.7,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0245861
  time (eval):    6.42163
  gflops (eval):  1102.04
  gflops (total): 1097.84
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0245861,6.42163,1102.04,1097.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61523
  gflops (eval):  4381.35
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61523,4381.35,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0255153
  time (eval):    6.4452
  gflops (eval):  1098.01
  gflops (total): 1093.68
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0255153,6.4452,1098.01,1093.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60842
  gflops (eval):  4399.9
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60842,4399.9,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0252058
  time (eval):    6.34149
  gflops (eval):  1115.97
  gflops (total): 1111.55
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0252058,6.34149,1115.97,1111.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.62389
  gflops (eval):  4357.99
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.62389,4357.99,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0255082
  time (eval):    6.34647
  gflops (eval):  1115.09
  gflops (total): 1110.63
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0255082,6.34647,1115.09,1110.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61032
  gflops (eval):  4394.73
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61032,4394.73,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0248611
  time (eval):    6.32049
  gflops (eval):  1119.68
  gflops (total): 1115.29
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0248611,6.32049,1119.68,1115.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.6095
  gflops (eval):  4396.97
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.6095,4396.97,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0256852
  time (eval):    6.436
  gflops (eval):  1099.58
  gflops (total): 1095.21
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0256852,6.436,1099.58,1095.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61378
  gflops (eval):  4385.3
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61378,4385.3,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0247265
  time (eval):    6.39563
  gflops (eval):  1106.52
  gflops (total): 1102.26
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0247265,6.39563,1106.52,1102.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61377
  gflops (eval):  4385.32
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61377,4385.32,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0244634
  time (eval):    6.38738
  gflops (eval):  1107.95
  gflops (total): 1103.72
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0244634,6.38738,1107.95,1103.72

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61423
  gflops (eval):  4384.06
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61423,4384.06,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0255409
  time (eval):    6.3581
  gflops (eval):  1113.05
  gflops (total): 1108.6
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0255409,6.3581,1113.05,1108.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.6127
  gflops (eval):  4388.22
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.6127,4388.22,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0249076
  time (eval):    6.35719
  gflops (eval):  1113.21
  gflops (total): 1108.87
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0249076,6.35719,1113.21,1108.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.60972
  gflops (eval):  4396.36
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.60972,4396.36,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0255967
  time (eval):    6.31865
  gflops (eval):  1120
  gflops (total): 1115.48
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0255967,6.31865,1120,1115.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.62015
  gflops (eval):  4368.07
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.62015,4368.07,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0257085
  time (eval):    6.41757
  gflops (eval):  1102.74
  gflops (total): 1098.34
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0257085,6.41757,1102.74,1098.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61136
  gflops (eval):  4391.87
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61136,4391.87,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0252422
  time (eval):    6.33324
  gflops (eval):  1117.42
  gflops (total): 1112.99
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0252422,6.33324,1117.42,1112.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61465
  gflops (eval):  4382.92
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61465,4382.92,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0245874
  time (eval):    6.36802
  gflops (eval):  1111.32
  gflops (total): 1107.05
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0245874,6.36802,1111.32,1107.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61542
  gflops (eval):  4380.84
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61542,4380.84,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0245738
  time (eval):    6.40215
  gflops (eval):  1105.4
  gflops (total): 1101.17
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0245738,6.40215,1105.4,1101.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61058
  gflops (eval):  4394.01
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61058,4394.01,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0254938
  time (eval):    6.39658
  gflops (eval):  1106.36
  gflops (total): 1101.97
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0254938,6.39658,1106.36,1101.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.6219
  gflops (eval):  4363.33
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.6219,4363.33,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.025801
  time (eval):    6.40805
  gflops (eval):  1104.38
  gflops (total): 1099.95
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.025801,6.40805,1104.38,1099.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.62168
  gflops (eval):  4363.94
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.62168,4363.94,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0247512
  time (eval):    6.36082
  gflops (eval):  1112.58
  gflops (total): 1108.26
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0247512,6.36082,1112.58,1108.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.617
  gflops (eval):  4376.55
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.617,4376.55,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0246096
  time (eval):    6.41919
  gflops (eval):  1102.46
  gflops (total): 1098.25
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0246096,6.41919,1102.46,1098.25

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.6092
  gflops (eval):  4397.77
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.6092,4397.77,0
parsed tensors:
  26,27
  26,28,29
  27,30,31
  29,30,32,33
  28,34,35
  32,36,37
  33,38,39
  31,40,41
  35,36,42,43
  37,38,44,45
  39,40,46,47
  34,48,49
  42,50,51
  43,0,1
  44,2,3
  45,4,5
  46,6,7
  47,8,9
  41,10,11
  49,50,12,13
  51,0,14,15
  1,2,16,17
  3,4,18,19
  5,6,20,21
  7,8,22,23
  9,10,24,25
  80,79
  80,58,64
  79,78,86
  64,78,85,59
  58,55,67
  85,57,82
  59,76,77
  86,65,63
  67,57,62,72
  82,76,52,54
  77,65,53,70
  55,48,68
  62,69,73
  72,56,74
  52,84,71
  54,60,66
  53,83,61
  70,75,81
  63,87,11
  68,69,12,13
  73,56,14,15
  74,84,16,17
  71,60,18,19
  66,83,20,21
  61,75,22,23
  81,87,24,25
  11,25
parsed contraction path: 30 37 43 50 33 37 35 41 46 47 45 46 21 40 8 13 4 43 10 17 9 15 36 40 38 39 37 38 36 37 5 7 0 2 0 34 0 33 0 32 30 31 11 12 7 23 10 27 10 27 11 13 3 23 9 22 21 23 11 21 11 20 2 17 16 19 16 18 16 17 9 11 9 12 13 14 3 6 1 2 0 11 1 5 5 9 7 8 6 7 5 6 3 4 2 3 2 3 1 2 0 1 
parsed dimension ids:
  0: 0
  1: 1
  10: 10
  11: 11
  12: 12
  13: 13
  14: 14
  15: 15
  16: 16
  17: 17
  18: 18
  19: 19
  2: 2
  20: 20
  21: 21
  22: 22
  23: 23
  24: 24
  25: 25
  26: 26
  27: 27
  28: 28
  29: 29
  3: 3
  30: 30
  31: 31
  32: 32
  33: 33
  34: 34
  35: 35
  36: 36
  37: 37
  38: 38
  39: 39
  4: 4
  40: 40
  41: 41
  42: 42
  43: 43
  44: 44
  45: 45
  46: 46
  47: 47
  48: 48
  49: 49
  5: 5
  50: 50
  51: 51
  52: 52
  53: 53
  54: 54
  55: 55
  56: 56
  57: 57
  58: 58
  59: 59
  6: 6
  60: 60
  61: 61
  62: 62
  63: 63
  64: 64
  65: 65
  66: 66
  67: 67
  68: 68
  69: 69
  7: 7
  70: 70
  71: 71
  72: 72
  73: 73
  74: 74
  75: 75
  76: 76
  77: 77
  78: 78
  79: 79
  8: 8
  80: 80
  81: 81
  82: 82
  83: 83
  84: 84
  85: 85
  86: 86
  87: 87
  9: 9
parsed dimension sizes:
  0: 16
  1: 16
  10: 16
  11: 7
  12: 7
  13: 7
  14: 7
  15: 7
  16: 7
  17: 7
  18: 7
  19: 7
  2: 16
  20: 7
  21: 7
  22: 7
  23: 7
  24: 7
  25: 7
  26: 16
  27: 16
  28: 16
  29: 16
  3: 16
  30: 16
  31: 16
  32: 16
  33: 16
  34: 16
  35: 16
  36: 16
  37: 16
  38: 16
  39: 16
  4: 16
  40: 16
  41: 16
  42: 16
  43: 16
  44: 16
  45: 16
  46: 16
  47: 16
  48: 7
  49: 16
  5: 16
  50: 16
  51: 16
  52: 16
  53: 16
  54: 16
  55: 16
  56: 16
  57: 16
  58: 16
  59: 16
  6: 16
  60: 16
  61: 16
  62: 16
  63: 16
  64: 16
  65: 16
  66: 16
  67: 16
  68: 16
  69: 16
  7: 16
  70: 16
  71: 16
  72: 16
  73: 16
  74: 16
  75: 16
  76: 16
  77: 16
  78: 16
  79: 16
  8: 16
  80: 16
  81: 16
  82: 16
  83: 16
  84: 16
  85: 16
  86: 16
  87: 16
  9: 16
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 3 3 4 3 3 3 3 4 4 4 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 2 
  string_dim_ids: 26 27 26 28 29 27 30 31 29 30 32 33 28 34 35 32 36 37 33 38 39 31 40 41 35 36 42 43 37 38 44 45 39 40 46 47 34 48 49 42 50 51 43 0 1 44 2 3 45 4 5 46 6 7 47 8 9 41 10 11 49 50 12 13 51 0 14 15 1 2 16 17 3 4 18 19 5 6 20 21 7 8 22 23 9 10 24 25 80 79 80 58 64 79 78 86 64 78 85 59 58 55 67 85 57 82 59 76 77 86 65 63 67 57 62 72 82 76 52 54 77 65 53 70 55 48 68 62 69 73 72 56 74 52 84 71 54 60 66 53 83 61 70 75 81 63 87 11 68 69 12 13 73 56 14 15 74 84 16 17 71 60 18 19 66 83 20 21 61 75 22 23 81 87 24 25 11 25 

*** benchmarking einsum_ir ***
[[[[[[[[31,40,41],[[[39,40,46,47]->[39,46,47,40]],[[46,6,7]->[7,6,46]]->[7,6,39,47,40]]->[7,6,31,39,47,41]],[[[[[[[33,38,39],[[37,38,44,45]->[45,44,37,38]]->[45,44,33,37,39]],[[[32,36,37]->[36,32,37]],[[[29,30,32,33]->[29,30,33,32]],[[[[27,30,31]->[31,27,30]],[26,27]->[31,26,30]],[[26,28,29]->[28,29,26]]->[28,31,29,30]]->[28,31,33,32]]->[28,36,31,33,37]]->[45,28,36,44,31,39]],[[[44,2,3]->[3,2,44]],[[[[1,2,16,17]->[1,16,17,2]],[[74,84,16,17]->[84,74,16,17]]->[84,1,74,2]],[[[[[[[[72,56,74]->[56,72,74]],[[67,57,62,72]->[57,67,62,72]]->[57,67,56,62,74]],[[[62,69,73]->[69,73,62]],[[73,56,14,15]->[14,15,56,73]]->[14,15,69,56,62]]->[57,14,15,67,69,74]],[[[68,69,12,13]->[12,13,68,69]],[[[55,48,68]->[48,55,68]],[[58,55,67]->[58,67,55]]->[58,48,67,68]]->[58,12,13,48,67,69]]->[57,58,14,15,12,13,48,74]],[[[34,48,49]->[34,49,48]],[[49,50,12,13]->[50,12,13,49]]->[34,50,12,13,48]]->[57,58,34,14,15,50,74]],[[[42,50,51]->[42,51,50]],[[51,0,14,15]->[0,14,15,51]]->[0,14,42,15,50]]->[57,58,0,34,42,74]],[[[[35,36,42,43]->[36,43,35,42]],[[43,0,1]->[0,1,43]]->[0,36,1,35,42]],[28,34,35]->[28,0,36,1,34,42]]->[57,58,28,36,1,74]]->[57,58,28,84,36,2]]->[57,58,3,28,84,36,44]]->[57,58,3,45,84,31,39]],[[[52,84,71]->[52,71,84]],[[[[71,60,18,19]->[60,18,19,71]],[3,4,18,19]->[3,60,4,71]],[[45,4,5]->[5,45,4]]->[5,3,60,45,71]]->[5,52,3,60,45,84]]->[5,52,57,58,60,31,39]],[[[54,60,66]->[66,54,60]],[[[[82,76,52,54]->[52,76,82,54]],[[59,76,77]->[77,59,76]]->[77,52,59,82,54]],[[[85,57,82]->[57,85,82]],[[[64,78,85,59]->[64,78,59,85]],[[[79,78,86]->[86,79,78]],[[80,79],[[80,58,64]->[58,64,80]]->[58,64,79]]->[86,58,64,78]]->[86,58,59,85]]->[86,57,58,59,82]]->[86,77,52,57,58,54]]->[86,77,52,57,66,58,60]]->[86,77,5,66,31,39]],[[[66,83,20,21]->[83,20,21,66]],[[5,6,20,21]->[6,5,20,21]]->[6,83,5,66]]->[86,6,77,83,31,39]]->[86,77,83,7,47,41]],[[[47,8,9]->[9,8,47]],[[7,8,22,23]->[22,23,7,8]]->[22,23,9,7,47]]->[86,22,23,77,83,9,41]],[[[[53,83,61]->[53,61,83]],[[61,75,22,23]->[22,23,75,61]]->[22,23,53,75,83]],[[[70,75,81]->[81,70,75]],[[77,65,53,70]->[65,77,53,70]]->[81,65,77,53,75]]->[22,23,81,65,77,83]]->[81,65,86,9,41]],[[86,65,63]->[63,65,86]]->[63,81,9,41]],[[[81,87,24,25]->[25,24,87,81]],[[63,87,11]->[11,63,87]]->[11,25,24,63,81]]->[11,25,24,9,41]],[[9,10,24,25]->[25,10,24,9]]->[11,10,41,25]],[[41,10,11]->[11,10,41]]->[11,25]
  #flops:         7076901428175
  time (compile): 0.0252389
  time (eval):    6.34016
  gflops (eval):  1116.2
  gflops (total): 1111.78
CSV_DATA: einsum_ir,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0.0252389,6.34016,1116.2,1111.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 112 256 16
    #1: 1 784 1792 16
    #2: 1 256 4096 16
    #3: 1 256 784 16
    #4: 1 4096 784 256
    #5: 1 12544 5488 256
    #6: 1 256 256 49
    #7: 1 4096 256 16
    #8: 1 65536 256 16
    #9: 1 256 784 16
    #10: 1 112 784 16
    #11: 1 200704 256 343
    #12: 1 65536 256 784
    #13: 1 4096 4096 4096
    #14: 1 256 65536 256
    #15: 1 256 4096 16
    #16: 1 256 16 16
    #17: 1 256 256 16
    #18: 1 256 256 256
    #19: 1 256 4096 16
    #20: 1 4096 4096 256
    #21: 1 16 256 16
    #22: 1 256 256 49
    #23: 1 256 256 16
    #24: 1 256 256 256
    #25: 1 4096 256 16
    #26: 1 4096 256 16
    #27: 1 256 4096 16
    #28: 1 4096 4096 256
    #29: 1 256 65536 16
    #30: 1 256 1048576 16
    #31: 1 256 1048576 16
    #32: 1 4096 65536 4096
    #33: 1 65536 4096 4096
    #34: 1 4096 4096 65536
    #35: 1 256 4096 16
    #36: 1 256 784 16
    #37: 1 784 4096 256
    #38: 1 256 784 16
    #39: 1 4096 256 16
    #40: 1 256 65536 16
    #41: 1 256 256 49
    #42: 1 65536 256 256
    #43: 1 4096 4096 4096
    #44: 1 65536 784 256
    #45: 1 4096 256 12544
    #46: 1 784 112 16
    #47: 1 4096 16 256
    #48: 1 256 343 256
    #49: 7 112 16 112
    #50: 7 7 1 256
  #flops:         7076901428175
  time (eval):    1.61522
  gflops (eval):  4381.38
CSV_DATA: at::matmul,"[26,27],[26,28,29],[27,30,31],[29,30,32,33],[28,34,35],[32,36,37],[33,38,39],[31,40,41],[35,36,42,43],[37,38,44,45],[39,40,46,47],[34,48,49],[42,50,51],[43,0,1],[44,2,3],[45,4,5],[46,6,7],[47,8,9],[41,10,11],[49,50,12,13],[51,0,14,15],[1,2,16,17],[3,4,18,19],[5,6,20,21],[7,8,22,23],[9,10,24,25],[80,79],[80,58,64],[79,78,86],[64,78,85,59],[58,55,67],[85,57,82],[59,76,77],[86,65,63],[67,57,62,72],[82,76,52,54],[77,65,53,70],[55,48,68],[62,69,73],[72,56,74],[52,84,71],[54,60,66],[53,83,61],[70,75,81],[63,87,11],[68,69,12,13],[73,56,14,15],[74,84,16,17],[71,60,18,19],[66,83,20,21],[61,75,22,23],[81,87,24,25]->[11,25]","16,16,16,16,16,16,16,16,16,16,16,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16","(30,37),(43,50),(33,37),(35,41),(46,47),(45,46),(21,40),(8,13),(4,43),(10,17),(9,15),(36,40),(38,39),(37,38),(36,37),(5,7),(0,2),(0,34),(0,33),(0,32),(30,31),(11,12),(7,23),(10,27),(10,27),(11,13),(3,23),(9,22),(21,23),(11,21),(11,20),(2,17),(16,19),(16,18),(16,17),(9,11),(9,12),(13,14),(3,6),(1,2),(0,11),(1,5),(5,9),(7,8),(6,7),(5,6),(3,4),(2,3),(2,3),(1,2),(0,1)",7076901428175,0,1.61522,4381.38,0
