parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013093
  time (eval):    0.000842362
  gflops (eval):  358.094
  gflops (total): 21.6459
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013093,0.000842362,358.094,21.6459

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00890128
  gflops (total): 33.8878
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,33.8878

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00788109
  gflops (eval):  38.2745
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00788109,38.2745,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3717.56
  maximum absolute entry in einsum_ir solution: 3717.56
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130307
  time (eval):    0.000725672
  gflops (eval):  415.677
  gflops (total): 21.9277
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130307,0.000725672,415.677,21.9277

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00968777
  gflops (total): 31.1367
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,31.1367

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00789814
  gflops (eval):  38.1919
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00789814,38.1919,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3550
  maximum absolute entry in einsum_ir solution: 3550
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0132108
  time (eval):    0.00068959
  gflops (eval):  437.426
  gflops (total): 21.7005
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0132108,0.00068959,437.426,21.7005

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00774534
  gflops (total): 38.9453
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.9453

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000167829
  gflops (eval):  1797.33
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000167829,1797.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      4327.2
  maximum absolute entry in einsum_ir solution: 4327.19
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013065
  time (eval):    0.00090157
  gflops (eval):  334.577
  gflops (total): 21.5977
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013065,0.00090157,334.577,21.5977

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00918795
  gflops (total): 32.8305
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,32.8305

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00829268
  gflops (eval):  36.3748
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00829268,36.3748,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3160.16
  maximum absolute entry in einsum_ir solution: 3160.16
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131506
  time (eval):    0.00078295
  gflops (eval):  385.267
  gflops (total): 21.6489
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131506,0.00078295,385.267,21.6489

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00799615
  gflops (total): 37.7238
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.7238

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00808367
  gflops (eval):  37.3153
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00808367,37.3153,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3205.6
  maximum absolute entry in einsum_ir solution: 3205.61
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0129893
  time (eval):    0.000771635
  gflops (eval):  390.916
  gflops (total): 21.9204
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0129893,0.000771635,390.916,21.9204

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00774277
  gflops (total): 38.9583
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.9583

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00015023
  gflops (eval):  2007.89
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00015023,2007.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3486
  maximum absolute entry in einsum_ir solution: 3486
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013121
  time (eval):    0.000708065
  gflops (eval):  426.013
  gflops (total): 21.8123
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013121,0.000708065,426.013,21.8123

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00819219
  gflops (total): 36.821
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.821

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00809758
  gflops (eval):  37.2512
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00809758,37.2512,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3219.17
  maximum absolute entry in einsum_ir solution: 3219.17
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131125
  time (eval):    0.000717554
  gflops (eval):  420.379
  gflops (total): 21.8108
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131125,0.000717554,420.379,21.8108

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00975206
  gflops (total): 30.9314
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,30.9314

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00822743
  gflops (eval):  36.6633
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00822743,36.6633,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3258.7
  maximum absolute entry in einsum_ir solution: 3258.7
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130972
  time (eval):    0.000837745
  gflops (eval):  360.068
  gflops (total): 21.6466
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130972,0.000837745,360.068,21.6466

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00793942
  gflops (total): 37.9933
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.9933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00769219
  gflops (eval):  39.2144
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00769219,39.2144,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3085.11
  maximum absolute entry in einsum_ir solution: 3085.11
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0129538
  time (eval):    0.000692145
  gflops (eval):  435.812
  gflops (total): 22.1051
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0129538,0.000692145,435.812,22.1051

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00816551
  gflops (total): 36.9413
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.9413

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00791009
  gflops (eval):  38.1342
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00791009,38.1342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3157.94
  maximum absolute entry in einsum_ir solution: 3157.94
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130731
  time (eval):    0.000714444
  gflops (eval):  422.209
  gflops (total): 21.878
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130731,0.000714444,422.209,21.878

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00832759
  gflops (total): 36.2223
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.2223

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00792666
  gflops (eval):  38.0545
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00792666,38.0545,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3303.65
  maximum absolute entry in einsum_ir solution: 3303.65
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130963
  time (eval):    0.000681034
  gflops (eval):  442.922
  gflops (total): 21.8943
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130963,0.000681034,442.922,21.8943

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00957464
  gflops (total): 31.5046
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,31.5046

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00796818
  gflops (eval):  37.8562
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00796818,37.8562,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3067.43
  maximum absolute entry in einsum_ir solution: 3067.43
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131463
  time (eval):    0.000931792
  gflops (eval):  323.725
  gflops (total): 21.4265
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131463,0.000931792,323.725,21.4265

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00852303
  gflops (total): 35.3917
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,35.3917

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00822904
  gflops (eval):  36.6561
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00822904,36.6561,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3614.56
  maximum absolute entry in einsum_ir solution: 3614.56
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131971
  time (eval):    0.000707343
  gflops (eval):  426.448
  gflops (total): 21.6941
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131971,0.000707343,426.448,21.6941

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00951153
  gflops (total): 31.7136
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,31.7136

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00771318
  gflops (eval):  39.1077
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00771318,39.1077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3045.67
  maximum absolute entry in einsum_ir solution: 3045.67
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130651
  time (eval):    0.000699588
  gflops (eval):  431.175
  gflops (total): 21.9143
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130651,0.000699588,431.175,21.9143

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00850956
  gflops (total): 35.4478
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,35.4478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00808278
  gflops (eval):  37.3195
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00808278,37.3195,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3177.55
  maximum absolute entry in einsum_ir solution: 3177.55
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131539
  time (eval):    0.0010436
  gflops (eval):  289.044
  gflops (total): 21.2464
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131539,0.0010436,289.044,21.2464

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0083993
  gflops (total): 35.9131
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,35.9131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00810522
  gflops (eval):  37.2161
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00810522,37.2161,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2754.16
  maximum absolute entry in einsum_ir solution: 2754.15
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131095
  time (eval):    0.000654172
  gflops (eval):  461.109
  gflops (total): 21.916
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131095,0.000654172,461.109,21.916

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00930521
  gflops (total): 32.4168
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,32.4168

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00791754
  gflops (eval):  38.0983
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00791754,38.0983,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3239.32
  maximum absolute entry in einsum_ir solution: 3239.32
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130746
  time (eval):    0.000670448
  gflops (eval):  449.915
  gflops (total): 21.9457
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130746,0.000670448,449.915,21.9457

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00799413
  gflops (total): 37.7333
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.7333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000171545
  gflops (eval):  1758.4
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000171545,1758.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3226.06
  maximum absolute entry in einsum_ir solution: 3226.06
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0133638
  time (eval):    0.000773177
  gflops (eval):  390.137
  gflops (total): 21.3374
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0133638,0.000773177,390.137,21.3374

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0080967
  gflops (total): 37.2553
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.2553

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00753857
  gflops (eval):  40.0135
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00753857,40.0135,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3560.87
  maximum absolute entry in einsum_ir solution: 3560.87
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131216
  time (eval):    0.000771581
  gflops (eval):  390.944
  gflops (total): 21.7117
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131216,0.000771581,390.944,21.7117

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00817093
  gflops (total): 36.9168
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.9168

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00800626
  gflops (eval):  37.6761
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00800626,37.6761,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      4080.24
  maximum absolute entry in einsum_ir solution: 4080.24
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013082
  time (eval):    0.000713826
  gflops (eval):  422.575
  gflops (total): 21.865
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013082,0.000713826,422.575,21.865

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00934744
  gflops (total): 32.2703
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,32.2703

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00786805
  gflops (eval):  38.3379
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00786805,38.3379,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3038.76
  maximum absolute entry in einsum_ir solution: 3038.76
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131042
  time (eval):    0.00072069
  gflops (eval):  418.55
  gflops (total): 21.819
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131042,0.00072069,418.55,21.819

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00974526
  gflops (total): 30.953
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,30.953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00775552
  gflops (eval):  38.8942
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00775552,38.8942,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3145.01
  maximum absolute entry in einsum_ir solution: 3145.01
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130266
  time (eval):    0.000830219
  gflops (eval):  363.332
  gflops (total): 21.7686
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130266,0.000830219,363.332,21.7686

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00773132
  gflops (total): 39.0159
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.0159

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000142647
  gflops (eval):  2114.62
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000142647,2114.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3341.27
  maximum absolute entry in einsum_ir solution: 3341.27
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0129679
  time (eval):    0.000838666
  gflops (eval):  359.672
  gflops (total): 21.8479
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0129679,0.000838666,359.672,21.8479

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00822841
  gflops (total): 36.6589
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.6589

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00817513
  gflops (eval):  36.8979
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00817513,36.8979,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3193.72
  maximum absolute entry in einsum_ir solution: 3193.72
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131226
  time (eval):    0.000695764
  gflops (eval):  433.545
  gflops (total): 21.8292
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131226,0.000695764,433.545,21.8292

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00837737
  gflops (total): 36.0071
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.0071

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00786082
  gflops (eval):  38.3732
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00786082,38.3732,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3480.94
  maximum absolute entry in einsum_ir solution: 3480.94
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0133189
  time (eval):    0.000679891
  gflops (eval):  443.666
  gflops (total): 21.5479
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0133189,0.000679891,443.666,21.5479

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00833532
  gflops (total): 36.1887
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.1887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00764445
  gflops (eval):  39.4593
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00764445,39.4593,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3665.04
  maximum absolute entry in einsum_ir solution: 3665.04
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130816
  time (eval):    0.000760476
  gflops (eval):  396.653
  gflops (total): 21.7919
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130816,0.000760476,396.653,21.7919

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00839743
  gflops (total): 35.9211
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,35.9211

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0081403
  gflops (eval):  37.0557
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0081403,37.0557,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3258.03
  maximum absolute entry in einsum_ir solution: 3258.03
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013269
  time (eval):    0.00079423
  gflops (eval):  379.795
  gflops (total): 21.4491
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013269,0.00079423,379.795,21.4491

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0083251
  gflops (total): 36.2332
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.2332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00778082
  gflops (eval):  38.7677
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00778082,38.7677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3074.4
  maximum absolute entry in einsum_ir solution: 3074.4
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131317
  time (eval):    0.000687754
  gflops (eval):  438.594
  gflops (total): 21.8275
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131317,0.000687754,438.594,21.8275

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00820078
  gflops (total): 36.7825
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.7825

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00747234
  gflops (eval):  40.3682
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00747234,40.3682,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      4525.6
  maximum absolute entry in einsum_ir solution: 4525.6
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0134244
  time (eval):    0.000698148
  gflops (eval):  432.064
  gflops (total): 21.3591
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0134244,0.000698148,432.064,21.3591

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00778756
  gflops (total): 38.7342
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.7342

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000163131
  gflops (eval):  1849.1
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000163131,1849.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3330.83
  maximum absolute entry in einsum_ir solution: 3330.83
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131624
  time (eval):    0.000701162
  gflops (eval):  430.207
  gflops (total): 21.7581
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131624,0.000701162,430.207,21.7581

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00784373
  gflops (total): 38.4568
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.4568

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000167922
  gflops (eval):  1796.34
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000167922,1796.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3376.9
  maximum absolute entry in einsum_ir solution: 3376.91
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130267
  time (eval):    0.000725054
  gflops (eval):  416.031
  gflops (total): 21.935
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130267,0.000725054,416.031,21.935

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00938814
  gflops (total): 32.1304
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,32.1304

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00812286
  gflops (eval):  37.1353
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00812286,37.1353,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3476.67
  maximum absolute entry in einsum_ir solution: 3476.67
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0132953
  time (eval):    0.000688208
  gflops (eval):  438.305
  gflops (total): 21.5714
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0132953,0.000688208,438.305,21.5714

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00957184
  gflops (total): 31.5138
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,31.5138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00752412
  gflops (eval):  40.0904
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00752412,40.0904,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3215.64
  maximum absolute entry in einsum_ir solution: 3215.64
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130215
  time (eval):    0.000992005
  gflops (eval):  304.076
  gflops (total): 21.5254
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130215,0.000992005,304.076,21.5254

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00793905
  gflops (total): 37.9951
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.9951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000134108
  gflops (eval):  2249.27
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000134108,2249.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2834.69
  maximum absolute entry in einsum_ir solution: 2834.69
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130693
  time (eval):    0.000699088
  gflops (eval):  431.483
  gflops (total): 21.9086
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130693,0.000699088,431.483,21.9086

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00966622
  gflops (total): 31.2061
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,31.2061

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00780534
  gflops (eval):  38.646
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00780534,38.646,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3276.78
  maximum absolute entry in einsum_ir solution: 3276.79
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131256
  time (eval):    0.000703227
  gflops (eval):  428.944
  gflops (total): 21.8127
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131256,0.000703227,428.944,21.8127

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00668835
  gflops (total): 45.1001
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,45.1001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00015942
  gflops (eval):  1892.14
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00015942,1892.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3522.38
  maximum absolute entry in einsum_ir solution: 3522.38
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131324
  time (eval):    0.000758208
  gflops (eval):  397.839
  gflops (total): 21.7158
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131324,0.000758208,397.839,21.7158

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00940853
  gflops (total): 32.0608
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,32.0608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00788126
  gflops (eval):  38.2737
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00788126,38.2737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3512.94
  maximum absolute entry in einsum_ir solution: 3512.94
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0129879
  time (eval):    0.000713344
  gflops (eval):  422.86
  gflops (total): 22.0158
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0129879,0.000713344,422.86,22.0158

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00981261
  gflops (total): 30.7405
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,30.7405

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00742824
  gflops (eval):  40.6079
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00742824,40.6079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      4160.36
  maximum absolute entry in einsum_ir solution: 4160.36
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0129882
  time (eval):    0.000708633
  gflops (eval):  425.671
  gflops (total): 22.023
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0129882,0.000708633,425.671,22.023

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00827238
  gflops (total): 36.4641
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.4641

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00747567
  gflops (eval):  40.3502
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00747567,40.3502,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3454.42
  maximum absolute entry in einsum_ir solution: 3454.42
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130511
  time (eval):    0.00117392
  gflops (eval):  256.955
  gflops (total): 21.2052
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130511,0.00117392,256.955,21.2052

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00761417
  gflops (total): 39.6163
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.6163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000141974
  gflops (eval):  2124.65
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000141974,2124.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3005.03
  maximum absolute entry in einsum_ir solution: 3005.03
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0132101
  time (eval):    0.000763083
  gflops (eval):  395.297
  gflops (total): 21.5875
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0132101,0.000763083,395.297,21.5875

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0079869
  gflops (total): 37.7675
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.7675

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165344
  gflops (eval):  1824.35
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165344,1824.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3184.75
  maximum absolute entry in einsum_ir solution: 3184.75
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131386
  time (eval):    0.0010323
  gflops (eval):  292.206
  gflops (total): 21.2862
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131386,0.0010323,292.206,21.2862

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00842073
  gflops (total): 35.8217
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,35.8217

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00794775
  gflops (eval):  37.9535
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00794775,37.9535,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3360.65
  maximum absolute entry in einsum_ir solution: 3360.65
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0132509
  time (eval):    0.000824392
  gflops (eval):  365.9
  gflops (total): 21.4308
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0132509,0.000824392,365.9,21.4308

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00770089
  gflops (total): 39.1701
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.1701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000154423
  gflops (eval):  1953.37
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000154423,1953.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3292.21
  maximum absolute entry in einsum_ir solution: 3292.21
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0132544
  time (eval):    0.000781418
  gflops (eval):  386.022
  gflops (total): 21.4911
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0132544,0.000781418,386.022,21.4911

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00843004
  gflops (total): 35.7821
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,35.7821

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00815884
  gflops (eval):  36.9715
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00815884,36.9715,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2844.16
  maximum absolute entry in einsum_ir solution: 2844.16
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0129876
  time (eval):    0.000674588
  gflops (eval):  447.154
  gflops (total): 22.0788
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0129876,0.000674588,447.154,22.0788

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00837348
  gflops (total): 36.0238
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.0238

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00797292
  gflops (eval):  37.8337
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00797292,37.8337,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2885.63
  maximum absolute entry in einsum_ir solution: 2885.63
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131887
  time (eval):    0.000640296
  gflops (eval):  471.102
  gflops (total): 21.8125
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131887,0.000640296,471.102,21.8125

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0082166
  gflops (total): 36.7116
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.7116

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0075523
  gflops (eval):  39.9408
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0075523,39.9408,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3655.12
  maximum absolute entry in einsum_ir solution: 3655.12
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013158
  time (eval):    0.000816942
  gflops (eval):  369.236
  gflops (total): 21.5847
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013158,0.000816942,369.236,21.5847

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00951627
  gflops (total): 31.6978
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,31.6978

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00788256
  gflops (eval):  38.2674
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00788256,38.2674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3120.19
  maximum absolute entry in einsum_ir solution: 3120.19
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131667
  time (eval):    0.000665488
  gflops (eval):  453.269
  gflops (total): 21.8075
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131667,0.000665488,453.269,21.8075

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00777175
  gflops (total): 38.813
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.813

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000164007
  gflops (eval):  1839.22
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000164007,1839.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3566.84
  maximum absolute entry in einsum_ir solution: 3566.84
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131756
  time (eval):    0.000685728
  gflops (eval):  439.89
  gflops (total): 21.7616
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131756,0.000685728,439.89,21.7616

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00830858
  gflops (total): 36.3052
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.3052

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00800712
  gflops (eval):  37.6721
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00800712,37.6721,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3193.93
  maximum absolute entry in einsum_ir solution: 3193.93
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0132177
  time (eval):    0.000805507
  gflops (eval):  374.478
  gflops (total): 21.5104
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0132177,0.000805507,374.478,21.5104

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00849221
  gflops (total): 35.5202
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,35.5202

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00775183
  gflops (eval):  38.9127
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00775183,38.9127,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3408.6
  maximum absolute entry in einsum_ir solution: 3408.6
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130809
  time (eval):    0.000692794
  gflops (eval):  435.403
  gflops (total): 21.9001
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130809,0.000692794,435.403,21.9001

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00811131
  gflops (total): 37.1882
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.1882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00770276
  gflops (eval):  39.1606
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00770276,39.1606,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3169.91
  maximum absolute entry in einsum_ir solution: 3169.91
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013232
  time (eval):    0.000765711
  gflops (eval):  393.941
  gflops (total): 21.5495
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013232,0.000765711,393.941,21.5495

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0085599
  gflops (total): 35.2393
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,35.2393

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00809841
  gflops (eval):  37.2474
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00809841,37.2474,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3503.69
  maximum absolute entry in einsum_ir solution: 3503.69
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131113
  time (eval):    0.000740017
  gflops (eval):  407.619
  gflops (total): 21.7774
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131113,0.000740017,407.619,21.7774

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00959725
  gflops (total): 31.4303
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,31.4303

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00806928
  gflops (eval):  37.3819
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00806928,37.3819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3034.63
  maximum absolute entry in einsum_ir solution: 3034.62
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0132548
  time (eval):    0.000673144
  gflops (eval):  448.113
  gflops (total): 21.6576
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0132548,0.000673144,448.113,21.6576

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00991295
  gflops (total): 30.4294
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,30.4294

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00783472
  gflops (eval):  38.5011
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00783472,38.5011,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3305.48
  maximum absolute entry in einsum_ir solution: 3305.48
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130487
  time (eval):    0.000811191
  gflops (eval):  371.854
  gflops (total): 21.7639
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130487,0.000811191,371.854,21.7639

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00955459
  gflops (total): 31.5707
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,31.5707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00795852
  gflops (eval):  37.9021
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00795852,37.9021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3224.03
  maximum absolute entry in einsum_ir solution: 3224.03
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0129488
  time (eval):    0.000694239
  gflops (eval):  434.497
  gflops (total): 22.1098
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0129488,0.000694239,434.497,22.1098

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00978711
  gflops (total): 30.8206
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,30.8206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00802257
  gflops (eval):  37.5995
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00802257,37.5995,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3243.32
  maximum absolute entry in einsum_ir solution: 3243.33
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131401
  time (eval):    0.000769661
  gflops (eval):  391.919
  gflops (total): 21.6858
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131401,0.000769661,391.919,21.6858

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00819481
  gflops (total): 36.8092
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.8092

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00825015
  gflops (eval):  36.5624
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00825015,36.5624,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3288.34
  maximum absolute entry in einsum_ir solution: 3288.34
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131006
  time (eval):    0.000694619
  gflops (eval):  434.259
  gflops (total): 21.866
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131006,0.000694619,434.259,21.866

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00919176
  gflops (total): 32.8169
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,32.8169

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0077573
  gflops (eval):  38.8853
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0077573,38.8853,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3036.38
  maximum absolute entry in einsum_ir solution: 3036.38
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131401
  time (eval):    0.000716098
  gflops (eval):  421.234
  gflops (total): 21.7696
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131401,0.000716098,421.234,21.7696

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00817475
  gflops (total): 36.8996
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.8996

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0079764
  gflops (eval):  37.8172
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0079764,37.8172,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3285.15
  maximum absolute entry in einsum_ir solution: 3285.15
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131762
  time (eval):    0.000704313
  gflops (eval):  428.282
  gflops (total): 21.7316
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131762,0.000704313,428.282,21.7316

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00845684
  gflops (total): 35.6687
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,35.6687

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00773758
  gflops (eval):  38.9844
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00773758,38.9844,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3311.1
  maximum absolute entry in einsum_ir solution: 3311.1
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0132284
  time (eval):    0.000862709
  gflops (eval):  349.648
  gflops (total): 21.4067
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0132284,0.000862709,349.648,21.4067

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00826708
  gflops (total): 36.4875
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.4875

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0080217
  gflops (eval):  37.6036
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0080217,37.6036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3704.44
  maximum absolute entry in einsum_ir solution: 3704.44
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0132833
  time (eval):    0.000639544
  gflops (eval):  471.656
  gflops (total): 21.6655
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0132833,0.000639544,471.656,21.6655

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00979934
  gflops (total): 30.7821
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,30.7821

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00786513
  gflops (eval):  38.3522
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00786513,38.3522,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3257.01
  maximum absolute entry in einsum_ir solution: 3257.01
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131163
  time (eval):    0.000740191
  gflops (eval):  407.523
  gflops (total): 21.7692
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131163,0.000740191,407.523,21.7692

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00953253
  gflops (total): 31.6437
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,31.6437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00810003
  gflops (eval):  37.24
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00810003,37.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3495.64
  maximum absolute entry in einsum_ir solution: 3495.64
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0132956
  time (eval):    0.000768573
  gflops (eval):  392.474
  gflops (total): 21.4477
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0132956,0.000768573,392.474,21.4477

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00958167
  gflops (total): 31.4814
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,31.4814

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00780062
  gflops (eval):  38.6693
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00780062,38.6693,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3198.35
  maximum absolute entry in einsum_ir solution: 3198.35
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130897
  time (eval):    0.000643785
  gflops (eval):  468.549
  gflops (total): 21.9642
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130897,0.000643785,468.549,21.9642

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00818875
  gflops (total): 36.8365
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.8365

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0078378
  gflops (eval):  38.4859
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0078378,38.4859,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2804.47
  maximum absolute entry in einsum_ir solution: 2804.47
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0132113
  time (eval):    0.000685406
  gflops (eval):  440.097
  gflops (total): 21.7063
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0132113,0.000685406,440.097,21.7063

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00787257
  gflops (total): 38.3159
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.3159

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000169162
  gflops (eval):  1783.17
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000169162,1783.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3123.83
  maximum absolute entry in einsum_ir solution: 3123.83
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131206
  time (eval):    0.00071835
  gflops (eval):  419.913
  gflops (total): 21.7969
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131206,0.00071835,419.913,21.7969

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00817984
  gflops (total): 36.8766
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.8766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00798893
  gflops (eval):  37.7579
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00798893,37.7579,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3399.04
  maximum absolute entry in einsum_ir solution: 3399.04
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0133332
  time (eval):    0.000799309
  gflops (eval):  377.382
  gflops (total): 21.3441
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0133332,0.000799309,377.382,21.3441

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00787269
  gflops (total): 38.3153
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.3153

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000169317
  gflops (eval):  1781.54
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000169317,1781.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3328.32
  maximum absolute entry in einsum_ir solution: 3328.32
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.012963
  time (eval):    0.000713589
  gflops (eval):  422.715
  gflops (total): 22.0555
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.012963,0.000713589,422.715,22.0555

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00938202
  gflops (total): 32.1514
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,32.1514

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00774361
  gflops (eval):  38.954
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00774361,38.954,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3809.09
  maximum absolute entry in einsum_ir solution: 3809.09
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130057
  time (eval):    0.000668821
  gflops (eval):  451.01
  gflops (total): 22.0589
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130057,0.000668821,451.01,22.0589

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00834458
  gflops (total): 36.1486
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.1486

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00773712
  gflops (eval):  38.9867
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00773712,38.9867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3406.62
  maximum absolute entry in einsum_ir solution: 3406.62
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0133858
  time (eval):    0.000704658
  gflops (eval):  428.073
  gflops (total): 21.4077
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0133858,0.000704658,428.073,21.4077

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00765811
  gflops (total): 39.389
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.389

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000166187
  gflops (eval):  1815.09
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000166187,1815.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      4256.29
  maximum absolute entry in einsum_ir solution: 4256.29
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130868
  time (eval):    0.00073502
  gflops (eval):  410.39
  gflops (total): 21.8238
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130868,0.00073502,410.39,21.8238

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00849699
  gflops (total): 35.5002
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,35.5002

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00796739
  gflops (eval):  37.86
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00796739,37.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3399.8
  maximum absolute entry in einsum_ir solution: 3399.8
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0133172
  time (eval):    0.000767501
  gflops (eval):  393.022
  gflops (total): 21.4165
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0133172,0.000767501,393.022,21.4165

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0082001
  gflops (total): 36.7855
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.7855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00780195
  gflops (eval):  38.6627
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00780195,38.6627,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3239.6
  maximum absolute entry in einsum_ir solution: 3239.6
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130878
  time (eval):    0.0006599
  gflops (eval):  457.107
  gflops (total): 21.9415
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130878,0.0006599,457.107,21.9415

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00924199
  gflops (total): 32.6385
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,32.6385

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0078582
  gflops (eval):  38.386
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0078582,38.386,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3286.21
  maximum absolute entry in einsum_ir solution: 3286.21
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0133168
  time (eval):    0.000853237
  gflops (eval):  353.53
  gflops (total): 21.2876
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0133168,0.000853237,353.53,21.2876

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00764298
  gflops (total): 39.4669
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.4669

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000139634
  gflops (eval):  2160.25
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000139634,2160.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3633.56
  maximum absolute entry in einsum_ir solution: 3633.56
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013166
  time (eval):    0.000779349
  gflops (eval):  387.047
  gflops (total): 21.6305
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013166,0.000779349,387.047,21.6305

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00829319
  gflops (total): 36.3726
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.3726

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00799982
  gflops (eval):  37.7065
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00799982,37.7065,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3171.7
  maximum absolute entry in einsum_ir solution: 3171.7
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131419
  time (eval):    0.000700217
  gflops (eval):  430.788
  gflops (total): 21.7917
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131419,0.000700217,430.788,21.7917

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0084265
  gflops (total): 35.7972
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,35.7972

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00779673
  gflops (eval):  38.6886
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00779673,38.6886,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3312.51
  maximum absolute entry in einsum_ir solution: 3312.51
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013173
  time (eval):    0.000694933
  gflops (eval):  434.063
  gflops (total): 21.7513
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013173,0.000694933,434.063,21.7513

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00763131
  gflops (total): 39.5273
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.5273

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000162774
  gflops (eval):  1853.15
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000162774,1853.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3026.26
  maximum absolute entry in einsum_ir solution: 3026.26
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130123
  time (eval):    0.000756759
  gflops (eval):  398.601
  gflops (total): 21.9074
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130123,0.000756759,398.601,21.9074

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00868139
  gflops (total): 34.7461
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,34.7461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00780508
  gflops (eval):  38.6473
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00780508,38.6473,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3493.82
  maximum absolute entry in einsum_ir solution: 3493.82
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130912
  time (eval):    0.00102903
  gflops (eval):  293.136
  gflops (total): 21.3626
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130912,0.00102903,293.136,21.3626

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00830113
  gflops (total): 36.3378
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.3378

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00736895
  gflops (eval):  40.9346
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00736895,40.9346,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3141.49
  maximum absolute entry in einsum_ir solution: 3141.49
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013022
  time (eval):    0.000670866
  gflops (eval):  449.635
  gflops (total): 22.0293
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013022,0.000670866,449.635,22.0293

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00833885
  gflops (total): 36.1734
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.1734

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00786684
  gflops (eval):  38.3439
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00786684,38.3439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2971.33
  maximum absolute entry in einsum_ir solution: 2971.33
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130162
  time (eval):    0.000746307
  gflops (eval):  404.183
  gflops (total): 21.9178
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130162,0.000746307,404.183,21.9178

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00844274
  gflops (total): 35.7283
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,35.7283

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00799337
  gflops (eval):  37.7369
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00799337,37.7369,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      4092.75
  maximum absolute entry in einsum_ir solution: 4092.75
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0132197
  time (eval):    0.000688958
  gflops (eval):  437.828
  gflops (total): 21.6876
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0132197,0.000688958,437.828,21.6876

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00657208
  gflops (total): 45.8979
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,45.8979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00567607
  gflops (eval):  53.1432
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00567607,53.1432,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3432.54
  maximum absolute entry in einsum_ir solution: 3432.54
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131532
  time (eval):    0.000704325
  gflops (eval):  428.275
  gflops (total): 21.7676
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131532,0.000704325,428.275,21.7676

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00825274
  gflops (total): 36.5509
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.5509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00740336
  gflops (eval):  40.7443
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00740336,40.7443,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3183.13
  maximum absolute entry in einsum_ir solution: 3183.13
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130648
  time (eval):    0.000751212
  gflops (eval):  401.544
  gflops (total): 21.8329
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130648,0.000751212,401.544,21.8329

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00788052
  gflops (total): 38.2772
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.2772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000167343
  gflops (eval):  1802.55
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000167343,1802.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3418.91
  maximum absolute entry in einsum_ir solution: 3418.91
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131072
  time (eval):    0.000685343
  gflops (eval):  440.137
  gflops (total): 21.8701
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131072,0.000685343,440.137,21.8701

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0080322
  gflops (total): 37.5544
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.5544

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000169049
  gflops (eval):  1784.36
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000169049,1784.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3356.41
  maximum absolute entry in einsum_ir solution: 3356.41
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.012957
  time (eval):    0.000739762
  gflops (eval):  407.759
  gflops (total): 22.0231
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.012957,0.000739762,407.759,22.0231

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00828239
  gflops (total): 36.42
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0081222
  gflops (eval):  37.1383
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0081222,37.1383,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3413.41
  maximum absolute entry in einsum_ir solution: 3413.41
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0133452
  time (eval):    0.000746606
  gflops (eval):  404.021
  gflops (total): 21.4057
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0133452,0.000746606,404.021,21.4057

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00767628
  gflops (total): 39.2957
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.2957

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000169086
  gflops (eval):  1783.97
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000169086,1783.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3062.88
  maximum absolute entry in einsum_ir solution: 3062.88
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130781
  time (eval):    0.000647973
  gflops (eval):  465.521
  gflops (total): 21.9761
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130781,0.000647973,465.521,21.9761

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00822333
  gflops (total): 36.6816
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.6816

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00793285
  gflops (eval):  38.0248
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00793285,38.0248,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3410.06
  maximum absolute entry in einsum_ir solution: 3410.06
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0128806
  time (eval):    0.00076964
  gflops (eval):  391.93
  gflops (total): 22.0982
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0128806,0.00076964,391.93,22.0982

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00824585
  gflops (total): 36.5814
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.5814

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00778114
  gflops (eval):  38.7662
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00778114,38.7662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3174.8
  maximum absolute entry in einsum_ir solution: 3174.8
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130382
  time (eval):    0.00096169
  gflops (eval):  313.661
  gflops (total): 21.5463
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130382,0.00096169,313.661,21.5463

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00752244
  gflops (total): 40.0993
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,40.0993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000137391
  gflops (eval):  2195.52
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000137391,2195.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3117.09
  maximum absolute entry in einsum_ir solution: 3117.09
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130424
  time (eval):    0.000715233
  gflops (eval):  421.743
  gflops (total): 21.9257
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130424,0.000715233,421.743,21.9257

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00955974
  gflops (total): 31.5536
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,31.5536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00805863
  gflops (eval):  37.4313
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00805863,37.4313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3119.62
  maximum absolute entry in einsum_ir solution: 3119.63
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131393
  time (eval):    0.000721093
  gflops (eval):  418.316
  gflops (total): 21.763
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131393,0.000721093,418.316,21.763

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00949194
  gflops (total): 31.779
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,31.779

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00792321
  gflops (eval):  38.071
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00792321,38.071,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3249.86
  maximum absolute entry in einsum_ir solution: 3249.86
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0132179
  time (eval):    0.000803969
  gflops (eval):  375.195
  gflops (total): 21.5124
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0132179,0.000803969,375.195,21.5124

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00842632
  gflops (total): 35.7979
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,35.7979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00800644
  gflops (eval):  37.6753
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00800644,37.6753,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3407.41
  maximum absolute entry in einsum_ir solution: 3407.41
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0133221
  time (eval):    0.000724183
  gflops (eval):  416.531
  gflops (total): 21.4751
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0133221,0.000724183,416.531,21.4751

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00942875
  gflops (total): 31.992
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,31.992

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00795174
  gflops (eval):  37.9344
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00795174,37.9344,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3160.62
  maximum absolute entry in einsum_ir solution: 3160.62
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131409
  time (eval):    0.00106565
  gflops (eval):  283.062
  gflops (total): 21.2327
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131409,0.00106565,283.062,21.2327

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00802786
  gflops (total): 37.5747
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.5747

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00817165
  gflops (eval):  36.9136
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00817165,36.9136,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3176.69
  maximum absolute entry in einsum_ir solution: 3176.69
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131888
  time (eval):    0.000707905
  gflops (eval):  426.109
  gflops (total): 21.7063
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131888,0.000707905,426.109,21.7063

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00837843
  gflops (total): 36.0025
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.0025

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00784274
  gflops (eval):  38.4617
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00784274,38.4617,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3174.08
  maximum absolute entry in einsum_ir solution: 3174.08
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0131069
  time (eval):    0.000656099
  gflops (eval):  459.755
  gflops (total): 21.9171
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0131069,0.000656099,459.755,21.9171

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00822551
  gflops (total): 36.6719
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.6719

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00782295
  gflops (eval):  38.559
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00782295,38.559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3136.32
  maximum absolute entry in einsum_ir solution: 3136.32
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0130586
  time (eval):    0.000921172
  gflops (eval):  327.458
  gflops (total): 21.5772
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0130586,0.000921172,327.458,21.5772

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00767066
  gflops (total): 39.3245
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.3245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000131014
  gflops (eval):  2302.39
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000131014,2302.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3262.03
  maximum absolute entry in einsum_ir solution: 3262.03
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0129076
  time (eval):    0.000726846
  gflops (eval):  415.005
  gflops (total): 22.1237
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0129076,0.000726846,415.005,22.1237

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00962423
  gflops (total): 31.3422
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,31.3422

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00830846
  gflops (eval):  36.3058
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00830846,36.3058,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3029.6
  maximum absolute entry in einsum_ir solution: 3029.59
  maximum element-wise difference:              0.00134277
warning: einsum_ir solution is not close to at:einsum!
