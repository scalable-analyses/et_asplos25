parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137291
  time (eval):    0.000335238
  gflops (eval):  899.793
  gflops (total): 21.4475
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137291,0.000335238,899.793,21.4475

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00793723
  gflops (total): 38.0038
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.0038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00016202
  gflops (eval):  1861.78
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00016202,1861.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3158.55
  maximum absolute entry in einsum_ir solution: 3158.55
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013985
  time (eval):    0.000350837
  gflops (eval):  859.786
  gflops (total): 21.0413
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013985,0.000350837,859.786,21.0413

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00794029
  gflops (total): 37.9891
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.9891

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000167804
  gflops (eval):  1797.6
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000167804,1797.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3111.81
  maximum absolute entry in einsum_ir solution: 3111.81
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137824
  time (eval):    0.000505928
  gflops (eval):  596.221
  gflops (total): 21.1112
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137824,0.000505928,596.221,21.1112

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00797247
  gflops (total): 37.8358
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.8358

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000161958
  gflops (eval):  1862.49
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000161958,1862.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3222.57
  maximum absolute entry in einsum_ir solution: 3222.57
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138557
  time (eval):    0.000400334
  gflops (eval):  753.483
  gflops (total): 21.1591
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138557,0.000400334,753.483,21.1591

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00781299
  gflops (total): 38.6081
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.6081

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000169148
  gflops (eval):  1783.32
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000169148,1783.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3093.04
  maximum absolute entry in einsum_ir solution: 3093.04
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013613
  time (eval):    0.000367894
  gflops (eval):  819.923
  gflops (total): 21.5756
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013613,0.000367894,819.923,21.5756

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00796737
  gflops (total): 37.86
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000169749
  gflops (eval):  1777
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000169749,1777,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3238.67
  maximum absolute entry in einsum_ir solution: 3238.67
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137527
  time (eval):    0.000365912
  gflops (eval):  824.364
  gflops (total): 21.365
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137527,0.000365912,824.364,21.365

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00795534
  gflops (total): 37.9173
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.9173

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000167785
  gflops (eval):  1797.81
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000167785,1797.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3032.19
  maximum absolute entry in einsum_ir solution: 3032.19
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136353
  time (eval):    0.000544053
  gflops (eval):  554.44
  gflops (total): 21.2736
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136353,0.000544053,554.44,21.2736

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00769023
  gflops (total): 39.2244
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.2244

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000161494
  gflops (eval):  1867.84
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000161494,1867.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3347.77
  maximum absolute entry in einsum_ir solution: 3347.77
  maximum element-wise difference:              0.00134277
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0135472
  time (eval):    0.000360122
  gflops (eval):  837.618
  gflops (total): 21.6896
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0135472,0.000360122,837.618,21.6896

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00787145
  gflops (total): 38.3214
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.3214

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000167984
  gflops (eval):  1795.68
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000167984,1795.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3307.89
  maximum absolute entry in einsum_ir solution: 3307.89
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0135674
  time (eval):    0.000376312
  gflops (eval):  801.582
  gflops (total): 21.6331
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0135674,0.000376312,801.582,21.6331

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00786738
  gflops (total): 38.3412
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.3412

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00016539
  gflops (eval):  1823.84
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00016539,1823.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3274.67
  maximum absolute entry in einsum_ir solution: 3274.67
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136746
  time (eval):    0.00034914
  gflops (eval):  863.965
  gflops (total): 21.5096
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136746,0.00034914,863.965,21.5096

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00778744
  gflops (total): 38.7348
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.7348

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000167323
  gflops (eval):  1802.77
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000167323,1802.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3123.04
  maximum absolute entry in einsum_ir solution: 3123.04
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137654
  time (eval):    0.000374993
  gflops (eval):  804.401
  gflops (total): 21.3322
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137654,0.000374993,804.401,21.3322

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00758991
  gflops (total): 39.7429
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.7429

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000171067
  gflops (eval):  1763.31
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000171067,1763.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3088.97
  maximum absolute entry in einsum_ir solution: 3088.97
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136819
  time (eval):    0.000373987
  gflops (eval):  806.565
  gflops (total): 21.4604
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136819,0.000373987,806.565,21.4604

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00770871
  gflops (total): 39.1304
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.1304

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000164988
  gflops (eval):  1828.28
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000164988,1828.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3195.07
  maximum absolute entry in einsum_ir solution: 3195.07
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0134741
  time (eval):    0.000369485
  gflops (eval):  816.393
  gflops (total): 21.7896
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0134741,0.000369485,816.393,21.7896

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00810802
  gflops (total): 37.2032
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.2032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165645
  gflops (eval):  1821.03
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165645,1821.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2862.07
  maximum absolute entry in einsum_ir solution: 2862.07
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136255
  time (eval):    0.000352939
  gflops (eval):  854.666
  gflops (total): 21.5794
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136255,0.000352939,854.666,21.5794

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0079044
  gflops (total): 38.1616
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.1616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165543
  gflops (eval):  1822.15
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165543,1822.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2932.23
  maximum absolute entry in einsum_ir solution: 2932.23
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013886
  time (eval):    0.000371776
  gflops (eval):  811.362
  gflops (total): 21.1565
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013886,0.000371776,811.362,21.1565

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00825028
  gflops (total): 36.5618
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.5618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00016988
  gflops (eval):  1775.63
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00016988,1775.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3037.09
  maximum absolute entry in einsum_ir solution: 3037.09
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137809
  time (eval):    0.000320858
  gflops (eval):  940.119
  gflops (total): 21.3905
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137809,0.000320858,940.119,21.3905

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00782556
  gflops (total): 38.5461
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.5461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000169097
  gflops (eval):  1783.86
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000169097,1783.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2851.19
  maximum absolute entry in einsum_ir solution: 2851.19
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013853
  time (eval):    0.000380102
  gflops (eval):  793.589
  gflops (total): 21.1932
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013853,0.000380102,793.589,21.1932

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00789886
  gflops (total): 38.1884
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.1884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000168119
  gflops (eval):  1794.23
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000168119,1794.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3343.21
  maximum absolute entry in einsum_ir solution: 3343.21
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137561
  time (eval):    0.000363395
  gflops (eval):  830.074
  gflops (total): 21.3638
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137561,0.000363395,830.074,21.3638

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00799576
  gflops (total): 37.7256
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.7256

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000170972
  gflops (eval):  1764.29
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000170972,1764.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3324.73
  maximum absolute entry in einsum_ir solution: 3324.73
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136366
  time (eval):    0.000363924
  gflops (eval):  828.868
  gflops (total): 21.5453
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136366,0.000363924,828.868,21.5453

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00786209
  gflops (total): 38.367
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.367

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165323
  gflops (eval):  1824.58
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165323,1824.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3227.35
  maximum absolute entry in einsum_ir solution: 3227.35
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013728
  time (eval):    0.000375285
  gflops (eval):  803.775
  gflops (total): 21.3882
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013728,0.000375285,803.775,21.3882

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00766358
  gflops (total): 39.3608
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.3608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000164909
  gflops (eval):  1829.16
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000164909,1829.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3064.65
  maximum absolute entry in einsum_ir solution: 3064.65
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136502
  time (eval):    0.000374157
  gflops (eval):  806.198
  gflops (total): 21.5086
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136502,0.000374157,806.198,21.5086

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00806341
  gflops (total): 37.4091
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.4091

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165976
  gflops (eval):  1817.4
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165976,1817.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      4117.46
  maximum absolute entry in einsum_ir solution: 4117.46
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136288
  time (eval):    0.000371321
  gflops (eval):  812.356
  gflops (total): 21.5458
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136288,0.000371321,812.356,21.5458

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00781527
  gflops (total): 38.5969
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.5969

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00015026
  gflops (eval):  2007.49
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00015026,2007.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3183.23
  maximum absolute entry in einsum_ir solution: 3183.23
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137483
  time (eval):    0.000431676
  gflops (eval):  698.776
  gflops (total): 21.2725
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137483,0.000431676,698.776,21.2725

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00789716
  gflops (total): 38.1966
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.1966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165625
  gflops (eval):  1821.25
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165625,1821.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3014.66
  maximum absolute entry in einsum_ir solution: 3014.66
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0134512
  time (eval):    0.000368198
  gflops (eval):  819.246
  gflops (total): 21.8277
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0134512,0.000368198,819.246,21.8277

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00790244
  gflops (total): 38.1711
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.1711

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000166759
  gflops (eval):  1808.87
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000166759,1808.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3856.61
  maximum absolute entry in einsum_ir solution: 3856.61
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138153
  time (eval):    0.000367394
  gflops (eval):  821.039
  gflops (total): 21.2685
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138153,0.000367394,821.039,21.2685

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00795492
  gflops (total): 37.9193
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.9193

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000164768
  gflops (eval):  1830.72
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000164768,1830.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3671.23
  maximum absolute entry in einsum_ir solution: 3671.23
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136657
  time (eval):    0.000373591
  gflops (eval):  807.42
  gflops (total): 21.4857
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136657,0.000373591,807.42,21.4857

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00781709
  gflops (total): 38.5878
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.5878

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000162969
  gflops (eval):  1850.93
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000162969,1850.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2973.28
  maximum absolute entry in einsum_ir solution: 2973.28
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136343
  time (eval):    0.000364235
  gflops (eval):  828.16
  gflops (total): 21.5483
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136343,0.000364235,828.16,21.5483

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00785817
  gflops (total): 38.3862
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.3862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165183
  gflops (eval):  1826.12
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165183,1826.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3398.59
  maximum absolute entry in einsum_ir solution: 3398.59
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138521
  time (eval):    0.000364917
  gflops (eval):  826.612
  gflops (total): 21.2171
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138521,0.000364917,826.612,21.2171

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00802163
  gflops (total): 37.6039
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.6039

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165609
  gflops (eval):  1821.43
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165609,1821.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3817.99
  maximum absolute entry in einsum_ir solution: 3817.99
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013782
  time (eval):    0.000349545
  gflops (eval):  862.964
  gflops (total): 21.3455
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013782,0.000349545,862.964,21.3455

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00791838
  gflops (total): 38.0943
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.0943

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000163821
  gflops (eval):  1841.31
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000163821,1841.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3323.47
  maximum absolute entry in einsum_ir solution: 3323.47
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0135998
  time (eval):    0.000370788
  gflops (eval):  813.524
  gflops (total): 21.5914
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0135998,0.000370788,813.524,21.5914

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00768267
  gflops (total): 39.263
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.263

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165628
  gflops (eval):  1821.22
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165628,1821.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3897.95
  maximum absolute entry in einsum_ir solution: 3897.95
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138149
  time (eval):    0.000386492
  gflops (eval):  780.468
  gflops (total): 21.2405
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138149,0.000386492,780.468,21.2405

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00799838
  gflops (total): 37.7133
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.7133

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165338
  gflops (eval):  1824.41
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165338,1824.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3759.03
  maximum absolute entry in einsum_ir solution: 3759.03
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136801
  time (eval):    0.000364002
  gflops (eval):  828.69
  gflops (total): 21.4784
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136801,0.000364002,828.69,21.4784

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00779443
  gflops (total): 38.7001
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.7001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000163281
  gflops (eval):  1847.4
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000163281,1847.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2941.17
  maximum absolute entry in einsum_ir solution: 2941.17
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138623
  time (eval):    0.000357544
  gflops (eval):  843.658
  gflops (total): 21.213
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138623,0.000357544,843.658,21.213

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00807444
  gflops (total): 37.358
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.358

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000161859
  gflops (eval):  1863.63
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000161859,1863.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3444.38
  maximum absolute entry in einsum_ir solution: 3444.38
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0139261
  time (eval):    0.00038136
  gflops (eval):  790.971
  gflops (total): 21.083
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0139261,0.00038136,790.971,21.083

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00802979
  gflops (total): 37.5657
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.5657

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000164367
  gflops (eval):  1835.19
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000164367,1835.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3189.42
  maximum absolute entry in einsum_ir solution: 3189.42
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136622
  time (eval):    0.000384797
  gflops (eval):  783.906
  gflops (total): 21.4739
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136622,0.000384797,783.906,21.4739

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00780319
  gflops (total): 38.6566
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.6566

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000167099
  gflops (eval):  1805.19
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000167099,1805.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3518.42
  maximum absolute entry in einsum_ir solution: 3518.42
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136365
  time (eval):    0.000393566
  gflops (eval):  766.44
  gflops (total): 21.4998
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136365,0.000393566,766.44,21.4998

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00754474
  gflops (total): 39.9808
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.9808

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000163843
  gflops (eval):  1841.06
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000163843,1841.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3270.41
  maximum absolute entry in einsum_ir solution: 3270.41
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137551
  time (eval):    0.000386562
  gflops (eval):  780.327
  gflops (total): 21.3302
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137551,0.000386562,780.327,21.3302

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00792273
  gflops (total): 38.0734
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.0734

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000170254
  gflops (eval):  1771.73
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000170254,1771.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3380.88
  maximum absolute entry in einsum_ir solution: 3380.88
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0139744
  time (eval):    0.00037075
  gflops (eval):  813.607
  gflops (total): 21.0276
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0139744,0.00037075,813.607,21.0276

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00801413
  gflops (total): 37.6391
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.6391

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000171349
  gflops (eval):  1760.41
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000171349,1760.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3222.19
  maximum absolute entry in einsum_ir solution: 3222.19
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138236
  time (eval):    0.00040627
  gflops (eval):  742.474
  gflops (total): 21.1981
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138236,0.00040627,742.474,21.1981

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00788735
  gflops (total): 38.2441
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.2441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000166272
  gflops (eval):  1814.16
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000166272,1814.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3239.75
  maximum absolute entry in einsum_ir solution: 3239.75
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138198
  time (eval):    0.000372654
  gflops (eval):  809.45
  gflops (total): 21.2538
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138198,0.000372654,809.45,21.2538

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00791256
  gflops (total): 38.1223
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.1223

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000172725
  gflops (eval):  1746.39
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000172725,1746.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3116.65
  maximum absolute entry in einsum_ir solution: 3116.65
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0135307
  time (eval):    0.000377666
  gflops (eval):  798.708
  gflops (total): 21.688
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0135307,0.000377666,798.708,21.688

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00823421
  gflops (total): 36.6331
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.6331

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000162233
  gflops (eval):  1859.33
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000162233,1859.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3538.23
  maximum absolute entry in einsum_ir solution: 3538.23
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137123
  time (eval):    0.000370096
  gflops (eval):  815.045
  gflops (total): 21.42
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137123,0.000370096,815.045,21.42

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.007976
  gflops (total): 37.819
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000177292
  gflops (eval):  1701.4
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000177292,1701.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3924.79
  maximum absolute entry in einsum_ir solution: 3924.79
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013796
  time (eval):    0.000370011
  gflops (eval):  815.232
  gflops (total): 21.2936
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013796,0.000370011,815.232,21.2936

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00764435
  gflops (total): 39.4598
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.4598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000168793
  gflops (eval):  1787.07
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000168793,1787.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3634.5
  maximum absolute entry in einsum_ir solution: 3634.49
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0135774
  time (eval):    0.000327183
  gflops (eval):  921.945
  gflops (total): 21.6939
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0135774,0.000327183,921.945,21.6939

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0082941
  gflops (total): 36.3686
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.3686

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000166745
  gflops (eval):  1809.02
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000166745,1809.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3045.22
  maximum absolute entry in einsum_ir solution: 3045.22
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138172
  time (eval):    0.000373443
  gflops (eval):  807.74
  gflops (total): 21.2566
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138172,0.000373443,807.74,21.2566

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0080158
  gflops (total): 37.6313
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.6313

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000168112
  gflops (eval):  1794.31
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000168112,1794.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3103.82
  maximum absolute entry in einsum_ir solution: 3103.82
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138686
  time (eval):    0.000358282
  gflops (eval):  841.92
  gflops (total): 21.2025
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138686,0.000358282,841.92,21.2025

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00801079
  gflops (total): 37.6548
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.6548

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000160435
  gflops (eval):  1880.17
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000160435,1880.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3464.13
  maximum absolute entry in einsum_ir solution: 3464.13
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137329
  time (eval):    0.000360277
  gflops (eval):  837.258
  gflops (total): 21.4037
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137329,0.000360277,837.258,21.4037

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0078039
  gflops (total): 38.6531
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.6531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000164412
  gflops (eval):  1834.69
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000164412,1834.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3671.13
  maximum absolute entry in einsum_ir solution: 3671.13
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137541
  time (eval):    0.000366498
  gflops (eval):  823.046
  gflops (total): 21.362
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137541,0.000366498,823.046,21.362

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00739712
  gflops (total): 40.7787
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,40.7787

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000167948
  gflops (eval):  1796.06
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000167948,1796.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3203.89
  maximum absolute entry in einsum_ir solution: 3203.89
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0134513
  time (eval):    0.000372511
  gflops (eval):  809.761
  gflops (total): 21.8206
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0134513,0.000372511,809.761,21.8206

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00785917
  gflops (total): 38.3812
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.3812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165779
  gflops (eval):  1819.56
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165779,1819.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3551.01
  maximum absolute entry in einsum_ir solution: 3551.01
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0140237
  time (eval):    0.000455206
  gflops (eval):  662.656
  gflops (total): 20.8333
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0140237,0.000455206,662.656,20.8333

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0077913
  gflops (total): 38.7156
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.7156

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000164942
  gflops (eval):  1828.79
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000164942,1828.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3104.9
  maximum absolute entry in einsum_ir solution: 3104.9
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136867
  time (eval):    0.000325557
  gflops (eval):  926.55
  gflops (total): 21.5272
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136867,0.000325557,926.55,21.5272

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00782079
  gflops (total): 38.5696
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.5696

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000163928
  gflops (eval):  1840.11
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000163928,1840.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3786.05
  maximum absolute entry in einsum_ir solution: 3786.05
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136508
  time (eval):    0.000364486
  gflops (eval):  827.59
  gflops (total): 21.5226
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136508,0.000364486,827.59,21.5226

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0078193
  gflops (total): 38.577
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000167315
  gflops (eval):  1802.86
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000167315,1802.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3407.27
  maximum absolute entry in einsum_ir solution: 3407.27
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136032
  time (eval):    0.000372216
  gflops (eval):  810.403
  gflops (total): 21.584
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136032,0.000372216,810.403,21.584

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00783769
  gflops (total): 38.4865
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.4865

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165588
  gflops (eval):  1821.66
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165588,1821.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3668.6
  maximum absolute entry in einsum_ir solution: 3668.59
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137064
  time (eval):    0.000553938
  gflops (eval):  544.546
  gflops (total): 21.1528
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137064,0.000553938,544.546,21.1528

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00809614
  gflops (total): 37.2578
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.2578

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00016641
  gflops (eval):  1812.66
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00016641,1812.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3179.73
  maximum absolute entry in einsum_ir solution: 3179.73
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137192
  time (eval):    0.000339736
  gflops (eval):  887.88
  gflops (total): 21.4557
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137192,0.000339736,887.88,21.4557

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00792457
  gflops (total): 38.0645
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.0645

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000166516
  gflops (eval):  1811.51
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000166516,1811.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3450.49
  maximum absolute entry in einsum_ir solution: 3450.49
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136672
  time (eval):    0.00036099
  gflops (eval):  835.604
  gflops (total): 21.5028
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136672,0.00036099,835.604,21.5028

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00786451
  gflops (total): 38.3552
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.3552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000164644
  gflops (eval):  1832.1
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000164644,1832.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3120.58
  maximum absolute entry in einsum_ir solution: 3120.58
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136097
  time (eval):    0.000371987
  gflops (eval):  810.901
  gflops (total): 21.5742
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136097,0.000371987,810.901,21.5742

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00818727
  gflops (total): 36.8431
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.8431

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00017053
  gflops (eval):  1768.87
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00017053,1768.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3492.25
  maximum absolute entry in einsum_ir solution: 3492.24
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137189
  time (eval):    0.000350026
  gflops (eval):  861.778
  gflops (total): 21.4405
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137189,0.000350026,861.778,21.4405

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00788784
  gflops (total): 38.2418
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.2418

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000169473
  gflops (eval):  1779.9
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000169473,1779.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3052.03
  maximum absolute entry in einsum_ir solution: 3052.03
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136839
  time (eval):    0.000378288
  gflops (eval):  797.395
  gflops (total): 21.4508
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136839,0.000378288,797.395,21.4508

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00795068
  gflops (total): 37.9395
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.9395

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000168113
  gflops (eval):  1794.3
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000168113,1794.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3120
  maximum absolute entry in einsum_ir solution: 3120
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137345
  time (eval):    0.000381141
  gflops (eval):  791.426
  gflops (total): 21.3695
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137345,0.000381141,791.426,21.3695

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00779022
  gflops (total): 38.721
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.721

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000161031
  gflops (eval):  1873.21
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000161031,1873.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3437.64
  maximum absolute entry in einsum_ir solution: 3437.64
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137867
  time (eval):    0.000362489
  gflops (eval):  832.149
  gflops (total): 21.3189
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137867,0.000362489,832.149,21.3189

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0077958
  gflops (total): 38.6932
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.6932

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000163559
  gflops (eval):  1844.26
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000163559,1844.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3282.97
  maximum absolute entry in einsum_ir solution: 3282.97
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0134782
  time (eval):    0.000364957
  gflops (eval):  826.521
  gflops (total): 21.7901
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0134782,0.000364957,826.521,21.7901

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00792537
  gflops (total): 38.0607
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.0607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000172315
  gflops (eval):  1750.54
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000172315,1750.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3374.51
  maximum absolute entry in einsum_ir solution: 3374.51
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137162
  time (eval):    0.000373052
  gflops (eval):  808.586
  gflops (total): 21.4096
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137162,0.000373052,808.586,21.4096

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00790608
  gflops (total): 38.1535
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.1535

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165022
  gflops (eval):  1827.91
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165022,1827.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3100.33
  maximum absolute entry in einsum_ir solution: 3100.33
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013703
  time (eval):    0.000378017
  gflops (eval):  797.966
  gflops (total): 21.4221
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013703,0.000378017,797.966,21.4221

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00806115
  gflops (total): 37.4196
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.4196

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000169033
  gflops (eval):  1784.53
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000169033,1784.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3035.54
  maximum absolute entry in einsum_ir solution: 3035.54
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137456
  time (eval):    0.00035095
  gflops (eval):  859.509
  gflops (total): 21.3985
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137456,0.00035095,859.509,21.3985

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00839947
  gflops (total): 35.9123
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,35.9123

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000174782
  gflops (eval):  1725.83
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000174782,1725.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3277.22
  maximum absolute entry in einsum_ir solution: 3277.22
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136412
  time (eval):    0.000377506
  gflops (eval):  799.046
  gflops (total): 21.5173
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136412,0.000377506,799.046,21.5173

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00804872
  gflops (total): 37.4774
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.4774

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000141166
  gflops (eval):  2136.81
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000141166,2136.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3209.99
  maximum absolute entry in einsum_ir solution: 3209.99
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136263
  time (eval):    0.000545014
  gflops (eval):  553.462
  gflops (total): 21.2856
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136263,0.000545014,553.462,21.2856

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00793434
  gflops (total): 38.0176
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.0176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000163782
  gflops (eval):  1841.75
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000163782,1841.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3075.24
  maximum absolute entry in einsum_ir solution: 3075.24
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136955
  time (eval):    0.000378709
  gflops (eval):  796.508
  gflops (total): 21.4324
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136955,0.000378709,796.508,21.4324

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00801988
  gflops (total): 37.6121
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.6121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00016656
  gflops (eval):  1811.03
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00016656,1811.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3298.76
  maximum absolute entry in einsum_ir solution: 3298.76
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0139448
  time (eval):    0.000350331
  gflops (eval):  861.028
  gflops (total): 21.1012
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0139448,0.000350331,861.028,21.1012

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00761317
  gflops (total): 39.6215
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.6215

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000168809
  gflops (eval):  1786.9
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000168809,1786.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3647.43
  maximum absolute entry in einsum_ir solution: 3647.43
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0135859
  time (eval):    0.00039928
  gflops (eval):  755.472
  gflops (total): 21.569
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0135859,0.00039928,755.472,21.569

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00780671
  gflops (total): 38.6392
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.6392

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000166565
  gflops (eval):  1810.97
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000166565,1810.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3610.56
  maximum absolute entry in einsum_ir solution: 3610.56
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138416
  time (eval):    0.000364033
  gflops (eval):  828.619
  gflops (total): 21.2341
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138416,0.000364033,828.619,21.2341

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0082146
  gflops (total): 36.7206
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.7206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000172398
  gflops (eval):  1749.7
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000172398,1749.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3415.47
  maximum absolute entry in einsum_ir solution: 3415.47
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138322
  time (eval):    0.000370551
  gflops (eval):  814.044
  gflops (total): 21.2385
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138322,0.000370551,814.044,21.2385

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00794919
  gflops (total): 37.9466
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.9466

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000163444
  gflops (eval):  1845.55
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000163444,1845.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3343.54
  maximum absolute entry in einsum_ir solution: 3343.54
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137681
  time (eval):    0.000357606
  gflops (eval):  843.512
  gflops (total): 21.3543
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137681,0.000357606,843.512,21.3543

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00799147
  gflops (total): 37.7459
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.7459

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000168694
  gflops (eval):  1788.12
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000168694,1788.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3057.26
  maximum absolute entry in einsum_ir solution: 3057.26
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138744
  time (eval):    0.000356879
  gflops (eval):  845.23
  gflops (total): 21.196
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138744,0.000356879,845.23,21.196

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00807209
  gflops (total): 37.3689
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.3689

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000147276
  gflops (eval):  2048.16
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000147276,2048.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3131.47
  maximum absolute entry in einsum_ir solution: 3131.47
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138021
  time (eval):    0.000380124
  gflops (eval):  793.543
  gflops (total): 21.2692
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138021,0.000380124,793.543,21.2692

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00789961
  gflops (total): 38.1848
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.1848

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000170611
  gflops (eval):  1768.03
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000170611,1768.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3357.58
  maximum absolute entry in einsum_ir solution: 3357.58
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0135671
  time (eval):    0.000377649
  gflops (eval):  798.744
  gflops (total): 21.6314
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0135671,0.000377649,798.744,21.6314

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00795658
  gflops (total): 37.9113
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.9113

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000166072
  gflops (eval):  1816.35
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000166072,1816.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3143.61
  maximum absolute entry in einsum_ir solution: 3143.61
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138444
  time (eval):    0.0003696
  gflops (eval):  816.139
  gflops (total): 21.2216
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138444,0.0003696,816.139,21.2216

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00780286
  gflops (total): 38.6583
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.6583

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000169111
  gflops (eval):  1783.71
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000169111,1783.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3715.13
  maximum absolute entry in einsum_ir solution: 3715.13
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0139306
  time (eval):    0.000369912
  gflops (eval):  815.45
  gflops (total): 21.0933
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0139306,0.000369912,815.45,21.0933

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0079234
  gflops (total): 38.0701
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.0701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000166542
  gflops (eval):  1811.22
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000166542,1811.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3159.35
  maximum absolute entry in einsum_ir solution: 3159.35
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137966
  time (eval):    0.000325706
  gflops (eval):  926.126
  gflops (total): 21.3595
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137966,0.000325706,926.126,21.3595

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00792226
  gflops (total): 38.0756
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.0756

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165169
  gflops (eval):  1826.28
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165169,1826.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2747.33
  maximum absolute entry in einsum_ir solution: 2747.33
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138492
  time (eval):    0.000371771
  gflops (eval):  811.373
  gflops (total): 21.2113
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138492,0.000371771,811.373,21.2113

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00798833
  gflops (total): 37.7607
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.7607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00016401
  gflops (eval):  1839.19
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00016401,1839.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3367.01
  maximum absolute entry in einsum_ir solution: 3367.01
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0139069
  time (eval):    0.000426009
  gflops (eval):  708.071
  gflops (total): 21.0457
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0139069,0.000426009,708.071,21.0457

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00789006
  gflops (total): 38.231
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.231

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00017233
  gflops (eval):  1750.39
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00017233,1750.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3450.09
  maximum absolute entry in einsum_ir solution: 3450.09
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136991
  time (eval):    0.000336893
  gflops (eval):  895.373
  gflops (total): 21.4907
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136991,0.000336893,895.373,21.4907

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00788184
  gflops (total): 38.2709
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.2709

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000166161
  gflops (eval):  1815.38
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000166161,1815.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3480.77
  maximum absolute entry in einsum_ir solution: 3480.77
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013479
  time (eval):    0.000363417
  gflops (eval):  830.024
  gflops (total): 21.7914
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013479,0.000363417,830.024,21.7914

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00786168
  gflops (total): 38.369
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000163523
  gflops (eval):  1844.66
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000163523,1844.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3201.4
  maximum absolute entry in einsum_ir solution: 3201.4
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0139938
  time (eval):    0.000452462
  gflops (eval):  666.674
  gflops (total): 20.8805
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0139938,0.000452462,666.674,20.8805

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00798777
  gflops (total): 37.7633
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.7633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165979
  gflops (eval):  1817.37
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165979,1817.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2777.61
  maximum absolute entry in einsum_ir solution: 2777.61
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137427
  time (eval):    0.000359431
  gflops (eval):  839.229
  gflops (total): 21.3901
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137427,0.000359431,839.229,21.3901

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0079108
  gflops (total): 38.1307
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.1307

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000167225
  gflops (eval):  1803.83
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000167225,1803.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3435.45
  maximum absolute entry in einsum_ir solution: 3435.45
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137695
  time (eval):    0.00051569
  gflops (eval):  584.934
  gflops (total): 21.1159
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137695,0.00051569,584.934,21.1159

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00804816
  gflops (total): 37.48
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00016419
  gflops (eval):  1837.17
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00016419,1837.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3359.04
  maximum absolute entry in einsum_ir solution: 3359.04
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138469
  time (eval):    0.000523015
  gflops (eval):  576.742
  gflops (total): 20.9915
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138469,0.000523015,576.742,20.9915

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00766013
  gflops (total): 39.3786
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.3786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000166442
  gflops (eval):  1812.31
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000166442,1812.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3306.6
  maximum absolute entry in einsum_ir solution: 3306.6
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136612
  time (eval):    0.000453012
  gflops (eval):  665.865
  gflops (total): 21.3718
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136612,0.000453012,665.865,21.3718

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00791514
  gflops (total): 38.1099
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.1099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165253
  gflops (eval):  1825.35
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165253,1825.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3542.79
  maximum absolute entry in einsum_ir solution: 3542.79
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013699
  time (eval):    0.000363872
  gflops (eval):  828.986
  gflops (total): 21.4498
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013699,0.000363872,828.986,21.4498

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00802615
  gflops (total): 37.5827
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.5827

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000166699
  gflops (eval):  1809.52
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000166699,1809.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3299.44
  maximum absolute entry in einsum_ir solution: 3299.44
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138966
  time (eval):    0.000551579
  gflops (eval):  546.875
  gflops (total): 20.8777
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138966,0.000551579,546.875,20.8777

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00792703
  gflops (total): 38.0527
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.0527

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000166843
  gflops (eval):  1807.96
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000166843,1807.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3262.33
  maximum absolute entry in einsum_ir solution: 3262.33
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136973
  time (eval):    0.000363448
  gflops (eval):  829.953
  gflops (total): 21.453
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136973,0.000363448,829.953,21.453

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00799246
  gflops (total): 37.7412
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.7412

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000163065
  gflops (eval):  1849.84
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000163065,1849.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3548.81
  maximum absolute entry in einsum_ir solution: 3548.81
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136499
  time (eval):    0.000360878
  gflops (eval):  835.864
  gflops (total): 21.5295
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136499,0.000360878,835.864,21.5295

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00798609
  gflops (total): 37.7713
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.7713

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000171771
  gflops (eval):  1756.09
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000171771,1756.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3448.93
  maximum absolute entry in einsum_ir solution: 3448.93
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137065
  time (eval):    0.000374334
  gflops (eval):  805.817
  gflops (total): 21.4223
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137065,0.000374334,805.817,21.4223

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00774841
  gflops (total): 38.9299
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.9299

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000164729
  gflops (eval):  1831.16
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000164729,1831.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3361.51
  maximum absolute entry in einsum_ir solution: 3361.51
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138859
  time (eval):    0.000369064
  gflops (eval):  817.324
  gflops (total): 21.1607
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138859,0.000369064,817.324,21.1607

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00787435
  gflops (total): 38.3073
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.3073

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000164346
  gflops (eval):  1835.43
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000164346,1835.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2940.89
  maximum absolute entry in einsum_ir solution: 2940.89
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0136487
  time (eval):    0.000369408
  gflops (eval):  816.563
  gflops (total): 21.5183
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0136487,0.000369408,816.563,21.5183

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00808278
  gflops (total): 37.3195
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.3195

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165633
  gflops (eval):  1821.16
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165633,1821.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3519.76
  maximum absolute entry in einsum_ir solution: 3519.76
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013717
  time (eval):    0.000375499
  gflops (eval):  803.317
  gflops (total): 21.4046
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013717,0.000375499,803.317,21.4046

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00787613
  gflops (total): 38.2986
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.2986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000166122
  gflops (eval):  1815.8
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000166122,1815.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3615.96
  maximum absolute entry in einsum_ir solution: 3615.96
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0137634
  time (eval):    0.000360962
  gflops (eval):  835.669
  gflops (total): 21.3564
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0137634,0.000360962,835.669,21.3564

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00770004
  gflops (total): 39.1745
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,39.1745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000169622
  gflops (eval):  1778.34
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000169622,1778.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3180.71
  maximum absolute entry in einsum_ir solution: 3180.71
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138637
  time (eval):    0.00037409
  gflops (eval):  806.343
  gflops (total): 21.1863
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138637,0.00037409,806.343,21.1863

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0079642
  gflops (total): 37.8751
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,37.8751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000163491
  gflops (eval):  1845.02
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000163491,1845.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3747.35
  maximum absolute entry in einsum_ir solution: 3747.35
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.013801
  time (eval):    0.000355409
  gflops (eval):  848.726
  gflops (total): 21.308
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.013801,0.000355409,848.726,21.308

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00783003
  gflops (total): 38.5241
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,38.5241

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000165716
  gflops (eval):  1820.25
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000165716,1820.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3556.07
  maximum absolute entry in einsum_ir solution: 3556.07
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.0138835
  time (eval):    0.000477556
  gflops (eval):  631.643
  gflops (total): 21.0044
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.0138835,0.000477556,631.643,21.0044

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00817149
  gflops (total): 36.9143
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,36.9143

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000166268
  gflops (eval):  1814.21
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000166268,1814.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3209.8
  maximum absolute entry in einsum_ir solution: 3209.8
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
