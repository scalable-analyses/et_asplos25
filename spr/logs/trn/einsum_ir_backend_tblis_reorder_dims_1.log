parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131926
  time (eval):    0.00195553
  gflops (eval):  798.455
  gflops (total): 103.076
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131926,0.00195553,798.455,103.076

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00618358
  gflops (total): 252.507
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,252.507

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00568449
  gflops (eval):  274.677
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00568449,274.677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.88193e+08
  maximum absolute entry in einsum_ir solution: 6.88193e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131011
  time (eval):    0.00209199
  gflops (eval):  746.372
  gflops (total): 102.771
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131011,0.00209199,746.372,102.771

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00775629
  gflops (total): 201.308
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,201.308

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00607921
  gflops (eval):  256.842
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00607921,256.842,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.33867e+08
  maximum absolute entry in einsum_ir solution: 7.33867e+08
  maximum element-wise difference:              514
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130012
  time (eval):    0.00190418
  gflops (eval):  819.987
  gflops (total): 104.754
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130012,0.00190418,819.987,104.754

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00673021
  gflops (total): 231.999
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,231.999

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00495723
  gflops (eval):  314.975
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00495723,314.975,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.8874e+08
  maximum absolute entry in einsum_ir solution: 7.8874e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.013201
  time (eval):    0.00191248
  gflops (eval):  816.426
  gflops (total): 103.312
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.013201,0.00191248,816.426,103.312

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00804737
  gflops (total): 194.026
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,194.026

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00579367
  gflops (eval):  269.501
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00579367,269.501,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.94042e+08
  maximum absolute entry in einsum_ir solution: 7.94042e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0133264
  time (eval):    0.00205442
  gflops (eval):  760.02
  gflops (total): 101.516
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0133264,0.00205442,760.02,101.516

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00684577
  gflops (total): 228.082
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,228.082

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00516966
  gflops (eval):  302.032
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00516966,302.032,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.50243e+08
  maximum absolute entry in einsum_ir solution: 8.50244e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131537
  time (eval):    0.00202519
  gflops (eval):  770.988
  gflops (total): 102.867
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131537,0.00202519,770.988,102.867

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00780844
  gflops (total): 199.963
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,199.963

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00560455
  gflops (eval):  278.595
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00560455,278.595,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.84083e+08
  maximum absolute entry in einsum_ir solution: 6.84083e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131953
  time (eval):    0.00191355
  gflops (eval):  815.97
  gflops (total): 103.343
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131953,0.00191355,815.97,103.343

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00750279
  gflops (total): 208.109
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,208.109

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00648628
  gflops (eval):  240.724
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00648628,240.724,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.14151e+08
  maximum absolute entry in einsum_ir solution: 7.14151e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131783
  time (eval):    0.00184133
  gflops (eval):  847.974
  gflops (total): 103.957
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131783,0.00184133,847.974,103.957

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00717858
  gflops (total): 217.508
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,217.508

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0059813
  gflops (eval):  261.047
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0059813,261.047,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.20025e+08
  maximum absolute entry in einsum_ir solution: 7.20025e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0132477
  time (eval):    0.00189215
  gflops (eval):  825.197
  gflops (total): 103.132
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0132477,0.00189215,825.197,103.132

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00656665
  gflops (total): 237.777
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,237.777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00571754
  gflops (eval):  273.09
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00571754,273.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.34723e+08
  maximum absolute entry in einsum_ir solution: 7.34723e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0129689
  time (eval):    0.00200007
  gflops (eval):  780.675
  gflops (total): 104.309
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0129689,0.00200007,780.675,104.309

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00664143
  gflops (total): 235.1
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,235.1

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00611641
  gflops (eval):  255.281
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00611641,255.281,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.19762e+08
  maximum absolute entry in einsum_ir solution: 8.19761e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130046
  time (eval):    0.00183381
  gflops (eval):  851.45
  gflops (total): 105.227
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130046,0.00183381,851.45,105.227

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00806058
  gflops (total): 193.708
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,193.708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00589573
  gflops (eval):  264.836
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00589573,264.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.91519e+08
  maximum absolute entry in einsum_ir solution: 8.9152e+08
  maximum element-wise difference:              608
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131062
  time (eval):    0.00178482
  gflops (eval):  874.822
  gflops (total): 104.855
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131062,0.00178482,874.822,104.855

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00512386
  gflops (total): 304.731
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,304.731

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000550037
  gflops (eval):  2838.72
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000550037,2838.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.38701e+08
  maximum absolute entry in einsum_ir solution: 7.38701e+08
  maximum element-wise difference:              472
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0128098
  time (eval):    0.00184479
  gflops (eval):  846.385
  gflops (total): 106.547
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0128098,0.00184479,846.385,106.547

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0069376
  gflops (total): 225.064
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,225.064

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0056576
  gflops (eval):  275.983
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0056576,275.983,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.29029e+08
  maximum absolute entry in einsum_ir solution: 7.29029e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0129978
  time (eval):    0.00191647
  gflops (eval):  814.728
  gflops (total): 104.692
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0129978,0.00191647,814.728,104.692

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00649578
  gflops (total): 240.371
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,240.371

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00494085
  gflops (eval):  316.018
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00494085,316.018,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.07985e+08
  maximum absolute entry in einsum_ir solution: 7.07985e+08
  maximum element-wise difference:              456
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.013314
  time (eval):    0.00208796
  gflops (eval):  747.811
  gflops (total): 101.377
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.013314,0.00208796,747.811,101.377

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00777088
  gflops (total): 200.93
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,200.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00562777
  gflops (eval):  277.446
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00562777,277.446,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.9316e+08
  maximum absolute entry in einsum_ir solution: 8.9316e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130389
  time (eval):    0.00192526
  gflops (eval):  811.008
  gflops (total): 104.343
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130389,0.00192526,811.008,104.343

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0057109
  gflops (total): 273.407
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,273.407

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00501455
  gflops (eval):  311.374
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00501455,311.374,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.47101e+08
  maximum absolute entry in einsum_ir solution: 7.47101e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130367
  time (eval):    0.00189553
  gflops (eval):  823.726
  gflops (total): 104.566
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130367,0.00189553,823.726,104.566

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00708085
  gflops (total): 220.51
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,220.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00576832
  gflops (eval):  270.685
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00576832,270.685,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.87006e+08
  maximum absolute entry in einsum_ir solution: 7.87006e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131229
  time (eval):    0.00201773
  gflops (eval):  773.842
  gflops (total): 103.126
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131229,0.00201773,773.842,103.126

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00735593
  gflops (total): 212.264
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,212.264

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00617958
  gflops (eval):  252.671
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00617958,252.671,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.87246e+08
  maximum absolute entry in einsum_ir solution: 7.87246e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0132178
  time (eval):    0.00191173
  gflops (eval):  816.745
  gflops (total): 103.202
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0132178,0.00191173,816.745,103.202

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00652705
  gflops (total): 239.22
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,239.22

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00499242
  gflops (eval):  312.754
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00499242,312.754,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.41144e+08
  maximum absolute entry in einsum_ir solution: 7.41144e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0107068
  time (eval):    0.00196308
  gflops (eval):  795.381
  gflops (total): 123.237
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0107068,0.00196308,795.381,123.237

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00731811
  gflops (total): 213.361
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,213.361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00570391
  gflops (eval):  273.742
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00570391,273.742,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.05635e+08
  maximum absolute entry in einsum_ir solution: 7.05634e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131374
  time (eval):    0.00193501
  gflops (eval):  806.921
  gflops (total): 103.593
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131374,0.00193501,806.921,103.593

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00784364
  gflops (total): 199.066
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,199.066

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00605671
  gflops (eval):  257.797
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00605671,257.797,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.09071e+08
  maximum absolute entry in einsum_ir solution: 7.09072e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131489
  time (eval):    0.0019817
  gflops (eval):  787.909
  gflops (total): 103.195
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131489,0.0019817,787.909,103.195

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00760255
  gflops (total): 205.378
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,205.378

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00641578
  gflops (eval):  243.369
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00641578,243.369,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.63562e+08
  maximum absolute entry in einsum_ir solution: 7.63562e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0129751
  time (eval):    0.00198137
  gflops (eval):  788.042
  gflops (total): 104.396
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0129751,0.00198137,788.042,104.396

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0071567
  gflops (total): 218.173
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,218.173

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00563321
  gflops (eval):  277.178
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00563321,277.178,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.96083e+08
  maximum absolute entry in einsum_ir solution: 7.96083e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0132385
  time (eval):    0.00185291
  gflops (eval):  842.676
  gflops (total): 103.463
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0132385,0.00185291,842.676,103.463

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00523063
  gflops (total): 298.511
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,298.511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000566864
  gflops (eval):  2754.45
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000566864,2754.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.37579e+08
  maximum absolute entry in einsum_ir solution: 8.37579e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0133092
  time (eval):    0.00197463
  gflops (eval):  790.73
  gflops (total): 102.16
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0133092,0.00197463,790.73,102.16

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00750632
  gflops (total): 208.011
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,208.011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0064178
  gflops (eval):  243.292
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0064178,243.292,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.20984e+08
  maximum absolute entry in einsum_ir solution: 8.20984e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.013033
  time (eval):    0.0018347
  gflops (eval):  851.038
  gflops (total): 105.019
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.013033,0.0018347,851.038,105.019

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00690572
  gflops (total): 226.102
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,226.102

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00523574
  gflops (eval):  298.22
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00523574,298.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.92016e+08
  maximum absolute entry in einsum_ir solution: 7.92016e+08
  maximum element-wise difference:              424
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131998
  time (eval):    0.00175591
  gflops (eval):  889.228
  gflops (total): 104.402
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131998,0.00175591,889.228,104.402

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00529574
  gflops (total): 294.841
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,294.841

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000569116
  gflops (eval):  2743.55
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000569116,2743.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.43498e+08
  maximum absolute entry in einsum_ir solution: 7.43498e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131513
  time (eval):    0.00195935
  gflops (eval):  796.896
  gflops (total): 103.331
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131513,0.00195935,796.896,103.331

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00607297
  gflops (total): 257.107
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,257.107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0055394
  gflops (eval):  281.872
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0055394,281.872,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.82211e+08
  maximum absolute entry in einsum_ir solution: 8.82211e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131981
  time (eval):    0.00192384
  gflops (eval):  811.605
  gflops (total): 103.254
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131981,0.00192384,811.605,103.254

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00555149
  gflops (total): 281.258
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,281.258

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00448221
  gflops (eval):  348.355
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00448221,348.355,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.60271e+08
  maximum absolute entry in einsum_ir solution: 6.60271e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0133183
  time (eval):    0.00180446
  gflops (eval):  865.302
  gflops (total): 103.248
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0133183,0.00180446,865.302,103.248

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00489235
  gflops (total): 319.151
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,319.151

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00477774
  gflops (eval):  326.807
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00477774,326.807,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.04923e+08
  maximum absolute entry in einsum_ir solution: 8.04923e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130265
  time (eval):    0.00201203
  gflops (eval):  776.031
  gflops (total): 103.827
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130265,0.00201203,776.031,103.827

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00730263
  gflops (total): 213.814
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,213.814

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00527384
  gflops (eval):  296.065
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00527384,296.065,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.96129e+08
  maximum absolute entry in einsum_ir solution: 7.96129e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0128324
  time (eval):    0.00196915
  gflops (eval):  792.931
  gflops (total): 105.489
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0128324,0.00196915,792.931,105.489

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00805039
  gflops (total): 193.953
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,193.953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00577384
  gflops (eval):  270.427
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00577384,270.427,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.15406e+08
  maximum absolute entry in einsum_ir solution: 7.15406e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131034
  time (eval):    0.00198454
  gflops (eval):  786.782
  gflops (total): 103.487
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131034,0.00198454,786.782,103.487

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00733407
  gflops (total): 212.897
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,212.897

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00621393
  gflops (eval):  251.274
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00621393,251.274,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.765e+08
  maximum absolute entry in einsum_ir solution: 7.765e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.013101
  time (eval):    0.00198337
  gflops (eval):  787.244
  gflops (total): 103.511
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.013101,0.00198337,787.244,103.511

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00750145
  gflops (total): 208.146
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,208.146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00541539
  gflops (eval):  288.326
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00541539,288.326,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.59492e+08
  maximum absolute entry in einsum_ir solution: 7.59492e+08
  maximum element-wise difference:              440
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0129551
  time (eval):    0.00192388
  gflops (eval):  811.59
  gflops (total): 104.94
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0129551,0.00192388,811.59,104.94

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00663159
  gflops (total): 235.449
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,235.449

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00490576
  gflops (eval):  318.279
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00490576,318.279,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.92116e+08
  maximum absolute entry in einsum_ir solution: 8.92116e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.013115
  time (eval):    0.00195198
  gflops (eval):  799.906
  gflops (total): 103.631
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.013115,0.00195198,799.906,103.631

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00702003
  gflops (total): 222.421
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,222.421

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00538543
  gflops (eval):  289.93
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00538543,289.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.8351e+08
  maximum absolute entry in einsum_ir solution: 8.8351e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131269
  time (eval):    0.00202761
  gflops (eval):  770.068
  gflops (total): 103.032
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131269,0.00202761,770.068,103.032

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00725246
  gflops (total): 215.292
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,215.292

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00572158
  gflops (eval):  272.896
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00572158,272.896,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.74901e+08
  maximum absolute entry in einsum_ir solution: 7.74901e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131701
  time (eval):    0.00190552
  gflops (eval):  819.407
  gflops (total): 103.571
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131701,0.00190552,819.407,103.571

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00796588
  gflops (total): 196.011
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,196.011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.005803
  gflops (eval):  269.068
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.005803,269.068,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.71931e+08
  maximum absolute entry in einsum_ir solution: 7.71931e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0129962
  time (eval):    0.00187694
  gflops (eval):  831.887
  gflops (total): 104.981
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0129962,0.00187694,831.887,104.981

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00747729
  gflops (total): 208.819
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,208.819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00627477
  gflops (eval):  248.838
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00627477,248.838,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.76163e+08
  maximum absolute entry in einsum_ir solution: 7.76163e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0132996
  time (eval):    0.00209001
  gflops (eval):  747.079
  gflops (total): 101.458
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0132996,0.00209001,747.079,101.458

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00740524
  gflops (total): 210.851
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,210.851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00539873
  gflops (eval):  289.216
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00539873,289.216,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.81704e+08
  maximum absolute entry in einsum_ir solution: 8.81704e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130578
  time (eval):    0.00191248
  gflops (eval):  816.426
  gflops (total): 104.3
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130578,0.00191248,816.426,104.3

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00806182
  gflops (total): 193.678
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,193.678

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00551934
  gflops (eval):  282.896
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00551934,282.896,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.55102e+08
  maximum absolute entry in einsum_ir solution: 7.55102e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130848
  time (eval):    0.00184999
  gflops (eval):  844.005
  gflops (total): 104.548
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130848,0.00184999,844.005,104.548

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00741196
  gflops (total): 210.659
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,210.659

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0066811
  gflops (eval):  233.704
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0066811,233.704,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.30786e+08
  maximum absolute entry in einsum_ir solution: 7.30786e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130453
  time (eval):    0.00192955
  gflops (eval):  809.205
  gflops (total): 104.268
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130453,0.00192955,809.205,104.268

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00722747
  gflops (total): 216.037
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,216.037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00525981
  gflops (eval):  296.855
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00525981,296.855,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.25513e+08
  maximum absolute entry in einsum_ir solution: 7.25513e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130621
  time (eval):    0.00186854
  gflops (eval):  835.626
  gflops (total): 104.577
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130621,0.00186854,835.626,104.577

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00731547
  gflops (total): 213.438
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,213.438

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00582284
  gflops (eval):  268.151
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00582284,268.151,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.17056e+08
  maximum absolute entry in einsum_ir solution: 7.17056e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0132222
  time (eval):    0.00186279
  gflops (eval):  838.206
  gflops (total): 103.507
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0132222,0.00186279,838.206,103.507

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00673415
  gflops (total): 231.863
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,231.863

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00538908
  gflops (eval):  289.734
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00538908,289.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.69122e+08
  maximum absolute entry in einsum_ir solution: 7.69122e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130805
  time (eval):    0.00196601
  gflops (eval):  794.198
  gflops (total): 103.772
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130805,0.00196601,794.198,103.772

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00795886
  gflops (total): 196.184
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,196.184

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00570485
  gflops (eval):  273.697
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00570485,273.697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.28172e+08
  maximum absolute entry in einsum_ir solution: 7.28172e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0129797
  time (eval):    0.00192328
  gflops (eval):  811.842
  gflops (total): 104.771
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0129797,0.00192328,811.842,104.771

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0066056
  gflops (total): 236.375
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,236.375

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00493671
  gflops (eval):  316.284
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00493671,316.284,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.80967e+08
  maximum absolute entry in einsum_ir solution: 7.80967e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131262
  time (eval):    0.00196785
  gflops (eval):  793.457
  gflops (total): 103.445
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131262,0.00196785,793.457,103.445

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00800223
  gflops (total): 195.121
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,195.121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0063734
  gflops (eval):  244.987
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0063734,244.987,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.91664e+08
  maximum absolute entry in einsum_ir solution: 6.91664e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0129272
  time (eval):    0.00189048
  gflops (eval):  825.927
  gflops (total): 105.374
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0129272,0.00189048,825.927,105.374

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00754994
  gflops (total): 206.81
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,206.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00574385
  gflops (eval):  271.838
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00574385,271.838,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.48877e+08
  maximum absolute entry in einsum_ir solution: 7.48877e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130151
  time (eval):    0.00193777
  gflops (eval):  805.773
  gflops (total): 104.422
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130151,0.00193777,805.773,104.422

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00724081
  gflops (total): 215.639
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,215.639

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0055232
  gflops (eval):  282.699
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0055232,282.699,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.21313e+08
  maximum absolute entry in einsum_ir solution: 8.21313e+08
  maximum element-wise difference:              456
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131388
  time (eval):    0.00183064
  gflops (eval):  852.927
  gflops (total): 104.306
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131388,0.00183064,852.927,104.306

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00745148
  gflops (total): 209.542
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,209.542

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00613834
  gflops (eval):  254.368
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00613834,254.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.88506e+08
  maximum absolute entry in einsum_ir solution: 7.88506e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130936
  time (eval):    0.00195718
  gflops (eval):  797.782
  gflops (total): 103.742
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130936,0.00195718,797.782,103.742

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00754326
  gflops (total): 206.993
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,206.993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00615241
  gflops (eval):  253.787
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00615241,253.787,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.08228e+08
  maximum absolute entry in einsum_ir solution: 7.08228e+08
  maximum element-wise difference:              440
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130001
  time (eval):    0.00198404
  gflops (eval):  786.979
  gflops (total): 104.203
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130001,0.00198404,786.979,104.203

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00741228
  gflops (total): 210.65
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,210.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00587003
  gflops (eval):  265.995
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00587003,265.995,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.37628e+08
  maximum absolute entry in einsum_ir solution: 7.37628e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0129904
  time (eval):    0.00199964
  gflops (eval):  780.841
  gflops (total): 104.162
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0129904,0.00199964,780.841,104.162

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00753235
  gflops (total): 207.293
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,207.293

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00533015
  gflops (eval):  292.937
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00533015,292.937,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.88326e+08
  maximum absolute entry in einsum_ir solution: 7.88326e+08
  maximum element-wise difference:              440
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0132836
  time (eval):    0.00217744
  gflops (eval):  717.082
  gflops (total): 100.989
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0132836,0.00217744,717.082,100.989

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00518417
  gflops (total): 301.186
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,301.186

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000575557
  gflops (eval):  2712.85
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000575557,2712.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.212e+08
  maximum absolute entry in einsum_ir solution: 8.212e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0132035
  time (eval):    0.00187467
  gflops (eval):  832.895
  gflops (total): 103.553
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0132035,0.00187467,832.895,103.553

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00629381
  gflops (total): 248.085
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,248.085

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00523652
  gflops (eval):  298.175
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00523652,298.175,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.28961e+08
  maximum absolute entry in einsum_ir solution: 8.28961e+08
  maximum element-wise difference:              592
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.012948
  time (eval):    0.00196225
  gflops (eval):  795.721
  gflops (total): 104.72
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.012948,0.00196225,795.721,104.72

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00522775
  gflops (total): 298.675
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,298.675

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00442129
  gflops (eval):  353.155
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00442129,353.155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.06514e+08
  maximum absolute entry in einsum_ir solution: 7.06514e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0128782
  time (eval):    0.00183645
  gflops (eval):  850.226
  gflops (total): 106.112
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0128782,0.00183645,850.226,106.112

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00806295
  gflops (total): 193.651
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,193.651

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00538734
  gflops (eval):  289.828
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00538734,289.828,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.85111e+08
  maximum absolute entry in einsum_ir solution: 7.85111e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130368
  time (eval):    0.00184178
  gflops (eval):  847.766
  gflops (total): 104.943
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130368,0.00184178,847.766,104.943

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00661465
  gflops (total): 236.052
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,236.052

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00498413
  gflops (eval):  313.275
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00498413,313.275,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.81828e+08
  maximum absolute entry in einsum_ir solution: 7.81828e+08
  maximum element-wise difference:              544
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0133907
  time (eval):    0.0019657
  gflops (eval):  794.322
  gflops (total): 101.678
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0133907,0.0019657,794.322,101.678

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00707912
  gflops (total): 220.564
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,220.564

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00528637
  gflops (eval):  295.363
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00528637,295.363,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.09008e+08
  maximum absolute entry in einsum_ir solution: 8.09008e+08
  maximum element-wise difference:              464
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0128965
  time (eval):    0.00186916
  gflops (eval):  835.349
  gflops (total): 105.746
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0128965,0.00186916,835.349,105.746

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00796882
  gflops (total): 195.939
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,195.939

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00573071
  gflops (eval):  272.462
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00573071,272.462,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.10398e+08
  maximum absolute entry in einsum_ir solution: 8.10398e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0129966
  time (eval):    0.00191157
  gflops (eval):  816.814
  gflops (total): 104.735
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0129966,0.00191157,816.814,104.735

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00643325
  gflops (total): 242.708
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,242.708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00514452
  gflops (eval):  303.507
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00514452,303.507,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.17254e+08
  maximum absolute entry in einsum_ir solution: 7.17254e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131894
  time (eval):    0.00200363
  gflops (eval):  779.286
  gflops (total): 102.771
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131894,0.00200363,779.286,102.771

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00541568
  gflops (total): 288.311
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,288.311

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00467479
  gflops (eval):  334.004
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00467479,334.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.04571e+08
  maximum absolute entry in einsum_ir solution: 8.04571e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130048
  time (eval):    0.0019272
  gflops (eval):  810.19
  gflops (total): 104.567
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130048,0.0019272,810.19,104.567

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00756709
  gflops (total): 206.341
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,206.341

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00540863
  gflops (eval):  288.687
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00540863,288.687,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.40945e+08
  maximum absolute entry in einsum_ir solution: 7.40945e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0132522
  time (eval):    0.0019404
  gflops (eval):  804.678
  gflops (total): 102.773
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0132522,0.0019404,804.678,102.773

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00713529
  gflops (total): 218.828
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,218.828

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00576045
  gflops (eval):  271.055
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00576045,271.055,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.10484e+08
  maximum absolute entry in einsum_ir solution: 7.10484e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.013114
  time (eval):    0.00193802
  gflops (eval):  805.666
  gflops (total): 103.734
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.013114,0.00193802,805.666,103.734

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00749665
  gflops (total): 208.28
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,208.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00673834
  gflops (eval):  231.719
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00673834,231.719,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.61377e+08
  maximum absolute entry in einsum_ir solution: 7.61377e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131345
  time (eval):    0.00187698
  gflops (eval):  831.869
  gflops (total): 104.014
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131345,0.00187698,831.869,104.014

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00651558
  gflops (total): 239.641
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,239.641

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000492706
  gflops (eval):  3169.03
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000492706,3169.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.19323e+08
  maximum absolute entry in einsum_ir solution: 7.19323e+08
  maximum element-wise difference:              468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130499
  time (eval):    0.00202666
  gflops (eval):  770.431
  gflops (total): 103.565
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130499,0.00202666,770.431,103.565

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00745881
  gflops (total): 209.336
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,209.336

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00636648
  gflops (eval):  245.253
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00636648,245.253,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.78233e+08
  maximum absolute entry in einsum_ir solution: 7.78233e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0132005
  time (eval):    0.00192321
  gflops (eval):  811.871
  gflops (total): 103.242
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0132005,0.00192321,811.871,103.242

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00768774
  gflops (total): 203.103
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,203.103

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00623075
  gflops (eval):  250.596
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00623075,250.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.36993e+08
  maximum absolute entry in einsum_ir solution: 7.36993e+08
  maximum element-wise difference:              608
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131043
  time (eval):    0.0018644
  gflops (eval):  837.481
  gflops (total): 104.311
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131043,0.0018644,837.481,104.311

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00789808
  gflops (total): 197.694
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,197.694

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0057084
  gflops (eval):  273.527
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0057084,273.527,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.99117e+08
  maximum absolute entry in einsum_ir solution: 7.99117e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.013082
  time (eval):    0.00185718
  gflops (eval):  840.736
  gflops (total): 104.517
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.013082,0.00185718,840.736,104.517

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00800863
  gflops (total): 194.965
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,194.965

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00611995
  gflops (eval):  255.133
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00611995,255.133,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.21248e+08
  maximum absolute entry in einsum_ir solution: 8.21247e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0105946
  time (eval):    0.0019665
  gflops (eval):  793.998
  gflops (total): 124.304
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0105946,0.0019665,793.998,124.304

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00763746
  gflops (total): 204.44
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,204.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0057367
  gflops (eval):  272.177
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0057367,272.177,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.55674e+08
  maximum absolute entry in einsum_ir solution: 7.55674e+08
  maximum element-wise difference:              528
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0129247
  time (eval):    0.00193853
  gflops (eval):  805.457
  gflops (total): 105.051
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0129247,0.00193853,805.457,105.051

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00779335
  gflops (total): 200.35
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,200.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00651508
  gflops (eval):  239.659
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00651508,239.659,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.1484e+08
  maximum absolute entry in einsum_ir solution: 7.1484e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130546
  time (eval):    0.001836
  gflops (eval):  850.437
  gflops (total): 104.858
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130546,0.001836,850.437,104.858

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0078789
  gflops (total): 198.175
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,198.175

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0054472
  gflops (eval):  286.643
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0054472,286.643,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.05193e+08
  maximum absolute entry in einsum_ir solution: 7.05193e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0133225
  time (eval):    0.00188905
  gflops (eval):  826.551
  gflops (total): 102.645
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0133225,0.00188905,826.551,102.645

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00759237
  gflops (total): 205.654
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,205.654

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00615031
  gflops (eval):  253.874
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00615031,253.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.12829e+08
  maximum absolute entry in einsum_ir solution: 7.12829e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131581
  time (eval):    0.00184327
  gflops (eval):  847.081
  gflops (total): 104.084
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131581,0.00184327,847.081,104.084

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00650737
  gflops (total): 239.943
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,239.943

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00601558
  gflops (eval):  259.559
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00601558,259.559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.00169e+08
  maximum absolute entry in einsum_ir solution: 8.00169e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0129115
  time (eval):    0.00201838
  gflops (eval):  773.591
  gflops (total): 104.583
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0129115,0.00201838,773.591,104.583

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00743937
  gflops (total): 209.883
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,209.883

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0060167
  gflops (eval):  259.511
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0060167,259.511,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.96877e+08
  maximum absolute entry in einsum_ir solution: 7.96877e+08
  maximum element-wise difference:              452
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.012992
  time (eval):    0.00193539
  gflops (eval):  806.764
  gflops (total): 104.599
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.012992,0.00193539,806.764,104.599

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0067176
  gflops (total): 232.434
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,232.434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00540684
  gflops (eval):  288.782
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00540684,288.782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.73594e+08
  maximum absolute entry in einsum_ir solution: 7.73594e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0128331
  time (eval):    0.00178457
  gflops (eval):  874.945
  gflops (total): 106.816
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0128331,0.00178457,874.945,106.816

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00753895
  gflops (total): 207.111
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,207.111

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00585285
  gflops (eval):  266.776
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00585285,266.776,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.68313e+08
  maximum absolute entry in einsum_ir solution: 8.68313e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0129564
  time (eval):    0.00201819
  gflops (eval):  773.662
  gflops (total): 104.27
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0129564,0.00201819,773.662,104.27

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0065754
  gflops (total): 237.461
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,237.461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00521564
  gflops (eval):  299.369
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00521564,299.369,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.17736e+08
  maximum absolute entry in einsum_ir solution: 7.17736e+08
  maximum element-wise difference:              596
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.01313
  time (eval):    0.00187125
  gflops (eval):  834.415
  gflops (total): 104.085
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.01313,0.00187125,834.415,104.085

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00750448
  gflops (total): 208.062
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,208.062

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00576848
  gflops (eval):  270.678
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00576848,270.678,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.16288e+08
  maximum absolute entry in einsum_ir solution: 7.16288e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0132374
  time (eval):    0.00193427
  gflops (eval):  807.23
  gflops (total): 102.915
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0132374,0.00193427,807.23,102.915

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00778339
  gflops (total): 200.607
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,200.607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00588714
  gflops (eval):  265.222
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00588714,265.222,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.37674e+08
  maximum absolute entry in einsum_ir solution: 7.37674e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130003
  time (eval):    0.00201531
  gflops (eval):  774.769
  gflops (total): 103.985
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130003,0.00201531,774.769,103.985

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00781427
  gflops (total): 199.814
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,199.814

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00544466
  gflops (eval):  286.777
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00544466,286.777,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.4768e+08
  maximum absolute entry in einsum_ir solution: 8.4768e+08
  maximum element-wise difference:              496
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130342
  time (eval):    0.00183251
  gflops (eval):  852.055
  gflops (total): 105.027
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130342,0.00183251,852.055,105.027

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00607499
  gflops (total): 257.021
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,257.021

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00525167
  gflops (eval):  297.315
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00525167,297.315,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.38424e+08
  maximum absolute entry in einsum_ir solution: 7.38424e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130225
  time (eval):    0.00185964
  gflops (eval):  839.627
  gflops (total): 104.917
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130225,0.00185964,839.627,104.917

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0079642
  gflops (total): 196.052
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,196.052

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00606461
  gflops (eval):  257.461
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00606461,257.461,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.0026e+08
  maximum absolute entry in einsum_ir solution: 7.0026e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131699
  time (eval):    0.00200499
  gflops (eval):  778.757
  gflops (total): 102.894
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131699,0.00200499,778.757,102.894

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00717264
  gflops (total): 217.688
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,217.688

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00553021
  gflops (eval):  282.34
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00553021,282.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.11002e+08
  maximum absolute entry in einsum_ir solution: 7.11002e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131089
  time (eval):    0.00203773
  gflops (eval):  766.244
  gflops (total): 103.086
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131089,0.00203773,766.244,103.086

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00774871
  gflops (total): 201.505
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,201.505

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00644016
  gflops (eval):  242.447
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00644016,242.447,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.73819e+08
  maximum absolute entry in einsum_ir solution: 7.73819e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.013033
  time (eval):    0.00186254
  gflops (eval):  838.319
  gflops (total): 104.823
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.013033,0.00186254,838.319,104.823

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00516519
  gflops (total): 302.293
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,302.293

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000560656
  gflops (eval):  2784.95
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000560656,2784.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.27564e+08
  maximum absolute entry in einsum_ir solution: 7.27564e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0129429
  time (eval):    0.0019743
  gflops (eval):  790.862
  gflops (total): 104.671
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0129429,0.0019743,790.862,104.671

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00811178
  gflops (total): 192.485
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,192.485

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0058825
  gflops (eval):  265.431
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0058825,265.431,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.99709e+08
  maximum absolute entry in einsum_ir solution: 7.99709e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131743
  time (eval):    0.00211055
  gflops (eval):  739.809
  gflops (total): 102.154
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131743,0.00211055,739.809,102.154

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00718193
  gflops (total): 217.407
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,217.407

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0057229
  gflops (eval):  272.834
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0057229,272.834,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.31987e+08
  maximum absolute entry in einsum_ir solution: 8.31987e+08
  maximum element-wise difference:              528
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0129068
  time (eval):    0.00195246
  gflops (eval):  799.711
  gflops (total): 105.079
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0129068,0.00195246,799.711,105.079

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00765483
  gflops (total): 203.976
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,203.976

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00653976
  gflops (eval):  238.755
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00653976,238.755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.78579e+08
  maximum absolute entry in einsum_ir solution: 6.78579e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131645
  time (eval):    0.00190464
  gflops (eval):  819.788
  gflops (total): 103.616
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131645,0.00190464,819.788,103.616

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00798521
  gflops (total): 195.536
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,195.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00553767
  gflops (eval):  281.96
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00553767,281.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.20418e+08
  maximum absolute entry in einsum_ir solution: 8.20418e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0128849
  time (eval):    0.00205716
  gflops (eval):  759.009
  gflops (total): 104.497
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0128849,0.00205716,759.009,104.497

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0069063
  gflops (total): 226.083
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,226.083

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00548959
  gflops (eval):  284.429
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00548959,284.429,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.685e+08
  maximum absolute entry in einsum_ir solution: 7.685e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131478
  time (eval):    0.00190393
  gflops (eval):  820.094
  gflops (total): 103.736
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131478,0.00190393,820.094,103.736

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00798014
  gflops (total): 195.661
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,195.661

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00605742
  gflops (eval):  257.767
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00605742,257.767,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.3803e+08
  maximum absolute entry in einsum_ir solution: 7.3803e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0132347
  time (eval):    0.00187572
  gflops (eval):  832.425
  gflops (total): 103.333
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0132347,0.00187572,832.425,103.333

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00752724
  gflops (total): 207.433
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,207.433

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00666962
  gflops (eval):  234.106
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00666962,234.106,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.18336e+08
  maximum absolute entry in einsum_ir solution: 8.18336e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0132736
  time (eval):    0.00189356
  gflops (eval):  824.584
  gflops (total): 102.946
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0132736,0.00189356,824.584,102.946

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00760726
  gflops (total): 205.251
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,205.251

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00551357
  gflops (eval):  283.192
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00551357,283.192,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.10706e+08
  maximum absolute entry in einsum_ir solution: 8.10706e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.01326
  time (eval):    0.0019057
  gflops (eval):  819.331
  gflops (total): 102.956
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.01326,0.0019057,819.331,102.956

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.005307
  gflops (total): 294.215
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,294.215

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000575839
  gflops (eval):  2711.52
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000575839,2711.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.68142e+08
  maximum absolute entry in einsum_ir solution: 7.68142e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131398
  time (eval):    0.0018373
  gflops (eval):  849.835
  gflops (total): 104.252
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131398,0.0018373,849.835,104.252

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00514914
  gflops (total): 303.235
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,303.235

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000550081
  gflops (eval):  2838.49
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000550081,2838.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.27348e+08
  maximum absolute entry in einsum_ir solution: 8.27348e+08
  maximum element-wise difference:              496
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0131986
  time (eval):    0.00187428
  gflops (eval):  833.068
  gflops (total): 103.59
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0131986,0.00187428,833.068,103.59

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00747619
  gflops (total): 208.85
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,208.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00520365
  gflops (eval):  300.059
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00520365,300.059,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.63746e+08
  maximum absolute entry in einsum_ir solution: 7.63746e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130155
  time (eval):    0.00183835
  gflops (eval):  849.349
  gflops (total): 105.117
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130155,0.00183835,849.349,105.117

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00738352
  gflops (total): 211.471
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,211.471

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00607974
  gflops (eval):  256.82
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00607974,256.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.71934e+08
  maximum absolute entry in einsum_ir solution: 7.71934e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
