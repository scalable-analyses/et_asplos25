parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136608
  time (eval):    0.00211513
  gflops (eval):  738.205
  gflops (total): 98.9734
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136608,0.00211513,738.205,98.9734

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0063644
  gflops (total): 245.333
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,245.333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00522881
  gflops (eval):  298.615
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00522881,298.615,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.19748e+08
  maximum absolute entry in einsum_ir solution: 7.19748e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136375
  time (eval):    0.0021819
  gflops (eval):  715.617
  gflops (total): 98.7014
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136375,0.0021819,715.617,98.7014

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0052316
  gflops (total): 298.455
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,298.455

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000556945
  gflops (eval):  2803.51
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000556945,2803.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.52023e+08
  maximum absolute entry in einsum_ir solution: 7.52023e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134468
  time (eval):    0.00215571
  gflops (eval):  724.31
  gflops (total): 100.074
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134468,0.00215571,724.31,100.074

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00702674
  gflops (total): 222.208
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,222.208

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00560469
  gflops (eval):  278.588
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00560469,278.588,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.38113e+08
  maximum absolute entry in einsum_ir solution: 7.38113e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134875
  time (eval):    0.0026905
  gflops (eval):  580.339
  gflops (total): 96.5137
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134875,0.0026905,580.339,96.5137

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00750146
  gflops (total): 208.146
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,208.146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00546994
  gflops (eval):  285.451
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00546994,285.451,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.66094e+08
  maximum absolute entry in einsum_ir solution: 7.66094e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134436
  time (eval):    0.00273346
  gflops (eval):  571.217
  gflops (total): 96.5192
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134436,0.00273346,571.217,96.5192

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00721354
  gflops (total): 216.454
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,216.454

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00533924
  gflops (eval):  292.439
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00533924,292.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.80424e+08
  maximum absolute entry in einsum_ir solution: 6.80424e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0133949
  time (eval):    0.00228741
  gflops (eval):  682.605
  gflops (total): 99.5644
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0133949,0.00228741,682.605,99.5644

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00734714
  gflops (total): 212.518
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,212.518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00610653
  gflops (eval):  255.694
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00610653,255.694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.92667e+08
  maximum absolute entry in einsum_ir solution: 7.92667e+08
  maximum element-wise difference:              508
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135101
  time (eval):    0.00213443
  gflops (eval):  731.532
  gflops (total): 99.8048
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135101,0.00213443,731.532,99.8048

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00662188
  gflops (total): 235.794
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,235.794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00501638
  gflops (eval):  311.26
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00501638,311.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.46522e+08
  maximum absolute entry in einsum_ir solution: 8.46522e+08
  maximum element-wise difference:              456
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135833
  time (eval):    0.00222238
  gflops (eval):  702.58
  gflops (total): 98.7871
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135833,0.00222238,702.58,98.7871

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00746619
  gflops (total): 209.129
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,209.129

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00581424
  gflops (eval):  268.548
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00581424,268.548,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.69738e+08
  maximum absolute entry in einsum_ir solution: 8.69738e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134897
  time (eval):    0.00215893
  gflops (eval):  723.228
  gflops (total): 99.7786
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134897,0.00215893,723.228,99.7786

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00513826
  gflops (total): 303.877
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,303.877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0005814
  gflops (eval):  2685.59
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0005814,2685.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.96556e+08
  maximum absolute entry in einsum_ir solution: 6.96556e+08
  maximum element-wise difference:              392
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0137892
  time (eval):    0.00218582
  gflops (eval):  714.332
  gflops (total): 97.7402
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0137892,0.00218582,714.332,97.7402

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00742851
  gflops (total): 210.19
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,210.19

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00522198
  gflops (eval):  299.005
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00522198,299.005,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.15633e+08
  maximum absolute entry in einsum_ir solution: 7.15633e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135897
  time (eval):    0.00214382
  gflops (eval):  728.325
  gflops (total): 99.2406
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135897,0.00214382,728.325,99.2406

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00720481
  gflops (total): 216.716
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,216.716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0053095
  gflops (eval):  294.077
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0053095,294.077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.83841e+08
  maximum absolute entry in einsum_ir solution: 8.83841e+08
  maximum element-wise difference:              464
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136805
  time (eval):    0.00229912
  gflops (eval):  679.128
  gflops (total): 97.7117
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136805,0.00229912,679.128,97.7117

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00725015
  gflops (total): 215.361
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,215.361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0053901
  gflops (eval):  289.679
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0053901,289.679,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.80485e+08
  maximum absolute entry in einsum_ir solution: 7.80485e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.013448
  time (eval):    0.00210581
  gflops (eval):  741.473
  gflops (total): 100.387
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.013448,0.00210581,741.473,100.387

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00591807
  gflops (total): 263.836
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,263.836

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000516877
  gflops (eval):  3020.83
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000516877,3020.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.15733e+08
  maximum absolute entry in einsum_ir solution: 8.15733e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134732
  time (eval):    0.0021539
  gflops (eval):  724.916
  gflops (total): 99.9159
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134732,0.0021539,724.916,99.9159

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00742047
  gflops (total): 210.418
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,210.418

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00631599
  gflops (eval):  247.214
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00631599,247.214,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.16918e+08
  maximum absolute entry in einsum_ir solution: 8.16918e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.013542
  time (eval):    0.0026144
  gflops (eval):  597.232
  gflops (total): 96.6428
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.013542,0.0026144,597.232,96.6428

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00723629
  gflops (total): 215.773
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,215.773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00530679
  gflops (eval):  294.227
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00530679,294.227,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.78726e+08
  maximum absolute entry in einsum_ir solution: 7.78726e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136111
  time (eval):    0.00215143
  gflops (eval):  725.751
  gflops (total): 99.0579
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136111,0.00215143,725.751,99.0579

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00740792
  gflops (total): 210.774
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,210.774

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00593098
  gflops (eval):  263.262
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00593098,263.262,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.94884e+08
  maximum absolute entry in einsum_ir solution: 7.94884e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135679
  time (eval):    0.00243488
  gflops (eval):  641.265
  gflops (total): 97.5709
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135679,0.00243488,641.265,97.5709

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00721453
  gflops (total): 216.424
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,216.424

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00546273
  gflops (eval):  285.828
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00546273,285.828,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.61335e+08
  maximum absolute entry in einsum_ir solution: 7.61335e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134625
  time (eval):    0.00217059
  gflops (eval):  719.345
  gflops (total): 99.8776
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134625,0.00217059,719.345,99.8776

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00748023
  gflops (total): 208.737
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,208.737

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00546958
  gflops (eval):  285.47
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00546958,285.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.48927e+08
  maximum absolute entry in einsum_ir solution: 8.48927e+08
  maximum element-wise difference:              392
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136861
  time (eval):    0.00253836
  gflops (eval):  615.121
  gflops (total): 96.2372
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136861,0.00253836,615.121,96.2372

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00655336
  gflops (total): 238.26
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,238.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00563158
  gflops (eval):  277.258
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00563158,277.258,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.01862e+08
  maximum absolute entry in einsum_ir solution: 8.01862e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136469
  time (eval):    0.00222386
  gflops (eval):  702.111
  gflops (total): 98.3822
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136469,0.00222386,702.111,98.3822

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00751188
  gflops (total): 207.857
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,207.857

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00578786
  gflops (eval):  269.771
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00578786,269.771,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.59931e+08
  maximum absolute entry in einsum_ir solution: 8.59931e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134707
  time (eval):    0.00218038
  gflops (eval):  716.113
  gflops (total): 99.7628
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134707,0.00218038,716.113,99.7628

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00745765
  gflops (total): 209.369
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,209.369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00546109
  gflops (eval):  285.914
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00546109,285.914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.49668e+08
  maximum absolute entry in einsum_ir solution: 8.49668e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136471
  time (eval):    0.00209456
  gflops (eval):  745.454
  gflops (total): 99.1893
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136471,0.00209456,745.454,99.1893

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00719477
  gflops (total): 217.019
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,217.019

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00542355
  gflops (eval):  287.893
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00542355,287.893,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.97144e+08
  maximum absolute entry in einsum_ir solution: 7.97144e+08
  maximum element-wise difference:              408
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136923
  time (eval):    0.00215055
  gflops (eval):  726.047
  gflops (total): 98.5555
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136923,0.00215055,726.047,98.5555

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00729577
  gflops (total): 214.014
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,214.014

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00631757
  gflops (eval):  247.152
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00631757,247.152,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.52141e+08
  maximum absolute entry in einsum_ir solution: 7.52142e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0137027
  time (eval):    0.00214864
  gflops (eval):  726.692
  gflops (total): 98.5028
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0137027,0.00214864,726.692,98.5028

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00630973
  gflops (total): 247.459
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,247.459

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00528469
  gflops (eval):  295.457
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00528469,295.457,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.63836e+08
  maximum absolute entry in einsum_ir solution: 7.63836e+08
  maximum element-wise difference:              404
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136172
  time (eval):    0.00216957
  gflops (eval):  719.68
  gflops (total): 98.9056
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136172,0.00216957,719.68,98.9056

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00728668
  gflops (total): 214.282
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,214.282

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00572799
  gflops (eval):  272.591
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00572799,272.591,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      9.03524e+08
  maximum absolute entry in einsum_ir solution: 9.03524e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135245
  time (eval):    0.00220144
  gflops (eval):  709.261
  gflops (total): 99.288
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135245,0.00220144,709.261,99.288

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0074392
  gflops (total): 209.888
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,209.888

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00561539
  gflops (eval):  278.057
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00561539,278.057,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.69425e+08
  maximum absolute entry in einsum_ir solution: 7.69425e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135346
  time (eval):    0.00211178
  gflops (eval):  739.377
  gflops (total): 99.7932
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135346,0.00211178,739.377,99.7932

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00674857
  gflops (total): 231.367
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,231.367

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00507179
  gflops (eval):  307.86
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00507179,307.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.20526e+08
  maximum absolute entry in einsum_ir solution: 7.20527e+08
  maximum element-wise difference:              464
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134736
  time (eval):    0.00220443
  gflops (eval):  708.301
  gflops (total): 99.5916
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134736,0.00220443,708.301,99.5916

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00732828
  gflops (total): 213.065
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,213.065

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00609695
  gflops (eval):  256.095
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00609695,256.095,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.61188e+08
  maximum absolute entry in einsum_ir solution: 7.61188e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0137169
  time (eval):    0.00213159
  gflops (eval):  732.506
  gflops (total): 98.5207
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0137169,0.00213159,732.506,98.5207

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00672011
  gflops (total): 232.347
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,232.347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00523206
  gflops (eval):  298.429
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00523206,298.429,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.09332e+08
  maximum absolute entry in einsum_ir solution: 8.09332e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136532
  time (eval):    0.00315628
  gflops (eval):  494.697
  gflops (total): 92.8882
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136532,0.00315628,494.697,92.8882

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00721705
  gflops (total): 216.349
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,216.349

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00585798
  gflops (eval):  266.542
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00585798,266.542,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.07843e+08
  maximum absolute entry in einsum_ir solution: 7.07843e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.013518
  time (eval):    0.00221576
  gflops (eval):  704.679
  gflops (total): 99.2388
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.013518,0.00221576,704.679,99.2388

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00732905
  gflops (total): 213.043
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,213.043

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00602869
  gflops (eval):  258.995
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00602869,258.995,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.13076e+08
  maximum absolute entry in einsum_ir solution: 8.13076e+08
  maximum element-wise difference:              424
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135309
  time (eval):    0.00216559
  gflops (eval):  721.005
  gflops (total): 99.4745
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135309,0.00216559,721.005,99.4745

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00639736
  gflops (total): 244.069
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,244.069

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00521168
  gflops (eval):  299.596
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00521168,299.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.35196e+08
  maximum absolute entry in einsum_ir solution: 8.35196e+08
  maximum element-wise difference:              392
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0139569
  time (eval):    0.00216763
  gflops (eval):  720.324
  gflops (total): 96.8337
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0139569,0.00216763,720.324,96.8337

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00680754
  gflops (total): 229.363
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,229.363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00524991
  gflops (eval):  297.415
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00524991,297.415,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.89944e+08
  maximum absolute entry in einsum_ir solution: 7.89944e+08
  maximum element-wise difference:              464
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135677
  time (eval):    0.00222397
  gflops (eval):  702.077
  gflops (total): 98.8746
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135677,0.00222397,702.077,98.8746

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00661783
  gflops (total): 235.938
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,235.938

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0056128
  gflops (eval):  278.186
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0056128,278.186,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.78663e+08
  maximum absolute entry in einsum_ir solution: 8.78663e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135275
  time (eval):    0.00212193
  gflops (eval):  735.838
  gflops (total): 99.7735
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135275,0.00212193,735.838,99.7735

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00703404
  gflops (total): 221.978
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,221.978

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00559169
  gflops (eval):  279.236
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00559169,279.236,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.33865e+08
  maximum absolute entry in einsum_ir solution: 7.33865e+08
  maximum element-wise difference:              464
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136891
  time (eval):    0.00212914
  gflops (eval):  733.349
  gflops (total): 98.709
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136891,0.00212914,733.349,98.709

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00513535
  gflops (total): 304.049
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,304.049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000560354
  gflops (eval):  2786.45
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000560354,2786.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.34759e+08
  maximum absolute entry in einsum_ir solution: 7.34759e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0129323
  time (eval):    0.00212961
  gflops (eval):  733.186
  gflops (total): 103.665
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0129323,0.00212961,733.186,103.665

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00748709
  gflops (total): 208.546
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,208.546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0056044
  gflops (eval):  278.603
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0056044,278.603,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.12533e+08
  maximum absolute entry in einsum_ir solution: 7.12533e+08
  maximum element-wise difference:              364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0137518
  time (eval):    0.00211592
  gflops (eval):  737.929
  gflops (total): 98.4012
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0137518,0.00211592,737.929,98.4012

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00744093
  gflops (total): 209.839
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,209.839

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00620139
  gflops (eval):  251.782
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00620139,251.782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.97394e+08
  maximum absolute entry in einsum_ir solution: 7.97394e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0138445
  time (eval):    0.00220191
  gflops (eval):  709.111
  gflops (total): 97.3052
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0138445,0.00220191,709.111,97.3052

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00739178
  gflops (total): 211.235
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,211.235

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0055587
  gflops (eval):  280.893
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0055587,280.893,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.37444e+08
  maximum absolute entry in einsum_ir solution: 8.37444e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134863
  time (eval):    0.00264091
  gflops (eval):  591.236
  gflops (total): 96.8179
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134863,0.00264091,591.236,96.8179

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00694524
  gflops (total): 224.816
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,224.816

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00552876
  gflops (eval):  282.414
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00552876,282.414,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.66462e+08
  maximum absolute entry in einsum_ir solution: 7.66462e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136893
  time (eval):    0.00210883
  gflops (eval):  740.41
  gflops (total): 98.8347
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136893,0.00210883,740.41,98.8347

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00754309
  gflops (total): 206.997
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,206.997

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00551761
  gflops (eval):  282.985
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00551761,282.985,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.91949e+08
  maximum absolute entry in einsum_ir solution: 7.91948e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136812
  time (eval):    0.00220522
  gflops (eval):  708.048
  gflops (total): 98.2852
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136812,0.00220522,708.048,98.2852

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00698068
  gflops (total): 223.675
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,223.675

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00551137
  gflops (eval):  283.305
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00551137,283.305,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.56174e+08
  maximum absolute entry in einsum_ir solution: 7.56174e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0133815
  time (eval):    0.00269552
  gflops (eval):  579.257
  gflops (total): 97.1201
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0133815,0.00269552,579.257,97.1201

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00719762
  gflops (total): 216.933
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,216.933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00563472
  gflops (eval):  277.103
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00563472,277.103,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.34073e+08
  maximum absolute entry in einsum_ir solution: 8.34073e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0137327
  time (eval):    0.00218366
  gflops (eval):  715.037
  gflops (total): 98.1003
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0137327,0.00218366,715.037,98.1003

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00746364
  gflops (total): 209.201
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,209.201

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00620369
  gflops (eval):  251.689
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00620369,251.689,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.48365e+08
  maximum absolute entry in einsum_ir solution: 8.48364e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135347
  time (eval):    0.00225997
  gflops (eval):  690.895
  gflops (total): 98.8561
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135347,0.00225997,690.895,98.8561

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00723477
  gflops (total): 215.819
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,215.819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00558957
  gflops (eval):  279.342
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00558957,279.342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.7356e+08
  maximum absolute entry in einsum_ir solution: 8.7356e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0139021
  time (eval):    0.00215172
  gflops (eval):  725.653
  gflops (total): 97.2606
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0139021,0.00215172,725.653,97.2606

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00744828
  gflops (total): 209.632
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,209.632

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00565633
  gflops (eval):  276.045
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00565633,276.045,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.24983e+08
  maximum absolute entry in einsum_ir solution: 8.24982e+08
  maximum element-wise difference:              528
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0130221
  time (eval):    0.00213203
  gflops (eval):  732.353
  gflops (total): 103.034
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0130221,0.00213203,732.353,103.034

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00624796
  gflops (total): 249.905
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,249.905

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00514266
  gflops (eval):  303.617
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00514266,303.617,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.14742e+08
  maximum absolute entry in einsum_ir solution: 7.14742e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136379
  time (eval):    0.00214855
  gflops (eval):  726.724
  gflops (total): 98.9077
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136379,0.00214855,726.724,98.9077

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00676703
  gflops (total): 230.736
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,230.736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00547066
  gflops (eval):  285.414
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00547066,285.414,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.33856e+08
  maximum absolute entry in einsum_ir solution: 7.33856e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.013441
  time (eval):    0.00214766
  gflops (eval):  727.025
  gflops (total): 100.163
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.013441,0.00214766,727.025,100.163

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00733401
  gflops (total): 212.899
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,212.899

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0060021
  gflops (eval):  260.142
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0060021,260.142,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.27917e+08
  maximum absolute entry in einsum_ir solution: 8.27918e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134203
  time (eval):    0.00217641
  gflops (eval):  717.422
  gflops (total): 100.111
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134203,0.00217641,717.422,100.111

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00727226
  gflops (total): 214.706
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,214.706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.005434
  gflops (eval):  287.339
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.005434,287.339,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.92668e+08
  maximum absolute entry in einsum_ir solution: 7.92668e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135077
  time (eval):    0.00237958
  gflops (eval):  656.166
  gflops (total): 98.2798
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135077,0.00237958,656.166,98.2798

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00717817
  gflops (total): 217.521
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,217.521

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00554057
  gflops (eval):  281.812
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00554057,281.812,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.06039e+08
  maximum absolute entry in einsum_ir solution: 8.06039e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134585
  time (eval):    0.00210834
  gflops (eval):  740.582
  gflops (total): 100.303
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134585,0.00210834,740.582,100.303

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00651234
  gflops (total): 239.76
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,239.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00508798
  gflops (eval):  306.88
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00508798,306.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.0311e+08
  maximum absolute entry in einsum_ir solution: 8.0311e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135764
  time (eval):    0.00295387
  gflops (eval):  528.595
  gflops (total): 94.4572
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135764,0.00295387,528.595,94.4572

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00522868
  gflops (total): 298.622
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,298.622

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000584604
  gflops (eval):  2670.87
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000584604,2670.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.78024e+08
  maximum absolute entry in einsum_ir solution: 7.78024e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136442
  time (eval):    0.00215755
  gflops (eval):  723.692
  gflops (total): 98.8121
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136442,0.00215755,723.692,98.8121

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00708345
  gflops (total): 220.429
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,220.429

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00536707
  gflops (eval):  290.922
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00536707,290.922,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      9.24774e+08
  maximum absolute entry in einsum_ir solution: 9.24774e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135587
  time (eval):    0.00214027
  gflops (eval):  729.533
  gflops (total): 99.4587
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135587,0.00214027,729.533,99.4587

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00662663
  gflops (total): 235.625
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,235.625

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00566818
  gflops (eval):  275.468
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00566818,275.468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.57888e+08
  maximum absolute entry in einsum_ir solution: 7.57888e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134977
  time (eval):    0.00241221
  gflops (eval):  647.291
  gflops (total): 98.1404
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134977,0.00241221,647.291,98.1404

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00728587
  gflops (total): 214.305
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,214.305

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00541427
  gflops (eval):  288.386
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00541427,288.386,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.51551e+08
  maximum absolute entry in einsum_ir solution: 7.51551e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134897
  time (eval):    0.00212838
  gflops (eval):  733.611
  gflops (total): 99.974
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134897,0.00212838,733.611,99.974

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00651609
  gflops (total): 239.622
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,239.622

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00543746
  gflops (eval):  287.156
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00543746,287.156,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.70033e+08
  maximum absolute entry in einsum_ir solution: 7.70033e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135413
  time (eval):    0.00215974
  gflops (eval):  722.957
  gflops (total): 99.4458
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135413,0.00215974,722.957,99.4458

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00715144
  gflops (total): 218.334
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,218.334

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0061974
  gflops (eval):  251.944
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0061974,251.944,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.90044e+08
  maximum absolute entry in einsum_ir solution: 7.90044e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136877
  time (eval):    0.00212747
  gflops (eval):  733.922
  gflops (total): 98.7278
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136877,0.00212747,733.922,98.7278

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00730375
  gflops (total): 213.781
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,213.781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00553809
  gflops (eval):  281.939
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00553809,281.939,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      9.20649e+08
  maximum absolute entry in einsum_ir solution: 9.20649e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135485
  time (eval):    0.00212493
  gflops (eval):  734.802
  gflops (total): 99.6211
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135485,0.00212493,734.802,99.6211

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00640554
  gflops (total): 243.758
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,243.758

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00489051
  gflops (eval):  319.272
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00489051,319.272,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.08033e+08
  maximum absolute entry in einsum_ir solution: 8.08033e+08
  maximum element-wise difference:              420
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136069
  time (eval):    0.00210342
  gflops (eval):  742.316
  gflops (total): 99.3871
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136069,0.00210342,742.316,99.3871

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00531607
  gflops (total): 293.713
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,293.713

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000557539
  gflops (eval):  2800.52
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000557539,2800.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.18847e+08
  maximum absolute entry in einsum_ir solution: 7.18847e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0137299
  time (eval):    0.00217538
  gflops (eval):  717.761
  gflops (total): 98.1687
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0137299,0.00217538,717.761,98.1687

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00734416
  gflops (total): 212.604
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,212.604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00556977
  gflops (eval):  280.335
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00556977,280.335,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.38735e+08
  maximum absolute entry in einsum_ir solution: 7.38735e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135075
  time (eval):    0.00213613
  gflops (eval):  730.946
  gflops (total): 99.8108
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135075,0.00213613,730.946,99.8108

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00737847
  gflops (total): 211.616
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,211.616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00565851
  gflops (eval):  275.938
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00565851,275.938,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.80924e+08
  maximum absolute entry in einsum_ir solution: 7.80924e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.013403
  time (eval):    0.0021039
  gflops (eval):  742.147
  gflops (total): 100.691
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.013403,0.0021039,742.147,100.691

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00672827
  gflops (total): 232.066
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,232.066

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00535054
  gflops (eval):  291.821
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00535054,291.821,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.14117e+08
  maximum absolute entry in einsum_ir solution: 8.14117e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135826
  time (eval):    0.00219155
  gflops (eval):  712.463
  gflops (total): 98.9846
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135826,0.00219155,712.463,98.9846

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00729299
  gflops (total): 214.096
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,214.096

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00585702
  gflops (eval):  266.586
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00585702,266.586,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.18786e+08
  maximum absolute entry in einsum_ir solution: 8.18787e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134551
  time (eval):    0.0020401
  gflops (eval):  765.354
  gflops (total): 100.766
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134551,0.0020401,765.354,100.766

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00767006
  gflops (total): 203.571
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,203.571

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00554088
  gflops (eval):  281.796
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00554088,281.796,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.61542e+08
  maximum absolute entry in einsum_ir solution: 8.61542e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136569
  time (eval):    0.00218747
  gflops (eval):  713.793
  gflops (total): 98.5463
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136569,0.00218747,713.793,98.5463

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00735917
  gflops (total): 212.171
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,212.171

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0054682
  gflops (eval):  285.542
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0054682,285.542,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.64972e+08
  maximum absolute entry in einsum_ir solution: 7.64972e+08
  maximum element-wise difference:              496
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134672
  time (eval):    0.00219198
  gflops (eval):  712.324
  gflops (total): 99.7112
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134672,0.00219198,712.324,99.7112

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00741026
  gflops (total): 210.708
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,210.708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00544544
  gflops (eval):  286.735
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00544544,286.735,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.33082e+08
  maximum absolute entry in einsum_ir solution: 7.33082e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135195
  time (eval):    0.00211594
  gflops (eval):  737.922
  gflops (total): 99.8631
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135195,0.00211594,737.922,99.8631

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00745206
  gflops (total): 209.526
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,209.526

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00629242
  gflops (eval):  248.14
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00629242,248.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.6399e+08
  maximum absolute entry in einsum_ir solution: 7.6399e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134925
  time (eval):    0.00212183
  gflops (eval):  735.874
  gflops (total): 99.9982
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134925,0.00212183,735.874,99.9982

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00651124
  gflops (total): 239.801
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,239.801

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00552646
  gflops (eval):  282.532
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00552646,282.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.2592e+08
  maximum absolute entry in einsum_ir solution: 8.2592e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136998
  time (eval):    0.00230873
  gflops (eval):  676.303
  gflops (total): 97.5354
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136998,0.00230873,676.303,97.5354

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00726589
  gflops (total): 214.895
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,214.895

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00609023
  gflops (eval):  256.378
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00609023,256.378,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.241e+08
  maximum absolute entry in einsum_ir solution: 7.241e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135504
  time (eval):    0.00216748
  gflops (eval):  720.377
  gflops (total): 99.3389
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135504,0.00216748,720.377,99.3389

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0070396
  gflops (total): 221.803
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,221.803

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0055664
  gflops (eval):  280.505
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0055664,280.505,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.58024e+08
  maximum absolute entry in einsum_ir solution: 7.58024e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136285
  time (eval):    0.0021673
  gflops (eval):  720.435
  gflops (total): 98.849
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136285,0.0021673,720.435,98.849

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00736381
  gflops (total): 212.037
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,212.037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00574313
  gflops (eval):  271.873
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00574313,271.873,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.4533e+08
  maximum absolute entry in einsum_ir solution: 7.4533e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135569
  time (eval):    0.00210676
  gflops (eval):  741.14
  gflops (total): 99.683
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135569,0.00210676,741.14,99.683

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00745329
  gflops (total): 209.491
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,209.491

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00603806
  gflops (eval):  258.593
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00603806,258.593,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.96069e+08
  maximum absolute entry in einsum_ir solution: 8.96068e+08
  maximum element-wise difference:              544
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135392
  time (eval):    0.00214435
  gflops (eval):  728.147
  gflops (total): 99.5563
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135392,0.00214435,728.147,99.5563

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00702594
  gflops (total): 222.233
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,222.233

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00536785
  gflops (eval):  290.88
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00536785,290.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.84142e+08
  maximum absolute entry in einsum_ir solution: 7.84142e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134165
  time (eval):    0.00215621
  gflops (eval):  724.141
  gflops (total): 100.265
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134165,0.00215621,724.141,100.265

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00731445
  gflops (total): 213.468
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,213.468

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00545948
  gflops (eval):  285.998
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00545948,285.998,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.89599e+08
  maximum absolute entry in einsum_ir solution: 6.89599e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0137624
  time (eval):    0.00224677
  gflops (eval):  694.953
  gflops (total): 97.5314
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0137624,0.00224677,694.953,97.5314

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00714715
  gflops (total): 218.465
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,218.465

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0056369
  gflops (eval):  276.996
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0056369,276.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.94161e+08
  maximum absolute entry in einsum_ir solution: 7.94161e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135104
  time (eval):    0.00215154
  gflops (eval):  725.711
  gflops (total): 99.6941
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135104,0.00215154,725.711,99.6941

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00718281
  gflops (total): 217.38
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,217.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00551162
  gflops (eval):  283.293
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00551162,283.293,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.6662e+08
  maximum absolute entry in einsum_ir solution: 7.6662e+08
  maximum element-wise difference:              464
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135173
  time (eval):    0.00236576
  gflops (eval):  659.999
  gflops (total): 98.3061
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135173,0.00236576,659.999,98.3061

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00728627
  gflops (total): 214.293
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,214.293

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00535141
  gflops (eval):  291.773
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00535141,291.773,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.04018e+08
  maximum absolute entry in einsum_ir solution: 8.04018e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134151
  time (eval):    0.00211334
  gflops (eval):  738.829
  gflops (total): 100.551
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134151,0.00211334,738.829,100.551

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00726356
  gflops (total): 214.963
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,214.963

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00537373
  gflops (eval):  290.562
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00537373,290.562,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.09837e+08
  maximum absolute entry in einsum_ir solution: 7.09837e+08
  maximum element-wise difference:              424
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0138984
  time (eval):    0.00214701
  gflops (eval):  727.245
  gflops (total): 97.3115
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0138984,0.00214701,727.245,97.3115

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00735977
  gflops (total): 212.153
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,212.153

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00523158
  gflops (eval):  298.456
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00523158,298.456,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.47101e+08
  maximum absolute entry in einsum_ir solution: 8.47101e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.013701
  time (eval):    0.00216717
  gflops (eval):  720.478
  gflops (total): 98.3982
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.013701,0.00216717,720.478,98.3982

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00705206
  gflops (total): 221.41
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,221.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00554905
  gflops (eval):  281.382
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00554905,281.382,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.33844e+08
  maximum absolute entry in einsum_ir solution: 7.33844e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136197
  time (eval):    0.00215548
  gflops (eval):  724.388
  gflops (total): 98.9783
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136197,0.00215548,724.388,98.9783

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00739976
  gflops (total): 211.007
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,211.007

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00536839
  gflops (eval):  290.851
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00536839,290.851,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.38852e+08
  maximum absolute entry in einsum_ir solution: 7.38852e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0137675
  time (eval):    0.0021996
  gflops (eval):  709.855
  gflops (total): 97.7884
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0137675,0.0021996,709.855,97.7884

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00595854
  gflops (total): 262.044
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,262.044

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00521725
  gflops (eval):  299.276
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00521725,299.276,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.73569e+08
  maximum absolute entry in einsum_ir solution: 7.73569e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0133134
  time (eval):    0.00213773
  gflops (eval):  730.399
  gflops (total): 101.054
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0133134,0.00213773,730.399,101.054

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00646413
  gflops (total): 241.548
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,241.548

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00569943
  gflops (eval):  273.957
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00569943,273.957,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.8969e+08
  maximum absolute entry in einsum_ir solution: 7.8969e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136226
  time (eval):    0.00219381
  gflops (eval):  711.73
  gflops (total): 98.7202
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136226,0.00219381,711.73,98.7202

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00583752
  gflops (total): 267.477
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,267.477

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000512949
  gflops (eval):  3043.97
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000512949,3043.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.11544e+08
  maximum absolute entry in einsum_ir solution: 8.11544e+08
  maximum element-wise difference:              520
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0137056
  time (eval):    0.00214466
  gflops (eval):  728.041
  gflops (total): 98.5096
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0137056,0.00214466,728.041,98.5096

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00723766
  gflops (total): 215.733
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,215.733

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0056838
  gflops (eval):  274.711
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0056838,274.711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.22691e+08
  maximum absolute entry in einsum_ir solution: 7.22691e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0133951
  time (eval):    0.00219199
  gflops (eval):  712.32
  gflops (total): 100.172
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0133951,0.00219199,712.32,100.172

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00705384
  gflops (total): 221.355
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,221.355

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00550433
  gflops (eval):  283.668
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00550433,283.668,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.3733e+08
  maximum absolute entry in einsum_ir solution: 8.37329e+08
  maximum element-wise difference:              412
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135775
  time (eval):    0.00214385
  gflops (eval):  728.317
  gflops (total): 99.3169
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135775,0.00214385,728.317,99.3169

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00703233
  gflops (total): 222.032
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,222.032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00568451
  gflops (eval):  274.676
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00568451,274.676,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.79767e+08
  maximum absolute entry in einsum_ir solution: 7.79767e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0137536
  time (eval):    0.00271911
  gflops (eval):  574.232
  gflops (total): 94.787
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0137536,0.00271911,574.232,94.787

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00746654
  gflops (total): 209.12
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,209.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00614068
  gflops (eval):  254.272
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00614068,254.272,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.41202e+08
  maximum absolute entry in einsum_ir solution: 8.41202e+08
  maximum element-wise difference:              368
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135102
  time (eval):    0.00286867
  gflops (eval):  544.295
  gflops (total): 95.3299
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135102,0.00286867,544.295,95.3299

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00712859
  gflops (total): 219.034
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,219.034

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00613548
  gflops (eval):  254.487
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00613548,254.487,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.95652e+08
  maximum absolute entry in einsum_ir solution: 6.95652e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136662
  time (eval):    0.00217266
  gflops (eval):  718.658
  gflops (total): 98.5803
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136662,0.00217266,718.658,98.5803

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00721771
  gflops (total): 216.329
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,216.329

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00558435
  gflops (eval):  279.603
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00558435,279.603,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.26217e+08
  maximum absolute entry in einsum_ir solution: 8.26217e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0137075
  time (eval):    0.00211585
  gflops (eval):  737.953
  gflops (total): 98.6768
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0137075,0.00211585,737.953,98.6768

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00581996
  gflops (total): 268.284
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,268.284

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000519738
  gflops (eval):  3004.21
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000519738,3004.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.55178e+08
  maximum absolute entry in einsum_ir solution: 8.55178e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136561
  time (eval):    0.00218718
  gflops (eval):  713.888
  gflops (total): 98.553
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136561,0.00218718,713.888,98.553

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00733406
  gflops (total): 212.897
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,212.897

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00587836
  gflops (eval):  265.618
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00587836,265.618,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.12852e+08
  maximum absolute entry in einsum_ir solution: 7.12852e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135477
  time (eval):    0.00226535
  gflops (eval):  689.253
  gflops (total): 98.741
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135477,0.00226535,689.253,98.741

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00719369
  gflops (total): 217.051
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,217.051

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00557321
  gflops (eval):  280.162
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00557321,280.162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.42275e+08
  maximum absolute entry in einsum_ir solution: 7.42275e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0134715
  time (eval):    0.00280911
  gflops (eval):  555.834
  gflops (total): 95.9052
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0134715,0.00280911,555.834,95.9052

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0063015
  gflops (total): 247.782
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,247.782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00523168
  gflops (eval):  298.451
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00523168,298.451,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.0839e+08
  maximum absolute entry in einsum_ir solution: 7.0839e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0136109
  time (eval):    0.00245303
  gflops (eval):  636.52
  gflops (total): 97.1989
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0136109,0.00245303,636.52,97.1989

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00682963
  gflops (total): 228.621
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,228.621

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00554212
  gflops (eval):  281.734
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00554212,281.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.86428e+08
  maximum absolute entry in einsum_ir solution: 7.86428e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0133872
  time (eval):    0.00236297
  gflops (eval):  660.779
  gflops (total): 99.1355
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0133872,0.00236297,660.779,99.1355

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00739609
  gflops (total): 211.112
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,211.112

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00576979
  gflops (eval):  270.616
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00576979,270.616,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.52088e+08
  maximum absolute entry in einsum_ir solution: 7.52088e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135812
  time (eval):    0.002148
  gflops (eval):  726.91
  gflops (total): 99.2676
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135812,0.002148,726.91,99.2676

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0075737
  gflops (total): 206.161
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,206.161

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00527518
  gflops (eval):  295.99
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00527518,295.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.06498e+08
  maximum absolute entry in einsum_ir solution: 7.06498e+08
  maximum element-wise difference:              496
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0135574
  time (eval):    0.002161
  gflops (eval):  722.536
  gflops (total): 99.3357
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0135574,0.002161,722.536,99.3357

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00733178
  gflops (total): 212.963
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,212.963

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00573727
  gflops (eval):  272.151
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00573727,272.151,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.63913e+08
  maximum absolute entry in einsum_ir solution: 7.63913e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
