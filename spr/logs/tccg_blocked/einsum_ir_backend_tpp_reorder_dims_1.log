parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136466
  time (eval):    0.0119274
  gflops (eval):  426.589
  gflops (total): 198.956
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136466,0.0119274,426.589,198.956

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0636928
  gflops (total): 79.8853
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.8853

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271602
  gflops (eval):  187.337
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271602,187.337,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9999
  maximum absolute entry in einsum_ir solution: 36.9999
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135641
  time (eval):    0.0128044
  gflops (eval):  397.373
  gflops (total): 192.962
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135641,0.0128044,397.373,192.962

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.067064
  gflops (total): 75.8696
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,75.8696

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.026755
  gflops (eval):  190.174
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.026755,190.174,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8193
  maximum absolute entry in einsum_ir solution: 36.8193
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013672
  time (eval):    0.0128214
  gflops (eval):  396.846
  gflops (total): 192.052
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.013672,0.0128214,396.846,192.052

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0662796
  gflops (total): 76.7675
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.7675

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0278462
  gflops (eval):  182.722
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0278462,182.722,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.6088
  maximum absolute entry in einsum_ir solution: 39.6088
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137058
  time (eval):    0.0119625
  gflops (eval):  425.341
  gflops (total): 198.226
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137058,0.0119625,425.341,198.226

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655222
  gflops (total): 77.6548
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.6548

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270422
  gflops (eval):  188.155
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270422,188.155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.5563
  maximum absolute entry in einsum_ir solution: 41.5563
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136385
  time (eval):    0.0119833
  gflops (eval):  424.601
  gflops (total): 198.586
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136385,0.0119833,424.601,198.586

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0662199
  gflops (total): 76.8366
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.8366

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271839
  gflops (eval):  187.174
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271839,187.174,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4921
  maximum absolute entry in einsum_ir solution: 40.4921
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136234
  time (eval):    0.0120055
  gflops (eval):  423.817
  gflops (total): 198.531
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136234,0.0120055,423.817,198.531

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0644491
  gflops (total): 78.9479
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.9479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0264555
  gflops (eval):  192.327
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0264555,192.327,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.9704
  maximum absolute entry in einsum_ir solution: 42.9704
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134779
  time (eval):    0.0119097
  gflops (eval):  427.225
  gflops (total): 200.418
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134779,0.0119097,427.225,200.418

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656858
  gflops (total): 77.4614
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.4614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275736
  gflops (eval):  184.529
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0275736,184.529,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3148
  maximum absolute entry in einsum_ir solution: 38.3148
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135338
  time (eval):    0.011875
  gflops (eval):  428.472
  gflops (total): 200.25
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135338,0.011875,428.472,200.25

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652972
  gflops (total): 77.9225
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.9225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273876
  gflops (eval):  185.782
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0273876,185.782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8429
  maximum absolute entry in einsum_ir solution: 37.8429
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138273
  time (eval):    0.0127348
  gflops (eval):  399.544
  gflops (total): 191.555
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0138273,0.0127348,399.544,191.555

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0667784
  gflops (total): 76.1941
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.1941

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275383
  gflops (eval):  184.765
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0275383,184.765,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.4871
  maximum absolute entry in einsum_ir solution: 41.4871
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136676
  time (eval):    0.0127389
  gflops (eval):  399.414
  gflops (total): 192.684
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136676,0.0127389,399.414,192.684

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649801
  gflops (total): 78.3027
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.3027

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270367
  gflops (eval):  188.193
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270367,188.193,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.5366
  maximum absolute entry in einsum_ir solution: 40.5366
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135945
  time (eval):    0.0126519
  gflops (eval):  402.162
  gflops (total): 193.86
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135945,0.0126519,402.162,193.86

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653727
  gflops (total): 77.8325
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.8325

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275349
  gflops (eval):  184.788
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0275349,184.788,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.5784
  maximum absolute entry in einsum_ir solution: 39.5784
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013222
  time (eval):    0.0120185
  gflops (eval):  423.356
  gflops (total): 201.585
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.013222,0.0120185,423.356,201.585

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653705
  gflops (total): 77.835
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.835

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273951
  gflops (eval):  185.731
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0273951,185.731,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5638
  maximum absolute entry in einsum_ir solution: 38.5638
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135684
  time (eval):    0.0119694
  gflops (eval):  425.094
  gflops (total): 199.239
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135684,0.0119694,425.094,199.239

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0664662
  gflops (total): 76.552
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268234
  gflops (eval):  189.69
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0268234,189.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5787
  maximum absolute entry in einsum_ir solution: 36.5787
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134536
  time (eval):    0.0120393
  gflops (eval):  422.624
  gflops (total): 199.589
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134536,0.0120393,422.624,199.589

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0662479
  gflops (total): 76.8042
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.8042

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027342
  gflops (eval):  186.092
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.027342,186.092,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.1835
  maximum absolute entry in einsum_ir solution: 41.1835
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135599
  time (eval):    0.0120027
  gflops (eval):  423.916
  gflops (total): 199.046
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135599,0.0120027,423.916,199.046

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065932
  gflops (total): 77.1722
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.1722

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272576
  gflops (eval):  186.668
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272576,186.668,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.9392
  maximum absolute entry in einsum_ir solution: 40.9392
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134308
  time (eval):    0.0121936
  gflops (eval):  417.276
  gflops (total): 198.565
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134308,0.0121936,417.276,198.565

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0645554
  gflops (total): 78.8178
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.8178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0278335
  gflops (eval):  182.806
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0278335,182.806,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3999
  maximum absolute entry in einsum_ir solution: 37.3999
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013573
  time (eval):    0.0118867
  gflops (eval):  428.05
  gflops (total): 199.849
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.013573,0.0118867,428.05,199.849

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0650987
  gflops (total): 78.16
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0264699
  gflops (eval):  192.223
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0264699,192.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0889
  maximum absolute entry in einsum_ir solution: 36.0889
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0140018
  time (eval):    0.0119238
  gflops (eval):  426.719
  gflops (total): 196.259
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0140018,0.0119238,426.719,196.259

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649838
  gflops (total): 78.2983
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.2983

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270641
  gflops (eval):  188.003
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270641,188.003,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0878
  maximum absolute entry in einsum_ir solution: 36.0878
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137172
  time (eval):    0.0119335
  gflops (eval):  426.372
  gflops (total): 198.362
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137172,0.0119335,426.372,198.362

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0636454
  gflops (total): 79.9447
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.9447

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271168
  gflops (eval):  187.637
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271168,187.637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.9514
  maximum absolute entry in einsum_ir solution: 38.9514
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136727
  time (eval):    0.0119883
  gflops (eval):  424.422
  gflops (total): 198.282
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136727,0.0119883,424.422,198.282

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655504
  gflops (total): 77.6214
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.6214

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271621
  gflops (eval):  187.324
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271621,187.324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6312
  maximum absolute entry in einsum_ir solution: 40.6312
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137097
  time (eval):    0.0118954
  gflops (eval):  427.74
  gflops (total): 198.715
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137097,0.0118954,427.74,198.715

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0644225
  gflops (total): 78.9804
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.9804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273488
  gflops (eval):  186.046
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0273488,186.046,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1471
  maximum absolute entry in einsum_ir solution: 37.1471
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134176
  time (eval):    0.0119681
  gflops (eval):  425.141
  gflops (total): 200.433
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134176,0.0119681,425.141,200.433

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0648015
  gflops (total): 78.5185
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.5185

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269151
  gflops (eval):  189.043
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0269151,189.043,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5888
  maximum absolute entry in einsum_ir solution: 35.5888
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138492
  time (eval):    0.0119288
  gflops (eval):  426.541
  gflops (total): 197.382
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0138492,0.0119288,426.541,197.382

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655909
  gflops (total): 77.5736
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.5736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.02697
  gflops (eval):  188.658
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.02697,188.658,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.2891
  maximum absolute entry in einsum_ir solution: 43.2891
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135696
  time (eval):    0.0119067
  gflops (eval):  427.331
  gflops (total): 199.719
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135696,0.0119067,427.331,199.719

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0662154
  gflops (total): 76.8419
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.8419

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273027
  gflops (eval):  186.36
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0273027,186.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.9717
  maximum absolute entry in einsum_ir solution: 40.9717
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133709
  time (eval):    0.0121698
  gflops (eval):  418.093
  gflops (total): 199.216
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0133709,0.0121698,418.093,199.216

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0662933
  gflops (total): 76.7516
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.7516

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273614
  gflops (eval):  185.96
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0273614,185.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6907
  maximum absolute entry in einsum_ir solution: 40.6907
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0132869
  time (eval):    0.0128014
  gflops (eval):  397.467
  gflops (total): 195.035
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0132869,0.0128014,397.467,195.035

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0670183
  gflops (total): 75.9213
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,75.9213

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271163
  gflops (eval):  187.641
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271163,187.641,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.3201
  maximum absolute entry in einsum_ir solution: 46.3201
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137098
  time (eval):    0.0118411
  gflops (eval):  429.701
  gflops (total): 199.137
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137098,0.0118411,429.701,199.137

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0651241
  gflops (total): 78.1296
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.1296

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265981
  gflops (eval):  191.296
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0265981,191.296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7133
  maximum absolute entry in einsum_ir solution: 35.7133
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133726
  time (eval):    0.0119827
  gflops (eval):  424.621
  gflops (total): 200.672
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0133726,0.0119827,424.621,200.672

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0658435
  gflops (total): 77.2759
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.2759

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274351
  gflops (eval):  185.46
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0274351,185.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.423
  maximum absolute entry in einsum_ir solution: 38.423
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136257
  time (eval):    0.0119464
  gflops (eval):  425.911
  gflops (total): 198.971
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136257,0.0119464,425.911,198.971

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0664881
  gflops (total): 76.5267
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.5267

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275502
  gflops (eval):  184.685
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0275502,184.685,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1824
  maximum absolute entry in einsum_ir solution: 35.1824
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137073
  time (eval):    0.0129292
  gflops (eval):  393.538
  gflops (total): 191.021
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137073,0.0129292,393.538,191.021

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653805
  gflops (total): 77.8232
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.8232

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268916
  gflops (eval):  189.208
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0268916,189.208,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2
  maximum absolute entry in einsum_ir solution: 39.2
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013469
  time (eval):    0.0126375
  gflops (eval):  402.621
  gflops (total): 194.899
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.013469,0.0126375,402.621,194.899

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0667443
  gflops (total): 76.233
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.233

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272941
  gflops (eval):  186.418
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272941,186.418,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4767
  maximum absolute entry in einsum_ir solution: 39.4767
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135506
  time (eval):    0.0118626
  gflops (eval):  428.92
  gflops (total): 200.215
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135506,0.0118626,428.92,200.215

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656263
  gflops (total): 77.5317
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.5317

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270972
  gflops (eval):  187.773
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270972,187.773,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5344
  maximum absolute entry in einsum_ir solution: 35.5344
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134644
  time (eval):    0.0119523
  gflops (eval):  425.702
  gflops (total): 200.188
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134644,0.0119523,425.702,200.188

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0662403
  gflops (total): 76.8131
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.8131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0276127
  gflops (eval):  184.267
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0276127,184.267,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.825
  maximum absolute entry in einsum_ir solution: 41.825
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013581
  time (eval):    0.0119941
  gflops (eval):  424.219
  gflops (total): 198.948
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.013581,0.0119941,424.219,198.948

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663233
  gflops (total): 76.7169
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.7169

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272497
  gflops (eval):  186.722
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272497,186.722,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4202
  maximum absolute entry in einsum_ir solution: 38.4202
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135732
  time (eval):    0.0125026
  gflops (eval):  406.965
  gflops (total): 195.128
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135732,0.0125026,406.965,195.128

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0665476
  gflops (total): 76.4583
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.4583

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0282792
  gflops (eval):  179.925
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0282792,179.925,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.6585
  maximum absolute entry in einsum_ir solution: 43.6585
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135604
  time (eval):    0.012733
  gflops (eval):  399.601
  gflops (total): 193.513
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135604,0.012733,399.601,193.513

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0665879
  gflops (total): 76.4121
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.4121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275679
  gflops (eval):  184.567
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0275679,184.567,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.9979
  maximum absolute entry in einsum_ir solution: 41.9979
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134765
  time (eval):    0.0119401
  gflops (eval):  426.136
  gflops (total): 200.189
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134765,0.0119401,426.136,200.189

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663651
  gflops (total): 76.6686
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.6686

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272143
  gflops (eval):  186.965
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272143,186.965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.0151
  maximum absolute entry in einsum_ir solution: 42.0151
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134145
  time (eval):    0.0119043
  gflops (eval):  427.418
  gflops (total): 200.962
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134145,0.0119043,427.418,200.962

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.06633
  gflops (total): 76.7092
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.7092

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268194
  gflops (eval):  189.718
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0268194,189.718,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9393
  maximum absolute entry in einsum_ir solution: 39.9393
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136549
  time (eval):    0.0123546
  gflops (eval):  411.84
  gflops (total): 195.626
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136549,0.0123546,411.84,195.626

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657853
  gflops (total): 77.3442
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.3442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267779
  gflops (eval):  190.012
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0267779,190.012,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.3141
  maximum absolute entry in einsum_ir solution: 40.3141
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136462
  time (eval):    0.0120108
  gflops (eval):  423.629
  gflops (total): 198.313
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136462,0.0120108,423.629,198.313

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657023
  gflops (total): 77.442
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.026822
  gflops (eval):  189.699
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.026822,189.699,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3851
  maximum absolute entry in einsum_ir solution: 37.3851
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136586
  time (eval):    0.0128457
  gflops (eval):  396.094
  gflops (total): 191.973
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136586,0.0128457,396.094,191.973

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0660061
  gflops (total): 77.0855
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.0855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027098
  gflops (eval):  187.767
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.027098,187.767,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.7355
  maximum absolute entry in einsum_ir solution: 39.7355
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138354
  time (eval):    0.0122292
  gflops (eval):  416.064
  gflops (total): 195.212
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0138354,0.0122292,416.064,195.212

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657313
  gflops (total): 77.4078
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.4078

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268176
  gflops (eval):  189.731
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0268176,189.731,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8923
  maximum absolute entry in einsum_ir solution: 38.8923
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0131989
  time (eval):    0.012776
  gflops (eval):  398.257
  gflops (total): 195.886
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0131989,0.012776,398.257,195.886

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.066758
  gflops (total): 76.2173
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.2173

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027355
  gflops (eval):  186.003
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.027355,186.003,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0578
  maximum absolute entry in einsum_ir solution: 38.0578
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135034
  time (eval):    0.0125807
  gflops (eval):  404.439
  gflops (total): 195.066
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135034,0.0125807,404.439,195.066

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653449
  gflops (total): 77.8656
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.8656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274184
  gflops (eval):  185.573
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0274184,185.573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.9445
  maximum absolute entry in einsum_ir solution: 40.9445
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013431
  time (eval):    0.0118634
  gflops (eval):  428.894
  gflops (total): 201.156
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.013431,0.0118634,428.894,201.156

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652642
  gflops (total): 77.9618
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.9618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0276266
  gflops (eval):  184.175
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0276266,184.175,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5093
  maximum absolute entry in einsum_ir solution: 36.5093
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134987
  time (eval):    0.0119481
  gflops (eval):  425.85
  gflops (total): 199.951
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134987,0.0119481,425.85,199.951

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656514
  gflops (total): 77.5021
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.5021

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269157
  gflops (eval):  189.039
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0269157,189.039,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9848
  maximum absolute entry in einsum_ir solution: 36.9848
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133908
  time (eval):    0.0119409
  gflops (eval):  426.108
  gflops (total): 200.86
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0133908,0.0119409,426.108,200.86

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0648413
  gflops (total): 78.4703
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.4703

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0276084
  gflops (eval):  184.296
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0276084,184.296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.8619
  maximum absolute entry in einsum_ir solution: 42.8619
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134582
  time (eval):    0.0118776
  gflops (eval):  428.378
  gflops (total): 200.827
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134582,0.0118776,428.378,200.827

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065927
  gflops (total): 77.178
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272066
  gflops (eval):  187.018
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272066,187.018,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6576
  maximum absolute entry in einsum_ir solution: 36.6576
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134698
  time (eval):    0.0119553
  gflops (eval):  425.597
  gflops (total): 200.122
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134698,0.0119553,425.597,200.122

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.06616
  gflops (total): 76.9062
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.9062

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0264505
  gflops (eval):  192.363
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0264505,192.363,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8671
  maximum absolute entry in einsum_ir solution: 39.8671
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135688
  time (eval):    0.0121688
  gflops (eval):  418.127
  gflops (total): 197.691
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135688,0.0121688,418.127,197.691

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065595
  gflops (total): 77.5687
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.5687

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270764
  gflops (eval):  187.917
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270764,187.917,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.5515
  maximum absolute entry in einsum_ir solution: 39.5515
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135875
  time (eval):    0.0119622
  gflops (eval):  425.35
  gflops (total): 199.146
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135875,0.0119622,425.35,199.146

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657231
  gflops (total): 77.4175
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.4175

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271606
  gflops (eval):  187.334
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271606,187.334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.1029
  maximum absolute entry in einsum_ir solution: 44.1029
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135694
  time (eval):    0.0120885
  gflops (eval):  420.904
  gflops (total): 198.305
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135694,0.0120885,420.904,198.305

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656013
  gflops (total): 77.5612
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.5612

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0278913
  gflops (eval):  182.426
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0278913,182.426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3223
  maximum absolute entry in einsum_ir solution: 39.3223
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0141317
  time (eval):    0.0119797
  gflops (eval):  424.729
  gflops (total): 194.862
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0141317,0.0119797,424.729,194.862

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0664341
  gflops (total): 76.589
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.589

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272039
  gflops (eval):  187.036
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272039,187.036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4553
  maximum absolute entry in einsum_ir solution: 39.4553
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137487
  time (eval):    0.0119878
  gflops (eval):  424.442
  gflops (total): 197.7
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137487,0.0119878,424.442,197.7

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647465
  gflops (total): 78.5851
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.5851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267595
  gflops (eval):  190.143
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0267595,190.143,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.7796
  maximum absolute entry in einsum_ir solution: 42.7796
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135515
  time (eval):    0.0118573
  gflops (eval):  429.112
  gflops (total): 200.25
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135515,0.0118573,429.112,200.25

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0642706
  gflops (total): 79.1671
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.1671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275905
  gflops (eval):  184.415
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0275905,184.415,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.7461
  maximum absolute entry in einsum_ir solution: 39.7461
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136342
  time (eval):    0.0120132
  gflops (eval):  423.543
  gflops (total): 198.387
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136342,0.0120132,423.543,198.387

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0651135
  gflops (total): 78.1422
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.1422

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270905
  gflops (eval):  187.819
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270905,187.819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.051
  maximum absolute entry in einsum_ir solution: 37.051
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134712
  time (eval):    0.0120033
  gflops (eval):  423.894
  gflops (total): 199.734
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134712,0.0120033,423.894,199.734

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065429
  gflops (total): 77.7654
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.7654

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269871
  gflops (eval):  188.539
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0269871,188.539,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.2002
  maximum absolute entry in einsum_ir solution: 44.2002
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135856
  time (eval):    0.0121908
  gflops (eval):  417.373
  gflops (total): 197.394
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135856,0.0121908,417.373,197.394

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0667849
  gflops (total): 76.1866
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.1866

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275563
  gflops (eval):  184.644
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0275563,184.644,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.216
  maximum absolute entry in einsum_ir solution: 39.216
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135124
  time (eval):    0.0119509
  gflops (eval):  425.75
  gflops (total): 199.821
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135124,0.0119509,425.75,199.821

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656956
  gflops (total): 77.4499
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.4499

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0276613
  gflops (eval):  183.943
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0276613,183.943,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8385
  maximum absolute entry in einsum_ir solution: 38.8385
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013555
  time (eval):    0.0126909
  gflops (eval):  400.927
  gflops (total): 193.863
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.013555,0.0126909,400.927,193.863

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0666898
  gflops (total): 76.2953
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.2953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0276207
  gflops (eval):  184.214
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0276207,184.214,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.298
  maximum absolute entry in einsum_ir solution: 37.298
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135438
  time (eval):    0.0120076
  gflops (eval):  423.74
  gflops (total): 199.133
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135438,0.0120076,423.74,199.133

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0665683
  gflops (total): 76.4345
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.4345

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270482
  gflops (eval):  188.113
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270482,188.113,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5474
  maximum absolute entry in einsum_ir solution: 38.5474
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133708
  time (eval):    0.0121124
  gflops (eval):  420.075
  gflops (total): 199.666
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0133708,0.0121124,420.075,199.666

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649733
  gflops (total): 78.3108
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.3108

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269505
  gflops (eval):  188.795
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0269505,188.795,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.2462
  maximum absolute entry in einsum_ir solution: 42.2462
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136171
  time (eval):    0.012205
  gflops (eval):  416.888
  gflops (total): 197.045
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136171,0.012205,416.888,197.045

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657714
  gflops (total): 77.3607
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.3607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275961
  gflops (eval):  184.378
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0275961,184.378,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4514
  maximum absolute entry in einsum_ir solution: 37.4514
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135919
  time (eval):    0.0119605
  gflops (eval):  425.409
  gflops (total): 199.124
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135919,0.0119605,425.409,199.124

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663424
  gflops (total): 76.6948
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.6948

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272515
  gflops (eval):  186.71
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272515,186.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3846
  maximum absolute entry in einsum_ir solution: 35.3846
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137662
  time (eval):    0.0119803
  gflops (eval):  424.706
  gflops (total): 197.623
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137662,0.0119803,424.706,197.623

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0661301
  gflops (total): 76.9411
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.9411

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0278412
  gflops (eval):  182.755
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0278412,182.755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.3948
  maximum absolute entry in einsum_ir solution: 41.3948
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137046
  time (eval):    0.0123254
  gflops (eval):  412.814
  gflops (total): 195.471
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137046,0.0123254,412.814,195.471

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0658098
  gflops (total): 77.3154
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.3154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0278754
  gflops (eval):  182.531
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0278754,182.531,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.235
  maximum absolute entry in einsum_ir solution: 41.235
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138128
  time (eval):    0.0119885
  gflops (eval):  424.415
  gflops (total): 197.204
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0138128,0.0119885,424.415,197.204

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656483
  gflops (total): 77.5057
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.5057

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265844
  gflops (eval):  191.395
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0265844,191.395,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4141
  maximum absolute entry in einsum_ir solution: 38.4141
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137794
  time (eval):    0.0119874
  gflops (eval):  424.454
  gflops (total): 197.468
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137794,0.0119874,424.454,197.468

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.066339
  gflops (total): 76.6987
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.6987

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027036
  gflops (eval):  188.198
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.027036,188.198,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1485
  maximum absolute entry in einsum_ir solution: 40.1485
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134423
  time (eval):    0.0118646
  gflops (eval):  428.849
  gflops (total): 201.056
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134423,0.0118646,428.849,201.056

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663997
  gflops (total): 76.6286
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.6286

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267023
  gflops (eval):  190.55
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0267023,190.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9407
  maximum absolute entry in einsum_ir solution: 39.9407
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133368
  time (eval):    0.0119021
  gflops (eval):  427.498
  gflops (total): 201.598
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0133368,0.0119021,427.498,201.598

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.066481
  gflops (total): 76.5348
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.5348

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273791
  gflops (eval):  185.839
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0273791,185.839,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0817
  maximum absolute entry in einsum_ir solution: 41.0817
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134901
  time (eval):    0.0120199
  gflops (eval):  423.307
  gflops (total): 199.456
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134901,0.0120199,423.307,199.456

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.064737
  gflops (total): 78.5967
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.5967

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267617
  gflops (eval):  190.127
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0267617,190.127,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2322
  maximum absolute entry in einsum_ir solution: 37.2322
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134416
  time (eval):    0.012007
  gflops (eval):  423.762
  gflops (total): 199.937
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134416,0.012007,423.762,199.937

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0678949
  gflops (total): 74.9411
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,74.9411

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271106
  gflops (eval):  187.68
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271106,187.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.7818
  maximum absolute entry in einsum_ir solution: 37.7818
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135996
  time (eval):    0.0118788
  gflops (eval):  428.338
  gflops (total): 199.704
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135996,0.0118788,428.338,199.704

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0662648
  gflops (total): 76.7846
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.7846

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272516
  gflops (eval):  186.709
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272516,186.709,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.7672
  maximum absolute entry in einsum_ir solution: 39.7672
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.014076
  time (eval):    0.0118866
  gflops (eval):  428.055
  gflops (total): 195.979
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.014076,0.0118866,428.055,195.979

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657985
  gflops (total): 77.3287
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.3287

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270286
  gflops (eval):  188.25
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270286,188.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7338
  maximum absolute entry in einsum_ir solution: 38.7338
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135025
  time (eval):    0.0119789
  gflops (eval):  424.758
  gflops (total): 199.68
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135025,0.0119789,424.758,199.68

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0651296
  gflops (total): 78.1229
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.1229

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267233
  gflops (eval):  190.4
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0267233,190.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5737
  maximum absolute entry in einsum_ir solution: 38.5737
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136813
  time (eval):    0.0120121
  gflops (eval):  423.583
  gflops (total): 198.032
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136813,0.0120121,423.583,198.032

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0667643
  gflops (total): 76.2102
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.2102

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272
  gflops (eval):  187.063
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272,187.063,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.144
  maximum absolute entry in einsum_ir solution: 35.144
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138294
  time (eval):    0.0119425
  gflops (eval):  426.052
  gflops (total): 197.429
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0138294,0.0119425,426.052,197.429

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647154
  gflops (total): 78.6229
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.6229

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0280185
  gflops (eval):  181.599
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0280185,181.599,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.808
  maximum absolute entry in einsum_ir solution: 36.808
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135644
  time (eval):    0.0121363
  gflops (eval):  419.247
  gflops (total): 197.976
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135644,0.0121363,419.247,197.976

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656932
  gflops (total): 77.4527
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.4527

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270771
  gflops (eval):  187.912
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270771,187.912,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8249
  maximum absolute entry in einsum_ir solution: 38.8249
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.01367
  time (eval):    0.0120156
  gflops (eval):  423.459
  gflops (total): 198.093
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.01367,0.0120156,423.459,198.093

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663769
  gflops (total): 76.6549
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.6549

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273197
  gflops (eval):  186.244
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0273197,186.244,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7912
  maximum absolute entry in einsum_ir solution: 38.7912
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136961
  time (eval):    0.0120353
  gflops (eval):  422.766
  gflops (total): 197.739
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136961,0.0120353,422.766,197.739

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0664263
  gflops (total): 76.5979
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.5979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270144
  gflops (eval):  188.349
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270144,188.349,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.7445
  maximum absolute entry in einsum_ir solution: 42.7445
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013083
  time (eval):    0.0121438
  gflops (eval):  418.988
  gflops (total): 201.695
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.013083,0.0121438,418.988,201.695

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0662329
  gflops (total): 76.8215
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.8215

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0279464
  gflops (eval):  182.067
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0279464,182.067,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8808
  maximum absolute entry in einsum_ir solution: 36.8808
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136823
  time (eval):    0.011999
  gflops (eval):  424.044
  gflops (total): 198.125
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136823,0.011999,424.044,198.125

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657949
  gflops (total): 77.3331
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.3331

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271066
  gflops (eval):  187.707
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271066,187.707,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8417
  maximum absolute entry in einsum_ir solution: 39.8417
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136176
  time (eval):    0.0119944
  gflops (eval):  424.207
  gflops (total): 198.661
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136176,0.0119944,424.207,198.661

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0658954
  gflops (total): 77.2151
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.2151

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271555
  gflops (eval):  187.37
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271555,187.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.7274
  maximum absolute entry in einsum_ir solution: 42.7274
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0139147
  time (eval):    0.0118796
  gflops (eval):  428.307
  gflops (total): 197.258
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0139147,0.0118796,428.307,197.258

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657502
  gflops (total): 77.3856
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.3856

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272139
  gflops (eval):  186.967
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272139,186.967,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7567
  maximum absolute entry in einsum_ir solution: 38.7567
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135452
  time (eval):    0.0127325
  gflops (eval):  399.617
  gflops (total): 193.629
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135452,0.0127325,399.617,193.629

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657021
  gflops (total): 77.4422
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.4422

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273652
  gflops (eval):  185.934
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0273652,185.934,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.1326
  maximum absolute entry in einsum_ir solution: 41.1326
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136357
  time (eval):    0.0118436
  gflops (eval):  429.61
  gflops (total): 199.696
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136357,0.0118436,429.61,199.696

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.066117
  gflops (total): 76.9563
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.9563

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.026862
  gflops (eval):  189.417
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.026862,189.417,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.5827
  maximum absolute entry in einsum_ir solution: 42.5827
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138613
  time (eval):    0.0120033
  gflops (eval):  423.892
  gflops (total): 196.721
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0138613,0.0120033,423.892,196.721

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065064
  gflops (total): 78.2017
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.2017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265657
  gflops (eval):  191.53
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0265657,191.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4688
  maximum absolute entry in einsum_ir solution: 34.4688
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138327
  time (eval):    0.0128911
  gflops (eval):  394.699
  gflops (total): 190.397
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0138327,0.0128911,394.699,190.397

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657589
  gflops (total): 77.3754
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.3754

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0281315
  gflops (eval):  180.869
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0281315,180.869,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.7262
  maximum absolute entry in einsum_ir solution: 41.7262
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135723
  time (eval):    0.0120777
  gflops (eval):  421.284
  gflops (total): 198.367
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135723,0.0120777,421.284,198.367

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655517
  gflops (total): 77.6199
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.6199

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027286
  gflops (eval):  186.474
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.027286,186.474,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2868
  maximum absolute entry in einsum_ir solution: 39.2868
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133863
  time (eval):    0.0119484
  gflops (eval):  425.841
  gflops (total): 200.836
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0133863,0.0119484,425.841,200.836

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655723
  gflops (total): 77.5956
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.5956

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267435
  gflops (eval):  190.256
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0267435,190.256,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0488
  maximum absolute entry in einsum_ir solution: 37.0488
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135242
  time (eval):    0.0120152
  gflops (eval):  423.474
  gflops (total): 199.226
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135242,0.0120152,423.474,199.226

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0661239
  gflops (total): 76.9482
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.9482

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268528
  gflops (eval):  189.482
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0268528,189.482,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3086
  maximum absolute entry in einsum_ir solution: 36.3086
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0130931
  time (eval):    0.011897
  gflops (eval):  427.682
  gflops (total): 203.606
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0130931,0.011897,427.682,203.606

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0661116
  gflops (total): 76.9626
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.9626

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271158
  gflops (eval):  187.644
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271158,187.644,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7696
  maximum absolute entry in einsum_ir solution: 34.7696
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0131538
  time (eval):    0.0128171
  gflops (eval):  396.98
  gflops (total): 195.916
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0131538,0.0128171,396.98,195.916

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0665074
  gflops (total): 76.5045
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.5045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270523
  gflops (eval):  188.084
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270523,188.084,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.2976
  maximum absolute entry in einsum_ir solution: 46.2976
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134526
  time (eval):    0.011878
  gflops (eval):  428.365
  gflops (total): 200.869
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134526,0.011878,428.365,200.869

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657643
  gflops (total): 77.369
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271882
  gflops (eval):  187.144
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271882,187.144,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4845
  maximum absolute entry in einsum_ir solution: 39.4845
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0139051
  time (eval):    0.0120148
  gflops (eval):  423.488
  gflops (total): 196.302
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0139051,0.0120148,423.488,196.302

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657222
  gflops (total): 77.4185
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.4185

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270518
  gflops (eval):  188.088
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270518,188.088,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6871
  maximum absolute entry in einsum_ir solution: 37.6871
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135407
  time (eval):    0.0122135
  gflops (eval):  416.598
  gflops (total): 197.565
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135407,0.0122135,416.598,197.565

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065896
  gflops (total): 77.2144
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.2144

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0266787
  gflops (eval):  190.718
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0266787,190.718,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.378
  maximum absolute entry in einsum_ir solution: 40.378
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135502
  time (eval):    0.0118241
  gflops (eval):  430.317
  gflops (total): 200.523
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135502,0.0118241,430.317,200.523

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0661887
  gflops (total): 76.8729
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.8729

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270917
  gflops (eval):  187.811
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270917,187.811,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9195
  maximum absolute entry in einsum_ir solution: 37.9195
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137614
  time (eval):    0.0119897
  gflops (eval):  424.375
  gflops (total): 197.589
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137614,0.0119897,424.375,197.589

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652224
  gflops (total): 78.0118
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.0118

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269593
  gflops (eval):  188.733
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0269593,188.733,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1441
  maximum absolute entry in einsum_ir solution: 36.1441
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135667
  time (eval):    0.0121736
  gflops (eval):  417.963
  gflops (total): 197.671
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135667,0.0121736,417.963,197.671

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0665413
  gflops (total): 76.4655
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.4655

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268695
  gflops (eval):  189.364
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0268695,189.364,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.1672
  maximum absolute entry in einsum_ir solution: 44.1672
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135349
  time (eval):    0.011973
  gflops (eval):  424.965
  gflops (total): 199.472
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135349,0.011973,424.965,199.472

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657353
  gflops (total): 77.4031
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.4031

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274706
  gflops (eval):  185.221
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0274706,185.221,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8261
  maximum absolute entry in einsum_ir solution: 39.8261
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136693
  time (eval):    0.012756
  gflops (eval):  398.881
  gflops (total): 192.547
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136693,0.012756,398.881,192.547

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065924
  gflops (total): 77.1816
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.1816

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267253
  gflops (eval):  190.386
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0267253,190.386,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.6137
  maximum absolute entry in einsum_ir solution: 39.6137
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135184
  time (eval):    0.0126141
  gflops (eval):  403.368
  gflops (total): 194.705
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135184,0.0126141,403.368,194.705

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0668981
  gflops (total): 76.0578
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.0578

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272156
  gflops (eval):  186.956
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272156,186.956,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.6222
  maximum absolute entry in einsum_ir solution: 39.6222
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135789
  time (eval):    0.0120501
  gflops (eval):  422.247
  gflops (total): 198.529
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135789,0.0120501,422.247,198.529

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.06678
  gflops (total): 76.1922
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.1922

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270475
  gflops (eval):  188.118
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270475,188.118,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.7967
  maximum absolute entry in einsum_ir solution: 41.7967
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136372
  time (eval):    0.0119006
  gflops (eval):  427.55
  gflops (total): 199.238
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136372,0.0119006,427.55,199.238

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0668261
  gflops (total): 76.1396
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.1396

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268215
  gflops (eval):  189.703
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268215,189.703,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9547
  maximum absolute entry in einsum_ir solution: 37.9547
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134178
  time (eval):    0.0128269
  gflops (eval):  396.674
  gflops (total): 193.872
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134178,0.0128269,396.674,193.872

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0667074
  gflops (total): 76.2752
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.2752

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027803
  gflops (eval):  183.006
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.027803,183.006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3915
  maximum absolute entry in einsum_ir solution: 38.3915
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136454
  time (eval):    0.0129731
  gflops (eval):  392.207
  gflops (total): 191.15
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136454,0.0129731,392.207,191.15

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0667236
  gflops (total): 76.2567
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.2567

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0284718
  gflops (eval):  178.708
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0284718,178.708,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1034
  maximum absolute entry in einsum_ir solution: 38.1034
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138025
  time (eval):    0.0122767
  gflops (eval):  414.455
  gflops (total): 195.103
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0138025,0.0122767,414.455,195.103

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0648205
  gflops (total): 78.4955
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.4955

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265021
  gflops (eval):  191.989
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0265021,191.989,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.0472
  maximum absolute entry in einsum_ir solution: 45.0472
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137942
  time (eval):    0.0119362
  gflops (eval):  426.275
  gflops (total): 197.747
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137942,0.0119362,426.275,197.747

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0654047
  gflops (total): 77.7944
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.7944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0264208
  gflops (eval):  192.58
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0264208,192.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.664
  maximum absolute entry in einsum_ir solution: 41.664
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137017
  time (eval):    0.0119031
  gflops (eval):  427.46
  gflops (total): 198.717
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137017,0.0119031,427.46,198.717

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0650307
  gflops (total): 78.2418
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.2418

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0266748
  gflops (eval):  190.746
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0266748,190.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.6241
  maximum absolute entry in einsum_ir solution: 39.6241
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136646
  time (eval):    0.0122108
  gflops (eval):  416.689
  gflops (total): 196.639
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136646,0.0122108,416.689,196.639

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663957
  gflops (total): 76.6332
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.6332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0277014
  gflops (eval):  183.677
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0277014,183.677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4334
  maximum absolute entry in einsum_ir solution: 40.4334
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136307
  time (eval):    0.0120329
  gflops (eval):  422.851
  gflops (total): 198.262
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136307,0.0120329,422.851,198.262

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0666105
  gflops (total): 76.3861
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.3861

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0277845
  gflops (eval):  183.128
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0277845,183.128,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.807
  maximum absolute entry in einsum_ir solution: 35.807
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0140071
  time (eval):    0.012303
  gflops (eval):  413.568
  gflops (total): 193.39
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0140071,0.012303,413.568,193.39

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656618
  gflops (total): 77.4898
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.4898

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.026922
  gflops (eval):  188.995
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.026922,188.995,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7442
  maximum absolute entry in einsum_ir solution: 38.7442
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135635
  time (eval):    0.0120568
  gflops (eval):  422.011
  gflops (total): 198.597
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135635,0.0120568,422.011,198.597

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065678
  gflops (total): 77.4706
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.4706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267538
  gflops (eval):  190.183
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0267538,190.183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2492
  maximum absolute entry in einsum_ir solution: 35.2492
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137822
  time (eval):    0.0119247
  gflops (eval):  426.688
  gflops (total): 197.928
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137822,0.0119247,426.688,197.928

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657008
  gflops (total): 77.4438
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.4438

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268896
  gflops (eval):  189.223
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268896,189.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.7999
  maximum absolute entry in einsum_ir solution: 42.7999
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134125
  time (eval):    0.0120146
  gflops (eval):  423.496
  gflops (total): 200.106
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134125,0.0120146,423.496,200.106

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0650111
  gflops (total): 78.2654
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.2654

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270966
  gflops (eval):  187.777
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270966,187.777,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9829
  maximum absolute entry in einsum_ir solution: 39.9829
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135378
  time (eval):    0.0119329
  gflops (eval):  426.395
  gflops (total): 199.763
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135378,0.0119329,426.395,199.763

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065671
  gflops (total): 77.479
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270833
  gflops (eval):  187.869
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270833,187.869,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4754
  maximum absolute entry in einsum_ir solution: 39.4754
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134504
  time (eval):    0.0128376
  gflops (eval):  396.344
  gflops (total): 193.553
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134504,0.0128376,396.344,193.553

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0662176
  gflops (total): 76.8393
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.8393

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269621
  gflops (eval):  188.713
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269621,188.713,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2742
  maximum absolute entry in einsum_ir solution: 39.2742
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134446
  time (eval):    0.0120581
  gflops (eval):  421.967
  gflops (total): 199.513
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134446,0.0120581,421.967,199.513

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0660448
  gflops (total): 77.0404
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.0404

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.02725
  gflops (eval):  186.72
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.02725,186.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4515
  maximum absolute entry in einsum_ir solution: 36.4515
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136305
  time (eval):    0.0120338
  gflops (eval):  422.818
  gflops (total): 198.257
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136305,0.0120338,422.818,198.257

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0661518
  gflops (total): 76.9158
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.9158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0263703
  gflops (eval):  192.948
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0263703,192.948,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.6019
  maximum absolute entry in einsum_ir solution: 42.6019
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138691
  time (eval):    0.012017
  gflops (eval):  423.411
  gflops (total): 196.558
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0138691,0.012017,423.411,196.558

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0646286
  gflops (total): 78.7286
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.7286

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268301
  gflops (eval):  189.642
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268301,189.642,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.7861
  maximum absolute entry in einsum_ir solution: 41.7861
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135684
  time (eval):    0.0121748
  gflops (eval):  417.92
  gflops (total): 197.649
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135684,0.0121748,417.92,197.649

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647044
  gflops (total): 78.6363
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.6363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274477
  gflops (eval):  185.375
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0274477,185.375,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0976
  maximum absolute entry in einsum_ir solution: 41.0976
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134415
  time (eval):    0.0120642
  gflops (eval):  421.754
  gflops (total): 199.489
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134415,0.0120642,421.754,199.489

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065985
  gflops (total): 77.1102
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.1102

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027514
  gflops (eval):  184.928
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.027514,184.928,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3427
  maximum absolute entry in einsum_ir solution: 36.3427
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135507
  time (eval):    0.0120286
  gflops (eval):  423.002
  gflops (total): 198.916
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135507,0.0120286,423.002,198.916

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0654772
  gflops (total): 77.7083
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.7083

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265285
  gflops (eval):  191.798
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0265285,191.798,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9621
  maximum absolute entry in einsum_ir solution: 37.9621
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138687
  time (eval):    0.0119051
  gflops (eval):  427.391
  gflops (total): 197.414
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0138687,0.0119051,427.391,197.414

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0666494
  gflops (total): 76.3415
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.3415

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273796
  gflops (eval):  185.836
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0273796,185.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.9374
  maximum absolute entry in einsum_ir solution: 42.9374
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135441
  time (eval):    0.0120542
  gflops (eval):  422.102
  gflops (total): 198.768
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135441,0.0120542,422.102,198.768

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652725
  gflops (total): 77.9519
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.9519

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0263461
  gflops (eval):  193.126
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0263461,193.126,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.2365
  maximum absolute entry in einsum_ir solution: 41.2365
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136017
  time (eval):    0.0119848
  gflops (eval):  424.547
  gflops (total): 198.859
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136017,0.0119848,424.547,198.859

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647929
  gflops (total): 78.5289
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.5289

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268612
  gflops (eval):  189.423
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268612,189.423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7809
  maximum absolute entry in einsum_ir solution: 36.7809
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0132862
  time (eval):    0.0119149
  gflops (eval):  427.037
  gflops (total): 201.9
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0132862,0.0119149,427.037,201.9

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0645912
  gflops (total): 78.7742
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.7742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273537
  gflops (eval):  186.012
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0273537,186.012,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.305
  maximum absolute entry in einsum_ir solution: 38.305
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136603
  time (eval):    0.0119425
  gflops (eval):  426.052
  gflops (total): 198.733
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136603,0.0119425,426.052,198.733

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653499
  gflops (total): 77.8596
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.8596

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271444
  gflops (eval):  187.447
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0271444,187.447,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7664
  maximum absolute entry in einsum_ir solution: 35.7664
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133525
  time (eval):    0.0125685
  gflops (eval):  404.831
  gflops (total): 196.294
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0133525,0.0125685,404.831,196.294

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663736
  gflops (total): 76.6587
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.6587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269847
  gflops (eval):  188.556
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269847,188.556,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.1721
  maximum absolute entry in einsum_ir solution: 41.1721
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0141285
  time (eval):    0.0120707
  gflops (eval):  421.525
  gflops (total): 194.208
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0141285,0.0120707,421.525,194.208

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0648199
  gflops (total): 78.4962
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.4962

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027158
  gflops (eval):  187.352
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.027158,187.352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6107
  maximum absolute entry in einsum_ir solution: 38.6107
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138308
  time (eval):    0.0119792
  gflops (eval):  424.746
  gflops (total): 197.138
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0138308,0.0119792,424.746,197.138

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0672014
  gflops (total): 75.7145
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,75.7145

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275221
  gflops (eval):  184.874
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0275221,184.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8573
  maximum absolute entry in einsum_ir solution: 39.8573
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138047
  time (eval):    0.0120262
  gflops (eval):  423.085
  gflops (total): 196.978
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0138047,0.0120262,423.085,196.978

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0662081
  gflops (total): 76.8504
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.8504

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269254
  gflops (eval):  188.971
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269254,188.971,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3085
  maximum absolute entry in einsum_ir solution: 38.3085
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136839
  time (eval):    0.0120696
  gflops (eval):  421.565
  gflops (total): 197.57
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136839,0.0120696,421.565,197.57

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.066252
  gflops (total): 76.7995
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.7995

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0266091
  gflops (eval):  191.217
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0266091,191.217,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9021
  maximum absolute entry in einsum_ir solution: 35.9021
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135454
  time (eval):    0.0120404
  gflops (eval):  422.587
  gflops (total): 198.865
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135454,0.0120404,422.587,198.865

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0668599
  gflops (total): 76.1012
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.1012

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027233
  gflops (eval):  186.837
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.027233,186.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8918
  maximum absolute entry in einsum_ir solution: 38.8918
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0132964
  time (eval):    0.0119334
  gflops (eval):  426.376
  gflops (total): 201.671
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0132964,0.0119334,426.376,201.671

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656793
  gflops (total): 77.4692
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.4692

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0278462
  gflops (eval):  182.722
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0278462,182.722,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7014
  maximum absolute entry in einsum_ir solution: 38.7014
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137144
  time (eval):    0.0128084
  gflops (eval):  397.248
  gflops (total): 191.839
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137144,0.0128084,397.248,191.839

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0658449
  gflops (total): 77.2743
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.2743

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267757
  gflops (eval):  190.027
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0267757,190.027,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.5989
  maximum absolute entry in einsum_ir solution: 44.5989
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134117
  time (eval):    0.0119601
  gflops (eval):  425.424
  gflops (total): 200.542
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134117,0.0119601,425.424,200.542

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0665657
  gflops (total): 76.4375
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.4375

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272581
  gflops (eval):  186.664
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272581,186.664,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.685
  maximum absolute entry in einsum_ir solution: 39.685
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135607
  time (eval):    0.0121146
  gflops (eval):  419.999
  gflops (total): 198.172
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135607,0.0121146,419.999,198.172

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0662263
  gflops (total): 76.8292
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.8292

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269031
  gflops (eval):  189.127
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269031,189.127,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.7465
  maximum absolute entry in einsum_ir solution: 41.7465
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135269
  time (eval):    0.0119369
  gflops (eval):  426.25
  gflops (total): 199.818
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135269,0.0119369,426.25,199.818

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0642137
  gflops (total): 79.2373
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.2373

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271307
  gflops (eval):  187.541
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0271307,187.541,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8092
  maximum absolute entry in einsum_ir solution: 39.8092
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135931
  time (eval):    0.0119134
  gflops (eval):  427.092
  gflops (total): 199.483
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135931,0.0119134,427.092,199.483

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663108
  gflops (total): 76.7313
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.7313

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027163
  gflops (eval):  187.318
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.027163,187.318,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2693
  maximum absolute entry in einsum_ir solution: 37.2693
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013731
  time (eval):    0.0122537
  gflops (eval):  415.23
  gflops (total): 195.812
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.013731,0.0122537,415.23,195.812

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649042
  gflops (total): 78.3943
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.3943

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0276529
  gflops (eval):  184
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0276529,184,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1741
  maximum absolute entry in einsum_ir solution: 36.1741
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137169
  time (eval):    0.0119078
  gflops (eval):  427.293
  gflops (total): 198.563
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137169,0.0119078,427.293,198.563

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652632
  gflops (total): 77.9631
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.9631

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027213
  gflops (eval):  186.974
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.027213,186.974,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.086
  maximum absolute entry in einsum_ir solution: 38.086
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138612
  time (eval):    0.012006
  gflops (eval):  423.798
  gflops (total): 196.702
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0138612,0.012006,423.798,196.702

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0658972
  gflops (total): 77.213
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.213

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271709
  gflops (eval):  187.263
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0271709,187.263,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1574
  maximum absolute entry in einsum_ir solution: 35.1574
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135431
  time (eval):    0.0123098
  gflops (eval):  413.34
  gflops (total): 196.81
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135431,0.0123098,413.34,196.81

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655526
  gflops (total): 77.6189
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.6189

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269577
  gflops (eval):  188.745
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269577,188.745,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8348
  maximum absolute entry in einsum_ir solution: 37.8348
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136431
  time (eval):    0.0122836
  gflops (eval):  414.22
  gflops (total): 196.25
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136431,0.0122836,414.22,196.25

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653305
  gflops (total): 77.8827
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.8827

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0278532
  gflops (eval):  182.676
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0278532,182.676,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7122
  maximum absolute entry in einsum_ir solution: 35.7122
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134939
  time (eval):    0.0122415
  gflops (eval):  415.645
  gflops (total): 197.709
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134939,0.0122415,415.645,197.709

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0659958
  gflops (total): 77.0976
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.0976

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.02643
  gflops (eval):  192.513
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.02643,192.513,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.279
  maximum absolute entry in einsum_ir solution: 42.279
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134519
  time (eval):    0.0119737
  gflops (eval):  424.941
  gflops (total): 200.118
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134519,0.0119737,424.941,200.118

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0660124
  gflops (total): 77.0782
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.0782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272839
  gflops (eval):  186.488
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272839,186.488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5704
  maximum absolute entry in einsum_ir solution: 38.5704
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137724
  time (eval):    0.0120322
  gflops (eval):  422.875
  gflops (total): 197.178
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137724,0.0120322,422.875,197.178

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0670993
  gflops (total): 75.8297
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,75.8297

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270729
  gflops (eval):  187.941
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270729,187.941,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.1244
  maximum absolute entry in einsum_ir solution: 50.1244
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136233
  time (eval):    0.0118756
  gflops (eval):  428.45
  gflops (total): 199.543
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136233,0.0118756,428.45,199.543

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0646165
  gflops (total): 78.7433
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.7433

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.026693
  gflops (eval):  190.616
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.026693,190.616,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5301
  maximum absolute entry in einsum_ir solution: 38.5301
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138766
  time (eval):    0.011962
  gflops (eval):  425.357
  gflops (total): 196.919
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0138766,0.011962,425.357,196.919

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0642926
  gflops (total): 79.14
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027834
  gflops (eval):  182.802
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.027834,182.802,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2596
  maximum absolute entry in einsum_ir solution: 38.2596
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0140539
  time (eval):    0.0123111
  gflops (eval):  413.295
  gflops (total): 192.988
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0140539,0.0123111,413.295,192.988

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0654614
  gflops (total): 77.727
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.727

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271443
  gflops (eval):  187.447
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0271443,187.447,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.7148
  maximum absolute entry in einsum_ir solution: 39.7148
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135546
  time (eval):    0.012009
  gflops (eval):  423.693
  gflops (total): 199.038
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135546,0.012009,423.693,199.038

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655898
  gflops (total): 77.5748
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.5748

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267819
  gflops (eval):  189.983
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0267819,189.983,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1588
  maximum absolute entry in einsum_ir solution: 38.1588
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135764
  time (eval):    0.0119255
  gflops (eval):  426.659
  gflops (total): 199.519
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135764,0.0119255,426.659,199.519

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0669501
  gflops (total): 75.9986
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,75.9986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269703
  gflops (eval):  188.657
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269703,188.657,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7388
  maximum absolute entry in einsum_ir solution: 35.7388
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134541
  time (eval):    0.011976
  gflops (eval):  424.861
  gflops (total): 200.083
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134541,0.011976,424.861,200.083

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.064878
  gflops (total): 78.4259
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.4259

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0263486
  gflops (eval):  193.108
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0263486,193.108,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8099
  maximum absolute entry in einsum_ir solution: 34.8099
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134037
  time (eval):    0.0118896
  gflops (eval):  427.947
  gflops (total): 201.164
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134037,0.0118896,427.947,201.164

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656446
  gflops (total): 77.51
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273952
  gflops (eval):  185.73
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0273952,185.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8962
  maximum absolute entry in einsum_ir solution: 40.8962
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136116
  time (eval):    0.0129357
  gflops (eval):  393.339
  gflops (total): 191.662
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136116,0.0129357,393.339,191.662

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663284
  gflops (total): 76.711
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.711

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268733
  gflops (eval):  189.337
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268733,189.337,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.806
  maximum absolute entry in einsum_ir solution: 35.806
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013555
  time (eval):    0.012382
  gflops (eval):  410.929
  gflops (total): 196.172
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.013555,0.012382,410.929,196.172

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0664603
  gflops (total): 76.5587
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.5587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265708
  gflops (eval):  191.493
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0265708,191.493,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2956
  maximum absolute entry in einsum_ir solution: 38.2956
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135878
  time (eval):    0.0127056
  gflops (eval):  400.463
  gflops (total): 193.513
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135878,0.0127056,400.463,193.513

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0665185
  gflops (total): 76.4917
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.4917

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.026999
  gflops (eval):  188.456
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.026999,188.456,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3856
  maximum absolute entry in einsum_ir solution: 36.3856
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138573
  time (eval):    0.0119638
  gflops (eval):  425.293
  gflops (total): 197.053
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0138573,0.0119638,425.293,197.053

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0651348
  gflops (total): 78.1167
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.1167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270483
  gflops (eval):  188.112
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270483,188.112,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.8305
  maximum absolute entry in einsum_ir solution: 41.8305
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013606
  time (eval):    0.0120682
  gflops (eval):  421.613
  gflops (total): 198.18
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.013606,0.0120682,421.613,198.18

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657318
  gflops (total): 77.4072
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.4072

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0283899
  gflops (eval):  179.223
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0283899,179.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.6307
  maximum absolute entry in einsum_ir solution: 39.6307
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0130956
  time (eval):    0.0119999
  gflops (eval):  424.014
  gflops (total): 202.75
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0130956,0.0119999,424.014,202.75

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0654363
  gflops (total): 77.7568
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.7568

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274253
  gflops (eval):  185.527
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0274253,185.527,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4889
  maximum absolute entry in einsum_ir solution: 37.4889
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136933
  time (eval):    0.0119644
  gflops (eval):  425.271
  gflops (total): 198.308
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136933,0.0119644,425.271,198.308

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0651188
  gflops (total): 78.1359
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.1359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268805
  gflops (eval):  189.287
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268805,189.287,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0815
  maximum absolute entry in einsum_ir solution: 38.0815
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134816
  time (eval):    0.0119628
  gflops (eval):  425.329
  gflops (total): 199.97
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134816,0.0119628,425.329,199.97

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647046
  gflops (total): 78.636
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.636

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272145
  gflops (eval):  186.963
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272145,186.963,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8547
  maximum absolute entry in einsum_ir solution: 38.8547
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136006
  time (eval):    0.0119808
  gflops (eval):  424.69
  gflops (total): 198.899
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136006,0.0119808,424.69,198.899

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0660807
  gflops (total): 76.9986
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.9986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0264195
  gflops (eval):  192.589
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0264195,192.589,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1381
  maximum absolute entry in einsum_ir solution: 37.1381
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135203
  time (eval):    0.011919
  gflops (eval):  426.892
  gflops (total): 200.01
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135203,0.011919,426.892,200.01

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0641641
  gflops (total): 79.2985
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.2985

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275826
  gflops (eval):  184.468
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0275826,184.468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.7962
  maximum absolute entry in einsum_ir solution: 49.7962
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013523
  time (eval):    0.0120076
  gflops (eval):  423.741
  gflops (total): 199.295
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.013523,0.0120076,423.741,199.295

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657716
  gflops (total): 77.3604
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.3604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271914
  gflops (eval):  187.122
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0271914,187.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.0117
  maximum absolute entry in einsum_ir solution: 42.0117
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137633
  time (eval):    0.0119614
  gflops (eval):  425.377
  gflops (total): 197.791
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137633,0.0119614,425.377,197.791

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655229
  gflops (total): 77.654
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.654

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268093
  gflops (eval):  189.789
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268093,189.789,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4183
  maximum absolute entry in einsum_ir solution: 36.4183
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135028
  time (eval):    0.0120006
  gflops (eval):  423.988
  gflops (total): 199.508
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135028,0.0120006,423.988,199.508

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653677
  gflops (total): 77.8384
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.8384

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272137
  gflops (eval):  186.969
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272137,186.969,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0635
  maximum absolute entry in einsum_ir solution: 40.0635
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134536
  time (eval):    0.0120665
  gflops (eval):  421.673
  gflops (total): 199.377
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134536,0.0120665,421.673,199.377

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649886
  gflops (total): 78.2925
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.2925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267533
  gflops (eval):  190.187
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0267533,190.187,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1247
  maximum absolute entry in einsum_ir solution: 34.1247
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0139857
  time (eval):    0.01209
  gflops (eval):  420.855
  gflops (total): 195.129
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0139857,0.01209,420.855,195.129

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.066283
  gflops (total): 76.7635
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.7635

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274271
  gflops (eval):  185.514
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0274271,185.514,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9258
  maximum absolute entry in einsum_ir solution: 36.9258
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134004
  time (eval):    0.0119012
  gflops (eval):  427.529
  gflops (total): 201.099
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134004,0.0119012,427.529,201.099

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653159
  gflops (total): 77.9001
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.9001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268318
  gflops (eval):  189.63
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268318,189.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9018
  maximum absolute entry in einsum_ir solution: 39.9018
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0139212
  time (eval):    0.0121053
  gflops (eval):  420.321
  gflops (total): 195.498
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0139212,0.0121053,420.321,195.498

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0670384
  gflops (total): 75.8986
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,75.8986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267139
  gflops (eval):  190.467
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0267139,190.467,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7643
  maximum absolute entry in einsum_ir solution: 38.7643
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135668
  time (eval):    0.0122778
  gflops (eval):  414.414
  gflops (total): 196.873
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135668,0.0122778,414.414,196.873

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0643631
  gflops (total): 79.0533
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.0533

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269078
  gflops (eval):  189.094
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269078,189.094,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3374
  maximum absolute entry in einsum_ir solution: 36.3374
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136993
  time (eval):    0.0121721
  gflops (eval):  418.013
  gflops (total): 196.669
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136993,0.0121721,418.013,196.669

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656932
  gflops (total): 77.4527
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.4527

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.026505
  gflops (eval):  191.968
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.026505,191.968,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.8242
  maximum absolute entry in einsum_ir solution: 41.8242
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137751
  time (eval):    0.0121455
  gflops (eval):  418.929
  gflops (total): 196.296
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137751,0.0121455,418.929,196.296

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0660502
  gflops (total): 77.034
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.034

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269526
  gflops (eval):  188.78
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269526,188.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7135
  maximum absolute entry in einsum_ir solution: 35.7135
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0128063
  time (eval):    0.0119982
  gflops (eval):  424.075
  gflops (total): 205.129
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0128063,0.0119982,424.075,205.129

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0642697
  gflops (total): 79.1682
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.1682

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270144
  gflops (eval):  188.348
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270144,188.348,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3439
  maximum absolute entry in einsum_ir solution: 38.3439
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136973
  time (eval):    0.0120514
  gflops (eval):  422.202
  gflops (total): 197.607
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136973,0.0120514,422.202,197.607

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663769
  gflops (total): 76.655
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.655

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027199
  gflops (eval):  187.07
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.027199,187.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2909
  maximum absolute entry in einsum_ir solution: 37.2909
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135698
  time (eval):    0.0118631
  gflops (eval):  428.903
  gflops (total): 200.061
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135698,0.0118631,428.903,200.061

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656354
  gflops (total): 77.521
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.521

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269937
  gflops (eval):  188.493
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269937,188.493,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.5371
  maximum absolute entry in einsum_ir solution: 42.5371
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135769
  time (eval):    0.0119849
  gflops (eval):  424.542
  gflops (total): 199.051
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135769,0.0119849,424.542,199.051

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0654004
  gflops (total): 77.7994
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.7994

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268177
  gflops (eval):  189.73
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268177,189.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.9831
  maximum absolute entry in einsum_ir solution: 41.9831
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137052
  time (eval):    0.0119962
  gflops (eval):  424.143
  gflops (total): 197.97
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137052,0.0119962,424.143,197.97

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653037
  gflops (total): 77.9147
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.9147

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270421
  gflops (eval):  188.155
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270421,188.155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4197
  maximum absolute entry in einsum_ir solution: 38.4197
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138903
  time (eval):    0.0120512
  gflops (eval):  422.208
  gflops (total): 196.138
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0138903,0.0120512,422.208,196.138

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0641243
  gflops (total): 79.3478
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.3478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267837
  gflops (eval):  189.971
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0267837,189.971,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6199
  maximum absolute entry in einsum_ir solution: 40.6199
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133036
  time (eval):    0.0120558
  gflops (eval):  422.046
  gflops (total): 200.64
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0133036,0.0120558,422.046,200.64

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663964
  gflops (total): 76.6325
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.6325

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269882
  gflops (eval):  188.531
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269882,188.531,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3028
  maximum absolute entry in einsum_ir solution: 38.3028
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0132807
  time (eval):    0.0122863
  gflops (eval):  414.128
  gflops (total): 199.011
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0132807,0.0122863,414.128,199.011

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0659844
  gflops (total): 77.1109
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.1109

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0276479
  gflops (eval):  184.033
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0276479,184.033,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.9019
  maximum absolute entry in einsum_ir solution: 40.9019
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0132854
  time (eval):    0.0121107
  gflops (eval):  420.134
  gflops (total): 200.351
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0132854,0.0121107,420.134,200.351

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0650133
  gflops (total): 78.2627
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.2627

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0261005
  gflops (eval):  194.943
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0261005,194.943,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6973
  maximum absolute entry in einsum_ir solution: 35.6973
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013615
  time (eval):    0.0120618
  gflops (eval):  421.837
  gflops (total): 198.16
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.013615,0.0120618,421.837,198.16

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0672139
  gflops (total): 75.7004
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,75.7004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270468
  gflops (eval):  188.123
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270468,188.123,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4451
  maximum absolute entry in einsum_ir solution: 38.4451
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136867
  time (eval):    0.0124059
  gflops (eval):  410.136
  gflops (total): 195.002
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136867,0.0124059,410.136,195.002

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653359
  gflops (total): 77.8763
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.8763

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271306
  gflops (eval):  187.541
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0271306,187.541,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.674
  maximum absolute entry in einsum_ir solution: 41.674
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136706
  time (eval):    0.0128546
  gflops (eval):  395.821
  gflops (total): 191.822
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136706,0.0128546,395.821,191.822

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0645497
  gflops (total): 78.8248
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.8248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270881
  gflops (eval):  187.836
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270881,187.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6864
  maximum absolute entry in einsum_ir solution: 37.6864
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135324
  time (eval):    0.0128178
  gflops (eval):  396.956
  gflops (total): 193.096
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135324,0.0128178,396.956,193.096

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652044
  gflops (total): 78.0334
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.0334

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267918
  gflops (eval):  189.913
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0267918,189.913,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.3579
  maximum absolute entry in einsum_ir solution: 40.3579
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134524
  time (eval):    0.0121664
  gflops (eval):  418.21
  gflops (total): 198.608
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134524,0.0121664,418.21,198.608

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655388
  gflops (total): 77.6352
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.6352

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268206
  gflops (eval):  189.709
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268206,189.709,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5351
  maximum absolute entry in einsum_ir solution: 38.5351
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136559
  time (eval):    0.0120082
  gflops (eval):  423.719
  gflops (total): 198.258
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136559,0.0120082,423.719,198.258

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0658355
  gflops (total): 77.2853
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.2853

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269668
  gflops (eval):  188.681
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269668,188.681,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4419
  maximum absolute entry in einsum_ir solution: 37.4419
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134552
  time (eval):    0.0120432
  gflops (eval):  422.488
  gflops (total): 199.547
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134552,0.0120432,422.488,199.547

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065427
  gflops (total): 77.7678
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.7678

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272415
  gflops (eval):  186.778
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272415,186.778,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.5054
  maximum absolute entry in einsum_ir solution: 41.5054
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137428
  time (eval):    0.0119893
  gflops (eval):  424.389
  gflops (total): 197.735
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137428,0.0119893,424.389,197.735

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0638671
  gflops (total): 79.6672
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.6672

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270009
  gflops (eval):  188.442
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270009,188.442,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4423
  maximum absolute entry in einsum_ir solution: 42.4423
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0139443
  time (eval):    0.0119106
  gflops (eval):  427.193
  gflops (total): 196.795
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0139443,0.0119106,427.193,196.795

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663917
  gflops (total): 76.6379
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.6379

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270976
  gflops (eval):  187.77
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270976,187.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.307
  maximum absolute entry in einsum_ir solution: 37.307
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137071
  time (eval):    0.0120437
  gflops (eval):  422.47
  gflops (total): 197.59
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137071,0.0120437,422.47,197.59

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.066243
  gflops (total): 76.8099
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.8099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265455
  gflops (eval):  191.675
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0265455,191.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9401
  maximum absolute entry in einsum_ir solution: 36.9401
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013491
  time (eval):    0.0119419
  gflops (eval):  426.071
  gflops (total): 200.06
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.013491,0.0119419,426.071,200.06

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0646858
  gflops (total): 78.659
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.659

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272871
  gflops (eval):  186.466
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272871,186.466,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3379
  maximum absolute entry in einsum_ir solution: 37.3379
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013724
  time (eval):    0.0122588
  gflops (eval):  415.058
  gflops (total): 195.827
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.013724,0.0122588,415.058,195.827

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663756
  gflops (total): 76.6564
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.6564

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027561
  gflops (eval):  184.613
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.027561,184.613,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6703
  maximum absolute entry in einsum_ir solution: 37.6703
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136883
  time (eval):    0.0126431
  gflops (eval):  402.442
  gflops (total): 193.233
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136883,0.0126431,402.442,193.233

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0650607
  gflops (total): 78.2057
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.2057

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271776
  gflops (eval):  187.217
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0271776,187.217,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.5213
  maximum absolute entry in einsum_ir solution: 39.5213
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0140673
  time (eval):    0.0120299
  gflops (eval):  422.954
  gflops (total): 194.967
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0140673,0.0120299,422.954,194.967

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647984
  gflops (total): 78.5222
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.5222

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270289
  gflops (eval):  188.247
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270289,188.247,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.3504
  maximum absolute entry in einsum_ir solution: 44.3504
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136579
  time (eval):    0.0120275
  gflops (eval):  423.041
  gflops (total): 198.094
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136579,0.0120275,423.041,198.094

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652304
  gflops (total): 78.0022
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.0022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272978
  gflops (eval):  186.393
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272978,186.393,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4185
  maximum absolute entry in einsum_ir solution: 38.4185
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013743
  time (eval):    0.0119776
  gflops (eval):  424.803
  gflops (total): 197.823
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.013743,0.0119776,424.803,197.823

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0667045
  gflops (total): 76.2784
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.2784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027209
  gflops (eval):  187.002
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.027209,187.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9305
  maximum absolute entry in einsum_ir solution: 37.9305
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158404
  time (eval):    0.00727269
  gflops (eval):  487.945
  gflops (total): 153.535
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158404,0.00727269,487.945,153.535

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0465733
  gflops (total): 76.1955
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.1955

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163274
  gflops (eval):  217.345
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163274,217.345,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.008
  maximum absolute entry in einsum_ir solution: 54.008
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.013392
  time (eval):    0.00679319
  gflops (eval):  522.388
  gflops (total): 175.806
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.013392,0.00679319,522.388,175.806

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0462008
  gflops (total): 76.8099
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.8099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164548
  gflops (eval):  215.662
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164548,215.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7226
  maximum absolute entry in einsum_ir solution: 60.7226
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.015584
  time (eval):    0.00679247
  gflops (eval):  522.442
  gflops (total): 158.59
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.015584,0.00679247,522.442,158.59

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0456893
  gflops (total): 77.6698
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.6698

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016402
  gflops (eval):  216.356
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016402,216.356,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.4632
  maximum absolute entry in einsum_ir solution: 53.4632
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155204
  time (eval):    0.00680313
  gflops (eval):  521.624
  gflops (total): 158.965
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155204,0.00680313,521.624,158.965

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0459546
  gflops (total): 77.2213
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.2213

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164687
  gflops (eval):  215.48
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164687,215.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0486
  maximum absolute entry in einsum_ir solution: 55.0486
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0150221
  time (eval):    0.00686412
  gflops (eval):  516.989
  gflops (total): 162.142
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0150221,0.00686412,516.989,162.142

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0454684
  gflops (total): 78.047
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.047

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165059
  gflops (eval):  214.994
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165059,214.994,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.4771
  maximum absolute entry in einsum_ir solution: 54.4771
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0154431
  time (eval):    0.00679305
  gflops (eval):  522.398
  gflops (total): 159.59
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0154431,0.00679305,522.398,159.59

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0457219
  gflops (total): 77.6144
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.6144

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164906
  gflops (eval):  215.193
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164906,215.193,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9555
  maximum absolute entry in einsum_ir solution: 56.9555
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156096
  time (eval):    0.00677874
  gflops (eval):  523.501
  gflops (total): 158.505
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156096,0.00677874,523.501,158.505

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0455291
  gflops (total): 77.9431
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.9431

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163276
  gflops (eval):  217.342
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163276,217.342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7461
  maximum absolute entry in einsum_ir solution: 58.7461
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0148589
  time (eval):    0.00675293
  gflops (eval):  525.502
  gflops (total): 164.201
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0148589,0.00675293,525.502,164.201

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461098
  gflops (total): 76.9614
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.9614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164557
  gflops (eval):  215.651
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164557,215.651,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5373
  maximum absolute entry in einsum_ir solution: 60.5373
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.015121
  time (eval):    0.00685919
  gflops (eval):  517.361
  gflops (total): 161.449
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.015121,0.00685919,517.361,161.449

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0450183
  gflops (total): 78.8274
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.8274

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163996
  gflops (eval):  216.388
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163996,216.388,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.838
  maximum absolute entry in einsum_ir solution: 58.838
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158532
  time (eval):    0.00682509
  gflops (eval):  519.945
  gflops (total): 156.479
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158532,0.00682509,519.945,156.479

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0457052
  gflops (total): 77.6427
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.6427

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163699
  gflops (eval):  216.78
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163699,216.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.0916
  maximum absolute entry in einsum_ir solution: 64.0916
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156954
  time (eval):    0.00679976
  gflops (eval):  521.883
  gflops (total): 157.753
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156954,0.00679976,521.883,157.753

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0459053
  gflops (total): 77.3043
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.3043

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163133
  gflops (eval):  217.533
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163133,217.533,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7505
  maximum absolute entry in einsum_ir solution: 58.7505
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157091
  time (eval):    0.00673903
  gflops (eval):  526.586
  gflops (total): 158.083
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157091,0.00673903,526.586,158.083

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0469021
  gflops (total): 75.6614
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.6614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163143
  gflops (eval):  217.519
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163143,217.519,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3592
  maximum absolute entry in einsum_ir solution: 57.3592
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0133663
  time (eval):    0.00683237
  gflops (eval):  519.392
  gflops (total): 175.689
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0133663,0.00683237,519.392,175.689

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0454585
  gflops (total): 78.0641
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.0641

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164006
  gflops (eval):  216.375
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164006,216.375,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3098
  maximum absolute entry in einsum_ir solution: 54.3098
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158361
  time (eval):    0.00684868
  gflops (eval):  518.155
  gflops (total): 156.434
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158361,0.00684868,518.155,156.434

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0463347
  gflops (total): 76.5879
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.5879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163442
  gflops (eval):  217.122
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163442,217.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0262
  maximum absolute entry in einsum_ir solution: 61.0262
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157132
  time (eval):    0.00681221
  gflops (eval):  520.929
  gflops (total): 157.541
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157132,0.00681221,520.929,157.541

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0460672
  gflops (total): 77.0326
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.0326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163922
  gflops (eval):  216.485
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163922,216.485,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3228
  maximum absolute entry in einsum_ir solution: 54.3228
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155577
  time (eval):    0.00681583
  gflops (eval):  520.652
  gflops (total): 158.61
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155577,0.00681583,520.652,158.61

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461965
  gflops (total): 76.817
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164431
  gflops (eval):  215.816
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164431,215.816,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6909
  maximum absolute entry in einsum_ir solution: 56.6909
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0154345
  time (eval):    0.00682865
  gflops (eval):  519.674
  gflops (total): 159.397
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0154345,0.00682865,519.674,159.397

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0454826
  gflops (total): 78.0228
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.0228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165315
  gflops (eval):  214.662
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165315,214.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8164
  maximum absolute entry in einsum_ir solution: 59.8164
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156293
  time (eval):    0.00681359
  gflops (eval):  520.823
  gflops (total): 158.12
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156293,0.00681359,520.823,158.12

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0462724
  gflops (total): 76.691
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163318
  gflops (eval):  217.286
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163318,217.286,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4612
  maximum absolute entry in einsum_ir solution: 60.4612
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0152596
  time (eval):    0.00678551
  gflops (eval):  522.979
  gflops (total): 160.974
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0152596,0.00678551,522.979,160.974

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.045486
  gflops (total): 78.0169
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.0169

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164298
  gflops (eval):  215.991
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164298,215.991,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.511
  maximum absolute entry in einsum_ir solution: 56.511
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156927
  time (eval):    0.00672178
  gflops (eval):  527.937
  gflops (total): 158.321
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156927,0.00672178,527.937,158.321

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0458679
  gflops (total): 77.3673
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.3673

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163651
  gflops (eval):  216.844
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163651,216.844,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5268
  maximum absolute entry in einsum_ir solution: 58.5268
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0152668
  time (eval):    0.006811
  gflops (eval):  521.021
  gflops (total): 160.735
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0152668,0.006811,521.021,160.735

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0456417
  gflops (total): 77.7507
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.7507

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163047
  gflops (eval):  217.648
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163047,217.648,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3811
  maximum absolute entry in einsum_ir solution: 56.3811
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0153853
  time (eval):    0.00677275
  gflops (eval):  523.964
  gflops (total): 160.153
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0153853,0.00677275,523.964,160.153

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0456466
  gflops (total): 77.7423
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.7423

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016451
  gflops (eval):  215.712
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016451,215.712,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3877
  maximum absolute entry in einsum_ir solution: 56.3877
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0153083
  time (eval):    0.00678396
  gflops (eval):  523.098
  gflops (total): 160.63
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0153083,0.00678396,523.098,160.63

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0455728
  gflops (total): 77.8683
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.8683

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164044
  gflops (eval):  216.325
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164044,216.325,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0184
  maximum absolute entry in einsum_ir solution: 58.0184
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157938
  time (eval):    0.00685037
  gflops (eval):  518.027
  gflops (total): 156.715
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157938,0.00685037,518.027,156.715

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0455004
  gflops (total): 77.9923
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.9923

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163524
  gflops (eval):  217.012
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163524,217.012,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3335
  maximum absolute entry in einsum_ir solution: 54.3335
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.015101
  time (eval):    0.00679685
  gflops (eval):  522.106
  gflops (total): 162.056
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.015101,0.00679685,522.106,162.056

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0458811
  gflops (total): 77.3451
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.3451

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164685
  gflops (eval):  215.483
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164685,215.483,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.2105
  maximum absolute entry in einsum_ir solution: 65.2105
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155904
  time (eval):    0.00681816
  gflops (eval):  520.474
  gflops (total): 158.362
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155904,0.00681816,520.474,158.362

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0457576
  gflops (total): 77.5538
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.5538

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164404
  gflops (eval):  215.851
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164404,215.851,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1424
  maximum absolute entry in einsum_ir solution: 58.1424
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158617
  time (eval):    0.00698896
  gflops (eval):  507.755
  gflops (total): 155.299
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158617,0.00698896,507.755,155.299

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0455347
  gflops (total): 77.9334
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.9334

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163387
  gflops (eval):  217.195
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163387,217.195,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.8035
  maximum absolute entry in einsum_ir solution: 66.8035
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0152316
  time (eval):    0.00682915
  gflops (eval):  519.637
  gflops (total): 160.86
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0152316,0.00682915,519.637,160.86

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0459831
  gflops (total): 77.1735
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.1735

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0162746
  gflops (eval):  218.051
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0162746,218.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9985
  maximum absolute entry in einsum_ir solution: 55.9985
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156156
  time (eval):    0.006833
  gflops (eval):  519.344
  gflops (total): 158.08
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156156,0.006833,519.344,158.08

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0460938
  gflops (total): 76.9881
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.9881

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164076
  gflops (eval):  216.283
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164076,216.283,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.1676
  maximum absolute entry in einsum_ir solution: 55.1676
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156139
  time (eval):    0.00673034
  gflops (eval):  527.266
  gflops (total): 158.819
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156139,0.00673034,527.266,158.819

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0450664
  gflops (total): 78.7433
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.7433

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163986
  gflops (eval):  216.401
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163986,216.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.7094
  maximum absolute entry in einsum_ir solution: 61.7094
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156388
  time (eval):    0.00683809
  gflops (eval):  518.957
  gflops (total): 157.881
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156388,0.00683809,518.957,157.881

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0471174
  gflops (total): 75.3156
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.3156

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163338
  gflops (eval):  217.26
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163338,217.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5017
  maximum absolute entry in einsum_ir solution: 58.5017
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0154121
  time (eval):    0.00680327
  gflops (eval):  521.613
  gflops (total): 159.74
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0154121,0.00680327,521.613,159.74

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0455907
  gflops (total): 77.8377
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.8377

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163683
  gflops (eval):  216.801
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163683,216.801,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6463
  maximum absolute entry in einsum_ir solution: 55.6463
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0152868
  time (eval):    0.00680966
  gflops (eval):  521.124
  gflops (total): 160.599
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0152868,0.00680966,521.124,160.599

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0452125
  gflops (total): 78.4888
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.4888

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016373
  gflops (eval):  216.74
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016373,216.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3974
  maximum absolute entry in einsum_ir solution: 58.3974
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155952
  time (eval):    0.0067933
  gflops (eval):  522.379
  gflops (total): 158.504
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155952,0.0067933,522.379,158.504

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0456047
  gflops (total): 77.8138
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.8138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164402
  gflops (eval):  215.854
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164402,215.854,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3191
  maximum absolute entry in einsum_ir solution: 55.3191
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157495
  time (eval):    0.00679573
  gflops (eval):  522.192
  gflops (total): 157.402
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157495,0.00679573,522.192,157.402

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0468419
  gflops (total): 75.7586
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.7586

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0162185
  gflops (eval):  218.805
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0162185,218.805,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0677
  maximum absolute entry in einsum_ir solution: 58.0677
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.014856
  time (eval):    0.00701419
  gflops (eval):  505.928
  gflops (total): 162.261
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.014856,0.00701419,505.928,162.261

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0453122
  gflops (total): 78.3161
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.3161

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164094
  gflops (eval):  216.258
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164094,216.258,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3685
  maximum absolute entry in einsum_ir solution: 56.3685
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0164184
  time (eval):    0.00673161
  gflops (eval):  527.166
  gflops (total): 153.291
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0164184,0.00673161,527.166,153.291

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0458284
  gflops (total): 77.4341
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.4341

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165501
  gflops (eval):  214.421
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165501,214.421,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.2284
  maximum absolute entry in einsum_ir solution: 55.2284
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.01458
  time (eval):    0.00679078
  gflops (eval):  522.572
  gflops (total): 166.053
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.01458,0.00679078,522.572,166.053

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0456358
  gflops (total): 77.7608
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.7608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163637
  gflops (eval):  216.863
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163637,216.863,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.344
  maximum absolute entry in einsum_ir solution: 59.344
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0151558
  time (eval):    0.0067659
  gflops (eval):  524.494
  gflops (total): 161.88
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0151558,0.0067659,524.494,161.88

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.045687
  gflops (total): 77.6736
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.6736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163831
  gflops (eval):  216.606
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163831,216.606,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3505
  maximum absolute entry in einsum_ir solution: 59.3505
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158843
  time (eval):    0.00687002
  gflops (eval):  516.545
  gflops (total): 155.956
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158843,0.00687002,516.545,155.956

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461265
  gflops (total): 76.9336
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.9336

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163115
  gflops (eval):  217.557
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163115,217.557,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6467
  maximum absolute entry in einsum_ir solution: 55.6467
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0152089
  time (eval):    0.00678194
  gflops (eval):  523.254
  gflops (total): 161.371
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0152089,0.00678194,523.254,161.371

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.045911
  gflops (total): 77.2947
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.2947

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016405
  gflops (eval):  216.317
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016405,216.317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3837
  maximum absolute entry in einsum_ir solution: 55.3837
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157772
  time (eval):    0.00681556
  gflops (eval):  520.673
  gflops (total): 157.071
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157772,0.00681556,520.673,157.071

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0456738
  gflops (total): 77.6961
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.6961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163931
  gflops (eval):  216.474
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163931,216.474,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1224
  maximum absolute entry in einsum_ir solution: 57.1224
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0152478
  time (eval):    0.00679028
  gflops (eval):  522.611
  gflops (total): 161.025
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0152478,0.00679028,522.611,161.025

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.045553
  gflops (total): 77.9021
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.9021

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016405
  gflops (eval):  216.317
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016405,216.317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3083
  maximum absolute entry in einsum_ir solution: 55.3083
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157176
  time (eval):    0.00680535
  gflops (eval):  521.453
  gflops (total): 157.558
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157176,0.00680535,521.453,157.558

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0454455
  gflops (total): 78.0865
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.0865

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163332
  gflops (eval):  217.267
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163332,217.267,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6248
  maximum absolute entry in einsum_ir solution: 55.6248
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156946
  time (eval):    0.00684656
  gflops (eval):  518.315
  gflops (total): 157.431
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156946,0.00684656,518.315,157.431

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0454501
  gflops (total): 78.0786
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.0786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016455
  gflops (eval):  215.66
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016455,215.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.4833
  maximum absolute entry in einsum_ir solution: 65.4833
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157795
  time (eval):    0.00679603
  gflops (eval):  522.169
  gflops (total): 157.191
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157795,0.00679603,522.169,157.191

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0464816
  gflops (total): 76.3458
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.3458

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164296
  gflops (eval):  215.993
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164296,215.993,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3426
  maximum absolute entry in einsum_ir solution: 55.3426
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0148969
  time (eval):    0.00674053
  gflops (eval):  526.468
  gflops (total): 164.006
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0148969,0.00674053,526.468,164.006

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0449918
  gflops (total): 78.8739
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.8739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164009
  gflops (eval):  216.37
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164009,216.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.608
  maximum absolute entry in einsum_ir solution: 59.608
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156006
  time (eval):    0.00680374
  gflops (eval):  521.577
  gflops (total): 158.393
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156006,0.00680374,521.577,158.393

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0460599
  gflops (total): 77.0448
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.0448

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163781
  gflops (eval):  216.672
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163781,216.672,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.183
  maximum absolute entry in einsum_ir solution: 55.183
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155229
  time (eval):    0.00679962
  gflops (eval):  521.893
  gflops (total): 158.973
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155229,0.00679962,521.893,158.973

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461293
  gflops (total): 76.9289
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.9289

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164566
  gflops (eval):  215.638
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164566,215.638,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1734
  maximum absolute entry in einsum_ir solution: 60.1734
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0159511
  time (eval):    0.00676944
  gflops (eval):  524.22
  gflops (total): 156.188
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0159511,0.00676944,524.22,156.188

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0455778
  gflops (total): 77.8598
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.8598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164452
  gflops (eval):  215.788
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164452,215.788,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0587
  maximum absolute entry in einsum_ir solution: 58.0587
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157438
  time (eval):    0.00681365
  gflops (eval):  520.818
  gflops (total): 157.317
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157438,0.00681365,520.818,157.317

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.04529
  gflops (total): 78.3544
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.3544

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164247
  gflops (eval):  216.058
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164247,216.058,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5237
  maximum absolute entry in einsum_ir solution: 56.5237
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0152489
  time (eval):    0.0068097
  gflops (eval):  521.121
  gflops (total): 160.875
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0152489,0.0068097,521.121,160.875

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0456289
  gflops (total): 77.7725
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.7725

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016468
  gflops (eval):  215.49
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016468,215.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0652
  maximum absolute entry in einsum_ir solution: 56.0652
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.015736
  time (eval):    0.00681503
  gflops (eval):  520.713
  gflops (total): 157.362
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.015736,0.00681503,520.713,157.362

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0452209
  gflops (total): 78.4742
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.4742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.01632
  gflops (eval):  217.444
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.01632,217.444,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7528
  maximum absolute entry in einsum_ir solution: 56.7528
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156471
  time (eval):    0.00684874
  gflops (eval):  518.15
  gflops (total): 157.748
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156471,0.00684874,518.15,157.748

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.047312
  gflops (total): 75.0059
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.0059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164319
  gflops (eval):  215.963
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164319,215.963,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0494
  maximum absolute entry in einsum_ir solution: 60.0494
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157689
  time (eval):    0.00680605
  gflops (eval):  521.401
  gflops (total): 157.195
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157689,0.00680605,521.401,157.195

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0455663
  gflops (total): 77.8794
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.8794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0162951
  gflops (eval):  217.776
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0162951,217.776,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8886
  maximum absolute entry in einsum_ir solution: 58.8886
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0161538
  time (eval):    0.00677771
  gflops (eval):  523.58
  gflops (total): 154.751
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0161538,0.00677771,523.58,154.751

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0463274
  gflops (total): 76.5999
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.5999

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0162888
  gflops (eval):  217.86
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0162888,217.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.363
  maximum absolute entry in einsum_ir solution: 56.363
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158387
  time (eval):    0.0067911
  gflops (eval):  522.548
  gflops (total): 156.814
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158387,0.0067911,522.548,156.814

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461963
  gflops (total): 76.8173
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.8173

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163886
  gflops (eval):  216.533
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163886,216.533,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7953
  maximum absolute entry in einsum_ir solution: 60.7953
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156219
  time (eval):    0.00679907
  gflops (eval):  521.936
  gflops (total): 158.275
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156219,0.00679907,521.936,158.275

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.045809
  gflops (total): 77.4668
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.4668

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163519
  gflops (eval):  217.019
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163519,217.019,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7433
  maximum absolute entry in einsum_ir solution: 57.7433
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158396
  time (eval):    0.00676385
  gflops (eval):  524.653
  gflops (total): 156.997
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158396,0.00676385,524.653,156.997

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0453827
  gflops (total): 78.1945
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.1945

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163121
  gflops (eval):  217.549
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163121,217.549,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.494
  maximum absolute entry in einsum_ir solution: 58.494
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155197
  time (eval):    0.00681528
  gflops (eval):  520.694
  gflops (total): 158.884
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155197,0.00681528,520.694,158.884

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0467036
  gflops (total): 75.983
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.983

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163333
  gflops (eval):  217.267
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163333,217.267,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8617
  maximum absolute entry in einsum_ir solution: 54.8617
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.015415
  time (eval):    0.00682291
  gflops (eval):  520.112
  gflops (total): 159.578
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.015415,0.00682291,520.112,159.578

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0452455
  gflops (total): 78.4317
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.4317

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016311
  gflops (eval):  217.563
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016311,217.563,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6832
  maximum absolute entry in einsum_ir solution: 59.6832
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156755
  time (eval):    0.00675478
  gflops (eval):  525.358
  gflops (total): 158.209
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156755,0.00675478,525.358,158.209

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0460196
  gflops (total): 77.1123
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.1123

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163554
  gflops (eval):  216.973
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163554,216.973,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5525
  maximum absolute entry in einsum_ir solution: 58.5525
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158685
  time (eval):    0.00681384
  gflops (eval):  520.804
  gflops (total): 156.451
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158685,0.00681384,520.804,156.451

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0472436
  gflops (total): 75.1144
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.1144

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016334
  gflops (eval):  217.258
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016334,217.258,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3492
  maximum absolute entry in einsum_ir solution: 55.3492
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156123
  time (eval):    0.0068137
  gflops (eval):  520.815
  gflops (total): 158.239
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156123,0.0068137,520.815,158.239

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461382
  gflops (total): 76.914
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.914

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164046
  gflops (eval):  216.323
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164046,216.323,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1068
  maximum absolute entry in einsum_ir solution: 59.1068
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0154299
  time (eval):    0.00680783
  gflops (eval):  521.264
  gflops (total): 159.579
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0154299,0.00680783,521.264,159.579

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461519
  gflops (total): 76.8913
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.8913

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163364
  gflops (eval):  217.225
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163364,217.225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9755
  maximum absolute entry in einsum_ir solution: 58.9755
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157153
  time (eval):    0.00682862
  gflops (eval):  519.677
  gflops (total): 157.412
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157153,0.00682862,519.677,157.412

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0458039
  gflops (total): 77.4755
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.4755

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0162822
  gflops (eval):  217.948
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0162822,217.948,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.3712
  maximum absolute entry in einsum_ir solution: 52.3712
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158041
  time (eval):    0.00678481
  gflops (eval):  523.033
  gflops (total): 157.098
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158041,0.00678481,523.033,157.098

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0453985
  gflops (total): 78.1673
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.1673

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163968
  gflops (eval):  216.425
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163968,216.425,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0965
  maximum absolute entry in einsum_ir solution: 60.0965
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0150369
  time (eval):    0.0067962
  gflops (eval):  522.156
  gflops (total): 162.537
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0150369,0.0067962,522.156,162.537

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.046297
  gflops (total): 76.6503
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.6503

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163243
  gflops (eval):  217.385
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163243,217.385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.309
  maximum absolute entry in einsum_ir solution: 64.309
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156697
  time (eval):    0.00683023
  gflops (eval):  519.554
  gflops (total): 157.72
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156697,0.00683023,519.554,157.72

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0452028
  gflops (total): 78.5057
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.5057

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163366
  gflops (eval):  217.223
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163366,217.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3684
  maximum absolute entry in einsum_ir solution: 55.3684
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155318
  time (eval):    0.00679865
  gflops (eval):  521.968
  gflops (total): 158.916
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155318,0.00679865,521.968,158.916

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0455599
  gflops (total): 77.8903
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.8903

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164208
  gflops (eval):  216.109
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164208,216.109,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9501
  maximum absolute entry in einsum_ir solution: 58.9501
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0151626
  time (eval):    0.00679731
  gflops (eval):  522.071
  gflops (total): 161.598
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0151626,0.00679731,522.071,161.598

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0463068
  gflops (total): 76.6341
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.6341

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163577
  gflops (eval):  216.942
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163577,216.942,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4383
  maximum absolute entry in einsum_ir solution: 57.4383
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.015475
  time (eval):    0.00685751
  gflops (eval):  517.487
  gflops (total): 158.902
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.015475,0.00685751,517.487,158.902

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0453735
  gflops (total): 78.2103
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.2103

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163587
  gflops (eval):  216.929
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163587,216.929,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6653
  maximum absolute entry in einsum_ir solution: 55.6653
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0154762
  time (eval):    0.00683908
  gflops (eval):  518.882
  gflops (total): 159.025
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0154762,0.00683908,518.882,159.025

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0463452
  gflops (total): 76.5706
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.5706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.01632
  gflops (eval):  217.444
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.01632,217.444,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9106
  maximum absolute entry in einsum_ir solution: 58.9106
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157447
  time (eval):    0.00682796
  gflops (eval):  519.727
  gflops (total): 157.211
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157447,0.00682796,519.727,157.211

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.044937
  gflops (total): 78.9701
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.9701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163331
  gflops (eval):  217.269
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163331,217.269,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9639
  maximum absolute entry in einsum_ir solution: 56.9639
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155304
  time (eval):    0.00678792
  gflops (eval):  522.793
  gflops (total): 159.003
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155304,0.00678792,522.793,159.003

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0457702
  gflops (total): 77.5324
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.5324

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163349
  gflops (eval):  217.245
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163349,217.245,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.267
  maximum absolute entry in einsum_ir solution: 56.267
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.015721
  time (eval):    0.00674705
  gflops (eval):  525.96
  gflops (total): 157.944
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.015721,0.00674705,525.96,157.944

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0455156
  gflops (total): 77.9662
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.9662

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164376
  gflops (eval):  215.887
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164376,215.887,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5575
  maximum absolute entry in einsum_ir solution: 54.5575
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157605
  time (eval):    0.00674086
  gflops (eval):  526.443
  gflops (total): 157.709
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157605,0.00674086,526.443,157.709

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0452693
  gflops (total): 78.3904
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.3904

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163337
  gflops (eval):  217.261
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163337,217.261,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.6317
  maximum absolute entry in einsum_ir solution: 54.6317
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157671
  time (eval):    0.00680352
  gflops (eval):  521.594
  gflops (total): 157.226
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157671,0.00680352,521.594,157.226

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0458429
  gflops (total): 77.4096
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.4096

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164067
  gflops (eval):  216.295
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164067,216.295,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7712
  maximum absolute entry in einsum_ir solution: 57.7712
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0154317
  time (eval):    0.00681267
  gflops (eval):  520.894
  gflops (total): 159.531
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0154317,0.00681267,520.894,159.531

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0460725
  gflops (total): 77.0237
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.0237

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.01632
  gflops (eval):  217.444
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.01632,217.444,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.6844
  maximum absolute entry in einsum_ir solution: 53.6844
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0149378
  time (eval):    0.00678923
  gflops (eval):  522.692
  gflops (total): 163.33
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0149378,0.00678923,522.692,163.33

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0469536
  gflops (total): 75.5783
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.5783

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164505
  gflops (eval):  215.718
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164505,215.718,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7612
  maximum absolute entry in einsum_ir solution: 56.7612
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155067
  time (eval):    0.00683041
  gflops (eval):  519.541
  gflops (total): 158.869
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155067,0.00683041,519.541,158.869

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0455869
  gflops (total): 77.8442
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.8442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0162361
  gflops (eval):  218.567
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0162361,218.567,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6983
  maximum absolute entry in einsum_ir solution: 56.6983
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0154051
  time (eval):    0.00709555
  gflops (eval):  500.127
  gflops (total): 157.714
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0154051,0.00709555,500.127,157.714

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0451112
  gflops (total): 78.6651
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.6651

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163995
  gflops (eval):  216.389
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163995,216.389,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3621
  maximum absolute entry in einsum_ir solution: 56.3621
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157015
  time (eval):    0.00680886
  gflops (eval):  521.185
  gflops (total): 157.646
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157015,0.00680886,521.185,157.646

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0459199
  gflops (total): 77.2797
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.2797

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163159
  gflops (eval):  217.498
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163159,217.498,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.551
  maximum absolute entry in einsum_ir solution: 55.551
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0151235
  time (eval):    0.00681148
  gflops (eval):  520.984
  gflops (total): 161.782
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0151235,0.00681148,520.984,161.782

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0460139
  gflops (total): 77.1217
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.1217

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165768
  gflops (eval):  214.075
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165768,214.075,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2758
  maximum absolute entry in einsum_ir solution: 57.2758
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157265
  time (eval):    0.00671789
  gflops (eval):  528.242
  gflops (total): 158.109
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157265,0.00671789,528.242,158.109

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0453833
  gflops (total): 78.1934
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.1934

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163531
  gflops (eval):  217.003
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163531,217.003,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7329
  maximum absolute entry in einsum_ir solution: 54.7329
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.015728
  time (eval):    0.0067819
  gflops (eval):  523.257
  gflops (total): 157.65
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.015728,0.0067819,523.257,157.65

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0463819
  gflops (total): 76.51
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163532
  gflops (eval):  217.002
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163532,217.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8392
  maximum absolute entry in einsum_ir solution: 57.8392
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0161638
  time (eval):    0.00674695
  gflops (eval):  525.967
  gflops (total): 154.891
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0161638,0.00674695,525.967,154.891

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0453177
  gflops (total): 78.3067
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.3067

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164752
  gflops (eval):  215.395
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164752,215.395,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0301
  maximum absolute entry in einsum_ir solution: 59.0301
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0151774
  time (eval):    0.00679401
  gflops (eval):  522.324
  gflops (total): 161.513
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0151774,0.00679401,522.324,161.513

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0455935
  gflops (total): 77.8329
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.8329

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163941
  gflops (eval):  216.46
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163941,216.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5131
  maximum absolute entry in einsum_ir solution: 53.5131
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158443
  time (eval):    0.00674228
  gflops (eval):  526.331
  gflops (total): 157.115
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158443,0.00674228,526.331,157.115

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0454897
  gflops (total): 78.0105
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.0105

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0166142
  gflops (eval):  213.593
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0166142,213.593,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3421
  maximum absolute entry in einsum_ir solution: 57.3421
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0150822
  time (eval):    0.00670998
  gflops (eval):  528.865
  gflops (total): 162.842
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0150822,0.00670998,528.865,162.842

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0457377
  gflops (total): 77.5876
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.5876

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163684
  gflops (eval):  216.8
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163684,216.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.2862
  maximum absolute entry in einsum_ir solution: 63.2862
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155372
  time (eval):    0.00683101
  gflops (eval):  519.495
  gflops (total): 158.648
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155372,0.00683101,519.495,158.648

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0466305
  gflops (total): 76.102
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.102

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164157
  gflops (eval):  216.176
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164157,216.176,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.822
  maximum absolute entry in einsum_ir solution: 63.822
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156898
  time (eval):    0.0067661
  gflops (eval):  524.479
  gflops (total): 158.029
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156898,0.0067661,524.479,158.029

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0455437
  gflops (total): 77.918
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.918

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165277
  gflops (eval):  214.71
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165277,214.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7514
  maximum absolute entry in einsum_ir solution: 59.7514
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157501
  time (eval):    0.00677307
  gflops (eval):  523.939
  gflops (total): 157.557
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157501,0.00677307,523.939,157.557

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0470916
  gflops (total): 75.357
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.357

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164275
  gflops (eval):  216.021
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164275,216.021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3817
  maximum absolute entry in einsum_ir solution: 55.3817
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0145788
  time (eval):    0.00683827
  gflops (eval):  518.944
  gflops (total): 165.694
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0145788,0.00683827,518.944,165.694

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0452891
  gflops (total): 78.356
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.356

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165208
  gflops (eval):  214.801
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165208,214.801,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1751
  maximum absolute entry in einsum_ir solution: 57.1751
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0153254
  time (eval):    0.00679882
  gflops (eval):  521.955
  gflops (total): 160.398
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0153254,0.00679882,521.955,160.398

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0456691
  gflops (total): 77.7042
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.7042

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165555
  gflops (eval):  214.35
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165555,214.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.346
  maximum absolute entry in einsum_ir solution: 57.346
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0161934
  time (eval):    0.00675814
  gflops (eval):  525.097
  gflops (total): 154.616
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0161934,0.00675814,525.097,154.616

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.045286
  gflops (total): 78.3615
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.3615

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164034
  gflops (eval):  216.338
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164034,216.338,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9244
  maximum absolute entry in einsum_ir solution: 55.9244
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156007
  time (eval):    0.00681241
  gflops (eval):  520.913
  gflops (total): 158.331
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156007,0.00681241,520.913,158.331

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0468917
  gflops (total): 75.6781
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.6781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164538
  gflops (eval):  215.676
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164538,215.676,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9592
  maximum absolute entry in einsum_ir solution: 59.9592
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0153915
  time (eval):    0.00677121
  gflops (eval):  524.083
  gflops (total): 160.119
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0153915,0.00677121,524.083,160.119

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.045481
  gflops (total): 78.0255
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.0255

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164139
  gflops (eval):  216.199
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164139,216.199,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1407
  maximum absolute entry in einsum_ir solution: 56.1407
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0150514
  time (eval):    0.00679452
  gflops (eval):  522.285
  gflops (total): 162.441
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0150514,0.00679452,522.285,162.441

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0452897
  gflops (total): 78.355
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.355

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164143
  gflops (eval):  216.194
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164143,216.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.194
  maximum absolute entry in einsum_ir solution: 54.194
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157544
  time (eval):    0.00708181
  gflops (eval):  501.097
  gflops (total): 155.397
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157544,0.00708181,501.097,155.397

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0455759
  gflops (total): 77.863
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.863

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164038
  gflops (eval):  216.332
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164038,216.332,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.8634
  maximum absolute entry in einsum_ir solution: 63.8634
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134996
  time (eval):    0.0149892
  gflops (eval):  454.196
  gflops (total): 238.973
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134996,0.0149892,454.196,238.973

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0931336
  gflops (total): 73.0998
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.0998

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0314896
  gflops (eval):  216.2
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0314896,216.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.276
  maximum absolute entry in einsum_ir solution: 44.276
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013728
  time (eval):    0.015009
  gflops (eval):  453.598
  gflops (total): 236.909
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013728,0.015009,453.598,236.909

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0924032
  gflops (total): 73.6776
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.6776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0314416
  gflops (eval):  216.53
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0314416,216.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.3791
  maximum absolute entry in einsum_ir solution: 43.3791
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137648
  time (eval):    0.0150107
  gflops (eval):  453.546
  gflops (total): 236.592
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137648,0.0150107,453.546,236.592

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0941381
  gflops (total): 72.3198
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.3198

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0319799
  gflops (eval):  212.885
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0319799,212.885,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.5774
  maximum absolute entry in einsum_ir solution: 45.5774
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137802
  time (eval):    0.0148162
  gflops (eval):  459.499
  gflops (total): 238.073
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137802,0.0148162,459.499,238.073

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.095063
  gflops (total): 71.6161
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.6161

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0311404
  gflops (eval):  218.624
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0311404,218.624,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4204
  maximum absolute entry in einsum_ir solution: 42.4204
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137544
  time (eval):    0.0148949
  gflops (eval):  457.071
  gflops (total): 237.634
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137544,0.0148949,457.071,237.634

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0961921
  gflops (total): 70.7755
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.7755

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0309758
  gflops (eval):  219.786
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0309758,219.786,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4927
  maximum absolute entry in einsum_ir solution: 42.4927
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137162
  time (eval):    0.0149316
  gflops (eval):  455.949
  gflops (total): 237.646
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137162,0.0149316,455.949,237.646

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0955566
  gflops (total): 71.2462
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.2462

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0314242
  gflops (eval):  216.65
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0314242,216.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.1488
  maximum absolute entry in einsum_ir solution: 47.1488
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134767
  time (eval):    0.0149311
  gflops (eval):  455.963
  gflops (total): 239.654
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134767,0.0149311,455.963,239.654

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0958871
  gflops (total): 71.0006
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.0006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.032177
  gflops (eval):  211.581
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.032177,211.581,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.7268
  maximum absolute entry in einsum_ir solution: 41.7268
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0113282
  time (eval):    0.0147492
  gflops (eval):  461.588
  gflops (total): 261.071
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0113282,0.0147492,461.588,261.071

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0959308
  gflops (total): 70.9683
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.9683

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0308342
  gflops (eval):  220.795
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0308342,220.795,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.4585
  maximum absolute entry in einsum_ir solution: 41.4585
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013975
  time (eval):    0.0149672
  gflops (eval):  454.866
  gflops (total): 235.229
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013975,0.0149672,454.866,235.229

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0956061
  gflops (total): 71.2093
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.2093

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0316185
  gflops (eval):  215.318
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0316185,215.318,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.8603
  maximum absolute entry in einsum_ir solution: 43.8603
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137305
  time (eval):    0.0150466
  gflops (eval):  452.462
  gflops (total): 236.578
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137305,0.0150466,452.462,236.578

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0932112
  gflops (total): 73.0389
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.0389

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.031419
  gflops (eval):  216.686
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.031419,216.686,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.1414
  maximum absolute entry in einsum_ir solution: 43.1414
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134701
  time (eval):    0.0155891
  gflops (eval):  436.718
  gflops (total): 234.282
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134701,0.0155891,436.718,234.282

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.095588
  gflops (total): 71.2228
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.2228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0321113
  gflops (eval):  212.014
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0321113,212.014,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.8019
  maximum absolute entry in einsum_ir solution: 42.8019
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134022
  time (eval):    0.014721
  gflops (eval):  462.471
  gflops (total): 242.079
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134022,0.014721,462.471,242.079

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0950751
  gflops (total): 71.607
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313258
  gflops (eval):  217.33
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313258,217.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.2762
  maximum absolute entry in einsum_ir solution: 48.2762
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135318
  time (eval):    0.0148679
  gflops (eval):  457.903
  gflops (total): 239.723
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135318,0.0148679,457.903,239.723

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0964136
  gflops (total): 70.6129
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.6129

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312312
  gflops (eval):  217.989
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312312,217.989,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.0719
  maximum absolute entry in einsum_ir solution: 48.0719
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134371
  time (eval):    0.0157097
  gflops (eval):  433.367
  gflops (total): 233.578
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134371,0.0157097,433.367,233.578

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0946705
  gflops (total): 71.9131
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.9131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315521
  gflops (eval):  215.771
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315521,215.771,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.1156
  maximum absolute entry in einsum_ir solution: 45.1156
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0132937
  time (eval):    0.0149126
  gflops (eval):  456.53
  gflops (total): 241.366
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0132937,0.0149126,456.53,241.366

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.094687
  gflops (total): 71.9005
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.9005

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0307784
  gflops (eval):  221.195
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0307784,221.195,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.612
  maximum absolute entry in einsum_ir solution: 45.612
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013654
  time (eval):    0.0148355
  gflops (eval):  458.903
  gflops (total): 238.967
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013654,0.0148355,458.903,238.967

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0942463
  gflops (total): 72.2367
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.2367

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0308559
  gflops (eval):  220.64
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0308559,220.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.9468
  maximum absolute entry in einsum_ir solution: 43.9468
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0138205
  time (eval):    0.0155613
  gflops (eval):  437.497
  gflops (total): 231.709
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0138205,0.0155613,437.497,231.709

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0951017
  gflops (total): 71.587
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0316065
  gflops (eval):  215.4
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0316065,215.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.8403
  maximum absolute entry in einsum_ir solution: 43.8403
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136607
  time (eval):    0.014852
  gflops (eval):  458.392
  gflops (total): 238.772
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136607,0.014852,458.392,238.772

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0948355
  gflops (total): 71.7879
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.7879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312008
  gflops (eval):  218.201
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312008,218.201,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.5599
  maximum absolute entry in einsum_ir solution: 47.5599
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137175
  time (eval):    0.0155581
  gflops (eval):  437.587
  gflops (total): 232.55
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137175,0.0155581,437.587,232.55

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0950255
  gflops (total): 71.6444
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.6444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0322859
  gflops (eval):  210.868
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0322859,210.868,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.3179
  maximum absolute entry in einsum_ir solution: 43.3179
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0140477
  time (eval):    0.0157193
  gflops (eval):  433.101
  gflops (total): 228.711
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0140477,0.0157193,433.101,228.711

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0964275
  gflops (total): 70.6027
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.6027

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312292
  gflops (eval):  218.003
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312292,218.003,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.6844
  maximum absolute entry in einsum_ir solution: 44.6844
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136303
  time (eval):    0.0149349
  gflops (eval):  455.847
  gflops (total): 238.333
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136303,0.0149349,455.847,238.333

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0954523
  gflops (total): 71.324
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.324

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0311141
  gflops (eval):  218.809
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0311141,218.809,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.5279
  maximum absolute entry in einsum_ir solution: 40.5279
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136918
  time (eval):    0.0148655
  gflops (eval):  457.975
  gflops (total): 238.399
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136918,0.0148655,457.975,238.399

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0927833
  gflops (total): 73.3757
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.3757

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0308837
  gflops (eval):  220.442
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0308837,220.442,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.8681
  maximum absolute entry in einsum_ir solution: 41.8681
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134374
  time (eval):    0.0149572
  gflops (eval):  455.168
  gflops (total): 239.765
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134374,0.0149572,455.168,239.765

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0948967
  gflops (total): 71.7416
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.7416

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312042
  gflops (eval):  218.177
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312042,218.177,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.3847
  maximum absolute entry in einsum_ir solution: 44.3847
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0133827
  time (eval):    0.01494
  gflops (eval):  455.693
  gflops (total): 240.375
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0133827,0.01494,455.693,240.375

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.093725
  gflops (total): 72.6385
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.6385

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0318829
  gflops (eval):  213.533
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0318829,213.533,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.3003
  maximum absolute entry in einsum_ir solution: 47.3003
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013607
  time (eval):    0.0150045
  gflops (eval):  453.734
  gflops (total): 237.948
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013607,0.0150045,453.734,237.948

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0940936
  gflops (total): 72.3539
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.3539

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.030904
  gflops (eval):  220.296
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.030904,220.296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.7815
  maximum absolute entry in einsum_ir solution: 43.7815
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137799
  time (eval):    0.0156878
  gflops (eval):  433.971
  gflops (total): 231.034
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137799,0.0156878,433.971,231.034

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0933362
  gflops (total): 72.941
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.941

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312431
  gflops (eval):  217.905
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312431,217.905,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.1851
  maximum absolute entry in einsum_ir solution: 48.1851
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136214
  time (eval):    0.0148059
  gflops (eval):  459.821
  gflops (total): 239.49
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136214,0.0148059,459.821,239.49

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0927106
  gflops (total): 73.4333
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.4333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315499
  gflops (eval):  215.786
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315499,215.786,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.7122
  maximum absolute entry in einsum_ir solution: 48.7122
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0139483
  time (eval):    0.0148232
  gflops (eval):  459.282
  gflops (total): 236.625
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0139483,0.0148232,459.282,236.625

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.095553
  gflops (total): 71.2488
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.2488

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315935
  gflops (eval):  215.489
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315935,215.489,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.8572
  maximum absolute entry in einsum_ir solution: 46.8572
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134959
  time (eval):    0.0148506
  gflops (eval):  458.436
  gflops (total): 240.172
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134959,0.0148506,458.436,240.172

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0971489
  gflops (total): 70.0784
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.0784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0307482
  gflops (eval):  221.413
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0307482,221.413,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.3193
  maximum absolute entry in einsum_ir solution: 44.3193
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135434
  time (eval):    0.0151249
  gflops (eval):  450.12
  gflops (total): 237.476
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135434,0.0151249,450.12,237.476

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0963309
  gflops (total): 70.6735
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.6735

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0317731
  gflops (eval):  214.271
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0317731,214.271,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.8383
  maximum absolute entry in einsum_ir solution: 41.8383
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013598
  time (eval):    0.0148459
  gflops (eval):  458.582
  gflops (total): 239.35
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013598,0.0148459,458.582,239.35

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0969801
  gflops (total): 70.2004
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.2004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313477
  gflops (eval):  217.178
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313477,217.178,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.3156
  maximum absolute entry in einsum_ir solution: 45.3156
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135839
  time (eval):    0.0148544
  gflops (eval):  458.318
  gflops (total): 239.397
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135839,0.0148544,458.318,239.397

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0958633
  gflops (total): 71.0183
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.0183

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310603
  gflops (eval):  219.188
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310603,219.188,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.1925
  maximum absolute entry in einsum_ir solution: 41.1925
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135615
  time (eval):    0.0150299
  gflops (eval):  452.965
  gflops (total): 238.115
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135615,0.0150299,452.965,238.115

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.09569
  gflops (total): 71.1469
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.1469

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312328
  gflops (eval):  217.978
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312328,217.978,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.1752
  maximum absolute entry in einsum_ir solution: 43.1752
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135531
  time (eval):    0.0149975
  gflops (eval):  453.946
  gflops (total): 238.456
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135531,0.0149975,453.946,238.456

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0950671
  gflops (total): 71.613
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.613

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0325934
  gflops (eval):  208.878
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0325934,208.878,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.2639
  maximum absolute entry in einsum_ir solution: 47.2639
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135659
  time (eval):    0.0150346
  gflops (eval):  452.825
  gflops (total): 238.039
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135659,0.0150346,452.825,238.039

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0956741
  gflops (total): 71.1587
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.1587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313381
  gflops (eval):  217.245
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313381,217.245,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.2759
  maximum absolute entry in einsum_ir solution: 44.2759
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135229
  time (eval):    0.0149781
  gflops (eval):  454.535
  gflops (total): 238.871
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135229,0.0149781,454.535,238.871

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0942899
  gflops (total): 72.2033
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.2033

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0307279
  gflops (eval):  221.559
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0307279,221.559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.7957
  maximum absolute entry in einsum_ir solution: 43.7957
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135347
  time (eval):    0.0150264
  gflops (eval):  453.073
  gflops (total): 238.368
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135347,0.0150264,453.073,238.368

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0952734
  gflops (total): 71.4579
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.4579

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313799
  gflops (eval):  216.956
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313799,216.956,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.1222
  maximum absolute entry in einsum_ir solution: 43.1222
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0140062
  time (eval):    0.0149704
  gflops (eval):  454.768
  gflops (total): 234.95
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0140062,0.0149704,454.768,234.95

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.093155
  gflops (total): 73.0829
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.0829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0314985
  gflops (eval):  216.139
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0314985,216.139,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.846
  maximum absolute entry in einsum_ir solution: 38.846
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136038
  time (eval):    0.0147637
  gflops (eval):  461.134
  gflops (total): 239.994
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136038,0.0147637,461.134,239.994

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0964098
  gflops (total): 70.6157
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.6157

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312612
  gflops (eval):  217.779
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312612,217.779,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8307
  maximum absolute entry in einsum_ir solution: 39.8307
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135662
  time (eval):    0.0150001
  gflops (eval):  453.868
  gflops (total): 238.325
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135662,0.0150001,453.868,238.325

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0945182
  gflops (total): 72.0289
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.0289

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0305284
  gflops (eval):  223.007
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0305284,223.007,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.0459
  maximum absolute entry in einsum_ir solution: 45.0459
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137326
  time (eval):    0.0149656
  gflops (eval):  454.914
  gflops (total): 237.229
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137326,0.0149656,454.914,237.229

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0955784
  gflops (total): 71.23
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0306783
  gflops (eval):  221.917
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0306783,221.917,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.9628
  maximum absolute entry in einsum_ir solution: 44.9628
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135132
  time (eval):    0.0150118
  gflops (eval):  453.513
  gflops (total): 238.669
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135132,0.0150118,453.513,238.669

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.095914
  gflops (total): 70.9807
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.9807

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.030971
  gflops (eval):  219.82
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.030971,219.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.7475
  maximum absolute entry in einsum_ir solution: 43.7475
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0133849
  time (eval):    0.0148587
  gflops (eval):  458.185
  gflops (total): 241.047
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0133849,0.0148587,458.185,241.047

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0955103
  gflops (total): 71.2807
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.2807

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0306646
  gflops (eval):  222.016
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0306646,222.016,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.4695
  maximum absolute entry in einsum_ir solution: 44.4695
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135409
  time (eval):    0.0148324
  gflops (eval):  458.999
  gflops (total): 239.946
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135409,0.0148324,458.999,239.946

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0958055
  gflops (total): 71.0611
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.0611

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313168
  gflops (eval):  217.393
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313168,217.393,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.0571
  maximum absolute entry in einsum_ir solution: 43.0571
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136873
  time (eval):    0.0150386
  gflops (eval):  452.703
  gflops (total): 237
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136873,0.0150386,452.703,237

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0962279
  gflops (total): 70.7491
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.7491

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.031161
  gflops (eval):  218.479
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.031161,218.479,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.298
  maximum absolute entry in einsum_ir solution: 44.298
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134795
  time (eval):    0.0150099
  gflops (eval):  453.569
  gflops (total): 238.967
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134795,0.0150099,453.569,238.967

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0953897
  gflops (total): 71.3709
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.3709

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.031069
  gflops (eval):  219.127
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.031069,219.127,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.8654
  maximum absolute entry in einsum_ir solution: 48.8654
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137661
  time (eval):    0.0150827
  gflops (eval):  451.381
  gflops (total): 235.991
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137661,0.0150827,451.381,235.991

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0957145
  gflops (total): 71.1286
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.1286

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0316029
  gflops (eval):  215.424
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0316029,215.424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.8109
  maximum absolute entry in einsum_ir solution: 41.8109
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136694
  time (eval):    0.0149846
  gflops (eval):  454.335
  gflops (total): 237.594
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136694,0.0149846,454.335,237.594

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0952229
  gflops (total): 71.4959
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.4959

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313115
  gflops (eval):  217.429
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313115,217.429,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.9297
  maximum absolute entry in einsum_ir solution: 43.9297
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137362
  time (eval):    0.0149602
  gflops (eval):  455.078
  gflops (total): 237.244
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137362,0.0149602,455.078,237.244

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0955476
  gflops (total): 71.2529
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.2529

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0314569
  gflops (eval):  216.424
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0314569,216.424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.9365
  maximum absolute entry in einsum_ir solution: 46.9365
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135907
  time (eval):    0.0157474
  gflops (eval):  432.328
  gflops (total): 232.054
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135907,0.0157474,432.328,232.054

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0926603
  gflops (total): 73.4731
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.4731

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313695
  gflops (eval):  217.028
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313695,217.028,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8696
  maximum absolute entry in einsum_ir solution: 40.8696
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013525
  time (eval):    0.0152753
  gflops (eval):  445.69
  gflops (total): 236.388
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013525,0.0152753,445.69,236.388

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0956515
  gflops (total): 71.1755
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.1755

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312247
  gflops (eval):  218.034
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312247,218.034,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.1774
  maximum absolute entry in einsum_ir solution: 42.1774
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137761
  time (eval):    0.0149794
  gflops (eval):  454.494
  gflops (total): 236.756
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137761,0.0149794,454.494,236.756

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0960409
  gflops (total): 70.8869
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.8869

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315295
  gflops (eval):  215.926
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315295,215.926,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.5854
  maximum absolute entry in einsum_ir solution: 44.5854
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0111429
  time (eval):    0.0152905
  gflops (eval):  445.247
  gflops (total): 257.555
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0111429,0.0152905,445.247,257.555

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0950607
  gflops (total): 71.6179
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.6179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0306686
  gflops (eval):  221.988
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0306686,221.988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.0941
  maximum absolute entry in einsum_ir solution: 44.0941
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134806
  time (eval):    0.0150126
  gflops (eval):  453.489
  gflops (total): 238.936
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134806,0.0150126,453.489,238.936

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0956751
  gflops (total): 71.158
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0316456
  gflops (eval):  215.134
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0316456,215.134,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.7949
  maximum absolute entry in einsum_ir solution: 43.7949
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135446
  time (eval):    0.0149229
  gflops (eval):  456.215
  gflops (total): 239.151
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135446,0.0149229,456.215,239.151

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0946977
  gflops (total): 71.8923
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.8923

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0314551
  gflops (eval):  216.437
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0314551,216.437,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.5317
  maximum absolute entry in einsum_ir solution: 45.5317
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135593
  time (eval):    0.0156025
  gflops (eval):  436.343
  gflops (total): 233.458
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135593,0.0156025,436.343,233.458

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0956578
  gflops (total): 71.1708
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.1708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.031468
  gflops (eval):  216.348
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.031468,216.348,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.1135
  maximum absolute entry in einsum_ir solution: 43.1135
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0132222
  time (eval):    0.0152508
  gflops (eval):  446.407
  gflops (total): 239.106
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0132222,0.0152508,446.407,239.106

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.096463
  gflops (total): 70.5767
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.5767

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0322453
  gflops (eval):  211.133
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0322453,211.133,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.4711
  maximum absolute entry in einsum_ir solution: 46.4711
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013463
  time (eval):    0.0150314
  gflops (eval):  452.923
  gflops (total): 238.926
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013463,0.0150314,452.923,238.926

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0958955
  gflops (total): 70.9944
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.9944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0322628
  gflops (eval):  211.018
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0322628,211.018,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.3072
  maximum absolute entry in einsum_ir solution: 44.3072
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0133623
  time (eval):    0.0157956
  gflops (eval):  431.009
  gflops (total): 233.489
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0133623,0.0157956,431.009,233.489

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0961997
  gflops (total): 70.7699
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.7699

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0309519
  gflops (eval):  219.956
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0309519,219.956,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.1135
  maximum absolute entry in einsum_ir solution: 41.1135
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134227
  time (eval):    0.01499
  gflops (eval):  454.172
  gflops (total): 239.612
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134227,0.01499,454.172,239.612

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.095448
  gflops (total): 71.3273
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.3273

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0316961
  gflops (eval):  214.791
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0316961,214.791,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.6603
  maximum absolute entry in einsum_ir solution: 44.6603
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136767
  time (eval):    0.0149833
  gflops (eval):  454.375
  gflops (total): 237.545
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136767,0.0149833,454.375,237.545

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0949715
  gflops (total): 71.6851
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.6851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0307611
  gflops (eval):  221.32
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0307611,221.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.1598
  maximum absolute entry in einsum_ir solution: 47.1598
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136067
  time (eval):    0.0150419
  gflops (eval):  452.607
  gflops (total): 237.64
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136067,0.0150419,452.607,237.64

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0949471
  gflops (total): 71.7035
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.7035

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0321195
  gflops (eval):  211.96
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0321195,211.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8339
  maximum absolute entry in einsum_ir solution: 40.8339
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136543
  time (eval):    0.0148863
  gflops (eval):  457.337
  gflops (total): 238.539
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136543,0.0148863,457.337,238.539

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0958807
  gflops (total): 71.0053
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.0053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0308436
  gflops (eval):  220.728
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0308436,220.728,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.8842
  maximum absolute entry in einsum_ir solution: 42.8842
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137117
  time (eval):    0.014904
  gflops (eval):  456.792
  gflops (total): 237.913
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137117,0.014904,456.792,237.913

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0954934
  gflops (total): 71.2933
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.2933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0321068
  gflops (eval):  212.044
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0321068,212.044,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.8636
  maximum absolute entry in einsum_ir solution: 43.8636
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135153
  time (eval):    0.0149821
  gflops (eval):  454.412
  gflops (total): 238.9
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135153,0.0149821,454.412,238.9

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0968896
  gflops (total): 70.266
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0317388
  gflops (eval):  214.502
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0317388,214.502,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8949
  maximum absolute entry in einsum_ir solution: 40.8949
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135731
  time (eval):    0.0149185
  gflops (eval):  456.35
  gflops (total): 238.949
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135731,0.0149185,456.35,238.949

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0947157
  gflops (total): 71.8787
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.8787

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313744
  gflops (eval):  216.993
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313744,216.993,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.9218
  maximum absolute entry in einsum_ir solution: 43.9218
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137073
  time (eval):    0.0150039
  gflops (eval):  453.751
  gflops (total): 237.121
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137073,0.0150039,453.751,237.121

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0957414
  gflops (total): 71.1087
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.1087

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0317662
  gflops (eval):  214.317
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0317662,214.317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.5968
  maximum absolute entry in einsum_ir solution: 42.5968
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135815
  time (eval):    0.0149246
  gflops (eval):  456.164
  gflops (total): 238.828
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135815,0.0149246,456.164,238.828

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0957348
  gflops (total): 71.1136
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.1136

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0305073
  gflops (eval):  223.161
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0305073,223.161,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.5262
  maximum absolute entry in einsum_ir solution: 46.5262
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134021
  time (eval):    0.0149188
  gflops (eval):  456.34
  gflops (total): 240.39
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134021,0.0149188,456.34,240.39

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0925059
  gflops (total): 73.5958
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.5958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0307523
  gflops (eval):  221.383
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0307523,221.383,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4829
  maximum absolute entry in einsum_ir solution: 40.4829
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013625
  time (eval):    0.0148439
  gflops (eval):  458.643
  gflops (total): 239.14
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013625,0.0148439,458.643,239.14

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0948573
  gflops (total): 71.7714
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.7714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310972
  gflops (eval):  218.928
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310972,218.928,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.7133
  maximum absolute entry in einsum_ir solution: 43.7133
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0138089
  time (eval):    0.0148387
  gflops (eval):  458.805
  gflops (total): 237.649
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0138089,0.0148387,458.805,237.649

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0957734
  gflops (total): 71.0849
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.0849

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313944
  gflops (eval):  216.856
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313944,216.856,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.0321
  maximum absolute entry in einsum_ir solution: 45.0321
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134811
  time (eval):    0.0149069
  gflops (eval):  456.703
  gflops (total): 239.821
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134811,0.0149069,456.703,239.821

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0951718
  gflops (total): 71.5343
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.5343

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310358
  gflops (eval):  219.361
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310358,219.361,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.3733
  maximum absolute entry in einsum_ir solution: 43.3733
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135597
  time (eval):    0.0148451
  gflops (eval):  458.605
  gflops (total): 239.679
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135597,0.0148451,458.605,239.679

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0960295
  gflops (total): 70.8953
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.8953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0307317
  gflops (eval):  221.531
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0307317,221.531,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6004
  maximum absolute entry in einsum_ir solution: 40.6004
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0125923
  time (eval):    0.014845
  gflops (eval):  458.608
  gflops (total): 248.131
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0125923,0.014845,458.608,248.131

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0950019
  gflops (total): 71.6622
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.6622

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0306987
  gflops (eval):  221.77
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0306987,221.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.5099
  maximum absolute entry in einsum_ir solution: 45.5099
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135143
  time (eval):    0.0149024
  gflops (eval):  456.841
  gflops (total): 239.579
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135143,0.0149024,456.841,239.579

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.095342
  gflops (total): 71.4065
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.4065

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310442
  gflops (eval):  219.302
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310442,219.302,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.7013
  maximum absolute entry in einsum_ir solution: 41.7013
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013482
  time (eval):    0.0159137
  gflops (eval):  427.81
  gflops (total): 231.6
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013482,0.0159137,427.81,231.6

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0930028
  gflops (total): 73.2025
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.2025

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0314374
  gflops (eval):  216.559
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0314374,216.559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.7091
  maximum absolute entry in einsum_ir solution: 45.7091
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137404
  time (eval):    0.0149938
  gflops (eval):  454.057
  gflops (total): 236.931
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137404,0.0149938,454.057,236.931

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0957396
  gflops (total): 71.11
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.031516
  gflops (eval):  216.018
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.031516,216.018,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.8193
  maximum absolute entry in einsum_ir solution: 43.8193
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134169
  time (eval):    0.0149946
  gflops (eval):  454.033
  gflops (total): 239.622
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134169,0.0149946,454.033,239.622

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0933099
  gflops (total): 72.9616
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.9616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312156
  gflops (eval):  218.098
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312156,218.098,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.9435
  maximum absolute entry in einsum_ir solution: 42.9435
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0138932
  time (eval):    0.0147988
  gflops (eval):  460.04
  gflops (total): 237.28
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0138932,0.0147988,460.04,237.28

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0959077
  gflops (total): 70.9854
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.9854

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310409
  gflops (eval):  219.325
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310409,219.325,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.7782
  maximum absolute entry in einsum_ir solution: 44.7782
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013534
  time (eval):    0.0149157
  gflops (eval):  456.435
  gflops (total): 239.301
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013534,0.0149157,456.435,239.301

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0927639
  gflops (total): 73.3911
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.3911

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0316041
  gflops (eval):  215.417
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0316041,215.417,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.018
  maximum absolute entry in einsum_ir solution: 46.018
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136607
  time (eval):    0.014873
  gflops (eval):  457.746
  gflops (total): 238.597
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136607,0.014873,457.746,238.597

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0957315
  gflops (total): 71.1161
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.1161

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0319235
  gflops (eval):  213.261
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0319235,213.261,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.1441
  maximum absolute entry in einsum_ir solution: 43.1441
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136487
  time (eval):    0.014883
  gflops (eval):  457.439
  gflops (total): 238.614
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136487,0.014883,457.439,238.614

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0952835
  gflops (total): 71.4504
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.4504

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0317549
  gflops (eval):  214.393
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0317549,214.393,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.6206
  maximum absolute entry in einsum_ir solution: 44.6206
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137806
  time (eval):    0.0150004
  gflops (eval):  453.857
  gflops (total): 236.547
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137806,0.0150004,453.857,236.547

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0953613
  gflops (total): 71.3921
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.3921

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313781
  gflops (eval):  216.968
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313781,216.968,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.7838
  maximum absolute entry in einsum_ir solution: 41.7838
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0138472
  time (eval):    0.0154105
  gflops (eval):  441.779
  gflops (total): 232.692
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0138472,0.0154105,441.779,232.692

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0968975
  gflops (total): 70.2602
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.2602

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0316346
  gflops (eval):  215.209
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0316346,215.209,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.7733
  maximum absolute entry in einsum_ir solution: 44.7733
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0133701
  time (eval):    0.0149828
  gflops (eval):  454.391
  gflops (total): 240.118
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0133701,0.0149828,454.391,240.118

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0931703
  gflops (total): 73.071
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.071

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0309102
  gflops (eval):  220.253
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0309102,220.253,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.6018
  maximum absolute entry in einsum_ir solution: 42.6018
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0132809
  time (eval):    0.0148489
  gflops (eval):  458.487
  gflops (total): 242.022
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0132809,0.0148489,458.487,242.022

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0959364
  gflops (total): 70.9641
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.9641

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0308651
  gflops (eval):  220.574
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0308651,220.574,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.9332
  maximum absolute entry in einsum_ir solution: 43.9332
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137195
  time (eval):    0.01483
  gflops (eval):  459.074
  gflops (total): 238.465
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137195,0.01483,459.074,238.465

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.095995
  gflops (total): 70.9208
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.9208

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0311458
  gflops (eval):  218.586
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0311458,218.586,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.1201
  maximum absolute entry in einsum_ir solution: 47.1201
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0132814
  time (eval):    0.0150971
  gflops (eval):  450.95
  gflops (total): 239.902
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0132814,0.0150971,450.95,239.902

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0958395
  gflops (total): 71.0359
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.0359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312752
  gflops (eval):  217.682
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312752,217.682,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.3181
  maximum absolute entry in einsum_ir solution: 45.3181
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135156
  time (eval):    0.0150059
  gflops (eval):  453.692
  gflops (total): 238.699
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135156,0.0150059,453.692,238.699

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0941464
  gflops (total): 72.3134
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.3134

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0314521
  gflops (eval):  216.457
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0314521,216.457,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.7192
  maximum absolute entry in einsum_ir solution: 42.7192
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134041
  time (eval):    0.014856
  gflops (eval):  458.268
  gflops (total): 240.906
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134041,0.014856,458.268,240.906

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0953614
  gflops (total): 71.392
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.392

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0314597
  gflops (eval):  216.405
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0314597,216.405,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.5571
  maximum absolute entry in einsum_ir solution: 45.5571
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135335
  time (eval):    0.0148984
  gflops (eval):  456.964
  gflops (total): 239.45
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135335,0.0148984,456.964,239.45

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.095389
  gflops (total): 71.3713
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.3713

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310731
  gflops (eval):  219.098
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310731,219.098,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.8547
  maximum absolute entry in einsum_ir solution: 47.8547
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134939
  time (eval):    0.0150043
  gflops (eval):  453.74
  gflops (total): 238.894
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134939,0.0150043,453.74,238.894

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0939203
  gflops (total): 72.4874
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.4874

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0307686
  gflops (eval):  221.266
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0307686,221.266,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.1193
  maximum absolute entry in einsum_ir solution: 45.1193
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134735
  time (eval):    0.0147736
  gflops (eval):  460.824
  gflops (total): 241.018
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134735,0.0147736,460.824,241.018

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0965053
  gflops (total): 70.5458
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.5458

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0322077
  gflops (eval):  211.379
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0322077,211.379,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.3455
  maximum absolute entry in einsum_ir solution: 43.3455
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136359
  time (eval):    0.0147554
  gflops (eval):  461.394
  gflops (total): 239.794
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136359,0.0147554,461.394,239.794

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0958061
  gflops (total): 71.0606
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.0606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0320632
  gflops (eval):  212.332
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0320632,212.332,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.1298
  maximum absolute entry in einsum_ir solution: 44.1298
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137908
  time (eval):    0.0150418
  gflops (eval):  452.609
  gflops (total): 236.123
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137908,0.0150418,452.609,236.123

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0964286
  gflops (total): 70.6019
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.6019

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0317047
  gflops (eval):  214.733
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0317047,214.733,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.0369
  maximum absolute entry in einsum_ir solution: 50.0369
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013985
  time (eval):    0.015619
  gflops (eval):  435.881
  gflops (total): 229.97
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013985,0.015619,435.881,229.97

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0935659
  gflops (total): 72.762
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.762

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0307388
  gflops (eval):  221.481
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0307388,221.481,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.2835
  maximum absolute entry in einsum_ir solution: 51.2835
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136801
  time (eval):    0.0149605
  gflops (eval):  455.069
  gflops (total): 237.707
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136801,0.0149605,455.069,237.707

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0957383
  gflops (total): 71.111
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.111

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312636
  gflops (eval):  217.762
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312636,217.762,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.6127
  maximum absolute entry in einsum_ir solution: 43.6127
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135631
  time (eval):    0.0148273
  gflops (eval):  459.158
  gflops (total): 239.801
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135631,0.0148273,459.158,239.801

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0957475
  gflops (total): 71.1041
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.1041

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310413
  gflops (eval):  219.322
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310413,219.322,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8884
  maximum absolute entry in einsum_ir solution: 39.8884
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136899
  time (eval):    0.0149669
  gflops (eval):  454.872
  gflops (total): 237.572
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136899,0.0149669,454.872,237.572

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.094814
  gflops (total): 71.8042
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.8042

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0307916
  gflops (eval):  221.1
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0307916,221.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.5571
  maximum absolute entry in einsum_ir solution: 42.5571
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0142177
  time (eval):    0.0149202
  gflops (eval):  456.297
  gflops (total): 233.649
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0142177,0.0149202,456.297,233.649

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.09618
  gflops (total): 70.7844
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.7844

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313858
  gflops (eval):  216.915
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313858,216.915,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.3457
  maximum absolute entry in einsum_ir solution: 43.3457
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152231
  time (eval):    0.00599459
  gflops (eval):  517.595
  gflops (total): 146.235
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152231,0.00599459,517.595,146.235

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467824
  gflops (total): 66.3234
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.3234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148079
  gflops (eval):  209.535
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148079,209.535,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.1536
  maximum absolute entry in einsum_ir solution: 52.1536
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155171
  time (eval):    0.00595827
  gflops (eval):  520.75
  gflops (total): 144.481
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155171,0.00595827,520.75,144.481

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467627
  gflops (total): 66.3513
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.3513

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148501
  gflops (eval):  208.939
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148501,208.939,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.925
  maximum absolute entry in einsum_ir solution: 52.925
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0151998
  time (eval):    0.00593284
  gflops (eval):  522.982
  gflops (total): 146.824
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0151998,0.00593284,522.982,146.824

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.046684
  gflops (total): 66.4632
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.4632

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014834
  gflops (eval):  209.166
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014834,209.166,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.0673
  maximum absolute entry in einsum_ir solution: 51.0673
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157055
  time (eval):    0.0059641
  gflops (eval):  520.241
  gflops (total): 143.185
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157055,0.0059641,520.241,143.185

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0465438
  gflops (total): 66.6635
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.6635

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148144
  gflops (eval):  209.443
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148144,209.443,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.2844
  maximum absolute entry in einsum_ir solution: 54.2844
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0159435
  time (eval):    0.0059814
  gflops (eval):  518.736
  gflops (total): 141.518
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0159435,0.0059814,518.736,141.518

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467101
  gflops (total): 66.4261
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.4261

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147574
  gflops (eval):  210.252
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147574,210.252,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.3008
  maximum absolute entry in einsum_ir solution: 49.3008
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0158691
  time (eval):    0.00597969
  gflops (eval):  518.885
  gflops (total): 142.011
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0158691,0.00597969,518.885,142.011

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469266
  gflops (total): 66.1196
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.1196

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014902
  gflops (eval):  208.212
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014902,208.212,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5024
  maximum absolute entry in einsum_ir solution: 54.5024
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0158162
  time (eval):    0.00595102
  gflops (eval):  521.384
  gflops (total): 142.543
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0158162,0.00595102,521.384,142.543

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470344
  gflops (total): 65.968
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148541
  gflops (eval):  208.883
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148541,208.883,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5196
  maximum absolute entry in einsum_ir solution: 56.5196
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0153988
  time (eval):    0.00589192
  gflops (eval):  526.614
  gflops (total): 145.733
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0153988,0.00589192,526.614,145.733

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468355
  gflops (total): 66.2482
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.2482

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148565
  gflops (eval):  208.849
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148565,208.849,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.7216
  maximum absolute entry in einsum_ir solution: 51.7216
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157297
  time (eval):    0.00597783
  gflops (eval):  519.046
  gflops (total): 142.935
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157297,0.00597783,519.046,142.935

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0472176
  gflops (total): 65.7121
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.7121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148377
  gflops (eval):  209.114
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148377,209.114,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.4919
  maximum absolute entry in einsum_ir solution: 49.4919
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0161038
  time (eval):    0.00594745
  gflops (eval):  521.698
  gflops (total): 140.707
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0161038,0.00594745,521.698,140.707

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.046471
  gflops (total): 66.7678
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.7678

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147653
  gflops (eval):  210.14
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147653,210.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.9076
  maximum absolute entry in einsum_ir solution: 49.9076
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154855
  time (eval):    0.0059786
  gflops (eval):  518.979
  gflops (total): 144.556
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154855,0.0059786,518.979,144.556

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0471737
  gflops (total): 65.7734
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.7734

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014728
  gflops (eval):  210.672
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014728,210.672,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1794
  maximum absolute entry in einsum_ir solution: 54.1794
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0159702
  time (eval):    0.0059093
  gflops (eval):  525.065
  gflops (total): 141.812
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0159702,0.0059093,525.065,141.812

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469433
  gflops (total): 66.0961
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.0961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148449
  gflops (eval):  209.012
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148449,209.012,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.2991
  maximum absolute entry in einsum_ir solution: 52.2991
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152324
  time (eval):    0.00597324
  gflops (eval):  519.445
  gflops (total): 146.318
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152324,0.00597324,519.445,146.318

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0466983
  gflops (total): 66.4429
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.4429

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148777
  gflops (eval):  208.551
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148777,208.551,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.5663
  maximum absolute entry in einsum_ir solution: 52.5663
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0158762
  time (eval):    0.00593334
  gflops (eval):  522.938
  gflops (total): 142.266
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0158762,0.00593334,522.938,142.266

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469285
  gflops (total): 66.1169
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.1169

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148256
  gflops (eval):  209.285
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148256,209.285,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.9431
  maximum absolute entry in einsum_ir solution: 51.9431
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0151503
  time (eval):    0.00592683
  gflops (eval):  523.512
  gflops (total): 147.21
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0151503,0.00592683,523.512,147.21

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467676
  gflops (total): 66.3445
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.3445

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148672
  gflops (eval):  208.699
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148672,208.699,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7751
  maximum absolute entry in einsum_ir solution: 54.7751
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155681
  time (eval):    0.00595954
  gflops (eval):  520.639
  gflops (total): 144.129
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155681,0.00595954,520.639,144.129

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0465579
  gflops (total): 66.6433
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.6433

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148518
  gflops (eval):  208.916
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148518,208.916,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.6588
  maximum absolute entry in einsum_ir solution: 50.6588
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152489
  time (eval):    0.0059811
  gflops (eval):  518.762
  gflops (total): 146.15
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152489,0.0059811,518.762,146.15

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468016
  gflops (total): 66.2963
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.2963

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148227
  gflops (eval):  209.326
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148227,209.326,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.701
  maximum absolute entry in einsum_ir solution: 52.701
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0158095
  time (eval):    0.00599406
  gflops (eval):  517.64
  gflops (total): 142.306
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0158095,0.00599406,517.64,142.306

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0464302
  gflops (total): 66.8265
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.8265

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0146972
  gflops (eval):  211.113
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0146972,211.113,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0197
  maximum absolute entry in einsum_ir solution: 57.0197
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0150717
  time (eval):    0.00596139
  gflops (eval):  520.478
  gflops (total): 147.519
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0150717,0.00596139,520.478,147.519

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0472403
  gflops (total): 65.6805
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.6805

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0149136
  gflops (eval):  208.049
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0149136,208.049,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.1024
  maximum absolute entry in einsum_ir solution: 51.1024
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0151781
  time (eval):    0.00591569
  gflops (eval):  524.498
  gflops (total): 147.094
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0151781,0.00591569,524.498,147.094

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0465596
  gflops (total): 66.6408
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.6408

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148237
  gflops (eval):  209.311
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148237,209.311,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6902
  maximum absolute entry in einsum_ir solution: 55.6902
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0145228
  time (eval):    0.0059672
  gflops (eval):  519.971
  gflops (total): 151.429
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0145228,0.0059672,519.971,151.429

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467099
  gflops (total): 66.4264
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.4264

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148144
  gflops (eval):  209.443
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148144,209.443,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.4091
  maximum absolute entry in einsum_ir solution: 54.4091
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0149959
  time (eval):    0.00599332
  gflops (eval):  517.704
  gflops (total): 147.827
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0149959,0.00599332,517.704,147.827

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470283
  gflops (total): 65.9766
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148023
  gflops (eval):  209.614
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148023,209.614,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.2352
  maximum absolute entry in einsum_ir solution: 54.2352
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155334
  time (eval):    0.00596522
  gflops (eval):  520.143
  gflops (total): 144.324
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155334,0.00596522,520.143,144.324

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.046637
  gflops (total): 66.5303
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.5303

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148335
  gflops (eval):  209.173
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148335,209.173,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4712
  maximum absolute entry in einsum_ir solution: 56.4712
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0162192
  time (eval):    0.00595911
  gflops (eval):  520.676
  gflops (total): 139.901
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0162192,0.00595911,520.676,139.901

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0473881
  gflops (total): 65.4757
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.4757

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147727
  gflops (eval):  210.034
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147727,210.034,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0731
  maximum absolute entry in einsum_ir solution: 57.0731
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157284
  time (eval):    0.00594296
  gflops (eval):  522.092
  gflops (total): 143.174
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157284,0.00594296,522.092,143.174

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468143
  gflops (total): 66.2782
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.2782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0146969
  gflops (eval):  211.118
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0146969,211.118,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.8883
  maximum absolute entry in einsum_ir solution: 50.8883
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0149524
  time (eval):    0.00598531
  gflops (eval):  518.398
  gflops (total): 148.19
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0149524,0.00598531,518.398,148.19

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0457044
  gflops (total): 67.8878
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,67.8878

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014914
  gflops (eval):  208.045
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014914,208.045,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.9532
  maximum absolute entry in einsum_ir solution: 54.9532
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154615
  time (eval):    0.00595867
  gflops (eval):  520.715
  gflops (total): 144.853
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154615,0.00595867,520.715,144.853

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0473536
  gflops (total): 65.5234
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.5234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147958
  gflops (eval):  209.706
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147958,209.706,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.87
  maximum absolute entry in einsum_ir solution: 58.87
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155179
  time (eval):    0.00596512
  gflops (eval):  520.152
  gflops (total): 144.429
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155179,0.00596512,520.152,144.429

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0464717
  gflops (total): 66.7669
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.7669

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0151101
  gflops (eval):  205.344
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0151101,205.344,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0801
  maximum absolute entry in einsum_ir solution: 55.0801
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0162331
  time (eval):    0.00600219
  gflops (eval):  516.94
  gflops (total): 139.543
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0162331,0.00600219,516.94,139.543

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0463697
  gflops (total): 66.9137
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.9137

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148155
  gflops (eval):  209.427
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148155,209.427,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7998
  maximum absolute entry in einsum_ir solution: 54.7998
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0160344
  time (eval):    0.00597927
  gflops (eval):  518.921
  gflops (total): 140.947
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0160344,0.00597927,518.921,140.947

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470581
  gflops (total): 65.9348
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9348

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148665
  gflops (eval):  208.708
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148665,208.708,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.2051
  maximum absolute entry in einsum_ir solution: 50.2051
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154495
  time (eval):    0.00594543
  gflops (eval):  521.875
  gflops (total): 145.024
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154495,0.00594543,521.875,145.024

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0472264
  gflops (total): 65.6999
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.6999

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148132
  gflops (eval):  209.46
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148132,209.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.5348
  maximum absolute entry in einsum_ir solution: 52.5348
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152349
  time (eval):    0.00594429
  gflops (eval):  521.974
  gflops (total): 146.501
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152349,0.00594429,521.974,146.501

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.046242
  gflops (total): 67.0985
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,67.0985

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147982
  gflops (eval):  209.671
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147982,209.671,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.7722
  maximum absolute entry in einsum_ir solution: 53.7722
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152285
  time (eval):    0.0059529
  gflops (eval):  521.22
  gflops (total): 146.486
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152285,0.0059529,521.22,146.486

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0474968
  gflops (total): 65.3259
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.3259

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0149229
  gflops (eval):  207.92
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0149229,207.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.7773
  maximum absolute entry in einsum_ir solution: 53.7773
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0153368
  time (eval):    0.0059757
  gflops (eval):  519.231
  gflops (total): 145.585
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0153368,0.0059757,519.231,145.585

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470391
  gflops (total): 65.9615
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9615

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147692
  gflops (eval):  210.084
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147692,210.084,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6091
  maximum absolute entry in einsum_ir solution: 56.6091
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152029
  time (eval):    0.00592442
  gflops (eval):  523.726
  gflops (total): 146.86
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152029,0.00592442,523.726,146.86

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470722
  gflops (total): 65.9152
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9152

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0149082
  gflops (eval):  208.125
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0149082,208.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.3273
  maximum absolute entry in einsum_ir solution: 52.3273
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0159064
  time (eval):    0.00593874
  gflops (eval):  522.462
  gflops (total): 142.035
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0159064,0.00593874,522.462,142.035

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470992
  gflops (total): 65.8773
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.8773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148352
  gflops (eval):  209.149
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148352,209.149,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8586
  maximum absolute entry in einsum_ir solution: 54.8586
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157776
  time (eval):    0.00594903
  gflops (eval):  521.559
  gflops (total): 142.81
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157776,0.00594903,521.559,142.81

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.04648
  gflops (total): 66.7549
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.7549

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0150052
  gflops (eval):  206.78
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0150052,206.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.4473
  maximum absolute entry in einsum_ir solution: 51.4473
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156638
  time (eval):    0.00597016
  gflops (eval):  519.713
  gflops (total): 143.421
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156638,0.00597016,519.713,143.421

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0466445
  gflops (total): 66.5196
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.5196

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147708
  gflops (eval):  210.061
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147708,210.061,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.1784
  maximum absolute entry in einsum_ir solution: 50.1784
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154793
  time (eval):    0.00599068
  gflops (eval):  517.932
  gflops (total): 144.517
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154793,0.00599068,517.932,144.517

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0463911
  gflops (total): 66.8829
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.8829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147996
  gflops (eval):  209.652
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147996,209.652,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0869
  maximum absolute entry in einsum_ir solution: 55.0869
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156717
  time (eval):    0.00597193
  gflops (eval):  519.559
  gflops (total): 143.357
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156717,0.00597193,519.559,143.357

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0464993
  gflops (total): 66.7273
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.7273

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148317
  gflops (eval):  209.199
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148317,209.199,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5835
  maximum absolute entry in einsum_ir solution: 54.5835
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157094
  time (eval):    0.00594446
  gflops (eval):  521.96
  gflops (total): 143.29
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157094,0.00594446,521.96,143.29

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.047002
  gflops (total): 66.0135
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.0135

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147993
  gflops (eval):  209.657
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147993,209.657,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.196
  maximum absolute entry in einsum_ir solution: 53.196
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152626
  time (eval):    0.00590915
  gflops (eval):  525.079
  gflops (total): 146.553
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152626,0.00590915,525.079,146.553

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0472726
  gflops (total): 65.6357
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.6357

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147905
  gflops (eval):  209.782
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147905,209.782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.6335
  maximum absolute entry in einsum_ir solution: 51.6335
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156912
  time (eval):    0.00596995
  gflops (eval):  519.731
  gflops (total): 143.241
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156912,0.00596995,519.731,143.241

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470343
  gflops (total): 65.9682
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9682

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148334
  gflops (eval):  209.175
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148334,209.175,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.6738
  maximum absolute entry in einsum_ir solution: 49.6738
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155953
  time (eval):    0.00590678
  gflops (eval):  525.289
  gflops (total): 144.301
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155953,0.00590678,525.289,144.301

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470519
  gflops (total): 65.9436
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9436

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0146688
  gflops (eval):  211.521
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0146688,211.521,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.6455
  maximum absolute entry in einsum_ir solution: 51.6455
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.01544
  time (eval):    0.00596797
  gflops (eval):  519.904
  gflops (total): 144.935
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.01544,0.00596797,519.904,144.935

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467369
  gflops (total): 66.388
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.388

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148436
  gflops (eval):  209.03
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148436,209.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8469
  maximum absolute entry in einsum_ir solution: 54.8469
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152376
  time (eval):    0.00594194
  gflops (eval):  522.182
  gflops (total): 146.499
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152376,0.00594194,522.182,146.499

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0466534
  gflops (total): 66.5068
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.5068

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148271
  gflops (eval):  209.263
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148271,209.263,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.548
  maximum absolute entry in einsum_ir solution: 54.548
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157705
  time (eval):    0.00600739
  gflops (eval):  516.492
  gflops (total): 142.473
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157705,0.00600739,516.492,142.473

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0464345
  gflops (total): 66.8204
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.8204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014781
  gflops (eval):  209.916
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014781,209.916,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2553
  maximum absolute entry in einsum_ir solution: 57.2553
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.01518
  time (eval):    0.00596456
  gflops (eval):  520.2
  gflops (total): 146.741
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.01518,0.00596456,520.2,146.741

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469441
  gflops (total): 66.095
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.095

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148932
  gflops (eval):  208.334
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148932,208.334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.7387
  maximum absolute entry in einsum_ir solution: 52.7387
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152321
  time (eval):    0.00599012
  gflops (eval):  517.981
  gflops (total): 146.204
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152321,0.00599012,517.981,146.204

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467236
  gflops (total): 66.4069
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.4069

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147832
  gflops (eval):  209.885
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147832,209.885,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.599
  maximum absolute entry in einsum_ir solution: 60.599
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156086
  time (eval):    0.00594723
  gflops (eval):  521.716
  gflops (total): 143.941
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156086,0.00594723,521.716,143.941

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0472202
  gflops (total): 65.7085
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.7085

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147954
  gflops (eval):  209.712
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147954,209.712,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.7816
  maximum absolute entry in einsum_ir solution: 50.7816
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155909
  time (eval):    0.00587656
  gflops (eval):  527.991
  gflops (total): 144.534
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155909,0.00587656,527.991,144.534

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.047397
  gflops (total): 65.4634
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.4634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147419
  gflops (eval):  210.473
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147419,210.473,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.0495
  maximum absolute entry in einsum_ir solution: 52.0495
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0159398
  time (eval):    0.00598052
  gflops (eval):  518.813
  gflops (total): 141.548
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0159398,0.00598052,518.813,141.548

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467208
  gflops (total): 66.4109
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.4109

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147692
  gflops (eval):  210.084
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147692,210.084,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1539
  maximum absolute entry in einsum_ir solution: 56.1539
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0153696
  time (eval):    0.00595335
  gflops (eval):  521.18
  gflops (total): 145.513
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0153696,0.00595335,521.18,145.513

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469791
  gflops (total): 66.0457
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.0457

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148981
  gflops (eval):  208.266
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148981,208.266,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1575
  maximum absolute entry in einsum_ir solution: 56.1575
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015822
  time (eval):    0.00609927
  gflops (eval):  508.711
  gflops (total): 141.542
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015822,0.00609927,508.711,141.542

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0473295
  gflops (total): 65.5567
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.5567

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147592
  gflops (eval):  210.227
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147592,210.227,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2079
  maximum absolute entry in einsum_ir solution: 57.2079
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0153611
  time (eval):    0.00595813
  gflops (eval):  520.762
  gflops (total): 145.539
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0153611,0.00595813,520.762,145.539

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0471002
  gflops (total): 65.8759
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.8759

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148512
  gflops (eval):  208.924
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148512,208.924,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7945
  maximum absolute entry in einsum_ir solution: 54.7945
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152672
  time (eval):    0.00594814
  gflops (eval):  521.637
  gflops (total): 146.251
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152672,0.00594814,521.637,146.251

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467538
  gflops (total): 66.3639
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.3639

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0149079
  gflops (eval):  208.13
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0149079,208.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3093
  maximum absolute entry in einsum_ir solution: 54.3093
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155217
  time (eval):    0.00594655
  gflops (eval):  521.776
  gflops (total): 144.528
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155217,0.00594655,521.776,144.528

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469755
  gflops (total): 66.0507
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.0507

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148434
  gflops (eval):  209.034
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148434,209.034,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.8631
  maximum absolute entry in einsum_ir solution: 51.8631
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157739
  time (eval):    0.00595127
  gflops (eval):  521.363
  gflops (total): 142.819
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157739,0.00595127,521.363,142.819

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0458708
  gflops (total): 67.6415
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,67.6415

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0150201
  gflops (eval):  206.575
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0150201,206.575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.5491
  maximum absolute entry in einsum_ir solution: 51.5491
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156987
  time (eval):    0.0059721
  gflops (eval):  519.544
  gflops (total): 143.177
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156987,0.0059721,519.544,143.177

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468317
  gflops (total): 66.2536
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.2536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147479
  gflops (eval):  210.387
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147479,210.387,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.5236
  maximum absolute entry in einsum_ir solution: 50.5236
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154286
  time (eval):    0.00598317
  gflops (eval):  518.583
  gflops (total): 144.909
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154286,0.00598317,518.583,144.909

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.047131
  gflops (total): 65.8328
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.8328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0149607
  gflops (eval):  207.394
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0149607,207.394,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1805
  maximum absolute entry in einsum_ir solution: 56.1805
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0160657
  time (eval):    0.00591759
  gflops (eval):  524.33
  gflops (total): 141.142
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0160657,0.00591759,524.33,141.142

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0466738
  gflops (total): 66.4777
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.4777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147962
  gflops (eval):  209.701
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147962,209.701,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.0074
  maximum absolute entry in einsum_ir solution: 53.0074
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156321
  time (eval):    0.00598632
  gflops (eval):  518.31
  gflops (total): 143.524
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156321,0.00598632,518.31,143.524

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467716
  gflops (total): 66.3387
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.3387

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0149576
  gflops (eval):  207.437
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0149576,207.437,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.1221
  maximum absolute entry in einsum_ir solution: 51.1221
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015758
  time (eval):    0.00596443
  gflops (eval):  520.212
  gflops (total): 142.837
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015758,0.00596443,520.212,142.837

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470854
  gflops (total): 65.8967
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.8967

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148843
  gflops (eval):  208.459
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148843,208.459,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1914
  maximum absolute entry in einsum_ir solution: 58.1914
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0153397
  time (eval):    0.00589132
  gflops (eval):  526.668
  gflops (total): 146.143
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0153397,0.00589132,526.668,146.143

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470434
  gflops (total): 65.9555
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9555

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148654
  gflops (eval):  208.724
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148654,208.724,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0114
  maximum absolute entry in einsum_ir solution: 55.0114
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0151495
  time (eval):    0.00592045
  gflops (eval):  524.077
  gflops (total): 147.261
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0151495,0.00592045,524.077,147.261

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0471335
  gflops (total): 65.8294
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.8294

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0149937
  gflops (eval):  206.938
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0149937,206.938,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9872
  maximum absolute entry in einsum_ir solution: 58.9872
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0132799
  time (eval):    0.00593885
  gflops (eval):  522.453
  gflops (total): 161.445
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0132799,0.00593885,522.453,161.445

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467169
  gflops (total): 66.4164
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.4164

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148957
  gflops (eval):  208.3
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148957,208.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.2027
  maximum absolute entry in einsum_ir solution: 52.2027
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156475
  time (eval):    0.00594009
  gflops (eval):  522.344
  gflops (total): 143.729
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156475,0.00594009,522.344,143.729

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0465758
  gflops (total): 66.6176
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.6176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148554
  gflops (eval):  208.865
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148554,208.865,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.0979
  maximum absolute entry in einsum_ir solution: 53.0979
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0149933
  time (eval):    0.00594756
  gflops (eval):  521.688
  gflops (total): 148.168
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0149933,0.00594756,521.688,148.168

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0462366
  gflops (total): 67.1063
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,67.1063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148635
  gflops (eval):  208.751
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148635,208.751,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.384
  maximum absolute entry in einsum_ir solution: 51.384
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156807
  time (eval):    0.0058918
  gflops (eval):  526.625
  gflops (total): 143.83
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156807,0.0058918,526.625,143.83

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470929
  gflops (total): 65.8862
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.8862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148035
  gflops (eval):  209.597
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148035,209.597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.1805
  maximum absolute entry in einsum_ir solution: 53.1805
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0158945
  time (eval):    0.00594337
  gflops (eval):  522.055
  gflops (total): 142.082
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0158945,0.00594337,522.055,142.082

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0473425
  gflops (total): 65.5387
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.5387

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148895
  gflops (eval):  208.387
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148895,208.387,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.6329
  maximum absolute entry in einsum_ir solution: 54.6329
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157193
  time (eval):    0.00599956
  gflops (eval):  517.166
  gflops (total): 142.861
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157193,0.00599956,517.166,142.861

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470378
  gflops (total): 65.9633
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147801
  gflops (eval):  209.928
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147801,209.928,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.9392
  maximum absolute entry in einsum_ir solution: 49.9392
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157422
  time (eval):    0.00595229
  gflops (eval):  521.273
  gflops (total): 143.021
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157422,0.00595229,521.273,143.021

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0463487
  gflops (total): 66.9441
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.9441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148606
  gflops (eval):  208.791
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148606,208.791,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1852
  maximum absolute entry in einsum_ir solution: 56.1852
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0150586
  time (eval):    0.00593474
  gflops (eval):  522.814
  gflops (total): 147.798
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0150586,0.00593474,522.814,147.798

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0471012
  gflops (total): 65.8745
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.8745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148554
  gflops (eval):  208.864
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148554,208.864,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.8875
  maximum absolute entry in einsum_ir solution: 52.8875
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156681
  time (eval):    0.00600061
  gflops (eval):  517.076
  gflops (total): 143.192
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156681,0.00600061,517.076,143.192

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0464857
  gflops (total): 66.7468
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.7468

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148339
  gflops (eval):  209.167
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148339,209.167,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0379
  maximum absolute entry in einsum_ir solution: 55.0379
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157128
  time (eval):    0.00594492
  gflops (eval):  521.919
  gflops (total): 143.264
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157128,0.00594492,521.919,143.264

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470424
  gflops (total): 65.9568
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9568

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148455
  gflops (eval):  209.004
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148455,209.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.0062
  maximum absolute entry in einsum_ir solution: 52.0062
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0150141
  time (eval):    0.00596833
  gflops (eval):  519.872
  gflops (total): 147.875
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0150141,0.00596833,519.872,147.875

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0465789
  gflops (total): 66.6132
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.6132

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0150566
  gflops (eval):  206.074
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0150566,206.074,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4374
  maximum absolute entry in einsum_ir solution: 55.4374
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0160293
  time (eval):    0.00591434
  gflops (eval):  524.618
  gflops (total): 141.397
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0160293,0.00591434,524.618,141.397

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0471398
  gflops (total): 65.8206
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.8206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148692
  gflops (eval):  208.671
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148692,208.671,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8508
  maximum absolute entry in einsum_ir solution: 58.8508
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154704
  time (eval):    0.00596173
  gflops (eval):  520.448
  gflops (total): 144.772
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154704,0.00596173,520.448,144.772

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470099
  gflops (total): 66.0024
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.0024

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148261
  gflops (eval):  209.277
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148261,209.277,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5188
  maximum absolute entry in einsum_ir solution: 54.5188
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155037
  time (eval):    0.00588258
  gflops (eval):  527.45
  gflops (total): 145.082
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155037,0.00588258,527.45,145.082

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469766
  gflops (total): 66.0492
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.0492

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148322
  gflops (eval):  209.191
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148322,209.191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3375
  maximum absolute entry in einsum_ir solution: 57.3375
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0146921
  time (eval):    0.00592318
  gflops (eval):  523.835
  gflops (total): 150.508
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0146921,0.00592318,523.835,150.508

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467816
  gflops (total): 66.3246
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.3246

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147659
  gflops (eval):  210.131
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147659,210.131,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3584
  maximum absolute entry in einsum_ir solution: 54.3584
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155157
  time (eval):    0.00597181
  gflops (eval):  519.569
  gflops (total): 144.399
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155157,0.00597181,519.569,144.399

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0466698
  gflops (total): 66.4835
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.4835

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148516
  gflops (eval):  208.919
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148516,208.919,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4898
  maximum absolute entry in einsum_ir solution: 56.4898
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156708
  time (eval):    0.00596755
  gflops (eval):  519.941
  gflops (total): 143.392
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156708,0.00596755,519.941,143.392

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470911
  gflops (total): 65.8887
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.8887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147873
  gflops (eval):  209.827
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147873,209.827,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.4986
  maximum absolute entry in einsum_ir solution: 53.4986
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157845
  time (eval):    0.00595253
  gflops (eval):  521.252
  gflops (total): 142.741
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157845,0.00595253,521.252,142.741

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0473142
  gflops (total): 65.578
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.578

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148459
  gflops (eval):  208.999
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148459,208.999,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.7586
  maximum absolute entry in einsum_ir solution: 52.7586
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156977
  time (eval):    0.00593671
  gflops (eval):  522.641
  gflops (total): 143.418
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156977,0.00593671,522.641,143.418

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468079
  gflops (total): 66.2873
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.2873

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014743
  gflops (eval):  210.457
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014743,210.457,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.4826
  maximum absolute entry in einsum_ir solution: 52.4826
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0141151
  time (eval):    0.00593809
  gflops (eval):  522.52
  gflops (total): 154.727
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0141151,0.00593809,522.52,154.727

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468255
  gflops (total): 66.2624
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.2624

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147983
  gflops (eval):  209.671
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147983,209.671,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8726
  maximum absolute entry in einsum_ir solution: 55.8726
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154008
  time (eval):    0.00610109
  gflops (eval):  508.56
  gflops (total): 144.302
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154008,0.00610109,508.56,144.302

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469118
  gflops (total): 66.1405
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.1405

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147925
  gflops (eval):  209.753
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147925,209.753,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.0259
  maximum absolute entry in einsum_ir solution: 53.0259
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015233
  time (eval):    0.00594773
  gflops (eval):  521.673
  gflops (total): 146.49
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015233,0.00594773,521.673,146.49

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0473642
  gflops (total): 65.5087
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.5087

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148299
  gflops (eval):  209.224
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148299,209.224,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.3743
  maximum absolute entry in einsum_ir solution: 53.3743
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156184
  time (eval):    0.00594627
  gflops (eval):  521.801
  gflops (total): 143.882
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156184,0.00594627,521.801,143.882

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0472966
  gflops (total): 65.6024
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.6024

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148782
  gflops (eval):  208.545
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148782,208.545,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4143
  maximum absolute entry in einsum_ir solution: 55.4143
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157237
  time (eval):    0.00610485
  gflops (eval):  508.246
  gflops (total): 142.142
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157237,0.00610485,508.246,142.142

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467981
  gflops (total): 66.3012
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.3012

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148193
  gflops (eval):  209.374
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148193,209.374,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.6749
  maximum absolute entry in einsum_ir solution: 52.6749
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0151528
  time (eval):    0.00598971
  gflops (eval):  518.016
  gflops (total): 146.755
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0151528,0.00598971,518.016,146.755

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.047101
  gflops (total): 65.8749
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.8749

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147424
  gflops (eval):  210.466
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147424,210.466,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7302
  maximum absolute entry in einsum_ir solution: 54.7302
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015596
  time (eval):    0.00595714
  gflops (eval):  520.849
  gflops (total): 143.959
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015596,0.00595714,520.849,143.959

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468103
  gflops (total): 66.2838
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.2838

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147653
  gflops (eval):  210.14
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147653,210.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.5775
  maximum absolute entry in einsum_ir solution: 55.5775
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157453
  time (eval):    0.00595054
  gflops (eval):  521.426
  gflops (total): 143.012
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157453,0.00595054,521.426,143.012

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.046524
  gflops (total): 66.6917
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.6917

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147774
  gflops (eval):  209.968
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147774,209.968,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.1138
  maximum absolute entry in einsum_ir solution: 55.1138
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0160976
  time (eval):    0.00596181
  gflops (eval):  520.441
  gflops (total): 140.655
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0160976,0.00596181,520.441,140.655

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0464804
  gflops (total): 66.7544
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.7544

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148403
  gflops (eval):  209.077
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148403,209.077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.1445
  maximum absolute entry in einsum_ir solution: 51.1445
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015746
  time (eval):    0.00589604
  gflops (eval):  526.246
  gflops (total): 143.368
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015746,0.00589604,526.246,143.368

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470039
  gflops (total): 66.0109
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.0109

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148806
  gflops (eval):  208.511
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148806,208.511,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4498
  maximum absolute entry in einsum_ir solution: 57.4498
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0153362
  time (eval):    0.00599541
  gflops (eval):  517.524
  gflops (total): 145.454
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0153362,0.00599541,517.524,145.454

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0474178
  gflops (total): 65.4347
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.4347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148217
  gflops (eval):  209.34
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148217,209.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0533
  maximum absolute entry in einsum_ir solution: 57.0533
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0159628
  time (eval):    0.00594762
  gflops (eval):  521.682
  gflops (total): 141.611
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0159628,0.00594762,521.682,141.611

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0463002
  gflops (total): 67.0141
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,67.0141

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.01477
  gflops (eval):  210.073
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.01477,210.073,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3921
  maximum absolute entry in einsum_ir solution: 54.3921
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0162418
  time (eval):    0.00595285
  gflops (eval):  521.224
  gflops (total): 139.798
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0162418,0.00595285,521.224,139.798

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.046938
  gflops (total): 66.1036
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.1036

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147548
  gflops (eval):  210.289
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147548,210.289,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3178
  maximum absolute entry in einsum_ir solution: 60.3178
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155604
  time (eval):    0.00594363
  gflops (eval):  522.033
  gflops (total): 144.288
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155604,0.00594363,522.033,144.288

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0465514
  gflops (total): 66.6525
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.6525

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148169
  gflops (eval):  209.407
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148169,209.407,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.4632
  maximum absolute entry in einsum_ir solution: 53.4632
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157897
  time (eval):    0.00588348
  gflops (eval):  527.37
  gflops (total): 143.162
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157897,0.00588348,527.37,143.162

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0472434
  gflops (total): 65.6762
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.6762

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014808
  gflops (eval):  209.533
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014808,209.533,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6196
  maximum absolute entry in einsum_ir solution: 58.6196
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0158567
  time (eval):    0.0059656
  gflops (eval):  520.11
  gflops (total): 142.183
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0158567,0.0059656,520.11,142.183

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0464299
  gflops (total): 66.827
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.827

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148034
  gflops (eval):  209.598
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148034,209.598,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.0717
  maximum absolute entry in einsum_ir solution: 53.0717
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.013149
  time (eval):    0.00447935
  gflops (eval):  605.973
  gflops (total): 153.978
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.013149,0.00447935,605.973,153.978

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0429466
  gflops (total): 63.2034
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,63.2034

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00260805
  gflops (eval):  1040.77
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00260805,1040.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.775
  maximum absolute entry in einsum_ir solution: 103.775
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132303
  time (eval):    0.00448079
  gflops (eval):  605.779
  gflops (total): 153.258
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132303,0.00448079,605.779,153.258

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0437733
  gflops (total): 62.0097
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,62.0097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00168944
  gflops (eval):  1606.67
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00168944,1606.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.146
  maximum absolute entry in einsum_ir solution: 118.146
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0134312
  time (eval):    0.00442588
  gflops (eval):  613.295
  gflops (total): 152.005
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0134312,0.00442588,613.295,152.005

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0432597
  gflops (total): 62.746
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,62.746

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00192947
  gflops (eval):  1406.8
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00192947,1406.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.4
  maximum absolute entry in einsum_ir solution: 103.4
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132572
  time (eval):    0.00447756
  gflops (eval):  606.216
  gflops (total): 153.053
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132572,0.00447756,606.216,153.053

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0387963
  gflops (total): 69.9646
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.9646

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00250393
  gflops (eval):  1084.04
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00250393,1084.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.58
  maximum absolute entry in einsum_ir solution: 102.58
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131213
  time (eval):    0.0044792
  gflops (eval):  605.994
  gflops (total): 154.221
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131213,0.0044792,605.994,154.221

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.039453
  gflops (total): 68.8
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00238221
  gflops (eval):  1139.43
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00238221,1139.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.633
  maximum absolute entry in einsum_ir solution: 104.633
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130631
  time (eval):    0.00445577
  gflops (eval):  609.181
  gflops (total): 154.94
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130631,0.00445577,609.181,154.94

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0426356
  gflops (total): 63.6645
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,63.6645

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00234936
  gflops (eval):  1155.37
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00234936,1155.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.9891
  maximum absolute entry in einsum_ir solution: 99.9891
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132214
  time (eval):    0.00445696
  gflops (eval):  609.018
  gflops (total): 153.542
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132214,0.00445696,609.018,153.542

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0409921
  gflops (total): 66.2169
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.2169

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00192354
  gflops (eval):  1411.14
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00192354,1411.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.528
  maximum absolute entry in einsum_ir solution: 102.528
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130818
  time (eval):    0.00446353
  gflops (eval):  608.122
  gflops (total): 154.706
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130818,0.00446353,608.122,154.706

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0408536
  gflops (total): 66.4414
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.4414

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00183291
  gflops (eval):  1480.91
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00183291,1480.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.7337
  maximum absolute entry in einsum_ir solution: 99.7337
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129267
  time (eval):    0.00445889
  gflops (eval):  608.754
  gflops (total): 156.128
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129267,0.00445889,608.754,156.128

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0395213
  gflops (total): 68.6813
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.6813

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00242166
  gflops (eval):  1120.87
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00242166,1120.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.817
  maximum absolute entry in einsum_ir solution: 114.817
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130681
  time (eval):    0.00447495
  gflops (eval):  606.57
  gflops (total): 154.726
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130681,0.00447495,606.57,154.726

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0411157
  gflops (total): 66.0178
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.0178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00176807
  gflops (eval):  1535.21
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00176807,1535.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.514
  maximum absolute entry in einsum_ir solution: 104.514
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129729
  time (eval):    0.0044513
  gflops (eval):  609.792
  gflops (total): 155.781
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129729,0.0044513,609.792,155.781

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0399077
  gflops (total): 68.0163
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.0163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00187349
  gflops (eval):  1448.83
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00187349,1448.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.69
  maximum absolute entry in einsum_ir solution: 111.69
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.01314
  time (eval):    0.00445495
  gflops (eval):  609.293
  gflops (total): 154.27
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.01314,0.00445495,609.293,154.27

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.039821
  gflops (total): 68.1642
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.1642

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00245869
  gflops (eval):  1103.99
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00245869,1103.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.055
  maximum absolute entry in einsum_ir solution: 108.055
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129773
  time (eval):    0.00447145
  gflops (eval):  607.045
  gflops (total): 155.562
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129773,0.00447145,607.045,155.562

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.043118
  gflops (total): 62.9522
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,62.9522

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00241495
  gflops (eval):  1123.99
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00241495,1123.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.796
  maximum absolute entry in einsum_ir solution: 99.796
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131373
  time (eval):    0.0044504
  gflops (eval):  609.915
  gflops (total): 154.333
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131373,0.0044504,609.915,154.333

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0411892
  gflops (total): 65.9001
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.9001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0018464
  gflops (eval):  1470.09
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0018464,1470.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.409
  maximum absolute entry in einsum_ir solution: 103.409
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0133298
  time (eval):    0.00446769
  gflops (eval):  607.555
  gflops (total): 152.514
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0133298,0.00446769,607.555,152.514

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0414372
  gflops (total): 65.5057
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.5057

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00178587
  gflops (eval):  1519.91
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00178587,1519.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.54
  maximum absolute entry in einsum_ir solution: 100.54
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131319
  time (eval):    0.00446499
  gflops (eval):  607.923
  gflops (total): 154.253
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131319,0.00446499,607.923,154.253

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0407778
  gflops (total): 66.565
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.565

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00244475
  gflops (eval):  1110.28
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00244475,1110.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.7513
  maximum absolute entry in einsum_ir solution: 98.7513
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.012861
  time (eval):    0.00443448
  gflops (eval):  612.106
  gflops (total): 156.941
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.012861,0.00443448,612.106,156.941

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0410275
  gflops (total): 66.1598
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.1598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00181211
  gflops (eval):  1497.9
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00181211,1497.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.412
  maximum absolute entry in einsum_ir solution: 102.412
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131984
  time (eval):    0.00446857
  gflops (eval):  607.436
  gflops (total): 153.641
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131984,0.00446857,607.436,153.641

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0410026
  gflops (total): 66.2
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00162864
  gflops (eval):  1666.65
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00162864,1666.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.334
  maximum absolute entry in einsum_ir solution: 106.334
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131022
  time (eval):    0.00491453
  gflops (eval):  552.315
  gflops (total): 150.658
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131022,0.00491453,552.315,150.658

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0404691
  gflops (total): 67.0726
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.0726

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00211653
  gflops (eval):  1282.46
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00211653,1282.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.0128
  maximum absolute entry in einsum_ir solution: 99.0128
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132192
  time (eval):    0.00445467
  gflops (eval):  609.332
  gflops (total): 153.581
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132192,0.00445467,609.332,153.581

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0397209
  gflops (total): 68.336
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.336

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00164969
  gflops (eval):  1645.38
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00164969,1645.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.668
  maximum absolute entry in einsum_ir solution: 109.668
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131145
  time (eval):    0.00443578
  gflops (eval):  611.926
  gflops (total): 154.662
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131145,0.00443578,611.926,154.662

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0419713
  gflops (total): 64.6721
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.6721

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00189145
  gflops (eval):  1435.08
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00189145,1435.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.6936
  maximum absolute entry in einsum_ir solution: 98.6936
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130104
  time (eval):    0.00445447
  gflops (eval):  609.359
  gflops (total): 155.419
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130104,0.00445447,609.359,155.419

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0405206
  gflops (total): 66.9874
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.9874

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00163623
  gflops (eval):  1658.92
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00163623,1658.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.33
  maximum absolute entry in einsum_ir solution: 102.33
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131342
  time (eval):    0.00444111
  gflops (eval):  611.192
  gflops (total): 154.442
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131342,0.00444111,611.192,154.442

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0417861
  gflops (total): 64.9587
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.9587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00240278
  gflops (eval):  1129.68
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00240278,1129.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.217
  maximum absolute entry in einsum_ir solution: 104.217
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132375
  time (eval):    0.00445202
  gflops (eval):  609.695
  gflops (total): 153.446
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132375,0.00445202,609.695,153.446

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0394522
  gflops (total): 68.8015
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.8015

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0018249
  gflops (eval):  1487.41
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0018249,1487.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.5564
  maximum absolute entry in einsum_ir solution: 98.5564
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0127903
  time (eval):    0.00446196
  gflops (eval):  608.336
  gflops (total): 157.334
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0127903,0.00446196,608.336,157.334

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0404711
  gflops (total): 67.0694
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.0694

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00223615
  gflops (eval):  1213.86
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00223615,1213.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.784
  maximum absolute entry in einsum_ir solution: 110.784
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131603
  time (eval):    0.00446529
  gflops (eval):  607.882
  gflops (total): 154.002
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131603,0.00446529,607.882,154.002

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0394827
  gflops (total): 68.7484
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.7484

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0020367
  gflops (eval):  1332.73
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0020367,1332.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.2461
  maximum absolute entry in einsum_ir solution: 98.2461
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0128826
  time (eval):    0.00447272
  gflops (eval):  606.872
  gflops (total): 156.4
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0128826,0.00447272,606.872,156.4

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0398519
  gflops (total): 68.1114
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.1114

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00211211
  gflops (eval):  1285.14
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00211211,1285.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.665
  maximum absolute entry in einsum_ir solution: 103.665
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132322
  time (eval):    0.00445358
  gflops (eval):  609.481
  gflops (total): 153.477
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132322,0.00445358,609.481,153.477

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0410068
  gflops (total): 66.1932
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.1932

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00248489
  gflops (eval):  1092.35
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00248489,1092.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.226
  maximum absolute entry in einsum_ir solution: 99.226
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130483
  time (eval):    0.0044869
  gflops (eval):  604.954
  gflops (total): 154.795
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130483,0.0044869,604.954,154.795

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0389607
  gflops (total): 69.6695
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.6695

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00198313
  gflops (eval):  1368.73
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00198313,1368.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.921
  maximum absolute entry in einsum_ir solution: 105.921
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131502
  time (eval):    0.00446889
  gflops (eval):  607.392
  gflops (total): 154.059
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131502,0.00446889,607.392,154.059

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0385804
  gflops (total): 70.3563
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,70.3563

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00172369
  gflops (eval):  1574.75
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00172369,1574.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.474
  maximum absolute entry in einsum_ir solution: 106.474
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131449
  time (eval):    0.00443787
  gflops (eval):  611.638
  gflops (total): 154.376
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131449,0.00443787,611.638,154.376

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0398463
  gflops (total): 68.1211
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.1211

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00183689
  gflops (eval):  1477.7
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00183689,1477.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.12
  maximum absolute entry in einsum_ir solution: 100.12
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0126044
  time (eval):    0.00440947
  gflops (eval):  615.577
  gflops (total): 159.539
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0126044,0.00440947,615.577,159.539

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0405511
  gflops (total): 66.937
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.937

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00216447
  gflops (eval):  1254.06
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00216447,1254.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.702
  maximum absolute entry in einsum_ir solution: 104.702
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132428
  time (eval):    0.00447911
  gflops (eval):  606.006
  gflops (total): 153.164
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132428,0.00447911,606.006,153.164

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0431764
  gflops (total): 62.867
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,62.867

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00184557
  gflops (eval):  1470.75
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00184557,1470.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.923
  maximum absolute entry in einsum_ir solution: 100.923
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131081
  time (eval):    0.00447968
  gflops (eval):  605.929
  gflops (total): 154.333
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131081,0.00447968,605.929,154.333

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0429058
  gflops (total): 63.2635
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,63.2635

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00190427
  gflops (eval):  1425.41
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00190427,1425.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.591
  maximum absolute entry in einsum_ir solution: 101.591
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131941
  time (eval):    0.00444091
  gflops (eval):  611.219
  gflops (total): 153.919
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131941,0.00444091,611.219,153.919

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.04077
  gflops (total): 66.5777
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.5777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00177192
  gflops (eval):  1531.88
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00177192,1531.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.831
  maximum absolute entry in einsum_ir solution: 110.831
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0128947
  time (eval):    0.00444354
  gflops (eval):  610.857
  gflops (total): 156.554
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0128947,0.00444354,610.857,156.554

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0422623
  gflops (total): 64.2268
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.2268

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00201775
  gflops (eval):  1345.24
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00201775,1345.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.904
  maximum absolute entry in einsum_ir solution: 102.904
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131721
  time (eval):    0.0048925
  gflops (eval):  554.803
  gflops (total): 150.259
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131721,0.0048925,554.803,150.259

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0437722
  gflops (total): 62.0113
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,62.0113

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00192195
  gflops (eval):  1412.3
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00192195,1412.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.94
  maximum absolute entry in einsum_ir solution: 100.94
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131549
  time (eval):    0.00445691
  gflops (eval):  609.025
  gflops (total): 154.122
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131549,0.00445691,609.025,154.122

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0420346
  gflops (total): 64.5746
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.5746

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00172939
  gflops (eval):  1569.56
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00172939,1569.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.983
  maximum absolute entry in einsum_ir solution: 113.983
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.013239
  time (eval):    0.00442322
  gflops (eval):  613.664
  gflops (total): 153.682
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.013239,0.00442322,613.664,153.682

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0417084
  gflops (total): 65.0797
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.0797

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00203491
  gflops (eval):  1333.9
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00203491,1333.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.949
  maximum absolute entry in einsum_ir solution: 101.949
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.013087
  time (eval):    0.00446151
  gflops (eval):  608.397
  gflops (total): 154.678
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.013087,0.00446151,608.397,154.678

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0399985
  gflops (total): 67.8617
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.8617

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00180283
  gflops (eval):  1505.62
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00180283,1505.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.778
  maximum absolute entry in einsum_ir solution: 100.778
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.013277
  time (eval):    0.00488581
  gflops (eval):  555.562
  gflops (total): 149.447
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.013277,0.00488581,555.562,149.447

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0395107
  gflops (total): 68.6996
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.6996

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00221467
  gflops (eval):  1225.63
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00221467,1225.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.645
  maximum absolute entry in einsum_ir solution: 109.645
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129478
  time (eval):    0.00446994
  gflops (eval):  607.25
  gflops (total): 155.84
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129478,0.00446994,607.25,155.84

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0411719
  gflops (total): 65.9277
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.9277

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00187364
  gflops (eval):  1448.71
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00187364,1448.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.497
  maximum absolute entry in einsum_ir solution: 113.497
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131133
  time (eval):    0.00445238
  gflops (eval):  609.645
  gflops (total): 154.527
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131133,0.00445238,609.645,154.527

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0385765
  gflops (total): 70.3632
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,70.3632

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00232834
  gflops (eval):  1165.8
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00232834,1165.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.8552
  maximum absolute entry in einsum_ir solution: 99.8552
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132499
  time (eval):    0.00444917
  gflops (eval):  610.085
  gflops (total): 153.362
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132499,0.00444917,610.085,153.362

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0417344
  gflops (total): 65.0391
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.0391

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00184854
  gflops (eval):  1468.38
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00184854,1468.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.688
  maximum absolute entry in einsum_ir solution: 102.688
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132977
  time (eval):    0.00445661
  gflops (eval):  609.067
  gflops (total): 152.885
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132977,0.00445661,609.067,152.885

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0409631
  gflops (total): 66.2638
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.2638

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00239547
  gflops (eval):  1133.12
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00239547,1133.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.987
  maximum absolute entry in einsum_ir solution: 103.987
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0135672
  time (eval):    0.00446374
  gflops (eval):  608.094
  gflops (total): 150.539
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0135672,0.00446374,608.094,150.539

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0407445
  gflops (total): 66.6193
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.6193

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00176401
  gflops (eval):  1538.75
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00176401,1538.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.957
  maximum absolute entry in einsum_ir solution: 103.957
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0133504
  time (eval):    0.00447694
  gflops (eval):  606.301
  gflops (total): 152.259
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0133504,0.00447694,606.301,152.259

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0405355
  gflops (total): 66.9628
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.9628

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00189771
  gflops (eval):  1430.34
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00189771,1430.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.056
  maximum absolute entry in einsum_ir solution: 107.056
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132692
  time (eval):    0.00443359
  gflops (eval):  612.229
  gflops (total): 153.33
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132692,0.00443359,612.229,153.33

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0419405
  gflops (total): 64.7196
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.7196

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00183062
  gflops (eval):  1482.76
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00183062,1482.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.158
  maximum absolute entry in einsum_ir solution: 100.158
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129998
  time (eval):    0.00476871
  gflops (eval):  569.204
  gflops (total): 152.763
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129998,0.00476871,569.204,152.763

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0418595
  gflops (total): 64.8448
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.8448

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00232249
  gflops (eval):  1168.73
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00232249,1168.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.556
  maximum absolute entry in einsum_ir solution: 109.556
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129374
  time (eval):    0.00445858
  gflops (eval):  608.797
  gflops (total): 156.035
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129374,0.00445858,608.797,156.035

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0406637
  gflops (total): 66.7517
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.7517

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00185047
  gflops (eval):  1466.85
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00185047,1466.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.037
  maximum absolute entry in einsum_ir solution: 100.037
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.013164
  time (eval):    0.00444197
  gflops (eval):  611.073
  gflops (total): 154.173
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.013164,0.00444197,611.073,154.173

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0406392
  gflops (total): 66.7919
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.7919

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00175288
  gflops (eval):  1548.52
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00175288,1548.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.3914
  maximum absolute entry in einsum_ir solution: 99.3914
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130609
  time (eval):    0.00445702
  gflops (eval):  609.01
  gflops (total): 154.948
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130609,0.00445702,609.01,154.948

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0409812
  gflops (total): 66.2346
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.2346

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0019296
  gflops (eval):  1406.7
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0019296,1406.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.393
  maximum absolute entry in einsum_ir solution: 103.393
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132573
  time (eval):    0.00440289
  gflops (eval):  616.498
  gflops (total): 153.7
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132573,0.00440289,616.498,153.7

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0411983
  gflops (total): 65.8855
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.8855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00167666
  gflops (eval):  1618.92
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00167666,1618.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.376
  maximum absolute entry in einsum_ir solution: 102.376
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131884
  time (eval):    0.00444652
  gflops (eval):  610.449
  gflops (total): 153.92
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131884,0.00444652,610.449,153.92

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0403955
  gflops (total): 67.1949
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.1949

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00198885
  gflops (eval):  1364.8
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00198885,1364.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.558
  maximum absolute entry in einsum_ir solution: 103.558
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130413
  time (eval):    0.00447013
  gflops (eval):  607.225
  gflops (total): 155.005
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130413,0.00447013,607.225,155.005

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0423457
  gflops (total): 64.1003
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.1003

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00214884
  gflops (eval):  1263.18
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00214884,1263.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.294
  maximum absolute entry in einsum_ir solution: 107.294
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132339
  time (eval):    0.00441294
  gflops (eval):  615.093
  gflops (total): 153.816
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132339,0.00441294,615.093,153.816

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0421274
  gflops (total): 64.4324
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.4324

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00167195
  gflops (eval):  1623.48
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00167195,1623.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.821
  maximum absolute entry in einsum_ir solution: 101.821
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130152
  time (eval):    0.00446474
  gflops (eval):  607.957
  gflops (total): 155.285
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130152,0.00446474,607.957,155.285

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0401635
  gflops (total): 67.583
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.583

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0016465
  gflops (eval):  1648.57
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0016465,1648.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.532
  maximum absolute entry in einsum_ir solution: 102.532
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131034
  time (eval):    0.00445186
  gflops (eval):  609.715
  gflops (total): 154.618
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131034,0.00445186,609.715,154.618

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0402883
  gflops (total): 67.3736
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.3736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00184683
  gflops (eval):  1469.75
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00184683,1469.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.576
  maximum absolute entry in einsum_ir solution: 108.576
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131737
  time (eval):    0.00446104
  gflops (eval):  608.461
  gflops (total): 153.922
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131737,0.00446104,608.461,153.922

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0418771
  gflops (total): 64.8176
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.8176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0023254
  gflops (eval):  1167.27
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0023254,1167.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.959
  maximum absolute entry in einsum_ir solution: 105.959
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131024
  time (eval):    0.00445859
  gflops (eval):  608.796
  gflops (total): 154.568
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131024,0.00445859,608.796,154.568

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0400735
  gflops (total): 67.7347
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.7347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00223909
  gflops (eval):  1212.27
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00223909,1212.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.208
  maximum absolute entry in einsum_ir solution: 110.208
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132568
  time (eval):    0.00446162
  gflops (eval):  608.383
  gflops (total): 153.195
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132568,0.00446162,608.383,153.195

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.040057
  gflops (total): 67.7626
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.7626

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00177064
  gflops (eval):  1532.99
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00177064,1532.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.2351
  maximum absolute entry in einsum_ir solution: 97.2351
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130873
  time (eval):    0.00447947
  gflops (eval):  605.959
  gflops (total): 154.518
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130873,0.00447947,605.959,154.518

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0404593
  gflops (total): 67.0888
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.0888

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00246534
  gflops (eval):  1101.01
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00246534,1101.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.01
  maximum absolute entry in einsum_ir solution: 101.01
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130941
  time (eval):    0.0044605
  gflops (eval):  608.535
  gflops (total): 154.625
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130941,0.0044605,608.535,154.625

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0435091
  gflops (total): 62.3862
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,62.3862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00177487
  gflops (eval):  1529.33
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00177487,1529.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.028
  maximum absolute entry in einsum_ir solution: 112.028
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130684
  time (eval):    0.0044397
  gflops (eval):  611.386
  gflops (total): 155.035
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130684,0.0044397,611.386,155.035

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0412383
  gflops (total): 65.8216
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.8216

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00191574
  gflops (eval):  1416.88
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00191574,1416.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.372
  maximum absolute entry in einsum_ir solution: 102.372
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.013109
  time (eval):    0.00447205
  gflops (eval):  606.964
  gflops (total): 154.392
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.013109,0.00447205,606.964,154.392

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0417015
  gflops (total): 65.0905
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.0905

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00251989
  gflops (eval):  1077.18
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00251989,1077.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.731
  maximum absolute entry in einsum_ir solution: 115.731
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132991
  time (eval):    0.00445464
  gflops (eval):  609.335
  gflops (total): 152.89
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132991,0.00445464,609.335,152.89

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0416443
  gflops (total): 65.1799
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.1799

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00191116
  gflops (eval):  1420.27
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00191116,1420.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.068
  maximum absolute entry in einsum_ir solution: 104.068
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130241
  time (eval):    0.00443779
  gflops (eval):  611.649
  gflops (total): 155.445
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130241,0.00443779,611.649,155.445

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0415736
  gflops (total): 65.2907
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.2907

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00236845
  gflops (eval):  1146.05
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00236845,1146.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.362
  maximum absolute entry in einsum_ir solution: 113.362
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131892
  time (eval):    0.00446697
  gflops (eval):  607.653
  gflops (total): 153.735
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131892,0.00446697,607.653,153.735

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0419836
  gflops (total): 64.653
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.653

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00244494
  gflops (eval):  1110.2
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00244494,1110.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.702
  maximum absolute entry in einsum_ir solution: 100.702
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130097
  time (eval):    0.00446087
  gflops (eval):  608.485
  gflops (total): 155.368
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130097,0.00446087,608.485,155.368

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0403996
  gflops (total): 67.188
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.188

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00184334
  gflops (eval):  1472.53
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00184334,1472.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.847
  maximum absolute entry in einsum_ir solution: 102.847
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130236
  time (eval):    0.00445225
  gflops (eval):  609.663
  gflops (total): 155.321
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130236,0.00445225,609.663,155.321

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.041787
  gflops (total): 64.9573
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.9573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00182913
  gflops (eval):  1483.97
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00182913,1483.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.792
  maximum absolute entry in einsum_ir solution: 114.792
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129055
  time (eval):    0.00443829
  gflops (eval):  611.58
  gflops (total): 156.504
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129055,0.00443829,611.58,156.504

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.041985
  gflops (total): 64.651
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.651

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00171424
  gflops (eval):  1583.43
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00171424,1583.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.747
  maximum absolute entry in einsum_ir solution: 104.747
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131108
  time (eval):    0.00489441
  gflops (eval):  554.586
  gflops (total): 150.755
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131108,0.00489441,554.586,150.755

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0405234
  gflops (total): 66.9828
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.9828

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.002143
  gflops (eval):  1266.62
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.002143,1266.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.885
  maximum absolute entry in einsum_ir solution: 116.885
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130095
  time (eval):    0.00445173
  gflops (eval):  609.734
  gflops (total): 155.451
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130095,0.00445173,609.734,155.451

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0405807
  gflops (total): 66.8882
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.8882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0016279
  gflops (eval):  1667.41
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0016279,1667.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.1214
  maximum absolute entry in einsum_ir solution: 99.1214
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0128512
  time (eval):    0.00442084
  gflops (eval):  613.994
  gflops (total): 157.154
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0128512,0.00442084,613.994,157.154

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.042692
  gflops (total): 63.5803
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,63.5803

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00209504
  gflops (eval):  1295.61
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00209504,1295.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.071
  maximum absolute entry in einsum_ir solution: 110.071
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131394
  time (eval):    0.00449225
  gflops (eval):  604.234
  gflops (total): 153.948
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131394,0.00449225,604.234,153.948

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0410408
  gflops (total): 66.1384
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.1384

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00160577
  gflops (eval):  1690.38
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00160577,1690.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.824
  maximum absolute entry in einsum_ir solution: 104.824
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130691
  time (eval):    0.00448719
  gflops (eval):  604.915
  gflops (total): 154.61
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130691,0.00448719,604.915,154.61

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0415162
  gflops (total): 65.381
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00166834
  gflops (eval):  1626.99
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00166834,1626.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.236
  maximum absolute entry in einsum_ir solution: 104.236
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0133157
  time (eval):    0.0044598
  gflops (eval):  608.63
  gflops (total): 152.703
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0133157,0.0044598,608.63,152.703

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0406935
  gflops (total): 66.7028
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.7028

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00175004
  gflops (eval):  1551.03
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00175004,1551.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.1107
  maximum absolute entry in einsum_ir solution: 98.1107
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129841
  time (eval):    0.00444637
  gflops (eval):  610.468
  gflops (total): 155.726
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129841,0.00444637,610.468,155.726

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0389314
  gflops (total): 69.7219
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.7219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00191753
  gflops (eval):  1415.55
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00191753,1415.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.032
  maximum absolute entry in einsum_ir solution: 100.032
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130415
  time (eval):    0.00446041
  gflops (eval):  608.547
  gflops (total): 155.09
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130415,0.00446041,608.547,155.09

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0422395
  gflops (total): 64.2614
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.2614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00216506
  gflops (eval):  1253.71
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00216506,1253.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.62
  maximum absolute entry in einsum_ir solution: 101.62
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129692
  time (eval):    0.00446654
  gflops (eval):  607.712
  gflops (total): 155.678
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129692,0.00446654,607.712,155.678

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0421151
  gflops (total): 64.4512
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.4512

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00196739
  gflops (eval):  1379.68
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00196739,1379.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.858
  maximum absolute entry in einsum_ir solution: 105.858
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132568
  time (eval):    0.00447446
  gflops (eval):  606.636
  gflops (total): 153.084
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132568,0.00447446,606.636,153.084

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0417897
  gflops (total): 64.9531
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.9531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00263741
  gflops (eval):  1029.18
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00263741,1029.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.092
  maximum absolute entry in einsum_ir solution: 101.092
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132971
  time (eval):    0.0044934
  gflops (eval):  604.08
  gflops (total): 152.574
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132971,0.0044934,604.08,152.574

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0433383
  gflops (total): 62.6321
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,62.6321

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00178272
  gflops (eval):  1522.6
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00178272,1522.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.4718
  maximum absolute entry in einsum_ir solution: 96.4718
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129357
  time (eval):    0.00447515
  gflops (eval):  606.542
  gflops (total): 155.901
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129357,0.00447515,606.542,155.901

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0389068
  gflops (total): 69.766
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00185977
  gflops (eval):  1459.52
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00185977,1459.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.432
  maximum absolute entry in einsum_ir solution: 104.432
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130862
  time (eval):    0.00445822
  gflops (eval):  608.846
  gflops (total): 154.714
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130862,0.00445822,608.846,154.714

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0416973
  gflops (total): 65.097
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0018679
  gflops (eval):  1453.17
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0018679,1453.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.702
  maximum absolute entry in einsum_ir solution: 104.702
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131666
  time (eval):    0.00446646
  gflops (eval):  607.723
  gflops (total): 153.937
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131666,0.00446646,607.723,153.937

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0404509
  gflops (total): 67.1028
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.1028

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00205165
  gflops (eval):  1323.02
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00205165,1323.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.802
  maximum absolute entry in einsum_ir solution: 103.802
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130996
  time (eval):    0.00443699
  gflops (eval):  611.759
  gflops (total): 154.783
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130996,0.00443699,611.759,154.783

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0433217
  gflops (total): 62.6562
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,62.6562

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00190752
  gflops (eval):  1422.98
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00190752,1422.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      95.5502
  maximum absolute entry in einsum_ir solution: 95.5502
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132347
  time (eval):    0.00443886
  gflops (eval):  611.501
  gflops (total): 153.584
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132347,0.00443886,611.501,153.584

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0423792
  gflops (total): 64.0496
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.0496

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00244431
  gflops (eval):  1110.49
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00244431,1110.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.693
  maximum absolute entry in einsum_ir solution: 100.693
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130305
  time (eval):    0.00446657
  gflops (eval):  607.708
  gflops (total): 155.133
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130305,0.00446657,607.708,155.133

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0404405
  gflops (total): 67.12
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00171924
  gflops (eval):  1578.82
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00171924,1578.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.306
  maximum absolute entry in einsum_ir solution: 102.306
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0133074
  time (eval):    0.00444569
  gflops (eval):  610.562
  gflops (total): 152.896
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0133074,0.00444569,610.562,152.896

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0410041
  gflops (total): 66.1975
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.1975

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00204893
  gflops (eval):  1324.77
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00204893,1324.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.317
  maximum absolute entry in einsum_ir solution: 110.317
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129838
  time (eval):    0.00444858
  gflops (eval):  610.166
  gflops (total): 155.708
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129838,0.00444858,610.166,155.708

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0418239
  gflops (total): 64.9001
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.9001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00182401
  gflops (eval):  1488.13
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00182401,1488.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.22
  maximum absolute entry in einsum_ir solution: 108.22
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130602
  time (eval):    0.00445799
  gflops (eval):  608.878
  gflops (total): 154.945
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130602,0.00445799,608.878,154.945

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0409519
  gflops (total): 66.2819
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.2819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00175132
  gflops (eval):  1549.9
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00175132,1549.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.457
  maximum absolute entry in einsum_ir solution: 109.457
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130354
  time (eval):    0.00446383
  gflops (eval):  608.081
  gflops (total): 155.113
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130354,0.00446383,608.081,155.113

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0412571
  gflops (total): 65.7916
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.7916

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00236625
  gflops (eval):  1147.12
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00236625,1147.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.111
  maximum absolute entry in einsum_ir solution: 103.111
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132512
  time (eval):    0.00445607
  gflops (eval):  609.14
  gflops (total): 153.292
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132512,0.00445607,609.14,153.292

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0410709
  gflops (total): 66.0899
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.0899

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00178448
  gflops (eval):  1521.1
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00178448,1521.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.488
  maximum absolute entry in einsum_ir solution: 105.488
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130864
  time (eval):    0.00445381
  gflops (eval):  609.449
  gflops (total): 154.751
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130864,0.00445381,609.449,154.751

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0394435
  gflops (total): 68.8167
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.8167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00186531
  gflops (eval):  1455.18
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00186531,1455.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.248
  maximum absolute entry in einsum_ir solution: 100.248
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132241
  time (eval):    0.00444558
  gflops (eval):  610.578
  gflops (total): 153.618
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132241,0.00444558,610.578,153.618

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0400579
  gflops (total): 67.7611
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.7611

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00177245
  gflops (eval):  1531.42
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00177245,1531.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.295
  maximum absolute entry in einsum_ir solution: 96.295
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.013141
  time (eval):    0.00444013
  gflops (eval):  611.326
  gflops (total): 154.391
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.013141,0.00444013,611.326,154.391

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0408075
  gflops (total): 66.5165
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.5165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00253713
  gflops (eval):  1069.86
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00253713,1069.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.8657
  maximum absolute entry in einsum_ir solution: 96.8657
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129166
  time (eval):    0.00487425
  gflops (eval):  556.879
  gflops (total): 152.571
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129166,0.00487425,556.879,152.571

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0429569
  gflops (total): 63.1882
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,63.1882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00213359
  gflops (eval):  1272.21
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00213359,1272.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.323
  maximum absolute entry in einsum_ir solution: 107.323
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131878
  time (eval):    0.00485386
  gflops (eval):  559.219
  gflops (total): 150.45
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131878,0.00485386,559.219,150.45

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0421213
  gflops (total): 64.4418
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.4418

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00199902
  gflops (eval):  1357.85
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00199902,1357.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.141
  maximum absolute entry in einsum_ir solution: 103.141
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132577
  time (eval):    0.00445837
  gflops (eval):  608.826
  gflops (total): 153.215
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132577,0.00445837,608.826,153.215

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.04122
  gflops (total): 65.8508
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.8508

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00184169
  gflops (eval):  1473.85
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00184169,1473.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.812
  maximum absolute entry in einsum_ir solution: 109.812
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.013254
  time (eval):    0.0044958
  gflops (eval):  603.757
  gflops (total): 152.924
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.013254,0.0044958,603.757,152.924

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0418092
  gflops (total): 64.9229
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.9229

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00225384
  gflops (eval):  1204.33
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00225384,1204.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.9182
  maximum absolute entry in einsum_ir solution: 98.9182
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156662
  time (eval):    0.0058385
  gflops (eval):  531.83
  gflops (total): 144.392
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156662,0.0058385,531.83,144.392

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0340328
  gflops (total): 91.2383
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.2383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142249
  gflops (eval):  218.285
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142249,218.285,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.6315
  maximum absolute entry in einsum_ir solution: 53.6315
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0152994
  time (eval):    0.00581186
  gflops (eval):  534.268
  gflops (total): 147.082
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0152994,0.00581186,534.268,147.082

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0338119
  gflops (total): 91.8344
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.8344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142743
  gflops (eval):  217.53
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142743,217.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8227
  maximum absolute entry in einsum_ir solution: 56.8227
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157114
  time (eval):    0.00576944
  gflops (eval):  538.197
  gflops (total): 144.551
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157114,0.00576944,538.197,144.551

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0332579
  gflops (total): 93.3641
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.3641

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142407
  gflops (eval):  218.043
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142407,218.043,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5098
  maximum absolute entry in einsum_ir solution: 57.5098
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0150396
  time (eval):    0.00589575
  gflops (eval):  526.666
  gflops (total): 148.318
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0150396,0.00589575,526.666,148.318

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0330352
  gflops (total): 93.9933
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.9933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142054
  gflops (eval):  218.585
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142054,218.585,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1146
  maximum absolute entry in einsum_ir solution: 56.1146
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156193
  time (eval):    0.00581725
  gflops (eval):  533.773
  gflops (total): 144.851
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156193,0.00581725,533.773,144.851

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0336243
  gflops (total): 92.3466
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.3466

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141599
  gflops (eval):  219.287
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141599,219.287,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7436
  maximum absolute entry in einsum_ir solution: 54.7436
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0150715
  time (eval):    0.00582332
  gflops (eval):  533.217
  gflops (total): 148.606
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0150715,0.00582332,533.217,148.606

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0330299
  gflops (total): 94.0084
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,94.0084

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142733
  gflops (eval):  217.546
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142733,217.546,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.1612
  maximum absolute entry in einsum_ir solution: 55.1612
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.015463
  time (eval):    0.00580023
  gflops (eval):  535.34
  gflops (total): 146.031
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.015463,0.00580023,535.34,146.031

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0340436
  gflops (total): 91.2093
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.2093

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014266
  gflops (eval):  217.657
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014266,217.657,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2176
  maximum absolute entry in einsum_ir solution: 56.2176
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0155283
  time (eval):    0.00584505
  gflops (eval):  531.234
  gflops (total): 145.279
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0155283,0.00584505,531.234,145.279

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0330007
  gflops (total): 94.0916
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,94.0916

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142013
  gflops (eval):  218.648
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142013,218.648,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3145
  maximum absolute entry in einsum_ir solution: 56.3145
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0155685
  time (eval):    0.00584305
  gflops (eval):  531.416
  gflops (total): 145.02
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0155685,0.00584305,531.416,145.02

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.033904
  gflops (total): 91.5848
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.5848

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142346
  gflops (eval):  218.137
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142346,218.137,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8498
  maximum absolute entry in einsum_ir solution: 57.8498
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154252
  time (eval):    0.00584193
  gflops (eval):  531.518
  gflops (total): 146.004
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154252,0.00584193,531.518,146.004

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0325296
  gflops (total): 95.4542
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,95.4542

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142118
  gflops (eval):  218.487
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142118,218.487,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.5303
  maximum absolute entry in einsum_ir solution: 62.5303
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154276
  time (eval):    0.00582349
  gflops (eval):  533.201
  gflops (total): 146.115
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154276,0.00582349,533.201,146.115

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0337078
  gflops (total): 92.118
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.118

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142502
  gflops (eval):  217.899
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142502,217.899,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6647
  maximum absolute entry in einsum_ir solution: 56.6647
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158201
  time (eval):    0.00582821
  gflops (eval):  532.769
  gflops (total): 143.433
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158201,0.00582821,532.769,143.433

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0339576
  gflops (total): 91.4404
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.4404

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142799
  gflops (eval):  217.445
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142799,217.445,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5317
  maximum absolute entry in einsum_ir solution: 53.5317
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158447
  time (eval):    0.00577207
  gflops (eval):  537.951
  gflops (total): 143.643
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158447,0.00577207,537.951,143.643

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0340177
  gflops (total): 91.2787
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.2787

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142119
  gflops (eval):  218.485
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142119,218.485,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4073
  maximum absolute entry in einsum_ir solution: 58.4073
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157036
  time (eval):    0.0058422
  gflops (eval):  531.493
  gflops (total): 144.116
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157036,0.0058422,531.493,144.116

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0346929
  gflops (total): 89.5023
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.5023

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141988
  gflops (eval):  218.687
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141988,218.687,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.76
  maximum absolute entry in einsum_ir solution: 54.76
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157552
  time (eval):    0.00577806
  gflops (eval):  537.393
  gflops (total): 144.2
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157552,0.00577806,537.393,144.2

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0337609
  gflops (total): 91.973
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143162
  gflops (eval):  216.894
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143162,216.894,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5997
  maximum absolute entry in einsum_ir solution: 56.5997
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154889
  time (eval):    0.00580844
  gflops (eval):  534.583
  gflops (total): 145.797
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154889,0.00580844,534.583,145.797

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0325192
  gflops (total): 95.4849
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,95.4849

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143262
  gflops (eval):  216.742
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143262,216.742,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9013
  maximum absolute entry in einsum_ir solution: 57.9013
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157351
  time (eval):    0.00579781
  gflops (eval):  535.563
  gflops (total): 144.202
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157351,0.00579781,535.563,144.202

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0328305
  gflops (total): 94.5794
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,94.5794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142208
  gflops (eval):  218.349
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142208,218.349,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3653
  maximum absolute entry in einsum_ir solution: 55.3653
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0153426
  time (eval):    0.00580987
  gflops (eval):  534.451
  gflops (total): 146.796
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0153426,0.00580987,534.451,146.796

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0322514
  gflops (total): 96.2777
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,96.2777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143419
  gflops (eval):  216.504
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143419,216.504,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1741
  maximum absolute entry in einsum_ir solution: 56.1741
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0151528
  time (eval):    0.00582074
  gflops (eval):  533.453
  gflops (total): 148.048
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0151528,0.00582074,533.453,148.048

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0325609
  gflops (total): 95.3627
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,95.3627

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014435
  gflops (eval):  215.108
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014435,215.108,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6396
  maximum absolute entry in einsum_ir solution: 55.6396
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158123
  time (eval):    0.00577373
  gflops (eval):  537.796
  gflops (total): 143.848
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158123,0.00577373,537.796,143.848

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0331095
  gflops (total): 93.7826
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.7826

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014257
  gflops (eval):  217.794
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014257,217.794,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.922
  maximum absolute entry in einsum_ir solution: 55.922
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156294
  time (eval):    0.00583974
  gflops (eval):  531.717
  gflops (total): 144.631
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156294,0.00583974,531.717,144.631

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0343069
  gflops (total): 90.5092
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.5092

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142573
  gflops (eval):  217.79
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142573,217.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9266
  maximum absolute entry in einsum_ir solution: 61.9266
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0149986
  time (eval):    0.00587647
  gflops (eval):  528.394
  gflops (total): 148.747
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0149986,0.00587647,528.394,148.747

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0334636
  gflops (total): 92.7901
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.7901

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142191
  gflops (eval):  218.374
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142191,218.374,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8075
  maximum absolute entry in einsum_ir solution: 57.8075
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154722
  time (eval):    0.00578005
  gflops (eval):  537.209
  gflops (total): 146.107
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154722,0.00578005,537.209,146.107

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0336147
  gflops (total): 92.373
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.373

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014294
  gflops (eval):  217.231
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014294,217.231,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6731
  maximum absolute entry in einsum_ir solution: 57.6731
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0155144
  time (eval):    0.0058116
  gflops (eval):  534.292
  gflops (total): 145.601
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0155144,0.0058116,534.292,145.601

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0342239
  gflops (total): 90.7286
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.7286

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142105
  gflops (eval):  218.506
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142105,218.506,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0301
  maximum absolute entry in einsum_ir solution: 60.0301
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0150532
  time (eval):    0.00576226
  gflops (eval):  538.867
  gflops (total): 149.172
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0150532,0.00576226,538.867,149.172

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0327831
  gflops (total): 94.7162
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,94.7162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142967
  gflops (eval):  217.189
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142967,217.189,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6318
  maximum absolute entry in einsum_ir solution: 55.6318
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154113
  time (eval):    0.0058086
  gflops (eval):  534.568
  gflops (total): 146.329
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154113,0.0058086,534.568,146.329

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0338696
  gflops (total): 91.6779
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.6779

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014214
  gflops (eval):  218.452
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014214,218.452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.5838
  maximum absolute entry in einsum_ir solution: 55.5838
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0152202
  time (eval):    0.0058443
  gflops (eval):  531.303
  gflops (total): 147.409
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0152202,0.0058443,531.303,147.409

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0332718
  gflops (total): 93.3251
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.3251

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142884
  gflops (eval):  217.316
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142884,217.316,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9756
  maximum absolute entry in einsum_ir solution: 60.9756
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156757
  time (eval):    0.00580153
  gflops (eval):  535.22
  gflops (total): 144.576
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156757,0.00580153,535.22,144.576

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0330848
  gflops (total): 93.8526
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.8526

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141969
  gflops (eval):  218.716
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141969,218.716,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5338
  maximum absolute entry in einsum_ir solution: 58.5338
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0152221
  time (eval):    0.00581979
  gflops (eval):  533.541
  gflops (total): 147.567
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0152221,0.00581979,533.541,147.567

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0331427
  gflops (total): 93.6884
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.6884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141889
  gflops (eval):  218.839
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141889,218.839,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.2638
  maximum absolute entry in einsum_ir solution: 53.2638
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.015379
  time (eval):    0.00581934
  gflops (eval):  533.581
  gflops (total): 146.478
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.015379,0.00581934,533.581,146.478

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0336762
  gflops (total): 92.2042
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.2042

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142239
  gflops (eval):  218.302
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142239,218.302,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1572
  maximum absolute entry in einsum_ir solution: 54.1572
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158303
  time (eval):    0.00578386
  gflops (eval):  536.854
  gflops (total): 143.66
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158303,0.00578386,536.854,143.66

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.033739
  gflops (total): 92.0326
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.0326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142493
  gflops (eval):  217.912
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142493,217.912,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8009
  maximum absolute entry in einsum_ir solution: 56.8009
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154874
  time (eval):    0.00575973
  gflops (eval):  539.103
  gflops (total): 146.142
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154874,0.00575973,539.103,146.142

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0324809
  gflops (total): 95.5975
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,95.5975

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142461
  gflops (eval):  217.961
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142461,217.961,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8239
  maximum absolute entry in einsum_ir solution: 55.8239
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0142108
  time (eval):    0.00583149
  gflops (eval):  532.47
  gflops (total): 154.927
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0142108,0.00583149,532.47,154.927

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0341102
  gflops (total): 91.0312
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.0312

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142827
  gflops (eval):  217.402
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142827,217.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6882
  maximum absolute entry in einsum_ir solution: 59.6882
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157934
  time (eval):    0.00578513
  gflops (eval):  536.737
  gflops (total): 143.897
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157934,0.00578513,536.737,143.897

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0322964
  gflops (total): 96.1436
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,96.1436

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014215
  gflops (eval):  218.437
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014215,218.437,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.6221
  maximum absolute entry in einsum_ir solution: 54.6221
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.015715
  time (eval):    0.00577911
  gflops (eval):  537.296
  gflops (total): 144.462
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.015715,0.00577911,537.296,144.462

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0333163
  gflops (total): 93.2005
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.2005

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142212
  gflops (eval):  218.342
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142212,218.342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0697
  maximum absolute entry in einsum_ir solution: 56.0697
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158158
  time (eval):    0.00581575
  gflops (eval):  533.911
  gflops (total): 143.545
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158158,0.00581575,533.911,143.545

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0321725
  gflops (total): 96.5137
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,96.5137

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141852
  gflops (eval):  218.896
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141852,218.896,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5665
  maximum absolute entry in einsum_ir solution: 58.5665
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.015765
  time (eval):    0.0058368
  gflops (eval):  531.985
  gflops (total): 143.742
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.015765,0.0058368,531.985,143.742

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.033722
  gflops (total): 92.079
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.079

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141556
  gflops (eval):  219.354
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141556,219.354,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.552
  maximum absolute entry in einsum_ir solution: 53.552
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0149956
  time (eval):    0.00583393
  gflops (eval):  532.247
  gflops (total): 149.071
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0149956,0.00583393,532.247,149.071

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0340964
  gflops (total): 91.0681
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.0681

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014185
  gflops (eval):  218.9
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014185,218.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5261
  maximum absolute entry in einsum_ir solution: 59.5261
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0149032
  time (eval):    0.00583486
  gflops (eval):  532.162
  gflops (total): 149.729
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0149032,0.00583486,532.162,149.729

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0336152
  gflops (total): 92.3717
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.3717

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141686
  gflops (eval):  219.153
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141686,219.153,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3529
  maximum absolute entry in einsum_ir solution: 58.3529
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158358
  time (eval):    0.00583493
  gflops (eval):  532.155
  gflops (total): 143.285
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158358,0.00583493,532.155,143.285

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0333924
  gflops (total): 92.9879
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.9879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142724
  gflops (eval):  217.559
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142724,217.559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.3019
  maximum absolute entry in einsum_ir solution: 52.3019
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156836
  time (eval):    0.00582733
  gflops (eval):  532.85
  gflops (total): 144.349
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156836,0.00582733,532.85,144.349

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0326136
  gflops (total): 95.2085
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,95.2085

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142865
  gflops (eval):  217.345
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142865,217.345,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.21
  maximum absolute entry in einsum_ir solution: 57.21
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157142
  time (eval):    0.00577295
  gflops (eval):  537.869
  gflops (total): 144.509
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157142,0.00577295,537.869,144.509

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0335826
  gflops (total): 92.4614
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.4614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143134
  gflops (eval):  216.936
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143134,216.936,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.9729
  maximum absolute entry in einsum_ir solution: 52.9729
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154858
  time (eval):    0.00578976
  gflops (eval):  536.308
  gflops (total): 145.947
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154858,0.00578976,536.308,145.947

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0333835
  gflops (total): 93.0128
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.0128

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143024
  gflops (eval):  217.102
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143024,217.102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.668
  maximum absolute entry in einsum_ir solution: 52.668
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156282
  time (eval):    0.00583361
  gflops (eval):  532.276
  gflops (total): 144.68
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156282,0.00583361,532.276,144.68

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0320188
  gflops (total): 96.9772
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,96.9772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141583
  gflops (eval):  219.312
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141583,219.312,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3563
  maximum absolute entry in einsum_ir solution: 55.3563
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157697
  time (eval):    0.00577515
  gflops (eval):  537.665
  gflops (total): 144.122
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157697,0.00577515,537.665,144.122

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.032444
  gflops (total): 95.7061
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,95.7061

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142127
  gflops (eval):  218.473
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142127,218.473,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1427
  maximum absolute entry in einsum_ir solution: 56.1427
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0153239
  time (eval):    0.00583081
  gflops (eval):  532.532
  gflops (total): 146.78
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0153239,0.00583081,532.532,146.78

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.032444
  gflops (total): 95.7063
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,95.7063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014219
  gflops (eval):  218.376
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014219,218.376,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8082
  maximum absolute entry in einsum_ir solution: 56.8082
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154615
  time (eval):    0.00583571
  gflops (eval):  532.085
  gflops (total): 145.798
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154615,0.00583571,532.085,145.798

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0342334
  gflops (total): 90.7036
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.7036

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142178
  gflops (eval):  218.395
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142178,218.395,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0628
  maximum absolute entry in einsum_ir solution: 61.0628
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0153291
  time (eval):    0.00582077
  gflops (eval):  533.451
  gflops (total): 146.814
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0153291,0.00582077,533.451,146.814

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0325075
  gflops (total): 95.5192
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,95.5192

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142091
  gflops (eval):  218.529
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142091,218.529,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0908
  maximum absolute entry in einsum_ir solution: 58.0908
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0163721
  time (eval):    0.00583661
  gflops (eval):  532.002
  gflops (total): 139.814
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0163721,0.00583661,532.002,139.814

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0326782
  gflops (total): 95.0203
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,95.0203

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141919
  gflops (eval):  218.793
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141919,218.793,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6106
  maximum absolute entry in einsum_ir solution: 57.6106
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.015692
  time (eval):    0.00583002
  gflops (eval):  532.604
  gflops (total): 144.275
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.015692,0.00583002,532.604,144.275

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0335008
  gflops (total): 92.6872
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.6872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142406
  gflops (eval):  218.045
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142406,218.045,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5769
  maximum absolute entry in einsum_ir solution: 53.5769
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158003
  time (eval):    0.00582433
  gflops (eval):  533.124
  gflops (total): 143.591
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158003,0.00582433,533.124,143.591

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.033208
  gflops (total): 93.5042
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.5042

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143211
  gflops (eval):  216.82
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143211,216.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9982
  maximum absolute entry in einsum_ir solution: 53.9982
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0161411
  time (eval):    0.00577412
  gflops (eval):  537.76
  gflops (total): 141.687
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0161411,0.00577412,537.76,141.687

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0348266
  gflops (total): 89.1587
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.1587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142246
  gflops (eval):  218.29
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142246,218.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.6663
  maximum absolute entry in einsum_ir solution: 53.6663
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158356
  time (eval):    0.00579545
  gflops (eval):  535.781
  gflops (total): 143.548
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158356,0.00579545,535.781,143.548

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0346179
  gflops (total): 89.696
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.696

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142497
  gflops (eval):  217.906
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142497,217.906,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.47
  maximum absolute entry in einsum_ir solution: 57.47
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0150082
  time (eval):    0.00583598
  gflops (eval):  532.06
  gflops (total): 148.967
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0150082,0.00583598,532.06,148.967

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0343455
  gflops (total): 90.4075
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.4075

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142358
  gflops (eval):  218.118
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142358,218.118,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5361
  maximum absolute entry in einsum_ir solution: 56.5361
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158488
  time (eval):    0.00582156
  gflops (eval):  533.378
  gflops (total): 143.288
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158488,0.00582156,533.378,143.288

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0328584
  gflops (total): 94.4991
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,94.4991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142338
  gflops (eval):  218.15
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142338,218.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7541
  maximum absolute entry in einsum_ir solution: 57.7541
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156142
  time (eval):    0.00582296
  gflops (eval):  533.249
  gflops (total): 144.846
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156142,0.00582296,533.249,144.846

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0332257
  gflops (total): 93.4545
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.4545

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142611
  gflops (eval):  217.732
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142611,217.732,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7571
  maximum absolute entry in einsum_ir solution: 58.7571
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0151961
  time (eval):    0.00575866
  gflops (eval):  539.203
  gflops (total): 148.181
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0151961,0.00575866,539.203,148.181

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0347214
  gflops (total): 89.4288
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.4288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142948
  gflops (eval):  217.218
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142948,217.218,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1481
  maximum absolute entry in einsum_ir solution: 56.1481
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0149239
  time (eval):    0.00604309
  gflops (eval):  513.825
  gflops (total): 148.094
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0149239,0.00604309,513.825,148.094

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0337192
  gflops (total): 92.0866
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.0866

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014162
  gflops (eval):  219.256
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014162,219.256,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.213
  maximum absolute entry in einsum_ir solution: 55.213
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0160118
  time (eval):    0.00585653
  gflops (eval):  530.193
  gflops (total): 141.991
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0160118,0.00585653,530.193,141.991

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0317608
  gflops (total): 97.7649
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,97.7649

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014233
  gflops (eval):  218.162
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014233,218.162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5932
  maximum absolute entry in einsum_ir solution: 56.5932
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158373
  time (eval):    0.00581743
  gflops (eval):  533.757
  gflops (total): 143.391
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158373,0.00581743,533.757,143.391

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0336762
  gflops (total): 92.2043
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.2043

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142244
  gflops (eval):  218.293
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142244,218.293,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4682
  maximum absolute entry in einsum_ir solution: 56.4682
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0155309
  time (eval):    0.00579217
  gflops (eval):  536.084
  gflops (total): 145.621
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0155309,0.00579217,536.084,145.621

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0332066
  gflops (total): 93.5082
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.5082

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141376
  gflops (eval):  219.634
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141376,219.634,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8673
  maximum absolute entry in einsum_ir solution: 56.8673
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.01539
  time (eval):    0.00582836
  gflops (eval):  532.756
  gflops (total): 146.34
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.01539,0.00582836,532.756,146.34

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0339216
  gflops (total): 91.5374
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.5374

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142313
  gflops (eval):  218.187
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142313,218.187,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4356
  maximum absolute entry in einsum_ir solution: 55.4356
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156422
  time (eval):    0.00581392
  gflops (eval):  534.079
  gflops (total): 144.718
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156422,0.00581392,534.079,144.718

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0328973
  gflops (total): 94.3874
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,94.3874

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141682
  gflops (eval):  219.16
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141682,219.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9584
  maximum absolute entry in einsum_ir solution: 57.9584
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0155836
  time (eval):    0.00577996
  gflops (eval):  537.216
  gflops (total): 145.345
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0155836,0.00577996,537.216,145.345

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0333118
  gflops (total): 93.2131
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.2131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142089
  gflops (eval):  218.531
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142089,218.531,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7716
  maximum absolute entry in einsum_ir solution: 57.7716
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0149121
  time (eval):    0.00579336
  gflops (eval):  535.974
  gflops (total): 149.965
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0149121,0.00579336,535.974,149.965

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0325104
  gflops (total): 95.5108
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,95.5108

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142155
  gflops (eval):  218.429
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142155,218.429,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3415
  maximum absolute entry in einsum_ir solution: 60.3415
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0149587
  time (eval):    0.00582895
  gflops (eval):  532.701
  gflops (total): 149.372
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0149587,0.00582895,532.701,149.372

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0340204
  gflops (total): 91.2716
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.2716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142291
  gflops (eval):  218.221
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142291,218.221,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.8749
  maximum absolute entry in einsum_ir solution: 52.8749
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157566
  time (eval):    0.00580992
  gflops (eval):  534.446
  gflops (total): 143.977
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157566,0.00580992,534.446,143.977

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0337963
  gflops (total): 91.8767
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.8767

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142619
  gflops (eval):  217.72
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142619,217.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7927
  maximum absolute entry in einsum_ir solution: 54.7927
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0149108
  time (eval):    0.0057857
  gflops (eval):  536.684
  gflops (total): 150.03
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0149108,0.0057857,536.684,150.03

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0326003
  gflops (total): 95.2475
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,95.2475

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142167
  gflops (eval):  218.411
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142167,218.411,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1007
  maximum absolute entry in einsum_ir solution: 54.1007
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157933
  time (eval):    0.00580019
  gflops (eval):  535.343
  gflops (total): 143.797
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157933,0.00580019,535.343,143.797

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0341067
  gflops (total): 91.0406
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.0406

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142411
  gflops (eval):  218.038
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142411,218.038,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.3195
  maximum absolute entry in einsum_ir solution: 65.3195
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154516
  time (eval):    0.00580312
  gflops (eval):  535.073
  gflops (total): 146.089
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154516,0.00580312,535.073,146.089

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0330692
  gflops (total): 93.8967
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.8967

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141947
  gflops (eval):  218.75
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141947,218.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4608
  maximum absolute entry in einsum_ir solution: 59.4608
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0152027
  time (eval):    0.00583103
  gflops (eval):  532.512
  gflops (total): 147.624
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0152027,0.00583103,532.512,147.624

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0340297
  gflops (total): 91.2466
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.2466

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141914
  gflops (eval):  218.801
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141914,218.801,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9941
  maximum absolute entry in einsum_ir solution: 55.9941
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0149972
  time (eval):    0.00581521
  gflops (eval):  533.961
  gflops (total): 149.194
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0149972,0.00581521,533.961,149.194

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0343034
  gflops (total): 90.5185
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.5185

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142718
  gflops (eval):  217.568
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142718,217.568,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.2137
  maximum absolute entry in einsum_ir solution: 62.2137
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0153752
  time (eval):    0.00580161
  gflops (eval):  535.212
  gflops (total): 146.627
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0153752,0.00580161,535.212,146.627

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0336453
  gflops (total): 92.2889
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.2889

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142822
  gflops (eval):  217.41
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142822,217.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9059
  maximum absolute entry in einsum_ir solution: 57.9059
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154983
  time (eval):    0.00582068
  gflops (eval):  533.458
  gflops (total): 145.649
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154983,0.00582068,533.458,145.649

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0347468
  gflops (total): 89.3633
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.3633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142405
  gflops (eval):  218.047
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142405,218.047,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.81
  maximum absolute entry in einsum_ir solution: 57.81
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0155061
  time (eval):    0.00581925
  gflops (eval):  533.59
  gflops (total): 145.606
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0155061,0.00581925,533.59,145.606

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0334854
  gflops (total): 92.7297
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.7297

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142235
  gflops (eval):  218.308
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142235,218.308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2505
  maximum absolute entry in einsum_ir solution: 58.2505
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0150159
  time (eval):    0.00581785
  gflops (eval):  533.718
  gflops (total): 149.041
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0150159,0.00581785,533.718,149.041

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0338755
  gflops (total): 91.6619
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.6619

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142669
  gflops (eval):  217.643
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142669,217.643,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1436
  maximum absolute entry in einsum_ir solution: 59.1436
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0153797
  time (eval):    0.00583362
  gflops (eval):  532.275
  gflops (total): 146.375
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0153797,0.00583362,532.275,146.375

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0340215
  gflops (total): 91.2684
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.2684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142203
  gflops (eval):  218.357
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142203,218.357,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7912
  maximum absolute entry in einsum_ir solution: 55.7912
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158826
  time (eval):    0.00583455
  gflops (eval):  532.19
  gflops (total): 142.979
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158826,0.00583455,532.19,142.979

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0332347
  gflops (total): 93.4293
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.4293

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143073
  gflops (eval):  217.029
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143073,217.029,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7086
  maximum absolute entry in einsum_ir solution: 55.7086
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0155184
  time (eval):    0.0058045
  gflops (eval):  534.946
  gflops (total): 145.622
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0155184,0.0058045,534.946,145.622

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0339959
  gflops (total): 91.3372
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.3372

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142547
  gflops (eval):  217.83
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142547,217.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9991
  maximum absolute entry in einsum_ir solution: 53.9991
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157033
  time (eval):    0.00580005
  gflops (eval):  535.356
  gflops (total): 144.4
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157033,0.00580005,535.356,144.4

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0331811
  gflops (total): 93.5801
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.5801

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142453
  gflops (eval):  217.974
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142453,217.974,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2526
  maximum absolute entry in einsum_ir solution: 57.2526
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157978
  time (eval):    0.00582913
  gflops (eval):  532.685
  gflops (total): 143.575
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157978,0.00582913,532.685,143.575

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0324792
  gflops (total): 95.6024
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,95.6024

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142494
  gflops (eval):  217.91
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142494,217.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3042
  maximum absolute entry in einsum_ir solution: 58.3042
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.015846
  time (eval):    0.00581165
  gflops (eval):  534.288
  gflops (total): 143.372
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.015846,0.00581165,534.288,143.372

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0327818
  gflops (total): 94.72
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,94.72

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141902
  gflops (eval):  218.819
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141902,218.819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8234
  maximum absolute entry in einsum_ir solution: 54.8234
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0151538
  time (eval):    0.00576486
  gflops (eval):  538.624
  gflops (total): 148.436
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0151538,0.00576486,538.624,148.436

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0328735
  gflops (total): 94.4558
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,94.4558

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142733
  gflops (eval):  217.545
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142733,217.545,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.7211
  maximum absolute entry in einsum_ir solution: 52.7211
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158008
  time (eval):    0.00580869
  gflops (eval):  534.56
  gflops (total): 143.691
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158008,0.00580869,534.56,143.691

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0335266
  gflops (total): 92.6158
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.6158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142186
  gflops (eval):  218.382
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142186,218.382,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0709
  maximum absolute entry in einsum_ir solution: 59.0709
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156922
  time (eval):    0.00578931
  gflops (eval):  536.349
  gflops (total): 144.547
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156922,0.00578931,536.349,144.547

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0332363
  gflops (total): 93.4246
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.4246

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142466
  gflops (eval):  217.953
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142466,217.953,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1533
  maximum absolute entry in einsum_ir solution: 58.1533
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156764
  time (eval):    0.00579315
  gflops (eval):  535.994
  gflops (total): 144.627
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156764,0.00579315,535.994,144.627

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.033859
  gflops (total): 91.7065
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.7065

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142645
  gflops (eval):  217.68
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142645,217.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1926
  maximum absolute entry in einsum_ir solution: 57.1926
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154015
  time (eval):    0.0058097
  gflops (eval):  534.467
  gflops (total): 146.39
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154015,0.0058097,534.467,146.39

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0324666
  gflops (total): 95.6397
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,95.6397

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142363
  gflops (eval):  218.112
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142363,218.112,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6725
  maximum absolute entry in einsum_ir solution: 58.6725
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156867
  time (eval):    0.00579024
  gflops (eval):  536.263
  gflops (total): 144.578
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156867,0.00579024,536.263,144.578

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0340031
  gflops (total): 91.318
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.318

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141809
  gflops (eval):  218.963
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141809,218.963,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0293
  maximum absolute entry in einsum_ir solution: 56.0293
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154966
  time (eval):    0.00581926
  gflops (eval):  533.589
  gflops (total): 145.67
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154966,0.00581926,533.589,145.67

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0337759
  gflops (total): 91.9322
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.9322

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142556
  gflops (eval):  217.816
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142556,217.816,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.4845
  maximum absolute entry in einsum_ir solution: 64.4845
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157599
  time (eval):    0.0057948
  gflops (eval):  535.841
  gflops (total): 144.057
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157599,0.0057948,535.841,144.057

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0322654
  gflops (total): 96.236
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,96.236

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141982
  gflops (eval):  218.695
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141982,218.695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3261
  maximum absolute entry in einsum_ir solution: 56.3261
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158045
  time (eval):    0.0058001
  gflops (eval):  535.351
  gflops (total): 143.723
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158045,0.0058001,535.351,143.723

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0340038
  gflops (total): 91.3161
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.3161

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142064
  gflops (eval):  218.571
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142064,218.571,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.8535
  maximum absolute entry in einsum_ir solution: 62.8535
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0152459
  time (eval):    0.00581261
  gflops (eval):  534.199
  gflops (total): 147.45
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0152459,0.00581261,534.199,147.45

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0326467
  gflops (total): 95.1121
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,95.1121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141797
  gflops (eval):  218.981
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141797,218.981,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7596
  maximum absolute entry in einsum_ir solution: 57.7596
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157237
  time (eval):    0.00583219
  gflops (eval):  532.406
  gflops (total): 144.049
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157237,0.00583219,532.406,144.049

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0325269
  gflops (total): 95.4623
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,95.4623

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141656
  gflops (eval):  219.199
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141656,219.199,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.2641
  maximum absolute entry in einsum_ir solution: 55.2641
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157956
  time (eval):    0.00578765
  gflops (eval):  536.503
  gflops (total): 143.866
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157956,0.00578765,536.503,143.866

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0335632
  gflops (total): 92.5149
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.5149

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142891
  gflops (eval):  217.305
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142891,217.305,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1834
  maximum absolute entry in einsum_ir solution: 60.1834
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156879
  time (eval):    0.00580686
  gflops (eval):  534.728
  gflops (total): 144.458
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156879,0.00580686,534.728,144.458

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.033331
  gflops (total): 93.1592
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.1592

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142733
  gflops (eval):  217.545
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142733,217.545,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.511
  maximum absolute entry in einsum_ir solution: 57.511
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0160147
  time (eval):    0.00580575
  gflops (eval):  534.83
  gflops (total): 142.302
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0160147,0.00580575,534.83,142.302

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0337567
  gflops (total): 91.9844
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.9844

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142613
  gflops (eval):  217.729
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142613,217.729,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1709
  maximum absolute entry in einsum_ir solution: 54.1709
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0159418
  time (eval):    0.00577405
  gflops (eval):  537.766
  gflops (total): 142.987
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0159418,0.00577405,537.766,142.987

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0336752
  gflops (total): 92.2071
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.2071

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142431
  gflops (eval):  218.007
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142431,218.007,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5955
  maximum absolute entry in einsum_ir solution: 58.5955
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157685
  time (eval):    0.00582085
  gflops (eval):  533.443
  gflops (total): 143.825
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157685,0.00582085,533.443,143.825

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0330866
  gflops (total): 93.8474
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.8474

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014212
  gflops (eval):  218.484
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014212,218.484,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.6024
  maximum absolute entry in einsum_ir solution: 53.6024
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157524
  time (eval):    0.00580576
  gflops (eval):  534.829
  gflops (total): 144.033
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157524,0.00580576,534.829,144.033

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0328271
  gflops (total): 94.5892
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,94.5892

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142078
  gflops (eval):  218.549
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142078,218.549,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8456
  maximum absolute entry in einsum_ir solution: 58.8456
  maximum element-wise difference:              0
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0149163
  time (eval):    0.00579957
  gflops (eval):  535.401
  gflops (total): 149.89
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0149163,0.00579957,535.401,149.89

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0332676
  gflops (total): 93.3368
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.3368

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142559
  gflops (eval):  217.811
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142559,217.811,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9367
  maximum absolute entry in einsum_ir solution: 55.9367
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131292
  time (eval):    0.00376514
  gflops (eval):  1150.43
  gflops (total): 256.389
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131292,0.00376514,1150.43,256.389

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.036972
  gflops (total): 117.157
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,117.157

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0334561
  gflops (eval):  129.469
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0334561,129.469,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5882
  maximum absolute entry in einsum_ir solution: 36.5882
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013407
  time (eval):    0.00399025
  gflops (eval):  1085.53
  gflops (total): 248.977
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013407,0.00399025,1085.53,248.977

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0364279
  gflops (total): 118.907
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,118.907

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0342358
  gflops (eval):  126.52
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0342358,126.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3667
  maximum absolute entry in einsum_ir solution: 36.3667
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130225
  time (eval):    0.00393407
  gflops (eval):  1101.03
  gflops (total): 255.448
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130225,0.00393407,1101.03,255.448

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0356957
  gflops (total): 121.346
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,121.346

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0337772
  gflops (eval):  128.238
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0337772,128.238,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5193
  maximum absolute entry in einsum_ir solution: 33.5193
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130365
  time (eval):    0.00390869
  gflops (eval):  1108.18
  gflops (total): 255.619
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130365,0.00390869,1108.18,255.619

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0349717
  gflops (total): 123.858
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,123.858

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0335255
  gflops (eval):  129.201
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0335255,129.201,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5246
  maximum absolute entry in einsum_ir solution: 34.5246
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130662
  time (eval):    0.00379831
  gflops (eval):  1140.38
  gflops (total): 256.842
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130662,0.00379831,1140.38,256.842

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342376
  gflops (total): 126.514
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.514

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0328909
  gflops (eval):  131.694
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328909,131.694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7392
  maximum absolute entry in einsum_ir solution: 35.7392
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132026
  time (eval):    0.00376833
  gflops (eval):  1149.45
  gflops (total): 255.231
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132026,0.00376833,1149.45,255.231

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033831
  gflops (total): 128.034
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.034

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0332047
  gflops (eval):  130.449
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0332047,130.449,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4496
  maximum absolute entry in einsum_ir solution: 38.4496
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0127998
  time (eval):    0.00372715
  gflops (eval):  1162.15
  gflops (total): 262.088
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0127998,0.00372715,1162.15,262.088

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334977
  gflops (total): 129.308
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.308

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327065
  gflops (eval):  132.436
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327065,132.436,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6244
  maximum absolute entry in einsum_ir solution: 35.6244
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130154
  time (eval):    0.00369433
  gflops (eval):  1172.48
  gflops (total): 259.221
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130154,0.00369433,1172.48,259.221

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337607
  gflops (total): 128.301
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0329906
  gflops (eval):  131.296
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0329906,131.296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5848
  maximum absolute entry in einsum_ir solution: 35.5848
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131002
  time (eval):    0.00378788
  gflops (eval):  1143.52
  gflops (total): 256.484
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131002,0.00378788,1143.52,256.484

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340371
  gflops (total): 127.259
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.259

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.032456
  gflops (eval):  133.458
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032456,133.458,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.197
  maximum absolute entry in einsum_ir solution: 34.197
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0127644
  time (eval):    0.00380386
  gflops (eval):  1138.72
  gflops (total): 261.435
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0127644,0.00380386,1138.72,261.435

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338234
  gflops (total): 128.063
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325228
  gflops (eval):  133.184
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325228,133.184,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5411
  maximum absolute entry in einsum_ir solution: 36.5411
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130914
  time (eval):    0.00384608
  gflops (eval):  1126.22
  gflops (total): 255.736
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130914,0.00384608,1126.22,255.736

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033517
  gflops (total): 129.234
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327172
  gflops (eval):  132.393
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327172,132.393,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.4798
  maximum absolute entry in einsum_ir solution: 32.4798
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131382
  time (eval):    0.00397969
  gflops (eval):  1088.41
  gflops (total): 253.04
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131382,0.00397969,1088.41,253.04

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0344201
  gflops (total): 125.843
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,125.843

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327153
  gflops (eval):  132.4
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327153,132.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5537
  maximum absolute entry in einsum_ir solution: 33.5537
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130891
  time (eval):    0.00374271
  gflops (eval):  1157.32
  gflops (total): 257.342
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130891,0.00374271,1157.32,257.342

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0343124
  gflops (total): 126.238
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.238

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0334124
  gflops (eval):  129.638
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0334124,129.638,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9874
  maximum absolute entry in einsum_ir solution: 35.9874
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132711
  time (eval):    0.00376029
  gflops (eval):  1151.91
  gflops (total): 254.325
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132711,0.00376029,1151.91,254.325

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335169
  gflops (total): 129.234
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0317766
  gflops (eval):  136.312
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317766,136.312,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7311
  maximum absolute entry in einsum_ir solution: 33.7311
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129381
  time (eval):    0.00374013
  gflops (eval):  1158.12
  gflops (total): 259.711
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129381,0.00374013,1158.12,259.711

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033215
  gflops (total): 130.409
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.409

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325584
  gflops (eval):  133.039
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325584,133.039,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8972
  maximum absolute entry in einsum_ir solution: 32.8972
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129039
  time (eval):    0.00381973
  gflops (eval):  1133.99
  gflops (total): 259.005
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129039,0.00381973,1133.99,259.005

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326015
  gflops (total): 132.863
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.863

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0324136
  gflops (eval):  133.633
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324136,133.633,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1949
  maximum absolute entry in einsum_ir solution: 33.1949
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013107
  time (eval):    0.00378257
  gflops (eval):  1145.13
  gflops (total): 256.461
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013107,0.00378257,1145.13,256.461

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033762
  gflops (total): 128.296
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.296

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323951
  gflops (eval):  133.709
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323951,133.709,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.675
  maximum absolute entry in einsum_ir solution: 35.675
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130393
  time (eval):    0.00383248
  gflops (eval):  1130.21
  gflops (total): 256.731
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130393,0.00383248,1130.21,256.731

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333953
  gflops (total): 129.704
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.704

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0321013
  gflops (eval):  134.933
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321013,134.933,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4626
  maximum absolute entry in einsum_ir solution: 40.4626
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132244
  time (eval):    0.0038507
  gflops (eval):  1124.87
  gflops (total): 253.675
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132244,0.0038507,1124.87,253.675

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334002
  gflops (total): 129.686
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.686

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323371
  gflops (eval):  133.949
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323371,133.949,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1831
  maximum absolute entry in einsum_ir solution: 37.1831
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130954
  time (eval):    0.00380838
  gflops (eval):  1137.36
  gflops (total): 256.246
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130954,0.00380838,1137.36,256.246

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033653
  gflops (total): 128.711
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.711

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0321256
  gflops (eval):  134.831
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321256,134.831,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9564
  maximum absolute entry in einsum_ir solution: 33.9564
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132416
  time (eval):    0.00379091
  gflops (eval):  1142.61
  gflops (total): 254.309
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132416,0.00379091,1142.61,254.309

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338484
  gflops (total): 127.968
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0329202
  gflops (eval):  131.576
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0329202,131.576,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2638
  maximum absolute entry in einsum_ir solution: 36.2638
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132592
  time (eval):    0.00388852
  gflops (eval):  1113.92
  gflops (total): 252.6
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132592,0.00388852,1113.92,252.6

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338831
  gflops (total): 127.837
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.837

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.03281
  gflops (eval):  132.018
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.03281,132.018,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6388
  maximum absolute entry in einsum_ir solution: 38.6388
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130298
  time (eval):    0.00378615
  gflops (eval):  1144.04
  gflops (total): 257.584
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130298,0.00378615,1144.04,257.584

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339645
  gflops (total): 127.531
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.032807
  gflops (eval):  132.03
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032807,132.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4708
  maximum absolute entry in einsum_ir solution: 36.4708
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130409
  time (eval):    0.00377802
  gflops (eval):  1146.5
  gflops (total): 257.538
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130409,0.00377802,1146.5,257.538

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338151
  gflops (total): 128.094
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.094

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.032385
  gflops (eval):  133.751
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032385,133.751,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4343
  maximum absolute entry in einsum_ir solution: 34.4343
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131479
  time (eval):    0.00383631
  gflops (eval):  1129.09
  gflops (total): 255.032
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131479,0.00383631,1129.09,255.032

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341348
  gflops (total): 126.895
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.895

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0312122
  gflops (eval):  138.777
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0312122,138.777,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7789
  maximum absolute entry in einsum_ir solution: 35.7789
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132014
  time (eval):    0.00384526
  gflops (eval):  1126.46
  gflops (total): 254.098
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132014,0.00384526,1126.46,254.098

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336511
  gflops (total): 128.718
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.718

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325757
  gflops (eval):  132.968
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325757,132.968,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.7226
  maximum absolute entry in einsum_ir solution: 31.7226
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131921
  time (eval):    0.00385766
  gflops (eval):  1122.84
  gflops (total): 254.051
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131921,0.00385766,1122.84,254.051

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334819
  gflops (total): 129.369
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0319876
  gflops (eval):  135.412
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319876,135.412,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7176
  maximum absolute entry in einsum_ir solution: 35.7176
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129211
  time (eval):    0.00387662
  gflops (eval):  1117.34
  gflops (total): 257.864
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129211,0.00387662,1117.34,257.864

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336448
  gflops (total): 128.743
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.743

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325267
  gflops (eval):  133.168
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325267,133.168,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5193
  maximum absolute entry in einsum_ir solution: 35.5193
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013206
  time (eval):    0.00388846
  gflops (eval):  1113.94
  gflops (total): 253.388
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013206,0.00388846,1113.94,253.388

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334209
  gflops (total): 129.605
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0320421
  gflops (eval):  135.182
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320421,135.182,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8238
  maximum absolute entry in einsum_ir solution: 35.8238
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131376
  time (eval):    0.00390007
  gflops (eval):  1110.63
  gflops (total): 254.231
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131376,0.00390007,1110.63,254.231

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335546
  gflops (total): 129.089
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.089

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0326768
  gflops (eval):  132.557
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326768,132.557,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2611
  maximum absolute entry in einsum_ir solution: 36.2611
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130545
  time (eval):    0.00377941
  gflops (eval):  1146.08
  gflops (total): 257.309
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130545,0.00377941,1146.08,257.309

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338958
  gflops (total): 127.789
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0317666
  gflops (eval):  136.355
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317666,136.355,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8073
  maximum absolute entry in einsum_ir solution: 33.8073
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131187
  time (eval):    0.00384622
  gflops (eval):  1126.18
  gflops (total): 255.322
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131187,0.00384622,1126.18,255.322

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337923
  gflops (total): 128.181
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.181

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0312857
  gflops (eval):  138.45
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0312857,138.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3277
  maximum absolute entry in einsum_ir solution: 33.3277
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131684
  time (eval):    0.00380998
  gflops (eval):  1136.89
  gflops (total): 255.12
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131684,0.00380998,1136.89,255.12

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333255
  gflops (total): 129.976
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.976

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0339441
  gflops (eval):  127.608
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0339441,127.608,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1106
  maximum absolute entry in einsum_ir solution: 37.1106
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013079
  time (eval):    0.00377041
  gflops (eval):  1148.82
  gflops (total): 257.072
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013079,0.00377041,1148.82,257.072

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337343
  gflops (total): 128.401
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.401

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325161
  gflops (eval):  133.211
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325161,133.211,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2626
  maximum absolute entry in einsum_ir solution: 36.2626
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129611
  time (eval):    0.00381826
  gflops (eval):  1134.42
  gflops (total): 258.146
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129611,0.00381826,1134.42,258.146

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033588
  gflops (total): 128.96
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.032517
  gflops (eval):  133.208
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032517,133.208,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4675
  maximum absolute entry in einsum_ir solution: 34.4675
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0134562
  time (eval):    0.00382213
  gflops (eval):  1133.27
  gflops (total): 250.69
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0134562,0.00382213,1133.27,250.69

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334325
  gflops (total): 129.56
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0333733
  gflops (eval):  129.79
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0333733,129.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.915
  maximum absolute entry in einsum_ir solution: 32.915
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129362
  time (eval):    0.00385008
  gflops (eval):  1125.05
  gflops (total): 258.04
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129362,0.00385008,1125.05,258.04

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341664
  gflops (total): 126.777
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.032363
  gflops (eval):  133.842
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032363,133.842,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8661
  maximum absolute entry in einsum_ir solution: 32.8661
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130095
  time (eval):    0.00390819
  gflops (eval):  1108.32
  gflops (total): 256.034
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130095,0.00390819,1108.32,256.034

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330687
  gflops (total): 130.986
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325862
  gflops (eval):  132.925
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325862,132.925,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8388
  maximum absolute entry in einsum_ir solution: 33.8388
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.01311
  time (eval):    0.00377368
  gflops (eval):  1147.82
  gflops (total): 256.551
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.01311,0.00377368,1147.82,256.551

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332076
  gflops (total): 130.438
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.438

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0324204
  gflops (eval):  133.605
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324204,133.605,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5196
  maximum absolute entry in einsum_ir solution: 34.5196
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129889
  time (eval):    0.00379356
  gflops (eval):  1141.81
  gflops (total): 258.098
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129889,0.00379356,1141.81,258.098

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0327406
  gflops (total): 132.298
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.298

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0330262
  gflops (eval):  131.154
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0330262,131.154,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7606
  maximum absolute entry in einsum_ir solution: 33.7606
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131851
  time (eval):    0.00384684
  gflops (eval):  1125.99
  gflops (total): 254.318
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131851,0.00384684,1125.99,254.318

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335113
  gflops (total): 129.255
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.255

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0321015
  gflops (eval):  134.932
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321015,134.932,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9501
  maximum absolute entry in einsum_ir solution: 35.9501
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132054
  time (eval):    0.00384519
  gflops (eval):  1126.48
  gflops (total): 254.04
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132054,0.00384519,1126.48,254.04

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334637
  gflops (total): 129.439
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.439

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325127
  gflops (eval):  133.225
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325127,133.225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6687
  maximum absolute entry in einsum_ir solution: 35.6687
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131078
  time (eval):    0.00379433
  gflops (eval):  1141.58
  gflops (total): 256.271
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131078,0.00379433,1141.58,256.271

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326021
  gflops (total): 132.86
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0329582
  gflops (eval):  131.425
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0329582,131.425,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9124
  maximum absolute entry in einsum_ir solution: 34.9124
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129675
  time (eval):    0.00380879
  gflops (eval):  1137.24
  gflops (total): 258.193
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129675,0.00380879,1137.24,258.193

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334594
  gflops (total): 129.456
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.456

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325035
  gflops (eval):  133.263
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325035,133.263,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0706
  maximum absolute entry in einsum_ir solution: 34.0706
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131087
  time (eval):    0.00381151
  gflops (eval):  1136.43
  gflops (total): 255.996
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131087,0.00381151,1136.43,255.996

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333659
  gflops (total): 129.819
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325619
  gflops (eval):  133.024
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325619,133.024,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.2746
  maximum absolute entry in einsum_ir solution: 40.2746
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129654
  time (eval):    0.00380336
  gflops (eval):  1138.87
  gflops (total): 258.308
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129654,0.00380336,1138.87,258.308

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334352
  gflops (total): 129.55
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0326167
  gflops (eval):  132.801
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326167,132.801,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8189
  maximum absolute entry in einsum_ir solution: 35.8189
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129112
  time (eval):    0.00379969
  gflops (eval):  1139.97
  gflops (total): 259.204
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129112,0.00379969,1139.97,259.204

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334767
  gflops (total): 129.389
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.389

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0328016
  gflops (eval):  132.052
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328016,132.052,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5951
  maximum absolute entry in einsum_ir solution: 33.5951
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130278
  time (eval):    0.00384016
  gflops (eval):  1127.95
  gflops (total): 256.789
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130278,0.00384016,1127.95,256.789

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337968
  gflops (total): 128.164
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.164

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0330621
  gflops (eval):  131.012
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0330621,131.012,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.5674
  maximum absolute entry in einsum_ir solution: 32.5674
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129125
  time (eval):    0.00382966
  gflops (eval):  1131.05
  gflops (total): 258.719
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129125,0.00382966,1131.05,258.719

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333677
  gflops (total): 129.812
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0321367
  gflops (eval):  134.784
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321367,134.784,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9432
  maximum absolute entry in einsum_ir solution: 32.9432
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131502
  time (eval):    0.00386529
  gflops (eval):  1120.62
  gflops (total): 254.564
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131502,0.00386529,1120.62,254.564

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334221
  gflops (total): 129.601
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.601

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0315912
  gflops (eval):  137.112
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0315912,137.112,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3595
  maximum absolute entry in einsum_ir solution: 35.3595
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130864
  time (eval):    0.00382396
  gflops (eval):  1132.73
  gflops (total): 256.145
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130864,0.00382396,1132.73,256.145

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0325947
  gflops (total): 132.89
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0333159
  gflops (eval):  130.014
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0333159,130.014,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4142
  maximum absolute entry in einsum_ir solution: 34.4142
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129591
  time (eval):    0.00372615
  gflops (eval):  1162.47
  gflops (total): 259.602
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129591,0.00372615,1162.47,259.602

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333577
  gflops (total): 129.851
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0324143
  gflops (eval):  133.63
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324143,133.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9057
  maximum absolute entry in einsum_ir solution: 33.9057
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131339
  time (eval):    0.00372111
  gflops (eval):  1164.04
  gflops (total): 256.986
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131339,0.00372111,1164.04,256.986

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341389
  gflops (total): 126.879
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0329262
  gflops (eval):  131.552
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0329262,131.552,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8514
  maximum absolute entry in einsum_ir solution: 32.8514
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130399
  time (eval):    0.00382072
  gflops (eval):  1133.69
  gflops (total): 256.901
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130399,0.00382072,1133.69,256.901

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335008
  gflops (total): 129.296
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.296

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0330575
  gflops (eval):  131.03
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0330575,131.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4968
  maximum absolute entry in einsum_ir solution: 35.4968
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131478
  time (eval):    0.00392076
  gflops (eval):  1104.76
  gflops (total): 253.772
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131478,0.00392076,1104.76,253.772

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342122
  gflops (total): 126.607
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327953
  gflops (eval):  132.078
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327953,132.078,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2365
  maximum absolute entry in einsum_ir solution: 34.2365
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013417
  time (eval):    0.00374859
  gflops (eval):  1155.5
  gflops (total): 252.337
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013417,0.00374859,1155.5,252.337

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335232
  gflops (total): 129.209
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.209

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0321252
  gflops (eval):  134.833
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321252,134.833,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8799
  maximum absolute entry in einsum_ir solution: 39.8799
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133335
  time (eval):    0.00378102
  gflops (eval):  1145.6
  gflops (total): 253.09
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133335,0.00378102,1145.6,253.09

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033769
  gflops (total): 128.269
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.269

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0326818
  gflops (eval):  132.536
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326818,132.536,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2407
  maximum absolute entry in einsum_ir solution: 35.2407
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130196
  time (eval):    0.0038224
  gflops (eval):  1133.2
  gflops (total): 257.186
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130196,0.0038224,1133.2,257.186

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335045
  gflops (total): 129.282
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.282

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.032522
  gflops (eval):  133.187
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032522,133.187,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7293
  maximum absolute entry in einsum_ir solution: 33.7293
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129933
  time (eval):    0.00385358
  gflops (eval):  1124.03
  gflops (total): 257.111
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129933,0.00385358,1124.03,257.111

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335484
  gflops (total): 129.113
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.113

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0318075
  gflops (eval):  136.179
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318075,136.179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0126
  maximum absolute entry in einsum_ir solution: 35.0126
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131259
  time (eval):    0.00384784
  gflops (eval):  1125.7
  gflops (total): 255.19
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131259,0.00384784,1125.7,255.19

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0327147
  gflops (total): 132.403
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.403

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327268
  gflops (eval):  132.354
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327268,132.354,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6931
  maximum absolute entry in einsum_ir solution: 32.6931
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0127187
  time (eval):    0.00380132
  gflops (eval):  1139.48
  gflops (total): 262.198
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0127187,0.00380132,1139.48,262.198

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339678
  gflops (total): 127.518
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325052
  gflops (eval):  133.256
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325052,133.256,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1691
  maximum absolute entry in einsum_ir solution: 34.1691
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0127015
  time (eval):    0.00388659
  gflops (eval):  1114.48
  gflops (total): 261.122
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0127015,0.00388659,1114.48,261.122

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337116
  gflops (total): 128.488
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.488

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0324931
  gflops (eval):  133.306
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324931,133.306,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8815
  maximum absolute entry in einsum_ir solution: 33.8815
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132208
  time (eval):    0.0037937
  gflops (eval):  1141.77
  gflops (total): 254.578
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132208,0.0037937,1141.77,254.578

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335369
  gflops (total): 129.157
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.157

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0330533
  gflops (eval):  131.046
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0330533,131.046,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9344
  maximum absolute entry in einsum_ir solution: 35.9344
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0127267
  time (eval):    0.00381657
  gflops (eval):  1134.92
  gflops (total): 261.83
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0127267,0.00381657,1134.92,261.83

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335756
  gflops (total): 129.008
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.008

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0329008
  gflops (eval):  131.654
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0329008,131.654,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8074
  maximum absolute entry in einsum_ir solution: 34.8074
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013082
  time (eval):    0.00388471
  gflops (eval):  1115.02
  gflops (total): 255.295
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013082,0.00388471,1115.02,255.295

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339211
  gflops (total): 127.694
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.694

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0330606
  gflops (eval):  131.018
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0330606,131.018,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2704
  maximum absolute entry in einsum_ir solution: 37.2704
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131574
  time (eval):    0.00387914
  gflops (eval):  1116.62
  gflops (total): 254.249
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131574,0.00387914,1116.62,254.249

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339777
  gflops (total): 127.481
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.481

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.032794
  gflops (eval):  132.083
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032794,132.083,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6019
  maximum absolute entry in einsum_ir solution: 32.6019
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129978
  time (eval):    0.0037771
  gflops (eval):  1146.79
  gflops (total): 258.214
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129978,0.0037771,1146.79,258.214

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0329985
  gflops (total): 131.264
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.264

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0331326
  gflops (eval):  130.733
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0331326,130.733,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.634
  maximum absolute entry in einsum_ir solution: 33.634
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130383
  time (eval):    0.00380363
  gflops (eval):  1138.79
  gflops (total): 257.186
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130383,0.00380363,1138.79,257.186

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336356
  gflops (total): 128.778
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.778

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0314325
  gflops (eval):  137.804
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0314325,137.804,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9963
  maximum absolute entry in einsum_ir solution: 33.9963
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131153
  time (eval):    0.00382498
  gflops (eval):  1132.43
  gflops (total): 255.693
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131153,0.00382498,1132.43,255.693

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338354
  gflops (total): 128.017
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0328458
  gflops (eval):  131.874
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328458,131.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2407
  maximum absolute entry in einsum_ir solution: 35.2407
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129852
  time (eval):    0.00390159
  gflops (eval):  1110.19
  gflops (total): 256.504
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129852,0.00390159,1110.19,256.504

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332995
  gflops (total): 130.078
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.078

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0329436
  gflops (eval):  131.483
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0329436,131.483,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3957
  maximum absolute entry in einsum_ir solution: 39.3957
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132615
  time (eval):    0.00377341
  gflops (eval):  1147.91
  gflops (total): 254.273
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132615,0.00377341,1147.91,254.273

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342831
  gflops (total): 126.346
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.346

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327029
  gflops (eval):  132.451
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327029,132.451,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0487
  maximum absolute entry in einsum_ir solution: 35.0487
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130503
  time (eval):    0.00384943
  gflops (eval):  1125.24
  gflops (total): 256.308
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130503,0.00384943,1125.24,256.308

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341903
  gflops (total): 126.689
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.689

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.033035
  gflops (eval):  131.119
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.033035,131.119,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5824
  maximum absolute entry in einsum_ir solution: 33.5824
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129226
  time (eval):    0.00382532
  gflops (eval):  1132.33
  gflops (total): 258.631
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129226,0.00382532,1132.33,258.631

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339563
  gflops (total): 127.562
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.562

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0331865
  gflops (eval):  130.52
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0331865,130.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5008
  maximum absolute entry in einsum_ir solution: 33.5008
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129572
  time (eval):    0.00383419
  gflops (eval):  1129.71
  gflops (total): 257.96
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129572,0.00383419,1129.71,257.96

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335797
  gflops (total): 128.992
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.992

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0328015
  gflops (eval):  132.052
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328015,132.052,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9961
  maximum absolute entry in einsum_ir solution: 35.9961
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131569
  time (eval):    0.00383324
  gflops (eval):  1129.99
  gflops (total): 254.943
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131569,0.00383324,1129.99,254.943

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341146
  gflops (total): 126.97
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325426
  gflops (eval):  133.103
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325426,133.103,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3726
  maximum absolute entry in einsum_ir solution: 38.3726
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130852
  time (eval):    0.00376392
  gflops (eval):  1150.8
  gflops (total): 257.077
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130852,0.00376392,1150.8,257.077

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342618
  gflops (total): 126.424
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.424

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.03266
  gflops (eval):  132.625
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.03266,132.625,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3574
  maximum absolute entry in einsum_ir solution: 34.3574
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013026
  time (eval):    0.00378285
  gflops (eval):  1145.04
  gflops (total): 257.693
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013026,0.00378285,1145.04,257.693

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332153
  gflops (total): 130.407
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.407

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0330571
  gflops (eval):  131.032
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0330571,131.032,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7431
  maximum absolute entry in einsum_ir solution: 34.7431
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129826
  time (eval):    0.00380072
  gflops (eval):  1139.66
  gflops (total): 258.086
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129826,0.00380072,1139.66,258.086

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335133
  gflops (total): 129.248
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325228
  gflops (eval):  133.184
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325228,133.184,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2504
  maximum absolute entry in einsum_ir solution: 33.2504
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0140801
  time (eval):    0.00382891
  gflops (eval):  1131.27
  gflops (total): 241.862
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0140801,0.00382891,1131.27,241.862

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334007
  gflops (total): 129.684
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0330489
  gflops (eval):  131.064
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0330489,131.064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.637
  maximum absolute entry in einsum_ir solution: 32.637
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131978
  time (eval):    0.00376152
  gflops (eval):  1151.53
  gflops (total): 255.406
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131978,0.00376152,1151.53,255.406

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341077
  gflops (total): 126.995
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.995

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323495
  gflops (eval):  133.898
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323495,133.898,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.105
  maximum absolute entry in einsum_ir solution: 33.105
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131101
  time (eval):    0.00381701
  gflops (eval):  1134.79
  gflops (total): 255.892
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131101,0.00381701,1134.79,255.892

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336942
  gflops (total): 128.554
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.554

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327105
  gflops (eval):  132.42
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327105,132.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5832
  maximum absolute entry in einsum_ir solution: 33.5832
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129217
  time (eval):    0.00381794
  gflops (eval):  1134.52
  gflops (total): 258.759
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129217,0.00381794,1134.52,258.759

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0327806
  gflops (total): 132.137
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.137

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0322539
  gflops (eval):  134.294
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322539,134.294,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0942
  maximum absolute entry in einsum_ir solution: 41.0942
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013082
  time (eval):    0.00381368
  gflops (eval):  1135.78
  gflops (total): 256.369
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013082,0.00381368,1135.78,256.369

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331992
  gflops (total): 130.471
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.471

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0324861
  gflops (eval):  133.335
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324861,133.335,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8835
  maximum absolute entry in einsum_ir solution: 33.8835
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130854
  time (eval):    0.00384739
  gflops (eval):  1125.83
  gflops (total): 255.807
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130854,0.00384739,1125.83,255.807

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033456
  gflops (total): 129.469
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.469

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0326131
  gflops (eval):  132.816
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326131,132.816,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.0235
  maximum absolute entry in einsum_ir solution: 32.0235
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0127611
  time (eval):    0.00378455
  gflops (eval):  1144.53
  gflops (total): 261.792
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0127611,0.00378455,1144.53,261.792

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340288
  gflops (total): 127.29
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0322027
  gflops (eval):  134.508
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322027,134.508,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2784
  maximum absolute entry in einsum_ir solution: 34.2784
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131485
  time (eval):    0.00383663
  gflops (eval):  1128.99
  gflops (total): 255.019
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131485,0.00383663,1128.99,255.019

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334775
  gflops (total): 129.386
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.386

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0328899
  gflops (eval):  131.697
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328899,131.697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.897
  maximum absolute entry in einsum_ir solution: 33.897
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131944
  time (eval):    0.00376195
  gflops (eval):  1151.4
  gflops (total): 255.451
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131944,0.00376195,1151.4,255.451

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335427
  gflops (total): 129.135
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.135

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327583
  gflops (eval):  132.226
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327583,132.226,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6361
  maximum absolute entry in einsum_ir solution: 32.6361
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130558
  time (eval):    0.0038686
  gflops (eval):  1119.66
  gflops (total): 255.933
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130558,0.0038686,1119.66,255.933

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338543
  gflops (total): 127.946
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327379
  gflops (eval):  132.309
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327379,132.309,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2959
  maximum absolute entry in einsum_ir solution: 33.2959
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131176
  time (eval):    0.0037785
  gflops (eval):  1146.36
  gflops (total): 256.363
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131176,0.0037785,1146.36,256.363

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338248
  gflops (total): 128.057
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.057

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0328072
  gflops (eval):  132.03
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328072,132.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0508
  maximum absolute entry in einsum_ir solution: 35.0508
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130729
  time (eval):    0.00380963
  gflops (eval):  1136.99
  gflops (total): 256.568
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130729,0.00380963,1136.99,256.568

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326723
  gflops (total): 132.575
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.575

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0321561
  gflops (eval):  134.703
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321561,134.703,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.01
  maximum absolute entry in einsum_ir solution: 35.01
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013013
  time (eval):    0.00384841
  gflops (eval):  1125.53
  gflops (total): 256.89
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013013,0.00384841,1125.53,256.89

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334152
  gflops (total): 129.627
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.627

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0330508
  gflops (eval):  131.056
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0330508,131.056,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.9456
  maximum absolute entry in einsum_ir solution: 31.9456
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131708
  time (eval):    0.00375705
  gflops (eval):  1152.91
  gflops (total): 255.881
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131708,0.00375705,1152.91,255.881

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338441
  gflops (total): 127.984
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.984

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0326396
  gflops (eval):  132.708
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326396,132.708,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6592
  maximum absolute entry in einsum_ir solution: 34.6592
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0140008
  time (eval):    0.00381408
  gflops (eval):  1135.67
  gflops (total): 243.141
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0140008,0.00381408,1135.67,243.141

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335416
  gflops (total): 129.139
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.139

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327932
  gflops (eval):  132.086
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327932,132.086,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6066
  maximum absolute entry in einsum_ir solution: 33.6066
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129823
  time (eval):    0.00383309
  gflops (eval):  1130.03
  gflops (total): 257.592
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129823,0.00383309,1130.03,257.592

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341142
  gflops (total): 126.971
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.971

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0326081
  gflops (eval):  132.836
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326081,132.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.7753
  maximum absolute entry in einsum_ir solution: 39.7753
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132867
  time (eval):    0.00380867
  gflops (eval):  1137.28
  gflops (total): 253.374
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132867,0.00380867,1137.28,253.374

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335613
  gflops (total): 129.063
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0331743
  gflops (eval):  130.568
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0331743,130.568,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.1243
  maximum absolute entry in einsum_ir solution: 32.1243
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131674
  time (eval):    0.00381044
  gflops (eval):  1136.75
  gflops (total): 255.128
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131674,0.00381044,1136.75,255.128

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334407
  gflops (total): 129.528
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0329831
  gflops (eval):  131.326
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0329831,131.326,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9294
  maximum absolute entry in einsum_ir solution: 34.9294
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130411
  time (eval):    0.00376181
  gflops (eval):  1151.45
  gflops (total): 257.784
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130411,0.00376181,1151.45,257.784

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0328869
  gflops (total): 131.71
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327068
  gflops (eval):  132.435
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327068,132.435,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2631
  maximum absolute entry in einsum_ir solution: 34.2631
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132859
  time (eval):    0.00383772
  gflops (eval):  1128.67
  gflops (total): 252.956
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132859,0.00383772,1128.67,252.956

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342361
  gflops (total): 126.519
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.519

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.033027
  gflops (eval):  131.151
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.033027,131.151,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.1349
  maximum absolute entry in einsum_ir solution: 32.1349
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133755
  time (eval):    0.00374482
  gflops (eval):  1156.67
  gflops (total): 253.005
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133755,0.00374482,1156.67,253.005

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339871
  gflops (total): 127.446
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.446

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0322004
  gflops (eval):  134.517
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322004,134.517,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5758
  maximum absolute entry in einsum_ir solution: 33.5758
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131198
  time (eval):    0.00390263
  gflops (eval):  1109.9
  gflops (total): 254.459
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131198,0.00390263,1109.9,254.459

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337189
  gflops (total): 128.46
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0321801
  gflops (eval):  134.602
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321801,134.602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4226
  maximum absolute entry in einsum_ir solution: 34.4226
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133749
  time (eval):    0.00409661
  gflops (eval):  1057.34
  gflops (total): 247.919
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133749,0.00409661,1057.34,247.919

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0325419
  gflops (total): 133.106
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.106

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324598
  gflops (eval):  133.443
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324598,133.443,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.464
  maximum absolute entry in einsum_ir solution: 38.464
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129506
  time (eval):    0.00408384
  gflops (eval):  1060.65
  gflops (total): 254.28
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129506,0.00408384,1060.65,254.28

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337002
  gflops (total): 128.531
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324126
  gflops (eval):  133.637
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324126,133.637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9875
  maximum absolute entry in einsum_ir solution: 34.9875
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0125784
  time (eval):    0.00412644
  gflops (eval):  1049.7
  gflops (total): 259.297
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0125784,0.00412644,1049.7,259.297

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332778
  gflops (total): 130.162
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322333
  gflops (eval):  134.38
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322333,134.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7908
  maximum absolute entry in einsum_ir solution: 34.7908
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130508
  time (eval):    0.00409606
  gflops (eval):  1057.48
  gflops (total): 252.613
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130508,0.00409606,1057.48,252.613

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336729
  gflops (total): 128.635
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.635

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325886
  gflops (eval):  132.915
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325886,132.915,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2816
  maximum absolute entry in einsum_ir solution: 35.2816
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131202
  time (eval):    0.0040847
  gflops (eval):  1060.43
  gflops (total): 251.761
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131202,0.0040847,1060.43,251.761

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334516
  gflops (total): 129.486
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.486

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325775
  gflops (eval):  132.96
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325775,132.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1359
  maximum absolute entry in einsum_ir solution: 35.1359
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132237
  time (eval):    0.00408514
  gflops (eval):  1060.31
  gflops (total): 250.249
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132237,0.00408514,1060.31,250.249

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333021
  gflops (total): 130.067
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.067

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323076
  gflops (eval):  134.071
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323076,134.071,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0741
  maximum absolute entry in einsum_ir solution: 35.0741
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131551
  time (eval):    0.00406682
  gflops (eval):  1065.09
  gflops (total): 251.512
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131551,0.00406682,1065.09,251.512

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0327672
  gflops (total): 132.191
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326201
  gflops (eval):  132.787
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326201,132.787,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.175
  maximum absolute entry in einsum_ir solution: 35.175
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.012729
  time (eval):    0.00408976
  gflops (eval):  1059.11
  gflops (total): 257.542
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.012729,0.00408976,1059.11,257.542

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0323415
  gflops (total): 133.931
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.931

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322374
  gflops (eval):  134.363
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322374,134.363,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.234
  maximum absolute entry in einsum_ir solution: 34.234
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130306
  time (eval):    0.00420107
  gflops (eval):  1031.05
  gflops (total): 251.369
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130306,0.00420107,1031.05,251.369

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334085
  gflops (total): 129.653
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.653

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0312765
  gflops (eval):  138.491
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0312765,138.491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1949
  maximum absolute entry in einsum_ir solution: 34.1949
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131004
  time (eval):    0.00407565
  gflops (eval):  1062.78
  gflops (total): 252.184
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131004,0.00407565,1062.78,252.184

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333644
  gflops (total): 129.825
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.825

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319609
  gflops (eval):  135.525
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319609,135.525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7542
  maximum absolute entry in einsum_ir solution: 34.7542
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130117
  time (eval):    0.00409792
  gflops (eval):  1057.01
  gflops (total): 253.163
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130117,0.00409792,1057.01,253.163

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335957
  gflops (total): 128.931
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.931

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323552
  gflops (eval):  133.874
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323552,133.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.439
  maximum absolute entry in einsum_ir solution: 35.439
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130791
  time (eval):    0.00418479
  gflops (eval):  1035.06
  gflops (total): 250.9
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130791,0.00418479,1035.06,250.9

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335972
  gflops (total): 128.925
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324815
  gflops (eval):  133.354
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324815,133.354,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2377
  maximum absolute entry in einsum_ir solution: 35.2377
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133319
  time (eval):    0.0040543
  gflops (eval):  1068.38
  gflops (total): 249.136
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133319,0.0040543,1068.38,249.136

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0328906
  gflops (total): 131.695
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.695

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323793
  gflops (eval):  133.774
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323793,133.774,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.3874
  maximum absolute entry in einsum_ir solution: 32.3874
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132201
  time (eval):    0.00411802
  gflops (eval):  1051.85
  gflops (total): 249.827
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132201,0.00411802,1051.85,249.827

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0327294
  gflops (total): 132.344
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325702
  gflops (eval):  132.99
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325702,132.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3061
  maximum absolute entry in einsum_ir solution: 34.3061
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132773
  time (eval):    0.00414885
  gflops (eval):  1044.03
  gflops (total): 248.564
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132773,0.00414885,1044.03,248.564

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333168
  gflops (total): 130.01
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325569
  gflops (eval):  133.044
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325569,133.044,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2162
  maximum absolute entry in einsum_ir solution: 35.2162
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132536
  time (eval):    0.00418059
  gflops (eval):  1036.1
  gflops (total): 248.45
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132536,0.00418059,1036.1,248.45

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0323206
  gflops (total): 134.018
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,134.018

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324479
  gflops (eval):  133.492
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324479,133.492,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0452
  maximum absolute entry in einsum_ir solution: 34.0452
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013278
  time (eval):    0.00407933
  gflops (eval):  1061.82
  gflops (total): 249.55
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013278,0.00407933,1061.82,249.55

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333872
  gflops (total): 129.736
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320524
  gflops (eval):  135.139
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320524,135.139,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1032
  maximum absolute entry in einsum_ir solution: 35.1032
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131479
  time (eval):    0.0040934
  gflops (eval):  1058.17
  gflops (total): 251.23
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131479,0.0040934,1058.17,251.23

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333279
  gflops (total): 129.967
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.967

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322884
  gflops (eval):  134.151
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322884,134.151,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6414
  maximum absolute entry in einsum_ir solution: 34.6414
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129714
  time (eval):    0.00408837
  gflops (eval):  1059.47
  gflops (total): 253.902
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129714,0.00408837,1059.47,253.902

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335214
  gflops (total): 129.217
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.217

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0315412
  gflops (eval):  137.329
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0315412,137.329,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4783
  maximum absolute entry in einsum_ir solution: 35.4783
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131746
  time (eval):    0.00417113
  gflops (eval):  1038.45
  gflops (total): 249.717
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131746,0.00417113,1038.45,249.717

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332209
  gflops (total): 130.385
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.385

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0309079
  gflops (eval):  140.143
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0309079,140.143,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4326
  maximum absolute entry in einsum_ir solution: 33.4326
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130452
  time (eval):    0.00418744
  gflops (eval):  1034.41
  gflops (total): 251.355
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130452,0.00418744,1034.41,251.355

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330252
  gflops (total): 131.158
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324967
  gflops (eval):  133.291
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324967,133.291,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3588
  maximum absolute entry in einsum_ir solution: 37.3588
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013027
  time (eval):    0.00415075
  gflops (eval):  1043.55
  gflops (total): 252.159
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013027,0.00415075,1043.55,252.159

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330088
  gflops (total): 131.223
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.223

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323417
  gflops (eval):  133.93
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323417,133.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6724
  maximum absolute entry in einsum_ir solution: 33.6724
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133548
  time (eval):    0.00426004
  gflops (eval):  1016.78
  gflops (total): 245.901
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133548,0.00426004,1016.78,245.901

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337277
  gflops (total): 128.426
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.426

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324185
  gflops (eval):  133.612
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324185,133.612,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1241
  maximum absolute entry in einsum_ir solution: 34.1241
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129369
  time (eval):    0.00420165
  gflops (eval):  1030.91
  gflops (total): 252.735
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129369,0.00420165,1030.91,252.735

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.032486
  gflops (total): 133.335
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.335

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326465
  gflops (eval):  132.68
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326465,132.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0239
  maximum absolute entry in einsum_ir solution: 38.0239
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130835
  time (eval):    0.00406863
  gflops (eval):  1064.61
  gflops (total): 252.536
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130835,0.00406863,1064.61,252.536

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332237
  gflops (total): 130.374
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.374

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0329017
  gflops (eval):  131.65
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0329017,131.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8287
  maximum absolute entry in einsum_ir solution: 35.8287
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132265
  time (eval):    0.00402805
  gflops (eval):  1075.34
  gflops (total): 251.036
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132265,0.00402805,1075.34,251.036

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337466
  gflops (total): 128.354
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.354

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322199
  gflops (eval):  134.436
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322199,134.436,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7874
  maximum absolute entry in einsum_ir solution: 34.7874
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0127136
  time (eval):    0.00404482
  gflops (eval):  1070.88
  gflops (total): 258.468
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0127136,0.00404482,1070.88,258.468

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341054
  gflops (total): 127.004
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0314604
  gflops (eval):  137.682
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0314604,137.682,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7505
  maximum absolute entry in einsum_ir solution: 35.7505
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129948
  time (eval):    0.00413166
  gflops (eval):  1048.37
  gflops (total): 252.913
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129948,0.00413166,1048.37,252.913

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341258
  gflops (total): 126.928
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.928

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0317712
  gflops (eval):  136.335
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317712,136.335,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3823
  maximum absolute entry in einsum_ir solution: 36.3823
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131812
  time (eval):    0.00419967
  gflops (eval):  1031.4
  gflops (total): 249.212
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131812,0.00419967,1031.4,249.212

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334251
  gflops (total): 129.589
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.589

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323234
  gflops (eval):  134.006
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323234,134.006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2552
  maximum absolute entry in einsum_ir solution: 33.2552
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130884
  time (eval):    0.00415229
  gflops (eval):  1043.17
  gflops (total): 251.238
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130884,0.00415229,1043.17,251.238

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334838
  gflops (total): 129.362
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.362

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321935
  gflops (eval):  134.546
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321935,134.546,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8161
  maximum absolute entry in einsum_ir solution: 35.8161
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130106
  time (eval):    0.00407557
  gflops (eval):  1062.8
  gflops (total): 253.51
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130106,0.00407557,1062.8,253.51

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330791
  gflops (total): 130.945
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.945

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325921
  gflops (eval):  132.901
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325921,132.901,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6352
  maximum absolute entry in einsum_ir solution: 32.6352
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131105
  time (eval):    0.00419593
  gflops (eval):  1032.31
  gflops (total): 250.283
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131105,0.00419593,1032.31,250.283

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336589
  gflops (total): 128.689
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.689

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323981
  gflops (eval):  133.697
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323981,133.697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.443
  maximum absolute entry in einsum_ir solution: 32.443
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013082
  time (eval):    0.0041303
  gflops (eval):  1048.72
  gflops (total): 251.653
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013082,0.0041303,1048.72,251.653

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033317
  gflops (total): 130.009
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0316336
  gflops (eval):  136.928
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0316336,136.928,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2077
  maximum absolute entry in einsum_ir solution: 34.2077
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013175
  time (eval):    0.00408228
  gflops (eval):  1061.05
  gflops (total): 250.997
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013175,0.00408228,1061.05,250.997

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337046
  gflops (total): 128.514
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.514

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0328003
  gflops (eval):  132.057
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328003,132.057,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9646
  maximum absolute entry in einsum_ir solution: 35.9646
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131152
  time (eval):    0.00413793
  gflops (eval):  1046.78
  gflops (total): 251.057
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131152,0.00413793,1046.78,251.057

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0328965
  gflops (total): 131.671
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321993
  gflops (eval):  134.522
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321993,134.522,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5456
  maximum absolute entry in einsum_ir solution: 34.5456
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130567
  time (eval):    0.00415268
  gflops (eval):  1043.07
  gflops (total): 251.696
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130567,0.00415268,1043.07,251.696

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333664
  gflops (total): 129.817
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0316121
  gflops (eval):  137.021
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0316121,137.021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4054
  maximum absolute entry in einsum_ir solution: 33.4054
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131999
  time (eval):    0.00416203
  gflops (eval):  1040.72
  gflops (total): 249.483
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131999,0.00416203,1040.72,249.483

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0346185
  gflops (total): 125.121
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,125.121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319178
  gflops (eval):  135.708
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319178,135.708,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4004
  maximum absolute entry in einsum_ir solution: 36.4004
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128367
  time (eval):    0.00412721
  gflops (eval):  1049.5
  gflops (total): 255.337
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128367,0.00412721,1049.5,255.337

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335929
  gflops (total): 128.941
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.941

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324964
  gflops (eval):  133.292
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324964,133.292,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1718
  maximum absolute entry in einsum_ir solution: 36.1718
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131795
  time (eval):    0.00418589
  gflops (eval):  1034.79
  gflops (total): 249.433
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131795,0.00418589,1034.79,249.433

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338077
  gflops (total): 128.122
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.122

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321379
  gflops (eval):  134.779
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321379,134.779,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8344
  maximum absolute entry in einsum_ir solution: 33.8344
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130499
  time (eval):    0.00437978
  gflops (eval):  988.982
  gflops (total): 248.514
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130499,0.00437978,988.982,248.514

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033692
  gflops (total): 128.562
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.562

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325795
  gflops (eval):  132.952
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325795,132.952,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3033
  maximum absolute entry in einsum_ir solution: 36.3033
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132249
  time (eval):    0.00413289
  gflops (eval):  1048.06
  gflops (total): 249.544
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132249,0.00413289,1048.06,249.544

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033588
  gflops (total): 128.96
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0312192
  gflops (eval):  138.745
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0312192,138.745,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.3061
  maximum absolute entry in einsum_ir solution: 32.3061
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130267
  time (eval):    0.00416906
  gflops (eval):  1038.97
  gflops (total): 251.894
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130267,0.00416906,1038.97,251.894

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338147
  gflops (total): 128.096
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.096

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321602
  gflops (eval):  134.686
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321602,134.686,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.4859
  maximum absolute entry in einsum_ir solution: 41.4859
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128805
  time (eval):    0.00416005
  gflops (eval):  1041.22
  gflops (total): 254.189
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128805,0.00416005,1041.22,254.189

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335546
  gflops (total): 129.089
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.089

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318907
  gflops (eval):  135.824
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318907,135.824,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2243
  maximum absolute entry in einsum_ir solution: 34.2243
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128548
  time (eval):    0.00406211
  gflops (eval):  1066.32
  gflops (total): 256.046
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128548,0.00406211,1066.32,256.046

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335289
  gflops (total): 129.188
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.188

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323924
  gflops (eval):  133.72
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323924,133.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1316
  maximum absolute entry in einsum_ir solution: 39.1316
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131653
  time (eval):    0.00409128
  gflops (eval):  1058.72
  gflops (total): 251.007
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131653,0.00409128,1058.72,251.007

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033417
  gflops (total): 129.62
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318793
  gflops (eval):  135.873
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318793,135.873,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2759
  maximum absolute entry in einsum_ir solution: 35.2759
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131713
  time (eval):    0.00418171
  gflops (eval):  1035.83
  gflops (total): 249.613
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131713,0.00418171,1035.83,249.613

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339649
  gflops (total): 127.529
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.529

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323365
  gflops (eval):  133.951
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323365,133.951,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5401
  maximum absolute entry in einsum_ir solution: 34.5401
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131889
  time (eval):    0.00417945
  gflops (eval):  1036.38
  gflops (total): 249.391
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131889,0.00417945,1036.38,249.391

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332659
  gflops (total): 130.209
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.209

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0309818
  gflops (eval):  139.809
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0309818,139.809,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.081
  maximum absolute entry in einsum_ir solution: 36.081
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129671
  time (eval):    0.00405053
  gflops (eval):  1069.37
  gflops (total): 254.531
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129671,0.00405053,1069.37,254.531

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339348
  gflops (total): 127.643
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032448
  gflops (eval):  133.491
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032448,133.491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7678
  maximum absolute entry in einsum_ir solution: 34.7678
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132636
  time (eval):    0.00411954
  gflops (eval):  1051.46
  gflops (total): 249.179
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132636,0.00411954,1051.46,249.179

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342925
  gflops (total): 126.311
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.311

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032254
  gflops (eval):  134.294
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032254,134.294,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1566
  maximum absolute entry in einsum_ir solution: 35.1566
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131778
  time (eval):    0.00427743
  gflops (eval):  1012.64
  gflops (total): 248.151
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131778,0.00427743,1012.64,248.151

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332974
  gflops (total): 130.086
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0316074
  gflops (eval):  137.041
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0316074,137.041,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4948
  maximum absolute entry in einsum_ir solution: 34.4948
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130911
  time (eval):    0.00423879
  gflops (eval):  1021.88
  gflops (total): 249.946
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130911,0.00423879,1021.88,249.946

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338987
  gflops (total): 127.778
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.778

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319593
  gflops (eval):  135.532
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319593,135.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8086
  maximum absolute entry in einsum_ir solution: 38.8086
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131072
  time (eval):    0.00413372
  gflops (eval):  1047.85
  gflops (total): 251.234
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131072,0.00413372,1047.85,251.234

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0324909
  gflops (total): 133.315
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.315

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.031324
  gflops (eval):  138.281
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031324,138.281,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2659
  maximum absolute entry in einsum_ir solution: 34.2659
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130999
  time (eval):    0.00436443
  gflops (eval):  992.459
  gflops (total): 248.021
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130999,0.00436443,992.459,248.021

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033679
  gflops (total): 128.612
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.612

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322203
  gflops (eval):  134.435
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322203,134.435,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3923
  maximum absolute entry in einsum_ir solution: 34.3923
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131542
  time (eval):    0.00412128
  gflops (eval):  1051.01
  gflops (total): 250.732
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131542,0.00412128,1051.01,250.732

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338573
  gflops (total): 127.935
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.935

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325389
  gflops (eval):  133.118
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325389,133.118,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2736
  maximum absolute entry in einsum_ir solution: 36.2736
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131651
  time (eval):    0.00432359
  gflops (eval):  1001.83
  gflops (total): 247.676
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131651,0.00432359,1001.83,247.676

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339444
  gflops (total): 127.606
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032131
  gflops (eval):  134.808
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032131,134.808,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3676
  maximum absolute entry in einsum_ir solution: 36.3676
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130409
  time (eval):    0.00415861
  gflops (eval):  1041.58
  gflops (total): 251.839
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130409,0.00415861,1041.58,251.839

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333713
  gflops (total): 129.798
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.798

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032065
  gflops (eval):  135.086
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032065,135.086,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4895
  maximum absolute entry in einsum_ir solution: 34.4895
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130777
  time (eval):    0.0040549
  gflops (eval):  1068.22
  gflops (total): 252.824
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130777,0.0040549,1068.22,252.824

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336064
  gflops (total): 128.89
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032203
  gflops (eval):  134.507
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032203,134.507,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3475
  maximum absolute entry in einsum_ir solution: 34.3475
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130114
  time (eval):    0.00409024
  gflops (eval):  1058.99
  gflops (total): 253.281
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130114,0.00409024,1058.99,253.281

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.03361
  gflops (total): 128.876
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.876

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0311225
  gflops (eval):  139.177
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0311225,139.177,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1256
  maximum absolute entry in einsum_ir solution: 38.1256
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129912
  time (eval):    0.00410968
  gflops (eval):  1053.98
  gflops (total): 253.293
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129912,0.00410968,1053.98,253.293

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0322874
  gflops (total): 134.155
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,134.155

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322473
  gflops (eval):  134.322
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322473,134.322,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3813
  maximum absolute entry in einsum_ir solution: 35.3813
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128079
  time (eval):    0.00406865
  gflops (eval):  1064.61
  gflops (total): 256.659
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128079,0.00406865,1064.61,256.659

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335645
  gflops (total): 129.051
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.051

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.031992
  gflops (eval):  135.394
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031992,135.394,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1424
  maximum absolute entry in einsum_ir solution: 34.1424
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0134389
  time (eval):    0.00405252
  gflops (eval):  1068.85
  gflops (total): 247.637
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0134389,0.00405252,1068.85,247.637

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334552
  gflops (total): 129.472
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325654
  gflops (eval):  133.01
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325654,133.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2353
  maximum absolute entry in einsum_ir solution: 34.2353
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133125
  time (eval):    0.00419056
  gflops (eval):  1033.64
  gflops (total): 247.472
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133125,0.00419056,1033.64,247.472

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335813
  gflops (total): 128.986
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321273
  gflops (eval):  134.824
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321273,134.824,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.7082
  maximum absolute entry in einsum_ir solution: 37.7082
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0134243
  time (eval):    0.00408585
  gflops (eval):  1060.13
  gflops (total): 247.372
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0134243,0.00408585,1060.13,247.372

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333226
  gflops (total): 129.987
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.987

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324701
  gflops (eval):  133.4
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324701,133.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5136
  maximum absolute entry in einsum_ir solution: 38.5136
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130069
  time (eval):    0.00422508
  gflops (eval):  1025.19
  gflops (total): 251.365
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130069,0.00422508,1025.19,251.365

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337292
  gflops (total): 128.421
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.421

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032015
  gflops (eval):  135.297
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032015,135.297,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.956
  maximum absolute entry in einsum_ir solution: 35.956
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128914
  time (eval):    0.00412238
  gflops (eval):  1050.73
  gflops (total): 254.589
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128914,0.00412238,1050.73,254.589

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0344054
  gflops (total): 125.897
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,125.897

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318462
  gflops (eval):  136.014
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318462,136.014,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9738
  maximum absolute entry in einsum_ir solution: 36.9738
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013188
  time (eval):    0.00406821
  gflops (eval):  1064.72
  gflops (total): 251.012
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013188,0.00406821,1064.72,251.012

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334847
  gflops (total): 129.358
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.358

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318341
  gflops (eval):  136.065
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318341,136.065,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2203
  maximum absolute entry in einsum_ir solution: 33.2203
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130143
  time (eval):    0.00415447
  gflops (eval):  1042.62
  gflops (total): 252.291
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130143,0.00415447,1042.62,252.291

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340247
  gflops (total): 127.305
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.305

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319286
  gflops (eval):  135.663
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319286,135.663,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1963
  maximum absolute entry in einsum_ir solution: 34.1963
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128674
  time (eval):    0.00408424
  gflops (eval):  1060.54
  gflops (total): 255.522
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128674,0.00408424,1060.54,255.522

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331764
  gflops (total): 130.56
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323781
  gflops (eval):  133.78
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323781,133.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8126
  maximum absolute entry in einsum_ir solution: 33.8126
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130661
  time (eval):    0.00410595
  gflops (eval):  1054.94
  gflops (total): 252.243
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130661,0.00410595,1054.94,252.243

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331871
  gflops (total): 130.518
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0314736
  gflops (eval):  137.624
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0314736,137.624,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5219
  maximum absolute entry in einsum_ir solution: 36.5219
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131265
  time (eval):    0.00411171
  gflops (eval):  1053.46
  gflops (total): 251.274
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131265,0.00411171,1053.46,251.274

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334348
  gflops (total): 129.551
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320963
  gflops (eval):  134.954
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320963,134.954,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2353
  maximum absolute entry in einsum_ir solution: 34.2353
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128808
  time (eval):    0.00409352
  gflops (eval):  1058.14
  gflops (total): 255.18
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128808,0.00409352,1058.14,255.18

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335888
  gflops (total): 128.957
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.957

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321938
  gflops (eval):  134.545
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321938,134.545,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8373
  maximum absolute entry in einsum_ir solution: 33.8373
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132199
  time (eval):    0.00403401
  gflops (eval):  1073.75
  gflops (total): 251.046
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132199,0.00403401,1073.75,251.046

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0324601
  gflops (total): 133.441
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321809
  gflops (eval):  134.599
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321809,134.599,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0859
  maximum absolute entry in einsum_ir solution: 35.0859
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013348
  time (eval):    0.0042017
  gflops (eval):  1030.9
  gflops (total): 246.815
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013348,0.0042017,1030.9,246.815

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334461
  gflops (total): 129.508
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.508

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319284
  gflops (eval):  135.663
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319284,135.663,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7631
  maximum absolute entry in einsum_ir solution: 33.7631
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129647
  time (eval):    0.00409657
  gflops (eval):  1057.35
  gflops (total): 253.88
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129647,0.00409657,1057.35,253.88

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332583
  gflops (total): 130.239
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.239

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324193
  gflops (eval):  133.609
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324193,133.609,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.142
  maximum absolute entry in einsum_ir solution: 36.142
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132456
  time (eval):    0.00403114
  gflops (eval):  1074.52
  gflops (total): 250.713
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132456,0.00403114,1074.52,250.713

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336043
  gflops (total): 128.898
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.898

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319887
  gflops (eval):  135.408
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319887,135.408,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9303
  maximum absolute entry in einsum_ir solution: 33.9303
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131041
  time (eval):    0.00413421
  gflops (eval):  1047.73
  gflops (total): 251.273
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131041,0.00413421,1047.73,251.273

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033843
  gflops (total): 127.989
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.989

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318861
  gflops (eval):  135.843
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318861,135.843,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7962
  maximum absolute entry in einsum_ir solution: 34.7962
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128611
  time (eval):    0.00404691
  gflops (eval):  1070.33
  gflops (total): 256.182
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128611,0.00404691,1070.33,256.182

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336774
  gflops (total): 128.618
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325641
  gflops (eval):  133.015
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325641,133.015,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6939
  maximum absolute entry in einsum_ir solution: 32.6939
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129438
  time (eval):    0.00403339
  gflops (eval):  1073.92
  gflops (total): 255.138
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129438,0.00403339,1073.92,255.138

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339523
  gflops (total): 127.577
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325601
  gflops (eval):  133.031
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325601,133.031,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7365
  maximum absolute entry in einsum_ir solution: 36.7365
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129564
  time (eval):    0.00403123
  gflops (eval):  1074.49
  gflops (total): 254.98
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129564,0.00403123,1074.49,254.98

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331013
  gflops (total): 130.856
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.856

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0311043
  gflops (eval):  139.258
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0311043,139.258,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3231
  maximum absolute entry in einsum_ir solution: 33.3231
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128717
  time (eval):    0.00414765
  gflops (eval):  1044.33
  gflops (total): 254.505
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128717,0.00414765,1044.33,254.505

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338684
  gflops (total): 127.893
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.893

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321595
  gflops (eval):  134.689
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321595,134.689,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7995
  maximum absolute entry in einsum_ir solution: 32.7995
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130046
  time (eval):    0.00400181
  gflops (eval):  1082.39
  gflops (total): 254.699
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130046,0.00400181,1082.39,254.699

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331968
  gflops (total): 130.48
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319021
  gflops (eval):  135.775
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319021,135.775,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6666
  maximum absolute entry in einsum_ir solution: 34.6666
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130899
  time (eval):    0.00415788
  gflops (eval):  1041.76
  gflops (total): 251.135
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130899,0.00415788,1041.76,251.135

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0323134
  gflops (total): 134.047
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,134.047

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321892
  gflops (eval):  134.564
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321892,134.564,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.578
  maximum absolute entry in einsum_ir solution: 33.578
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130676
  time (eval):    0.00420531
  gflops (eval):  1030.01
  gflops (total): 250.769
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130676,0.00420531,1030.01,250.769

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338004
  gflops (total): 128.15
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321793
  gflops (eval):  134.606
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321793,134.606,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1769
  maximum absolute entry in einsum_ir solution: 34.1769
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129742
  time (eval):    0.004112
  gflops (eval):  1053.39
  gflops (total): 253.51
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129742,0.004112,1053.39,253.51

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337132
  gflops (total): 128.482
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.482

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0311769
  gflops (eval):  138.933
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0311769,138.933,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0277
  maximum absolute entry in einsum_ir solution: 34.0277
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130253
  time (eval):    0.00414182
  gflops (eval):  1045.8
  gflops (total): 252.315
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130253,0.00414182,1045.8,252.315

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333117
  gflops (total): 130.03
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322089
  gflops (eval):  134.482
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322089,134.482,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3343
  maximum absolute entry in einsum_ir solution: 38.3343
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130656
  time (eval):    0.00406726
  gflops (eval):  1064.97
  gflops (total): 252.82
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130656,0.00406726,1064.97,252.82

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335575
  gflops (total): 129.078
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.078

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321355
  gflops (eval):  134.789
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321355,134.789,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5498
  maximum absolute entry in einsum_ir solution: 33.5498
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129625
  time (eval):    0.00404667
  gflops (eval):  1070.39
  gflops (total): 254.658
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129625,0.00404667,1070.39,254.658

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332796
  gflops (total): 130.156
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.156

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0328806
  gflops (eval):  131.735
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328806,131.735,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0343
  maximum absolute entry in einsum_ir solution: 35.0343
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130113
  time (eval):    0.0041377
  gflops (eval):  1046.84
  gflops (total): 252.582
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130113,0.0041377,1046.84,252.582

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0344508
  gflops (total): 125.731
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,125.731

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032636
  gflops (eval):  132.722
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032636,132.722,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6296
  maximum absolute entry in einsum_ir solution: 34.6296
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128847
  time (eval):    0.0041356
  gflops (eval):  1047.37
  gflops (total): 254.491
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128847,0.0041356,1047.37,254.491

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339964
  gflops (total): 127.411
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.411

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319959
  gflops (eval):  135.377
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319959,135.377,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9736
  maximum absolute entry in einsum_ir solution: 33.9736
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132726
  time (eval):    0.00425948
  gflops (eval):  1016.91
  gflops (total): 247.062
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132726,0.00425948,1016.91,247.062

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333718
  gflops (total): 129.796
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.796

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0328851
  gflops (eval):  131.717
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328851,131.717,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9118
  maximum absolute entry in einsum_ir solution: 36.9118
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013258
  time (eval):    0.0041539
  gflops (eval):  1042.76
  gflops (total): 248.767
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013258,0.0041539,1042.76,248.767

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338298
  gflops (total): 128.038
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032183
  gflops (eval):  134.59
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032183,134.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5724
  maximum absolute entry in einsum_ir solution: 33.5724
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131598
  time (eval):    0.00409802
  gflops (eval):  1056.98
  gflops (total): 250.989
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131598,0.00409802,1056.98,250.989

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335945
  gflops (total): 128.935
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.935

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318444
  gflops (eval):  136.021
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318444,136.021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.681
  maximum absolute entry in einsum_ir solution: 34.681
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131256
  time (eval):    0.00411299
  gflops (eval):  1053.13
  gflops (total): 251.268
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131256,0.00411299,1053.13,251.268

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340555
  gflops (total): 127.19
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.19

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321678
  gflops (eval):  134.654
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321678,134.654,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3185
  maximum absolute entry in einsum_ir solution: 37.3185
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133576
  time (eval):    0.00418181
  gflops (eval):  1035.8
  gflops (total): 246.959
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133576,0.00418181,1035.8,246.959

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338504
  gflops (total): 127.961
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327323
  gflops (eval):  132.332
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327323,132.332,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1867
  maximum absolute entry in einsum_ir solution: 34.1867
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129955
  time (eval):    0.00405019
  gflops (eval):  1069.46
  gflops (total): 254.112
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129955,0.00405019,1069.46,254.112

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334841
  gflops (total): 129.36
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318353
  gflops (eval):  136.06
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318353,136.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2614
  maximum absolute entry in einsum_ir solution: 35.2614
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130041
  time (eval):    0.00408432
  gflops (eval):  1060.52
  gflops (total): 253.478
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130041,0.00408432,1060.52,253.478

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341192
  gflops (total): 126.952
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326798
  gflops (eval):  132.544
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326798,132.544,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4618
  maximum absolute entry in einsum_ir solution: 34.4618
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130492
  time (eval):    0.00413258
  gflops (eval):  1048.14
  gflops (total): 252.1
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130492,0.00413258,1048.14,252.1

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334176
  gflops (total): 129.618
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323722
  gflops (eval):  133.804
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323722,133.804,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8478
  maximum absolute entry in einsum_ir solution: 33.8478
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133398
  time (eval):    0.00412867
  gflops (eval):  1049.13
  gflops (total): 247.962
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133398,0.00412867,1049.13,247.962

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337059
  gflops (total): 128.509
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322287
  gflops (eval):  134.399
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322287,134.399,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8497
  maximum absolute entry in einsum_ir solution: 32.8497
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131298
  time (eval):    0.00411469
  gflops (eval):  1052.7
  gflops (total): 251.183
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131298,0.00411469,1052.7,251.183

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335447
  gflops (total): 129.127
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.127

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0316132
  gflops (eval):  137.016
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0316132,137.016,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.5553
  maximum absolute entry in einsum_ir solution: 32.5553
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129371
  time (eval):    0.00414097
  gflops (eval):  1046.01
  gflops (total): 253.63
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129371,0.00414097,1046.01,253.63

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335398
  gflops (total): 129.146
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0309848
  gflops (eval):  139.795
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0309848,139.795,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6335
  maximum absolute entry in einsum_ir solution: 36.6335
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131825
  time (eval):    0.00381236
  gflops (eval):  1136.18
  gflops (total): 254.873
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131825,0.00381236,1136.18,254.873

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335209
  gflops (total): 129.218
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.218

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0317773
  gflops (eval):  136.308
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317773,136.308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5857
  maximum absolute entry in einsum_ir solution: 34.5857
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132541
  time (eval):    0.00388234
  gflops (eval):  1115.7
  gflops (total): 252.767
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132541,0.00388234,1115.7,252.767

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334919
  gflops (total): 129.33
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326706
  gflops (eval):  132.582
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326706,132.582,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5409
  maximum absolute entry in einsum_ir solution: 35.5409
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013013
  time (eval):    0.00385628
  gflops (eval):  1123.24
  gflops (total): 256.769
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013013,0.00385628,1123.24,256.769

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331986
  gflops (total): 130.473
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.473

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320739
  gflops (eval):  135.048
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320739,135.048,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7562
  maximum absolute entry in einsum_ir solution: 32.7562
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130415
  time (eval):    0.00381699
  gflops (eval):  1134.8
  gflops (total): 256.933
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130415,0.00381699,1134.8,256.933

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0320618
  gflops (total): 135.099
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,135.099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321966
  gflops (eval):  134.533
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321966,134.533,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7746
  maximum absolute entry in einsum_ir solution: 34.7746
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013207
  time (eval):    0.0038869
  gflops (eval):  1114.39
  gflops (total): 253.395
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013207,0.0038869,1114.39,253.395

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339213
  gflops (total): 127.693
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.693

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0316914
  gflops (eval):  136.678
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0316914,136.678,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4406
  maximum absolute entry in einsum_ir solution: 33.4406
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131323
  time (eval):    0.0039209
  gflops (eval):  1104.72
  gflops (total): 254.001
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131323,0.0039209,1104.72,254.001

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033524
  gflops (total): 129.206
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325896
  gflops (eval):  132.911
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325896,132.911,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2716
  maximum absolute entry in einsum_ir solution: 34.2716
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132652
  time (eval):    0.00379864
  gflops (eval):  1140.28
  gflops (total): 253.842
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132652,0.00379864,1140.28,253.842

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0325244
  gflops (total): 133.178
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319214
  gflops (eval):  135.693
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319214,135.693,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5271
  maximum absolute entry in einsum_ir solution: 33.5271
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013143
  time (eval):    0.00389179
  gflops (eval):  1112.99
  gflops (total): 254.275
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013143,0.00389179,1112.99,254.275

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334435
  gflops (total): 129.518
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320554
  gflops (eval):  135.126
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320554,135.126,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1431
  maximum absolute entry in einsum_ir solution: 34.1431
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130264
  time (eval):    0.00389884
  gflops (eval):  1110.98
  gflops (total): 255.92
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130264,0.00389884,1110.98,255.92

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342556
  gflops (total): 126.447
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.447

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323532
  gflops (eval):  133.882
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323532,133.882,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4363
  maximum absolute entry in einsum_ir solution: 33.4363
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130475
  time (eval):    0.00395412
  gflops (eval):  1095.44
  gflops (total): 254.771
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130475,0.00395412,1095.44,254.771

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336731
  gflops (total): 128.634
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320093
  gflops (eval):  135.321
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320093,135.321,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8699
  maximum absolute entry in einsum_ir solution: 34.8699
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130738
  time (eval):    0.00395251
  gflops (eval):  1095.89
  gflops (total): 254.402
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130738,0.00395251,1095.89,254.402

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338726
  gflops (total): 127.877
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324725
  gflops (eval):  133.39
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324725,133.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3294
  maximum absolute entry in einsum_ir solution: 34.3294
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133156
  time (eval):    0.00395548
  gflops (eval):  1095.07
  gflops (total): 250.796
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133156,0.00395548,1095.07,250.796

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333203
  gflops (total): 129.996
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.996

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318483
  gflops (eval):  136.005
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318483,136.005,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7909
  maximum absolute entry in einsum_ir solution: 33.7909
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131913
  time (eval):    0.00389636
  gflops (eval):  1111.68
  gflops (total): 253.488
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131913,0.00389636,1111.68,253.488

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0343409
  gflops (total): 126.133
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.133

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319717
  gflops (eval):  135.48
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319717,135.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8315
  maximum absolute entry in einsum_ir solution: 32.8315
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132825
  time (eval):    0.00391024
  gflops (eval):  1107.74
  gflops (total): 251.939
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132825,0.00391024,1107.74,251.939

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340436
  gflops (total): 127.235
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.235

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.031911
  gflops (eval):  135.738
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031911,135.738,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.8055
  maximum absolute entry in einsum_ir solution: 31.8055
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132551
  time (eval):    0.00391248
  gflops (eval):  1107.1
  gflops (total): 252.307
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132551,0.00391248,1107.1,252.307

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336769
  gflops (total): 128.62
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322447
  gflops (eval):  134.333
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322447,134.333,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.97
  maximum absolute entry in einsum_ir solution: 32.97
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132208
  time (eval):    0.0038035
  gflops (eval):  1138.82
  gflops (total): 254.432
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132208,0.0038035,1138.82,254.432

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332361
  gflops (total): 130.326
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321878
  gflops (eval):  134.57
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321878,134.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7285
  maximum absolute entry in einsum_ir solution: 36.7285
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131453
  time (eval):    0.0039201
  gflops (eval):  1104.95
  gflops (total): 253.819
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131453,0.0039201,1104.95,253.819

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340009
  gflops (total): 127.394
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.394

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323959
  gflops (eval):  133.706
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323959,133.706,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0371
  maximum absolute entry in einsum_ir solution: 37.0371
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131279
  time (eval):    0.00392602
  gflops (eval):  1103.28
  gflops (total): 253.989
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131279,0.00392602,1103.28,253.989

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.034296
  gflops (total): 126.298
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.298

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0330191
  gflops (eval):  131.182
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0330191,131.182,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9061
  maximum absolute entry in einsum_ir solution: 33.9061
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131579
  time (eval):    0.00378668
  gflops (eval):  1143.88
  gflops (total): 255.628
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131579,0.00378668,1143.88,255.628

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335168
  gflops (total): 129.234
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323665
  gflops (eval):  133.827
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323665,133.827,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3518
  maximum absolute entry in einsum_ir solution: 33.3518
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132249
  time (eval):    0.00391329
  gflops (eval):  1106.87
  gflops (total): 252.74
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132249,0.00391329,1106.87,252.74

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330369
  gflops (total): 131.111
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.111

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.031667
  gflops (eval):  136.783
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031667,136.783,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2367
  maximum absolute entry in einsum_ir solution: 35.2367
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130785
  time (eval):    0.00392148
  gflops (eval):  1104.56
  gflops (total): 254.796
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130785,0.00392148,1104.56,254.796

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334338
  gflops (total): 129.555
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.555

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326188
  gflops (eval):  132.792
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326188,132.792,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3346
  maximum absolute entry in einsum_ir solution: 38.3346
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133449
  time (eval):    0.00378102
  gflops (eval):  1145.6
  gflops (total): 252.923
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133449,0.00378102,1145.6,252.923

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326435
  gflops (total): 132.692
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.692

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324842
  gflops (eval):  133.342
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324842,133.342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1109
  maximum absolute entry in einsum_ir solution: 36.1109
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129091
  time (eval):    0.00385021
  gflops (eval):  1125.01
  gflops (total): 258.455
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129091,0.00385021,1125.01,258.455

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334868
  gflops (total): 129.35
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324617
  gflops (eval):  133.435
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324617,133.435,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6555
  maximum absolute entry in einsum_ir solution: 34.6555
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130206
  time (eval):    0.00385021
  gflops (eval):  1125.01
  gflops (total): 256.746
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130206,0.00385021,1125.01,256.746

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336391
  gflops (total): 128.764
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.031347
  gflops (eval):  138.18
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031347,138.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7004
  maximum absolute entry in einsum_ir solution: 34.7004
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131332
  time (eval):    0.00384383
  gflops (eval):  1126.88
  gflops (total): 255.14
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131332,0.00384383,1126.88,255.14

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339182
  gflops (total): 127.705
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.705

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319613
  gflops (eval):  135.524
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319613,135.524,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2013
  maximum absolute entry in einsum_ir solution: 35.2013
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013063
  time (eval):    0.00386104
  gflops (eval):  1121.85
  gflops (total): 255.94
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013063,0.00386104,1121.85,255.94

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0325538
  gflops (total): 133.057
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.057

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321234
  gflops (eval):  134.84
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321234,134.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1669
  maximum absolute entry in einsum_ir solution: 33.1669
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132887
  time (eval):    0.00381069
  gflops (eval):  1136.68
  gflops (total): 253.315
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132887,0.00381069,1136.68,253.315

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337351
  gflops (total): 128.398
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323378
  gflops (eval):  133.946
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323378,133.946,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5687
  maximum absolute entry in einsum_ir solution: 35.5687
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132515
  time (eval):    0.00392905
  gflops (eval):  1102.43
  gflops (total): 252.118
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132515,0.00392905,1102.43,252.118

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326644
  gflops (total): 132.607
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.031655
  gflops (eval):  136.835
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031655,136.835,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6535
  maximum absolute entry in einsum_ir solution: 35.6535
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131675
  time (eval):    0.00379112
  gflops (eval):  1142.54
  gflops (total): 255.417
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131675,0.00379112,1142.54,255.417

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033355
  gflops (total): 129.861
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.861

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318524
  gflops (eval):  135.987
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318524,135.987,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5521
  maximum absolute entry in einsum_ir solution: 36.5521
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130439
  time (eval):    0.00391362
  gflops (eval):  1106.78
  gflops (total): 255.434
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130439,0.00391362,1106.78,255.434

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335777
  gflops (total): 129
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319
  gflops (eval):  135.784
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319,135.784,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0777
  maximum absolute entry in einsum_ir solution: 35.0777
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131441
  time (eval):    0.00389685
  gflops (eval):  1111.54
  gflops (total): 254.183
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131441,0.00389685,1111.54,254.183

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341562
  gflops (total): 126.815
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.815

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319169
  gflops (eval):  135.712
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319169,135.712,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.891
  maximum absolute entry in einsum_ir solution: 33.891
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132099
  time (eval):    0.0038327
  gflops (eval):  1130.15
  gflops (total): 254.159
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132099,0.0038327,1130.15,254.159

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339355
  gflops (total): 127.64
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318614
  gflops (eval):  135.949
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318614,135.949,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1757
  maximum absolute entry in einsum_ir solution: 34.1757
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130575
  time (eval):    0.00395508
  gflops (eval):  1095.18
  gflops (total): 254.607
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130575,0.00395508,1095.18,254.607

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0305502
  gflops (total): 141.784
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,141.784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.034818
  gflops (eval):  124.404
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.034818,124.404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6799
  maximum absolute entry in einsum_ir solution: 33.6799
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129904
  time (eval):    0.0039661
  gflops (eval):  1092.14
  gflops (total): 255.449
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129904,0.0039661,1092.14,255.449

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0353383
  gflops (total): 122.573
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,122.573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0337801
  gflops (eval):  128.227
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0337801,128.227,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.3068
  maximum absolute entry in einsum_ir solution: 32.3068
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130962
  time (eval):    0.00398814
  gflops (eval):  1086.1
  gflops (total): 253.538
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130962,0.00398814,1086.1,253.538

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0361137
  gflops (total): 119.941
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,119.941

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0344201
  gflops (eval):  125.843
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0344201,125.843,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9853
  maximum absolute entry in einsum_ir solution: 36.9853
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130575
  time (eval):    0.00396264
  gflops (eval):  1093.09
  gflops (total): 254.494
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130575,0.00396264,1093.09,254.494

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0350591
  gflops (total): 123.549
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,123.549

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0328185
  gflops (eval):  131.984
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328185,131.984,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.547
  maximum absolute entry in einsum_ir solution: 34.547
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131652
  time (eval):    0.00379168
  gflops (eval):  1142.37
  gflops (total): 255.444
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131652,0.00379168,1142.37,255.444

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326217
  gflops (total): 132.78
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0313434
  gflops (eval):  138.195
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0313434,138.195,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1198
  maximum absolute entry in einsum_ir solution: 33.1198
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131108
  time (eval):    0.00376187
  gflops (eval):  1151.43
  gflops (total): 256.718
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131108,0.00376187,1151.43,256.718

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341279
  gflops (total): 126.92
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320483
  gflops (eval):  135.156
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320483,135.156,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4108
  maximum absolute entry in einsum_ir solution: 33.4108
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132986
  time (eval):    0.00384334
  gflops (eval):  1127.02
  gflops (total): 252.685
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132986,0.00384334,1127.02,252.685

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336556
  gflops (total): 128.701
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321236
  gflops (eval):  134.839
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321236,134.839,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.561
  maximum absolute entry in einsum_ir solution: 38.561
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133934
  time (eval):    0.00387045
  gflops (eval):  1119.13
  gflops (total): 250.901
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133934,0.00387045,1119.13,250.901

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033879
  gflops (total): 127.853
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.853

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319645
  gflops (eval):  135.51
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319645,135.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1327
  maximum absolute entry in einsum_ir solution: 35.1327
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130617
  time (eval):    0.00381443
  gflops (eval):  1135.56
  gflops (total): 256.666
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130617,0.00381443,1135.56,256.666

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336568
  gflops (total): 128.697
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.697

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318564
  gflops (eval):  135.97
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318564,135.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9563
  maximum absolute entry in einsum_ir solution: 35.9563
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132501
  time (eval):    0.00381125
  gflops (eval):  1136.51
  gflops (total): 253.879
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132501,0.00381125,1136.51,253.879

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336277
  gflops (total): 128.808
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.808

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325549
  gflops (eval):  133.053
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325549,133.053,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2828
  maximum absolute entry in einsum_ir solution: 34.2828
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132037
  time (eval):    0.00381991
  gflops (eval):  1133.93
  gflops (total): 254.442
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132037,0.00381991,1133.93,254.442

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0324356
  gflops (total): 133.542
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.542

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319597
  gflops (eval):  135.531
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319597,135.531,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.764
  maximum absolute entry in einsum_ir solution: 33.764
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013261
  time (eval):    0.00383202
  gflops (eval):  1130.35
  gflops (total): 253.409
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013261,0.00383202,1130.35,253.409

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331318
  gflops (total): 130.736
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0315589
  gflops (eval):  137.252
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0315589,137.252,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.9831
  maximum absolute entry in einsum_ir solution: 31.9831
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133651
  time (eval):    0.00384931
  gflops (eval):  1125.27
  gflops (total): 251.621
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133651,0.00384931,1125.27,251.621

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332467
  gflops (total): 130.284
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.284

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327261
  gflops (eval):  132.357
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327261,132.357,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1214
  maximum absolute entry in einsum_ir solution: 33.1214
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131487
  time (eval):    0.00366993
  gflops (eval):  1180.27
  gflops (total): 257.544
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131487,0.00366993,1180.27,257.544

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0323639
  gflops (total): 133.838
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.838

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326075
  gflops (eval):  132.838
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326075,132.838,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7348
  maximum absolute entry in einsum_ir solution: 33.7348
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130703
  time (eval):    0.00382192
  gflops (eval):  1133.34
  gflops (total): 256.421
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130703,0.00382192,1133.34,256.421

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0328286
  gflops (total): 131.944
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319325
  gflops (eval):  135.646
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319325,135.646,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2828
  maximum absolute entry in einsum_ir solution: 37.2828
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133115
  time (eval):    0.00379844
  gflops (eval):  1140.34
  gflops (total): 253.158
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133115,0.00379844,1140.34,253.158

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338017
  gflops (total): 128.145
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.145

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0315014
  gflops (eval):  137.502
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0315014,137.502,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3068
  maximum absolute entry in einsum_ir solution: 34.3068
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131623
  time (eval):    0.00382409
  gflops (eval):  1132.69
  gflops (total): 255
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131623,0.00382409,1132.69,255

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335775
  gflops (total): 129.001
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.031956
  gflops (eval):  135.546
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031956,135.546,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0488
  maximum absolute entry in einsum_ir solution: 36.0488
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129583
  time (eval):    0.003874
  gflops (eval):  1118.1
  gflops (total): 257.334
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129583,0.003874,1118.1,257.334

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340668
  gflops (total): 127.148
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.148

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0311895
  gflops (eval):  138.878
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0311895,138.878,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7372
  maximum absolute entry in einsum_ir solution: 34.7372
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130687
  time (eval):    0.00384582
  gflops (eval):  1126.29
  gflops (total): 256.083
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130687,0.00384582,1126.29,256.083

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333069
  gflops (total): 130.049
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032771
  gflops (eval):  132.175
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032771,132.175,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.3971
  maximum absolute entry in einsum_ir solution: 40.3971
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013204
  time (eval):    0.0039583
  gflops (eval):  1094.29
  gflops (total): 252.385
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013204,0.0039583,1094.29,252.385

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333795
  gflops (total): 129.766
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0309114
  gflops (eval):  140.127
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0309114,140.127,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3779
  maximum absolute entry in einsum_ir solution: 36.3779
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131103
  time (eval):    0.00382017
  gflops (eval):  1133.86
  gflops (total): 255.842
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131103,0.00382017,1133.86,255.842

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033441
  gflops (total): 129.527
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.527

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321963
  gflops (eval):  134.535
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321963,134.535,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6398
  maximum absolute entry in einsum_ir solution: 34.6398
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132669
  time (eval):    0.00381392
  gflops (eval):  1135.71
  gflops (total): 253.59
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132669,0.00381392,1135.71,253.59

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339251
  gflops (total): 127.679
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0311971
  gflops (eval):  138.844
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0311971,138.844,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8218
  maximum absolute entry in einsum_ir solution: 32.8218
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132165
  time (eval):    0.00387358
  gflops (eval):  1118.22
  gflops (total): 253.453
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132165,0.00387358,1118.22,253.453

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334149
  gflops (total): 129.629
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.629

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.03277
  gflops (eval):  132.179
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.03277,132.179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3706
  maximum absolute entry in einsum_ir solution: 34.3706
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131505
  time (eval):    0.00381902
  gflops (eval):  1134.2
  gflops (total): 255.253
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131505,0.00381902,1134.2,255.253

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033511
  gflops (total): 129.257
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.257

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321922
  gflops (eval):  134.552
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321922,134.552,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9791
  maximum absolute entry in einsum_ir solution: 33.9791
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130196
  time (eval):    0.00388035
  gflops (eval):  1116.27
  gflops (total): 256.304
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130196,0.00388035,1116.27,256.304

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331313
  gflops (total): 130.738
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.738

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326712
  gflops (eval):  132.579
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326712,132.579,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1606
  maximum absolute entry in einsum_ir solution: 36.1606
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133638
  time (eval):    0.003815
  gflops (eval):  1135.39
  gflops (total): 252.144
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133638,0.003815,1135.39,252.144

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336414
  gflops (total): 128.756
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.756

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324702
  gflops (eval):  133.4
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324702,133.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2667
  maximum absolute entry in einsum_ir solution: 36.2667
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130623
  time (eval):    0.00378835
  gflops (eval):  1143.38
  gflops (total): 257.054
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130623,0.00378835,1143.38,257.054

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0323606
  gflops (total): 133.852
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.852

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0329994
  gflops (eval):  131.26
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0329994,131.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4916
  maximum absolute entry in einsum_ir solution: 35.4916
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131828
  time (eval):    0.00380856
  gflops (eval):  1137.31
  gflops (total): 254.924
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131828,0.00380856,1137.31,254.924

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336109
  gflops (total): 128.873
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.873

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0328947
  gflops (eval):  131.678
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328947,131.678,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3634
  maximum absolute entry in einsum_ir solution: 37.3634
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130604
  time (eval):    0.00385775
  gflops (eval):  1122.81
  gflops (total): 256.028
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130604,0.00385775,1122.81,256.028

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340057
  gflops (total): 127.376
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.376

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323936
  gflops (eval):  133.715
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323936,133.715,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.8563
  maximum absolute entry in einsum_ir solution: 31.8563
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129538
  time (eval):    0.00387896
  gflops (eval):  1116.67
  gflops (total): 257.327
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129538,0.00387896,1116.67,257.327

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326743
  gflops (total): 132.566
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.566

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0307867
  gflops (eval):  140.695
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0307867,140.695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7839
  maximum absolute entry in einsum_ir solution: 35.7839
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132
  time (eval):    0.00379124
  gflops (eval):  1142.51
  gflops (total): 254.926
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132,0.00379124,1142.51,254.926

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335165
  gflops (total): 129.235
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.235

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326482
  gflops (eval):  132.673
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326482,132.673,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5073
  maximum absolute entry in einsum_ir solution: 34.5073
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131938
  time (eval):    0.003823
  gflops (eval):  1133.02
  gflops (total): 254.544
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131938,0.003823,1133.02,254.544

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333381
  gflops (total): 129.927
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.927

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321633
  gflops (eval):  134.673
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321633,134.673,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6776
  maximum absolute entry in einsum_ir solution: 34.6776
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132552
  time (eval):    0.00373451
  gflops (eval):  1159.86
  gflops (total): 254.95
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132552,0.00373451,1159.86,254.95

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337331
  gflops (total): 128.406
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.406

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320212
  gflops (eval):  135.27
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320212,135.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7724
  maximum absolute entry in einsum_ir solution: 34.7724
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132837
  time (eval):    0.00379632
  gflops (eval):  1140.98
  gflops (total): 253.601
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132837,0.00379632,1140.98,253.601

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336454
  gflops (total): 128.74
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321028
  gflops (eval):  134.927
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321028,134.927,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2445
  maximum absolute entry in einsum_ir solution: 35.2445
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132944
  time (eval):    0.0037882
  gflops (eval):  1143.42
  gflops (total): 253.563
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132944,0.0037882,1143.42,253.563

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333993
  gflops (total): 129.689
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.689

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324566
  gflops (eval):  133.456
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324566,133.456,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4799
  maximum absolute entry in einsum_ir solution: 34.4799
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131736
  time (eval):    0.00377033
  gflops (eval):  1148.84
  gflops (total): 255.639
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131736,0.00377033,1148.84,255.639

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335624
  gflops (total): 129.059
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325093
  gflops (eval):  133.239
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325093,133.239,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4975
  maximum absolute entry in einsum_ir solution: 34.4975
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130378
  time (eval):    0.00383687
  gflops (eval):  1128.92
  gflops (total): 256.687
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130378,0.00383687,1128.92,256.687

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0346063
  gflops (total): 125.165
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,125.165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327457
  gflops (eval):  132.278
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327457,132.278,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5728
  maximum absolute entry in einsum_ir solution: 34.5728
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128617
  time (eval):    0.003785
  gflops (eval):  1144.39
  gflops (total): 260.203
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128617,0.003785,1144.39,260.203

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341525
  gflops (total): 126.829
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032368
  gflops (eval):  133.821
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032368,133.821,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0729
  maximum absolute entry in einsum_ir solution: 33.0729
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133037
  time (eval):    0.00377835
  gflops (eval):  1146.41
  gflops (total): 253.571
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133037,0.00377835,1146.41,253.571

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332295
  gflops (total): 130.352
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.352

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324171
  gflops (eval):  133.618
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324171,133.618,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8666
  maximum absolute entry in einsum_ir solution: 32.8666
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013349
  time (eval):    0.00384144
  gflops (eval):  1127.58
  gflops (total): 251.973
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013349,0.00384144,1127.58,251.973

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336211
  gflops (total): 128.833
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.833

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321677
  gflops (eval):  134.654
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321677,134.654,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6965
  maximum absolute entry in einsum_ir solution: 33.6965
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132287
  time (eval):    0.00382577
  gflops (eval):  1132.2
  gflops (total): 253.981
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132287,0.00382577,1132.2,253.981

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333899
  gflops (total): 129.726
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.726

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326375
  gflops (eval):  132.716
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326375,132.716,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0366
  maximum absolute entry in einsum_ir solution: 34.0366
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132427
  time (eval):    0.00380356
  gflops (eval):  1138.81
  gflops (total): 254.103
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132427,0.00380356,1138.81,254.103

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033783
  gflops (total): 128.216
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.216

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.03272
  gflops (eval):  132.381
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.03272,132.381,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9083
  maximum absolute entry in einsum_ir solution: 33.9083
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132488
  time (eval):    0.0038182
  gflops (eval):  1134.44
  gflops (total): 253.794
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132488,0.0038182,1134.44,253.794

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336621
  gflops (total): 128.676
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.676

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320913
  gflops (eval):  134.975
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320913,134.975,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.136
  maximum absolute entry in einsum_ir solution: 34.136
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132779
  time (eval):    0.0037317
  gflops (eval):  1160.74
  gflops (total): 254.651
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132779,0.0037317,1160.74,254.651

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340883
  gflops (total): 127.068
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.068

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327499
  gflops (eval):  132.26
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327499,132.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2305
  maximum absolute entry in einsum_ir solution: 34.2305
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129161
  time (eval):    0.00381188
  gflops (eval):  1136.32
  gflops (total): 258.939
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129161,0.00381188,1136.32,258.939

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.03429
  gflops (total): 126.32
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323037
  gflops (eval):  134.088
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323037,134.088,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6121
  maximum absolute entry in einsum_ir solution: 33.6121
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130549
  time (eval):    0.00373073
  gflops (eval):  1161.04
  gflops (total): 258.05
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130549,0.00373073,1161.04,258.05

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338889
  gflops (total): 127.815
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.815

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323639
  gflops (eval):  133.838
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323639,133.838,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3949
  maximum absolute entry in einsum_ir solution: 33.3949
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013319
  time (eval):    0.00391247
  gflops (eval):  1107.11
  gflops (total): 251.373
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013319,0.00391247,1107.11,251.373

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330841
  gflops (total): 130.925
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318574
  gflops (eval):  135.966
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318574,135.966,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8331
  maximum absolute entry in einsum_ir solution: 34.8331
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130332
  time (eval):    0.00373983
  gflops (eval):  1158.21
  gflops (total): 258.243
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130332,0.00373983,1158.21,258.243

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0325343
  gflops (total): 133.137
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.137

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319536
  gflops (eval):  135.557
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319536,135.557,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5282
  maximum absolute entry in einsum_ir solution: 34.5282
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131015
  time (eval):    0.003729
  gflops (eval):  1161.58
  gflops (total): 257.361
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131015,0.003729,1161.58,257.361

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332998
  gflops (total): 130.076
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.076

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324126
  gflops (eval):  133.637
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324126,133.637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2338
  maximum absolute entry in einsum_ir solution: 37.2338
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130829
  time (eval):    0.00382461
  gflops (eval):  1132.54
  gflops (total): 256.189
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130829,0.00382461,1132.54,256.189

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335531
  gflops (total): 129.094
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.094

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0315454
  gflops (eval):  137.311
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0315454,137.311,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8735
  maximum absolute entry in einsum_ir solution: 35.8735
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130015
  time (eval):    0.0037223
  gflops (eval):  1163.67
  gflops (total): 259.004
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130015,0.0037223,1163.67,259.004

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336568
  gflops (total): 128.697
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.697

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323055
  gflops (eval):  134.08
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323055,134.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.4697
  maximum absolute entry in einsum_ir solution: 32.4697
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133431
  time (eval):    0.00381613
  gflops (eval):  1135.06
  gflops (total): 252.431
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133431,0.00381613,1135.06,252.431

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333018
  gflops (total): 130.069
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.069

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322618
  gflops (eval):  134.262
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322618,134.262,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5746
  maximum absolute entry in einsum_ir solution: 35.5746
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132631
  time (eval):    0.00376562
  gflops (eval):  1150.28
  gflops (total): 254.365
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132631,0.00376562,1150.28,254.365

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338339
  gflops (total): 128.023
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.023

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324284
  gflops (eval):  133.572
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324284,133.572,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7974
  maximum absolute entry in einsum_ir solution: 33.7974
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131147
  time (eval):    0.0037922
  gflops (eval):  1142.22
  gflops (total): 256.198
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131147,0.0037922,1142.22,256.198

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332807
  gflops (total): 130.151
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.151

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324139
  gflops (eval):  133.632
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324139,133.632,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4795
  maximum absolute entry in einsum_ir solution: 34.4795
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131123
  time (eval):    0.00384829
  gflops (eval):  1125.57
  gflops (total): 255.388
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131123,0.00384829,1125.57,255.388

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340681
  gflops (total): 127.143
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.143

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0311496
  gflops (eval):  139.056
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0311496,139.056,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9317
  maximum absolute entry in einsum_ir solution: 32.9317
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131214
  time (eval):    0.00372508
  gflops (eval):  1162.8
  gflops (total): 257.117
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131214,0.00372508,1162.8,257.117

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0328579
  gflops (total): 131.826
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.826

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320136
  gflops (eval):  135.303
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320136,135.303,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9188
  maximum absolute entry in einsum_ir solution: 32.9188
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131408
  time (eval):    0.00382464
  gflops (eval):  1132.53
  gflops (total): 255.314
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131408,0.00382464,1132.53,255.314

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0324923
  gflops (total): 133.309
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.309

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0307659
  gflops (eval):  140.79
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0307659,140.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3373
  maximum absolute entry in einsum_ir solution: 34.3373
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132736
  time (eval):    0.00386051
  gflops (eval):  1122.01
  gflops (total): 252.801
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132736,0.00386051,1122.01,252.801

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336647
  gflops (total): 128.667
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.667

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320487
  gflops (eval):  135.154
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320487,135.154,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4622
  maximum absolute entry in einsum_ir solution: 33.4622
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132438
  time (eval):    0.00384221
  gflops (eval):  1127.35
  gflops (total): 253.513
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132438,0.00384221,1127.35,253.513

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334045
  gflops (total): 129.669
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.669

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032751
  gflops (eval):  132.256
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032751,132.256,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1156
  maximum absolute entry in einsum_ir solution: 38.1156
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130675
  time (eval):    0.00386428
  gflops (eval):  1120.91
  gflops (total): 255.822
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130675,0.00386428,1120.91,255.822

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335459
  gflops (total): 129.122
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.122

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.031775
  gflops (eval):  136.318
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031775,136.318,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5765
  maximum absolute entry in einsum_ir solution: 34.5765
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131391
  time (eval):    0.00387005
  gflops (eval):  1119.24
  gflops (total): 254.658
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131391,0.00387005,1119.24,254.658

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335062
  gflops (total): 129.275
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.275

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032442
  gflops (eval):  133.516
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032442,133.516,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9424
  maximum absolute entry in einsum_ir solution: 37.9424
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131108
  time (eval):    0.00374187
  gflops (eval):  1157.58
  gflops (total): 257.023
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131108,0.00374187,1157.58,257.023

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341331
  gflops (total): 126.901
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.901

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321566
  gflops (eval):  134.701
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321566,134.701,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5879
  maximum absolute entry in einsum_ir solution: 35.5879
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133682
  time (eval):    0.00377067
  gflops (eval):  1148.74
  gflops (total): 252.73
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133682,0.00377067,1148.74,252.73

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335159
  gflops (total): 129.238
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.238

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0312475
  gflops (eval):  138.62
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0312475,138.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8225
  maximum absolute entry in einsum_ir solution: 35.8225
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0134605
  time (eval):    0.0039357
  gflops (eval):  1100.57
  gflops (total): 248.992
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0134605,0.0039357,1100.57,248.992

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339075
  gflops (total): 127.745
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321499
  gflops (eval):  134.729
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321499,134.729,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1839
  maximum absolute entry in einsum_ir solution: 33.1839
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130137
  time (eval):    0.00386317
  gflops (eval):  1121.24
  gflops (total): 256.654
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130137,0.00386317,1121.24,256.654

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326682
  gflops (total): 132.591
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.591

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327024
  gflops (eval):  132.453
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327024,132.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4495
  maximum absolute entry in einsum_ir solution: 35.4495
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133466
  time (eval):    0.00381585
  gflops (eval):  1135.14
  gflops (total): 252.383
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133466,0.00381585,1135.14,252.383

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033035
  gflops (total): 131.119
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.119

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322451
  gflops (eval):  134.331
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322451,134.331,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9599
  maximum absolute entry in einsum_ir solution: 33.9599
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130248
  time (eval):    0.00375696
  gflops (eval):  1152.93
  gflops (total): 258.109
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130248,0.00375696,1152.93,258.109

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0329456
  gflops (total): 131.475
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.475

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322974
  gflops (eval):  134.114
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322974,134.114,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0592
  maximum absolute entry in einsum_ir solution: 35.0592
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130892
  time (eval):    0.00386143
  gflops (eval):  1121.74
  gflops (total): 255.538
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130892,0.00386143,1121.74,255.538

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339555
  gflops (total): 127.565
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.565

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322488
  gflops (eval):  134.316
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322488,134.316,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8276
  maximum absolute entry in einsum_ir solution: 32.8276
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131761
  time (eval):    0.00379473
  gflops (eval):  1141.46
  gflops (total): 255.233
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131761,0.00379473,1141.46,255.233

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335033
  gflops (total): 129.286
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.286

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0312221
  gflops (eval):  138.732
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0312221,138.732,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.673
  maximum absolute entry in einsum_ir solution: 35.673
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132199
  time (eval):    0.00384403
  gflops (eval):  1126.82
  gflops (total): 253.84
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132199,0.00384403,1126.82,253.84

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339786
  gflops (total): 127.478
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.030645
  gflops (eval):  141.345
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.030645,141.345,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6579
  maximum absolute entry in einsum_ir solution: 38.6579
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130084
  time (eval):    0.0039213
  gflops (eval):  1104.61
  gflops (total): 255.853
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130084,0.0039213,1104.61,255.853

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336283
  gflops (total): 128.806
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.806

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324818
  gflops (eval):  133.352
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324818,133.352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9131
  maximum absolute entry in einsum_ir solution: 37.9131
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131825
  time (eval):    0.00389793
  gflops (eval):  1111.23
  gflops (total): 253.596
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131825,0.00389793,1111.23,253.596

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0324644
  gflops (total): 133.424
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.424

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319205
  gflops (eval):  135.697
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319205,135.697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1463
  maximum absolute entry in einsum_ir solution: 34.1463
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131531
  time (eval):    0.00384562
  gflops (eval):  1126.35
  gflops (total): 254.815
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131531,0.00384562,1126.35,254.815

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339328
  gflops (total): 127.65
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321242
  gflops (eval):  134.837
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321242,134.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3134
  maximum absolute entry in einsum_ir solution: 34.3134
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013318
  time (eval):    0.00389555
  gflops (eval):  1111.92
  gflops (total): 251.634
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013318,0.00389555,1111.92,251.634

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337865
  gflops (total): 128.203
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.203

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319819
  gflops (eval):  135.437
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319819,135.437,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6217
  maximum absolute entry in einsum_ir solution: 36.6217
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130967
  time (eval):    0.00383121
  gflops (eval):  1130.59
  gflops (total): 255.881
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130967,0.00383121,1130.59,255.881

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340244
  gflops (total): 127.306
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.306

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322286
  gflops (eval):  134.4
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322286,134.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6229
  maximum absolute entry in einsum_ir solution: 34.6229
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130867
  time (eval):    0.00394509
  gflops (eval):  1097.95
  gflops (total): 254.32
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130867,0.00394509,1097.95,254.32

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333778
  gflops (total): 129.772
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0308056
  gflops (eval):  140.608
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0308056,140.608,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3424
  maximum absolute entry in einsum_ir solution: 35.3424
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013113
  time (eval):    0.00385511
  gflops (eval):  1123.58
  gflops (total): 255.274
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013113,0.00385511,1123.58,255.274

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334201
  gflops (total): 129.608
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323675
  gflops (eval):  133.823
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323675,133.823,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0113
  maximum absolute entry in einsum_ir solution: 36.0113
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132332
  time (eval):    0.00394271
  gflops (eval):  1098.61
  gflops (total): 252.186
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132332,0.00394271,1098.61,252.186

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340509
  gflops (total): 127.207
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.207

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324087
  gflops (eval):  133.653
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324087,133.653,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2628
  maximum absolute entry in einsum_ir solution: 34.2628
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131464
  time (eval):    0.00394022
  gflops (eval):  1099.31
  gflops (total): 253.504
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131464,0.00394022,1099.31,253.504

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.032635
  gflops (total): 132.726
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.726

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032387
  gflops (eval):  133.743
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032387,133.743,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6776
  maximum absolute entry in einsum_ir solution: 34.6776
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133035
  time (eval):    0.00379096
  gflops (eval):  1142.59
  gflops (total): 253.388
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133035,0.00379096,1142.59,253.388

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333523
  gflops (total): 129.872
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319844
  gflops (eval):  135.426
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319844,135.426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9434
  maximum absolute entry in einsum_ir solution: 32.9434
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131895
  time (eval):    0.00390955
  gflops (eval):  1107.93
  gflops (total): 253.32
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131895,0.00390955,1107.93,253.32

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340606
  gflops (total): 127.171
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.171

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032164
  gflops (eval):  134.67
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032164,134.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8391
  maximum absolute entry in einsum_ir solution: 33.8391
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129963
  time (eval):    0.00389359
  gflops (eval):  1112.47
  gflops (total): 256.457
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129963,0.00389359,1112.47,256.457

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337765
  gflops (total): 128.241
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.241

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321581
  gflops (eval):  134.695
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321581,134.695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5065
  maximum absolute entry in einsum_ir solution: 33.5065
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131958
  time (eval):    0.00374898
  gflops (eval):  1155.39
  gflops (total): 255.626
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131958,0.00374898,1155.39,255.626

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340011
  gflops (total): 127.394
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.394

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319684
  gflops (eval):  135.494
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319684,135.494,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5942
  maximum absolute entry in einsum_ir solution: 33.5942
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131137
  time (eval):    0.00388086
  gflops (eval):  1116.12
  gflops (total): 254.877
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131137,0.00388086,1116.12,254.877

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332351
  gflops (total): 130.33
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326624
  gflops (eval):  132.615
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326624,132.615,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1855
  maximum absolute entry in einsum_ir solution: 35.1855
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132213
  time (eval):    0.00390869
  gflops (eval):  1108.18
  gflops (total): 252.862
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132213,0.00390869,1108.18,252.862

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336103
  gflops (total): 128.875
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.875

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326341
  gflops (eval):  132.73
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326341,132.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2484
  maximum absolute entry in einsum_ir solution: 35.2484
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130131
  time (eval):    0.00385473
  gflops (eval):  1123.69
  gflops (total): 256.792
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130131,0.00385473,1123.69,256.792

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0329375
  gflops (total): 131.507
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.507

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0310536
  gflops (eval):  139.485
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0310536,139.485,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8847
  maximum absolute entry in einsum_ir solution: 33.8847
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0136474
  time (eval):    0.00389516
  gflops (eval):  1112.03
  gflops (total): 246.915
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0136474,0.00389516,1112.03,246.915

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332658
  gflops (total): 130.21
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326783
  gflops (eval):  132.55
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326783,132.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7512
  maximum absolute entry in einsum_ir solution: 36.7512
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129388
  time (eval):    0.00388998
  gflops (eval):  1113.51
  gflops (total): 257.387
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129388,0.00388998,1113.51,257.387

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334621
  gflops (total): 129.445
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.445

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320539
  gflops (eval):  135.133
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320539,135.133,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0436
  maximum absolute entry in einsum_ir solution: 38.0436
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128753
  time (eval):    0.00380388
  gflops (eval):  1138.71
  gflops (total): 259.696
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128753,0.00380388,1138.71,259.696

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334062
  gflops (total): 129.662
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.662

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323453
  gflops (eval):  133.915
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323453,133.915,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5628
  maximum absolute entry in einsum_ir solution: 33.5628
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132541
  time (eval):    0.00389059
  gflops (eval):  1113.33
  gflops (total): 252.645
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132541,0.00389059,1113.33,252.645

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333885
  gflops (total): 129.731
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.731

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0307948
  gflops (eval):  140.658
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0307948,140.658,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5333
  maximum absolute entry in einsum_ir solution: 35.5333
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133409
  time (eval):    0.00383972
  gflops (eval):  1128.08
  gflops (total): 252.116
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133409,0.00383972,1128.08,252.116

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340444
  gflops (total): 127.231
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.231

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032532
  gflops (eval):  133.146
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032532,133.146,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.9442
  maximum absolute entry in einsum_ir solution: 31.9442
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132934
  time (eval):    0.0037715
  gflops (eval):  1148.49
  gflops (total): 253.827
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132934,0.0037715,1148.49,253.827

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338485
  gflops (total): 127.968
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326525
  gflops (eval):  132.655
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326525,132.655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8643
  maximum absolute entry in einsum_ir solution: 36.8643
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131813
  time (eval):    0.00380357
  gflops (eval):  1138.81
  gflops (total): 255.022
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131813,0.00380357,1138.81,255.022

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033486
  gflops (total): 129.353
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.353

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322541
  gflops (eval):  134.293
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322541,134.293,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5661
  maximum absolute entry in einsum_ir solution: 33.5661
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131557
  time (eval):    0.00387745
  gflops (eval):  1117.11
  gflops (total): 254.3
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131557,0.00387745,1117.11,254.3

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0328321
  gflops (total): 131.93
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0313229
  gflops (eval):  138.286
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0313229,138.286,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.627
  maximum absolute entry in einsum_ir solution: 34.627
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129798
  time (eval):    0.00383444
  gflops (eval):  1129.63
  gflops (total): 257.61
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129798,0.00383444,1129.63,257.61

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333113
  gflops (total): 130.031
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.031

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325729
  gflops (eval):  132.979
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325729,132.979,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0988
  maximum absolute entry in einsum_ir solution: 36.0988
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132252
  time (eval):    0.00380838
  gflops (eval):  1137.36
  gflops (total): 254.294
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132252,0.00380838,1137.36,254.294

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0324144
  gflops (total): 133.629
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.629

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032834
  gflops (eval):  131.922
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032834,131.922,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3508
  maximum absolute entry in einsum_ir solution: 36.3508
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.01295
  time (eval):    0.00378991
  gflops (eval):  1142.91
  gflops (total): 258.754
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.01295,0.00378991,1142.91,258.754

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0343899
  gflops (total): 125.953
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,125.953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321929
  gflops (eval):  134.549
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321929,134.549,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1863
  maximum absolute entry in einsum_ir solution: 35.1863
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130803
  time (eval):    0.00379109
  gflops (eval):  1142.55
  gflops (total): 256.737
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130803,0.00379109,1142.55,256.737

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033874
  gflops (total): 127.872
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322537
  gflops (eval):  134.295
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322537,134.295,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4849
  maximum absolute entry in einsum_ir solution: 34.4849
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131455
  time (eval):    0.00384472
  gflops (eval):  1126.62
  gflops (total): 254.942
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131455,0.00384472,1126.62,254.942

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340524
  gflops (total): 127.201
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.201

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320448
  gflops (eval):  135.171
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320448,135.171,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8035
  maximum absolute entry in einsum_ir solution: 34.8035
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133719
  time (eval):    0.00385004
  gflops (eval):  1125.06
  gflops (total): 251.512
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133719,0.00385004,1125.06,251.512

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334835
  gflops (total): 129.363
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319279
  gflops (eval):  135.665
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319279,135.665,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1153
  maximum absolute entry in einsum_ir solution: 35.1153
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131478
  time (eval):    0.00386671
  gflops (eval):  1120.21
  gflops (total): 254.578
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131478,0.00386671,1120.21,254.578

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338168
  gflops (total): 128.088
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.088

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318125
  gflops (eval):  136.158
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318125,136.158,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.716
  maximum absolute entry in einsum_ir solution: 33.716
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131205
  time (eval):    0.00384956
  gflops (eval):  1125.2
  gflops (total): 255.244
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131205,0.00384956,1125.2,255.244

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337367
  gflops (total): 128.392
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.392

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032261
  gflops (eval):  134.265
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032261,134.265,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3377
  maximum absolute entry in einsum_ir solution: 35.3377
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131865
  time (eval):    0.00388493
  gflops (eval):  1114.95
  gflops (total): 253.729
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131865,0.00388493,1114.95,253.729

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339596
  gflops (total): 127.549
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.549

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0328577
  gflops (eval):  131.827
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328577,131.827,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7236
  maximum absolute entry in einsum_ir solution: 33.7236
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130765
  time (eval):    0.00384966
  gflops (eval):  1125.17
  gflops (total): 255.907
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130765,0.00384966,1125.17,255.907

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337057
  gflops (total): 128.51
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0328981
  gflops (eval):  131.665
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328981,131.665,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8083
  maximum absolute entry in einsum_ir solution: 34.8083
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130836
  time (eval):    0.00387578
  gflops (eval):  1117.59
  gflops (total): 255.406
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130836,0.00387578,1117.59,255.406

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326906
  gflops (total): 132.501
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.501

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325029
  gflops (eval):  133.266
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325029,133.266,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4925
  maximum absolute entry in einsum_ir solution: 35.4925
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129763
  time (eval):    0.00386483
  gflops (eval):  1120.75
  gflops (total): 257.199
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129763,0.00386483,1120.75,257.199

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335574
  gflops (total): 129.078
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.078

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320293
  gflops (eval):  135.236
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320293,135.236,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.998
  maximum absolute entry in einsum_ir solution: 33.998
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130847
  time (eval):    0.00386523
  gflops (eval):  1120.64
  gflops (total): 255.548
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130847,0.00386523,1120.64,255.548

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333226
  gflops (total): 129.988
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.988

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323322
  gflops (eval):  133.969
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323322,133.969,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.951
  maximum absolute entry in einsum_ir solution: 32.951
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131061
  time (eval):    0.00390216
  gflops (eval):  1110.03
  gflops (total): 254.672
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131061,0.00390216,1110.03,254.672

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.03326
  gflops (total): 130.232
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.232

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321747
  gflops (eval):  134.625
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321747,134.625,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.058
  maximum absolute entry in einsum_ir solution: 33.058
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129553
  time (eval):    0.00386334
  gflops (eval):  1121.19
  gflops (total): 257.543
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129553,0.00386334,1121.19,257.543

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335286
  gflops (total): 129.189
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.189

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324566
  gflops (eval):  133.456
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324566,133.456,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2056
  maximum absolute entry in einsum_ir solution: 34.2056
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129241
  time (eval):    0.00383981
  gflops (eval):  1128.06
  gflops (total): 258.384
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129241,0.00383981,1128.06,258.384

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0325811
  gflops (total): 132.946
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0309564
  gflops (eval):  139.923
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0309564,139.923,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8047
  maximum absolute entry in einsum_ir solution: 33.8047
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131899
  time (eval):    0.00382903
  gflops (eval):  1131.23
  gflops (total): 254.513
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131899,0.00382903,1131.23,254.513

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333098
  gflops (total): 130.037
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322
  gflops (eval):  134.519
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322,134.519,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7503
  maximum absolute entry in einsum_ir solution: 34.7503
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129986
  time (eval):    0.00382477
  gflops (eval):  1132.49
  gflops (total): 257.471
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129986,0.00382477,1132.49,257.471

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339793
  gflops (total): 127.475
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.475

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0312126
  gflops (eval):  138.775
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0312126,138.775,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4085
  maximum absolute entry in einsum_ir solution: 33.4085
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130533
  time (eval):    0.00385157
  gflops (eval):  1124.61
  gflops (total): 256.23
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130533,0.00385157,1124.61,256.23

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335934
  gflops (total): 128.94
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320871
  gflops (eval):  134.993
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320871,134.993,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1433
  maximum absolute entry in einsum_ir solution: 33.1433
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132444
  time (eval):    0.00388948
  gflops (eval):  1113.65
  gflops (total): 252.805
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132444,0.00388948,1113.65,252.805

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0324325
  gflops (total): 133.555
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.555

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327654
  gflops (eval):  132.198
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327654,132.198,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1825
  maximum absolute entry in einsum_ir solution: 33.1825
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0134714
  time (eval):    0.00388639
  gflops (eval):  1114.54
  gflops (total): 249.543
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0134714,0.00388639,1114.54,249.543

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332351
  gflops (total): 130.33
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321184
  gflops (eval):  134.861
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321184,134.861,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2657
  maximum absolute entry in einsum_ir solution: 35.2657
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129725
  time (eval):    0.00384293
  gflops (eval):  1127.14
  gflops (total): 257.592
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129725,0.00384293,1127.14,257.592

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333405
  gflops (total): 129.918
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.918

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319355
  gflops (eval):  135.633
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319355,135.633,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0545
  maximum absolute entry in einsum_ir solution: 35.0545
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131264
  time (eval):    0.00391919
  gflops (eval):  1105.21
  gflops (total): 254.114
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131264,0.00391919,1105.21,254.114

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0344335
  gflops (total): 125.794
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,125.794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326729
  gflops (eval):  132.572
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326729,132.572,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5313
  maximum absolute entry in einsum_ir solution: 38.5313
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131723
  time (eval):    0.00385765
  gflops (eval):  1122.84
  gflops (total): 254.347
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131723,0.00385765,1122.84,254.347

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335835
  gflops (total): 128.978
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.978

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322246
  gflops (eval):  134.417
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322246,134.417,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4344
  maximum absolute entry in einsum_ir solution: 35.4344
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132694
  time (eval):    0.00390343
  gflops (eval):  1109.67
  gflops (total): 252.231
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132694,0.00390343,1109.67,252.231

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0329913
  gflops (total): 131.293
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.293

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323506
  gflops (eval):  133.893
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323506,133.893,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1371
  maximum absolute entry in einsum_ir solution: 34.1371
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0127315
  time (eval):    0.00388087
  gflops (eval):  1116.12
  gflops (total): 260.74
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0127315,0.00388087,1116.12,260.74

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033845
  gflops (total): 127.981
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321271
  gflops (eval):  134.824
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321271,134.824,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3117
  maximum absolute entry in einsum_ir solution: 36.3117
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129101
  time (eval):    0.0039193
  gflops (eval):  1105.18
  gflops (total): 257.378
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129101,0.0039193,1105.18,257.378

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335745
  gflops (total): 129.012
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.012

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319796
  gflops (eval):  135.447
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319796,135.447,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0906
  maximum absolute entry in einsum_ir solution: 37.0906
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013306
  time (eval):    0.00393548
  gflops (eval):  1100.63
  gflops (total): 251.227
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013306,0.00393548,1100.63,251.227

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330934
  gflops (total): 130.888
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.888

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320761
  gflops (eval):  135.039
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320761,135.039,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4617
  maximum absolute entry in einsum_ir solution: 33.4617
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131833
  time (eval):    0.00392716
  gflops (eval):  1102.96
  gflops (total): 253.15
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131833,0.00392716,1102.96,253.15

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337385
  gflops (total): 128.385
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.385

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320804
  gflops (eval):  135.021
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320804,135.021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.541
  maximum absolute entry in einsum_ir solution: 34.541
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128799
  time (eval):    0.00388114
  gflops (eval):  1116.04
  gflops (total): 258.428
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128799,0.00388114,1116.04,258.428

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335337
  gflops (total): 129.169
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.169

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319218
  gflops (eval):  135.692
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319218,135.692,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6466
  maximum absolute entry in einsum_ir solution: 33.6466
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131664
  time (eval):    0.00401516
  gflops (eval):  1078.79
  gflops (total): 252.104
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131664,0.00401516,1078.79,252.104

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338981
  gflops (total): 127.78
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320271
  gflops (eval):  135.245
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320271,135.245,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.034
  maximum absolute entry in einsum_ir solution: 37.034
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130929
  time (eval):    0.00388256
  gflops (eval):  1115.64
  gflops (total): 255.164
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130929,0.00388256,1115.64,255.164

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338806
  gflops (total): 127.847
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.847

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322375
  gflops (eval):  134.363
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322375,134.363,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0942
  maximum absolute entry in einsum_ir solution: 38.0942
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130999
  time (eval):    0.00392944
  gflops (eval):  1102.33
  gflops (total): 254.356
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130999,0.00392944,1102.33,254.356

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340468
  gflops (total): 127.223
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.223

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0313118
  gflops (eval):  138.335
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0313118,138.335,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1074
  maximum absolute entry in einsum_ir solution: 35.1074
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132324
  time (eval):    0.00386058
  gflops (eval):  1121.99
  gflops (total): 253.409
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132324,0.00386058,1121.99,253.409

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338894
  gflops (total): 127.814
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.814

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322039
  gflops (eval):  134.503
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322039,134.503,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5283
  maximum absolute entry in einsum_ir solution: 34.5283
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130839
  time (eval):    0.003939
  gflops (eval):  1099.65
  gflops (total): 254.453
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130839,0.003939,1099.65,254.453

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339053
  gflops (total): 127.753
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.753

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322349
  gflops (eval):  134.374
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322349,134.374,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4071
  maximum absolute entry in einsum_ir solution: 36.4071
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0134693
  time (eval):    0.00385136
  gflops (eval):  1124.67
  gflops (total): 250.078
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0134693,0.00385136,1124.67,250.078

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336785
  gflops (total): 128.614
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0312791
  gflops (eval):  138.48
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0312791,138.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.3104
  maximum absolute entry in einsum_ir solution: 32.3104
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132315
  time (eval):    0.00393473
  gflops (eval):  1100.84
  gflops (total): 252.328
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132315,0.00393473,1100.84,252.328

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336888
  gflops (total): 128.574
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324179
  gflops (eval):  133.615
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324179,133.615,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4679
  maximum absolute entry in einsum_ir solution: 34.4679
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132506
  time (eval):    0.00378538
  gflops (eval):  1144.28
  gflops (total): 254.257
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132506,0.00378538,1144.28,254.257

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337773
  gflops (total): 128.237
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.237

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032163
  gflops (eval):  134.674
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032163,134.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.43
  maximum absolute entry in einsum_ir solution: 34.43
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131156
  time (eval):    0.00391824
  gflops (eval):  1105.48
  gflops (total): 254.289
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131156,0.00391824,1105.48,254.289

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033286
  gflops (total): 130.13
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319867
  gflops (eval):  135.416
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319867,135.416,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9966
  maximum absolute entry in einsum_ir solution: 34.9966
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133721
  time (eval):    0.0038179
  gflops (eval):  1134.53
  gflops (total): 251.979
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133721,0.0038179,1134.53,251.979

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337809
  gflops (total): 128.224
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.224

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322721
  gflops (eval):  134.219
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322721,134.219,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2682
  maximum absolute entry in einsum_ir solution: 33.2682
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132056
  time (eval):    0.00390209
  gflops (eval):  1110.05
  gflops (total): 253.191
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132056,0.00390209,1110.05,253.191

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333436
  gflops (total): 129.906
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319997
  gflops (eval):  135.361
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319997,135.361,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1767
  maximum absolute entry in einsum_ir solution: 35.1767
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013063
  time (eval):    0.00391329
  gflops (eval):  1106.87
  gflops (total): 255.15
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013063,0.00391329,1106.87,255.15

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033453
  gflops (total): 129.481
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.481

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.03212
  gflops (eval):  134.854
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.03212,134.854,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0232
  maximum absolute entry in einsum_ir solution: 34.0232
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0134604
  time (eval):    0.0039383
  gflops (eval):  1099.84
  gflops (total): 248.956
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0134604,0.0039383,1099.84,248.956

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033794
  gflops (total): 128.174
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.174

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320696
  gflops (eval):  135.066
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320696,135.066,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4582
  maximum absolute entry in einsum_ir solution: 34.4582
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130506
  time (eval):    0.00384678
  gflops (eval):  1126.01
  gflops (total): 256.342
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130506,0.00384678,1126.01,256.342

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340477
  gflops (total): 127.219
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0309918
  gflops (eval):  139.763
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0309918,139.763,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9672
  maximum absolute entry in einsum_ir solution: 35.9672
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130006
  time (eval):    0.00392082
  gflops (eval):  1104.75
  gflops (total): 255.978
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130006,0.00392082,1104.75,255.978

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337518
  gflops (total): 128.335
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.335

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320452
  gflops (eval):  135.169
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320452,135.169,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.046
  maximum absolute entry in einsum_ir solution: 36.046
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129541
  time (eval):    0.00382925
  gflops (eval):  1131.17
  gflops (total): 258.084
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129541,0.00382925,1131.17,258.084

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333057
  gflops (total): 130.053
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321476
  gflops (eval):  134.739
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321476,134.739,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5682
  maximum absolute entry in einsum_ir solution: 35.5682
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129769
  time (eval):    0.00390013
  gflops (eval):  1110.61
  gflops (total): 256.652
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129769,0.00390013,1110.61,256.652

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339086
  gflops (total): 127.741
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.741

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0316272
  gflops (eval):  136.955
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0316272,136.955,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6373
  maximum absolute entry in einsum_ir solution: 35.6373
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0127174
  time (eval):    0.00386959
  gflops (eval):  1119.37
  gflops (total): 261.139
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0127174,0.00386959,1119.37,261.139

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336586
  gflops (total): 128.69
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324654
  gflops (eval):  133.419
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324654,133.419,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2417
  maximum absolute entry in einsum_ir solution: 34.2417
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130254
  time (eval):    0.00392582
  gflops (eval):  1103.34
  gflops (total): 255.528
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130254,0.00392582,1103.34,255.528

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338081
  gflops (total): 128.121
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321058
  gflops (eval):  134.914
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321058,134.914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.651
  maximum absolute entry in einsum_ir solution: 34.651
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.01286
  time (eval):    0.00385723
  gflops (eval):  1122.96
  gflops (total): 259.105
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.01286,0.00385723,1122.96,259.105

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033283
  gflops (total): 130.142
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.142

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324271
  gflops (eval):  133.577
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324271,133.577,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3934
  maximum absolute entry in einsum_ir solution: 34.3934
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131275
  time (eval):    0.0037694
  gflops (eval):  1149.13
  gflops (total): 256.35
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131275,0.0037694,1149.13,256.35

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342521
  gflops (total): 126.46
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320978
  gflops (eval):  134.947
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320978,134.947,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9198
  maximum absolute entry in einsum_ir solution: 32.9198
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130373
  time (eval):    0.00391121
  gflops (eval):  1107.46
  gflops (total): 255.569
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130373,0.00391121,1107.46,255.569

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340924
  gflops (total): 127.053
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0328961
  gflops (eval):  131.673
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328961,131.673,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3508
  maximum absolute entry in einsum_ir solution: 34.3508
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013148
  time (eval):    0.00388057
  gflops (eval):  1116.21
  gflops (total): 254.367
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013148,0.00388057,1116.21,254.367

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033929
  gflops (total): 127.664
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.664

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.031313
  gflops (eval):  138.33
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031313,138.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1947
  maximum absolute entry in einsum_ir solution: 36.1947
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130422
  time (eval):    0.00379286
  gflops (eval):  1142.02
  gflops (total): 257.292
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130422,0.00379286,1142.02,257.292

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335147
  gflops (total): 129.242
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.242

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327557
  gflops (eval):  132.237
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327557,132.237,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3704
  maximum absolute entry in einsum_ir solution: 35.3704
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129093
  time (eval):    0.00390914
  gflops (eval):  1108.05
  gflops (total): 257.546
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129093,0.00390914,1108.05,257.546

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0324501
  gflops (total): 133.483
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.483

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0311092
  gflops (eval):  139.236
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0311092,139.236,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5141
  maximum absolute entry in einsum_ir solution: 35.5141
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131082
  time (eval):    0.00400101
  gflops (eval):  1082.61
  gflops (total): 253.169
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131082,0.00400101,1082.61,253.169

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334183
  gflops (total): 129.615
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.615

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320468
  gflops (eval):  135.162
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320468,135.162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7833
  maximum absolute entry in einsum_ir solution: 32.7833
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013066
  time (eval):    0.00375415
  gflops (eval):  1153.8
  gflops (total): 257.519
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013066,0.00375415,1153.8,257.519

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333584
  gflops (total): 129.848
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.848

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321716
  gflops (eval):  134.638
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321716,134.638,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6095
  maximum absolute entry in einsum_ir solution: 34.6095
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131622
  time (eval):    0.00386302
  gflops (eval):  1121.28
  gflops (total): 254.418
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131622,0.00386302,1121.28,254.418

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334728
  gflops (total): 129.404
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.404

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032416
  gflops (eval):  133.623
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032416,133.623,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9097
  maximum absolute entry in einsum_ir solution: 33.9097
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013307
  time (eval):    0.00406841
  gflops (eval):  1064.67
  gflops (total): 249.291
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013307,0.00406841,1064.67,249.291

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0347246
  gflops (total): 124.739
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,124.739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0330946
  gflops (eval):  130.883
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0330946,130.883,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9138
  maximum absolute entry in einsum_ir solution: 33.9138
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013404
  time (eval):    0.00380163
  gflops (eval):  1139.38
  gflops (total): 251.75
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013404,0.00380163,1139.38,251.75

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033648
  gflops (total): 128.73
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323228
  gflops (eval):  134.008
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323228,134.008,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.9944
  maximum absolute entry in einsum_ir solution: 31.9944
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132346
  time (eval):    0.00383145
  gflops (eval):  1130.52
  gflops (total): 253.808
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132346,0.00383145,1130.52,253.808

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334281
  gflops (total): 129.577
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321618
  gflops (eval):  134.679
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321618,134.679,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1875
  maximum absolute entry in einsum_ir solution: 35.1875
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132027
  time (eval):    0.00383037
  gflops (eval):  1130.84
  gflops (total): 254.301
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132027,0.00383037,1130.84,254.301

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0329514
  gflops (total): 131.452
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.452

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320476
  gflops (eval):  135.159
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320476,135.159,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6042
  maximum absolute entry in einsum_ir solution: 35.6042
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132484
  time (eval):    0.00392293
  gflops (eval):  1104.16
  gflops (total): 252.253
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132484,0.00392293,1104.16,252.253

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341677
  gflops (total): 126.772
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323544
  gflops (eval):  133.878
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323544,133.878,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0167
  maximum absolute entry in einsum_ir solution: 35.0167
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130283
  time (eval):    0.00387505
  gflops (eval):  1117.8
  gflops (total): 256.253
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130283,0.00387505,1117.8,256.253

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333556
  gflops (total): 129.859
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.859

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327239
  gflops (eval):  132.366
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327239,132.366,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0509
  maximum absolute entry in einsum_ir solution: 34.0509
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133659
  time (eval):    0.00389394
  gflops (eval):  1112.37
  gflops (total): 250.96
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133659,0.00389394,1112.37,250.96

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333185
  gflops (total): 130.004
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0317262
  gflops (eval):  136.528
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317262,136.528,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8538
  maximum absolute entry in einsum_ir solution: 34.8538
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131443
  time (eval):    0.00391284
  gflops (eval):  1107
  gflops (total): 253.942
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131443,0.00391284,1107,253.942

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0329801
  gflops (total): 131.337
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.337

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324842
  gflops (eval):  133.342
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324842,133.342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1572
  maximum absolute entry in einsum_ir solution: 34.1572
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131752
  time (eval):    0.00397765
  gflops (eval):  1088.97
  gflops (total): 252.524
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131752,0.00397765,1088.97,252.524

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331465
  gflops (total): 130.678
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.678

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325702
  gflops (eval):  132.99
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325702,132.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.914
  maximum absolute entry in einsum_ir solution: 33.914
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130589
  time (eval):    0.00387497
  gflops (eval):  1117.82
  gflops (total): 255.79
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130589,0.00387497,1117.82,255.79

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332414
  gflops (total): 130.305
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.305

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0308309
  gflops (eval):  140.493
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0308309,140.493,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.801
  maximum absolute entry in einsum_ir solution: 34.801
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.01323
  time (eval):    0.00389099
  gflops (eval):  1113.22
  gflops (total): 252.995
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.01323,0.00389099,1113.22,252.995

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332794
  gflops (total): 130.156
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.156

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.033101
  gflops (eval):  130.858
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.033101,130.858,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3789
  maximum absolute entry in einsum_ir solution: 35.3789
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131764
  time (eval):    0.00394917
  gflops (eval):  1096.82
  gflops (total): 252.928
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131764,0.00394917,1096.82,252.928

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332983
  gflops (total): 130.082
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.082

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324224
  gflops (eval):  133.596
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324224,133.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5901
  maximum absolute entry in einsum_ir solution: 33.5901
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130967
  time (eval):    0.00392719
  gflops (eval):  1102.96
  gflops (total): 254.438
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130967,0.00392719,1102.96,254.438

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336032
  gflops (total): 128.902
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321369
  gflops (eval):  134.783
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321369,134.783,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.612
  maximum absolute entry in einsum_ir solution: 32.612
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013183
  time (eval):    0.00388041
  gflops (eval):  1116.25
  gflops (total): 253.849
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013183,0.00388041,1116.25,253.849

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341685
  gflops (total): 126.769
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.769

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0310839
  gflops (eval):  139.349
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0310839,139.349,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3039
  maximum absolute entry in einsum_ir solution: 33.3039
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131976
  time (eval):    0.00389447
  gflops (eval):  1112.22
  gflops (total): 253.423
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131976,0.00389447,1112.22,253.423

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337068
  gflops (total): 128.506
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.506

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323663
  gflops (eval):  133.828
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323663,133.828,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4867
  maximum absolute entry in einsum_ir solution: 33.4867
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131569
  time (eval):    0.00381405
  gflops (eval):  1135.67
  gflops (total): 255.231
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131569,0.00381405,1135.67,255.231

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336542
  gflops (total): 128.707
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323456
  gflops (eval):  133.914
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323456,133.914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6735
  maximum absolute entry in einsum_ir solution: 35.6735
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.013054
  time (eval):    0.00430803
  gflops (eval):  616.945
  gflops (total): 153.082
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.013054,0.00430803,616.945,153.082

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393097
  gflops (total): 67.6124
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.6124

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00193922
  gflops (eval):  1370.56
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00193922,1370.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.206
  maximum absolute entry in einsum_ir solution: 108.206
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132005
  time (eval):    0.00434296
  gflops (eval):  611.984
  gflops (total): 151.499
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132005,0.00434296,611.984,151.499

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0415948
  gflops (total): 63.8979
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,63.8979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00223926
  gflops (eval):  1186.92
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00223926,1186.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.9879
  maximum absolute entry in einsum_ir solution: 98.9879
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131613
  time (eval):    0.00432807
  gflops (eval):  614.089
  gflops (total): 151.968
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131613,0.00432807,614.089,151.968

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0399254
  gflops (total): 66.5697
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.5697

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00236726
  gflops (eval):  1122.74
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00236726,1122.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.993
  maximum absolute entry in einsum_ir solution: 102.993
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130391
  time (eval):    0.0043417
  gflops (eval):  612.162
  gflops (total): 152.917
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130391,0.0043417,612.162,152.917

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0409069
  gflops (total): 64.9724
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.9724

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00208965
  gflops (eval):  1271.9
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00208965,1271.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.57
  maximum absolute entry in einsum_ir solution: 119.57
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130863
  time (eval):    0.00461955
  gflops (eval):  575.342
  gflops (total): 150.11
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130863,0.00461955,575.342,150.11

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393072
  gflops (total): 67.6166
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.6166

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00197848
  gflops (eval):  1343.37
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00197848,1343.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.7281
  maximum absolute entry in einsum_ir solution: 98.7281
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130724
  time (eval):    0.00434863
  gflops (eval):  611.185
  gflops (total): 152.564
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130724,0.00434863,611.185,152.564

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0413106
  gflops (total): 64.3375
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.3375

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00236284
  gflops (eval):  1124.84
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00236284,1124.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.445
  maximum absolute entry in einsum_ir solution: 102.445
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130929
  time (eval):    0.00433391
  gflops (eval):  613.261
  gflops (total): 152.513
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130929,0.00433391,613.261,152.513

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0413537
  gflops (total): 64.2704
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.2704

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00207062
  gflops (eval):  1283.59
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00207062,1283.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.481
  maximum absolute entry in einsum_ir solution: 100.481
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131144
  time (eval):    0.00434982
  gflops (eval):  611.019
  gflops (total): 152.187
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131144,0.00434982,611.019,152.187

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.040721
  gflops (total): 65.2691
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.2691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00192796
  gflops (eval):  1378.57
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00192796,1378.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.236
  maximum absolute entry in einsum_ir solution: 101.236
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130955
  time (eval):    0.00434626
  gflops (eval):  611.519
  gflops (total): 152.382
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130955,0.00434626,611.519,152.382

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.04089
  gflops (total): 64.9993
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.9993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00266624
  gflops (eval):  996.841
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00266624,996.841,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.8577
  maximum absolute entry in einsum_ir solution: 96.8577
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131644
  time (eval):    0.00434778
  gflops (eval):  611.305
  gflops (total): 151.77
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131644,0.00434778,611.305,151.77

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0415275
  gflops (total): 64.0015
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.0015

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00193204
  gflops (eval):  1375.65
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00193204,1375.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.034
  maximum absolute entry in einsum_ir solution: 100.034
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.013107
  time (eval):    0.00432948
  gflops (eval):  613.889
  gflops (total): 152.429
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.013107,0.00432948,613.889,152.429

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0403741
  gflops (total): 65.8298
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.8298

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00239902
  gflops (eval):  1107.88
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00239902,1107.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.138
  maximum absolute entry in einsum_ir solution: 99.138
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130882
  time (eval):    0.00435075
  gflops (eval):  610.887
  gflops (total): 152.407
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130882,0.00435075,610.887,152.407

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0386865
  gflops (total): 68.7015
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.7015

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00269841
  gflops (eval):  984.958
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00269841,984.958,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.135
  maximum absolute entry in einsum_ir solution: 101.135
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131224
  time (eval):    0.00430427
  gflops (eval):  617.485
  gflops (total): 152.515
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131224,0.00430427,617.485,152.515

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0415473
  gflops (total): 63.9709
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,63.9709

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00192012
  gflops (eval):  1384.2
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00192012,1384.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.584
  maximum absolute entry in einsum_ir solution: 102.584
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130019
  time (eval):    0.00435134
  gflops (eval):  610.805
  gflops (total): 153.16
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130019,0.00435134,610.805,153.16

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0414836
  gflops (total): 64.0692
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.0692

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00197087
  gflops (eval):  1348.55
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00197087,1348.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.417
  maximum absolute entry in einsum_ir solution: 100.417
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0134091
  time (eval):    0.00435177
  gflops (eval):  610.745
  gflops (total): 149.644
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0134091,0.00435177,610.745,149.644

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0394487
  gflops (total): 67.3741
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.3741

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00233401
  gflops (eval):  1138.74
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00233401,1138.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.3809
  maximum absolute entry in einsum_ir solution: 97.3809
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130636
  time (eval):    0.00433307
  gflops (eval):  613.38
  gflops (total): 152.777
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130636,0.00433307,613.38,152.777

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393125
  gflops (total): 67.6076
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.6076

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00196367
  gflops (eval):  1353.5
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00196367,1353.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.63
  maximum absolute entry in einsum_ir solution: 104.63
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130731
  time (eval):    0.00432555
  gflops (eval):  614.447
  gflops (total): 152.76
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130731,0.00432555,614.447,152.76

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0396308
  gflops (total): 67.0645
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.0645

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00215966
  gflops (eval):  1230.67
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00215966,1230.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.9722
  maximum absolute entry in einsum_ir solution: 99.9722
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130594
  time (eval):    0.00438051
  gflops (eval):  606.738
  gflops (total): 152.399
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130594,0.00438051,606.738,152.399

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0412553
  gflops (total): 64.4238
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.4238

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00233346
  gflops (eval):  1139
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00233346,1139,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.298
  maximum absolute entry in einsum_ir solution: 99.298
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129867
  time (eval):    0.00435219
  gflops (eval):  610.686
  gflops (total): 153.287
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129867,0.00435219,610.686,153.287

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0406898
  gflops (total): 65.3191
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.3191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00207355
  gflops (eval):  1281.77
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00207355,1281.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.43
  maximum absolute entry in einsum_ir solution: 106.43
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0133069
  time (eval):    0.0043427
  gflops (eval):  612.02
  gflops (total): 150.588
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0133069,0.0043427,612.02,150.588

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0405359
  gflops (total): 65.5672
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.5672

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00212293
  gflops (eval):  1251.96
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00212293,1251.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.355
  maximum absolute entry in einsum_ir solution: 111.355
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0133882
  time (eval):    0.00433783
  gflops (eval):  612.707
  gflops (total): 149.939
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0133882,0.00433783,612.707,149.939

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0400598
  gflops (total): 66.3462
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.3462

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00204715
  gflops (eval):  1298.3
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00204715,1298.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.6421
  maximum absolute entry in einsum_ir solution: 97.6421
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132889
  time (eval):    0.00430666
  gflops (eval):  617.142
  gflops (total): 151.051
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132889,0.00430666,617.142,151.051

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0402148
  gflops (total): 66.0906
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.0906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00204294
  gflops (eval):  1300.98
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00204294,1300.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.67
  maximum absolute entry in einsum_ir solution: 111.67
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0128957
  time (eval):    0.00432652
  gflops (eval):  614.309
  gflops (total): 154.325
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0128957,0.00432652,614.309,154.325

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0392673
  gflops (total): 67.6854
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.6854

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00198304
  gflops (eval):  1340.28
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00198304,1340.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.39
  maximum absolute entry in einsum_ir solution: 111.39
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132408
  time (eval):    0.00437661
  gflops (eval):  607.278
  gflops (total): 150.863
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132408,0.00437661,607.278,150.863

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0411794
  gflops (total): 64.5426
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.5426

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00199792
  gflops (eval):  1330.3
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00199792,1330.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.49
  maximum absolute entry in einsum_ir solution: 105.49
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131797
  time (eval):    0.00434061
  gflops (eval):  612.315
  gflops (total): 151.7
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131797,0.00434061,612.315,151.7

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0402761
  gflops (total): 65.9901
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.9901

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00203412
  gflops (eval):  1306.62
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00203412,1306.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.755
  maximum absolute entry in einsum_ir solution: 110.755
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.01325
  time (eval):    0.00434835
  gflops (eval):  611.225
  gflops (total): 151.027
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.01325,0.00434835,611.225,151.027

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0391369
  gflops (total): 67.9109
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.9109

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0020379
  gflops (eval):  1304.2
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0020379,1304.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.7
  maximum absolute entry in einsum_ir solution: 103.7
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130903
  time (eval):    0.00433282
  gflops (eval):  613.416
  gflops (total): 152.546
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130903,0.00433282,613.416,152.546

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393234
  gflops (total): 67.5888
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.5888

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00279248
  gflops (eval):  951.779
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00279248,951.779,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.861
  maximum absolute entry in einsum_ir solution: 102.861
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0133493
  time (eval):    0.0043052
  gflops (eval):  617.351
  gflops (total): 150.547
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0133493,0.0043052,617.351,150.547

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0386593
  gflops (total): 68.7498
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.7498

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00189264
  gflops (eval):  1404.29
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00189264,1404.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.11
  maximum absolute entry in einsum_ir solution: 103.11
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132106
  time (eval):    0.00435075
  gflops (eval):  610.888
  gflops (total): 151.345
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132106,0.00435075,610.888,151.345

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0401535
  gflops (total): 66.1916
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.1916

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00197649
  gflops (eval):  1344.72
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00197649,1344.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.109
  maximum absolute entry in einsum_ir solution: 119.109
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0133524
  time (eval):    0.0043465
  gflops (eval):  611.485
  gflops (total): 150.169
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0133524,0.0043465,611.485,150.169

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0394677
  gflops (total): 67.3417
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.3417

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00262153
  gflops (eval):  1013.84
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00262153,1013.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.7193
  maximum absolute entry in einsum_ir solution: 97.7193
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0135036
  time (eval):    0.00435987
  gflops (eval):  609.611
  gflops (total): 148.785
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0135036,0.00435987,609.611,148.785

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0414247
  gflops (total): 64.1603
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.1603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00284626
  gflops (eval):  933.793
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00284626,933.793,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.545
  maximum absolute entry in einsum_ir solution: 105.545
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129168
  time (eval):    0.00433211
  gflops (eval):  613.517
  gflops (total): 154.086
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129168,0.00433211,613.517,154.086

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0399612
  gflops (total): 66.51
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00220032
  gflops (eval):  1207.93
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00220032,1207.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.327
  maximum absolute entry in einsum_ir solution: 103.327
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0143259
  time (eval):    0.00433936
  gflops (eval):  612.492
  gflops (total): 142.394
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0143259,0.00433936,612.492,142.394

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0405539
  gflops (total): 65.5379
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.5379

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00185255
  gflops (eval):  1434.68
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00185255,1434.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.32
  maximum absolute entry in einsum_ir solution: 112.32
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0136605
  time (eval):    0.00437025
  gflops (eval):  608.162
  gflops (total): 147.405
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0136605,0.00437025,608.162,147.405

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.039863
  gflops (total): 66.6739
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.6739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00245479
  gflops (eval):  1082.71
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00245479,1082.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.123
  maximum absolute entry in einsum_ir solution: 105.123
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131507
  time (eval):    0.00433477
  gflops (eval):  613.14
  gflops (total): 152.002
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131507,0.00433477,613.14,152.002

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0408994
  gflops (total): 64.9843
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.9843

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00196446
  gflops (eval):  1352.95
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00196446,1352.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.191
  maximum absolute entry in einsum_ir solution: 101.191
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129853
  time (eval):    0.0043465
  gflops (eval):  611.485
  gflops (total): 153.35
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129853,0.0043465,611.485,153.35

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0400865
  gflops (total): 66.3021
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.3021

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00189757
  gflops (eval):  1400.65
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00189757,1400.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.868
  maximum absolute entry in einsum_ir solution: 111.868
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130505
  time (eval):    0.00429053
  gflops (eval):  619.463
  gflops (total): 153.268
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130505,0.00429053,619.463,153.268

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0392377
  gflops (total): 67.7365
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.7365

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00211318
  gflops (eval):  1257.73
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00211318,1257.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.707
  maximum absolute entry in einsum_ir solution: 116.707
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130485
  time (eval):    0.00432854
  gflops (eval):  614.022
  gflops (total): 152.95
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130485,0.00432854,614.022,152.95

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0408483
  gflops (total): 65.0656
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.0656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00205829
  gflops (eval):  1291.27
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00205829,1291.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.996
  maximum absolute entry in einsum_ir solution: 111.996
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131088
  time (eval):    0.00433605
  gflops (eval):  612.959
  gflops (total): 152.356
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131088,0.00433605,612.959,152.356

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0395219
  gflops (total): 67.2493
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.2493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0027249
  gflops (eval):  975.384
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0027249,975.384,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.589
  maximum absolute entry in einsum_ir solution: 103.589
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132006
  time (eval):    0.00432478
  gflops (eval):  614.556
  gflops (total): 151.655
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132006,0.00432478,614.556,151.655

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0386213
  gflops (total): 68.8174
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.8174

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00263982
  gflops (eval):  1006.82
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00263982,1006.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.7663
  maximum absolute entry in einsum_ir solution: 96.7663
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130982
  time (eval):    0.00433509
  gflops (eval):  613.095
  gflops (total): 152.457
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130982,0.00433509,613.095,152.457

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0397659
  gflops (total): 66.8366
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.8366

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00291543
  gflops (eval):  911.641
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00291543,911.641,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.735
  maximum absolute entry in einsum_ir solution: 104.735
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131056
  time (eval):    0.00432782
  gflops (eval):  614.124
  gflops (total): 152.455
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131056,0.00432782,614.124,152.455

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0390548
  gflops (total): 68.0537
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.0537

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00240962
  gflops (eval):  1103
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00240962,1103,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.9224
  maximum absolute entry in einsum_ir solution: 98.9224
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131497
  time (eval):    0.00435254
  gflops (eval):  610.637
  gflops (total): 151.856
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131497,0.00435254,610.637,151.856

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0392659
  gflops (total): 67.6877
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.6877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0024506
  gflops (eval):  1084.56
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0024506,1084.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.827
  maximum absolute entry in einsum_ir solution: 107.827
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131987
  time (eval):    0.00431085
  gflops (eval):  616.542
  gflops (total): 151.792
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131987,0.00431085,616.542,151.792

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0409384
  gflops (total): 64.9225
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.9225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00204468
  gflops (eval):  1299.87
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00204468,1299.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.392
  maximum absolute entry in einsum_ir solution: 104.392
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130558
  time (eval):    0.00431387
  gflops (eval):  616.11
  gflops (total): 153.015
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130558,0.00431387,616.11,153.015

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0402198
  gflops (total): 66.0824
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.0824

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00209551
  gflops (eval):  1268.34
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00209551,1268.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.1605
  maximum absolute entry in einsum_ir solution: 97.1605
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0128743
  time (eval):    0.00434054
  gflops (eval):  612.325
  gflops (total): 154.391
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0128743,0.00434054,612.325,154.391

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0410034
  gflops (total): 64.8196
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.8196

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00203724
  gflops (eval):  1304.62
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00203724,1304.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.7418
  maximum absolute entry in einsum_ir solution: 96.7418
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132324
  time (eval):    0.00437245
  gflops (eval):  607.856
  gflops (total): 150.971
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132324,0.00437245,607.856,150.971

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0410688
  gflops (total): 64.7163
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.7163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00196177
  gflops (eval):  1354.81
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00196177,1354.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.333
  maximum absolute entry in einsum_ir solution: 102.333
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131074
  time (eval):    0.00432249
  gflops (eval):  614.882
  gflops (total): 152.486
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131074,0.00432249,614.882,152.486

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0404234
  gflops (total): 65.7496
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.7496

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00232049
  gflops (eval):  1145.37
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00232049,1145.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.147
  maximum absolute entry in einsum_ir solution: 110.147
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130138
  time (eval):    0.00435984
  gflops (eval):  609.614
  gflops (total): 152.98
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130138,0.00435984,609.614,152.98

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0406849
  gflops (total): 65.327
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.327

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00276717
  gflops (eval):  960.483
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00276717,960.483,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.573
  maximum absolute entry in einsum_ir solution: 104.573
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132457
  time (eval):    0.0043265
  gflops (eval):  614.312
  gflops (total): 151.252
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132457,0.0043265,614.312,151.252

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0392461
  gflops (total): 67.7219
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.7219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00221054
  gflops (eval):  1202.34
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00221054,1202.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.198
  maximum absolute entry in einsum_ir solution: 106.198
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131189
  time (eval):    0.00434456
  gflops (eval):  611.758
  gflops (total): 152.193
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131189,0.00434456,611.758,152.193

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0407291
  gflops (total): 65.2561
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.2561

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00208902
  gflops (eval):  1272.28
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00208902,1272.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.286
  maximum absolute entry in einsum_ir solution: 104.286
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129821
  time (eval):    0.00431248
  gflops (eval):  616.309
  gflops (total): 153.679
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129821,0.00431248,616.309,153.679

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0396832
  gflops (total): 66.976
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.976

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00235127
  gflops (eval):  1130.37
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00235127,1130.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.034
  maximum absolute entry in einsum_ir solution: 108.034
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129426
  time (eval):    0.00430039
  gflops (eval):  618.042
  gflops (total): 154.139
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129426,0.00430039,618.042,154.139

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0392137
  gflops (total): 67.7779
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.7779

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00267135
  gflops (eval):  994.936
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00267135,994.936,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.9724
  maximum absolute entry in einsum_ir solution: 97.9724
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131282
  time (eval):    0.0043442
  gflops (eval):  611.809
  gflops (total): 152.115
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131282,0.0043442,611.809,152.115

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0401998
  gflops (total): 66.1153
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.1153

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00246286
  gflops (eval):  1079.16
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00246286,1079.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.8145
  maximum absolute entry in einsum_ir solution: 98.8145
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131159
  time (eval):    0.00434408
  gflops (eval):  611.826
  gflops (total): 152.224
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131159,0.00434408,611.826,152.224

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0397121
  gflops (total): 66.9272
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.9272

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00196204
  gflops (eval):  1354.62
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00196204,1354.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.1355
  maximum absolute entry in einsum_ir solution: 96.1355
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130609
  time (eval):    0.00431758
  gflops (eval):  615.581
  gflops (total): 152.938
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130609,0.00431758,615.581,152.938

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0408594
  gflops (total): 65.0479
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.0479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00195561
  gflops (eval):  1359.07
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00195561,1359.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.593
  maximum absolute entry in einsum_ir solution: 105.593
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0114183
  time (eval):    0.00431254
  gflops (eval):  616.301
  gflops (total): 168.956
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0114183,0.00431254,616.301,168.956

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0414801
  gflops (total): 64.0746
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.0746

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00195423
  gflops (eval):  1360.03
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00195423,1360.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.531
  maximum absolute entry in einsum_ir solution: 101.531
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132532
  time (eval):    0.00437264
  gflops (eval):  607.83
  gflops (total): 150.792
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132532,0.00437264,607.83,150.792

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0415367
  gflops (total): 63.9873
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,63.9873

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00193152
  gflops (eval):  1376.03
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00193152,1376.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.113
  maximum absolute entry in einsum_ir solution: 109.113
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131293
  time (eval):    0.0043076
  gflops (eval):  617.007
  gflops (total): 152.425
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131293,0.0043076,617.007,152.425

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0411985
  gflops (total): 64.5125
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.5125

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00192736
  gflops (eval):  1378.99
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00192736,1378.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.8
  maximum absolute entry in einsum_ir solution: 110.8
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131142
  time (eval):    0.00432333
  gflops (eval):  614.763
  gflops (total): 152.42
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131142,0.00432333,614.763,152.42

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0399352
  gflops (total): 66.5533
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.5533

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00198821
  gflops (eval):  1336.79
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00198821,1336.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.7686
  maximum absolute entry in einsum_ir solution: 98.7686
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130745
  time (eval):    0.00432732
  gflops (eval):  614.196
  gflops (total): 152.732
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130745,0.00432732,614.196,152.732

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0416235
  gflops (total): 63.8538
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,63.8538

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00234447
  gflops (eval):  1133.66
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00234447,1133.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.223
  maximum absolute entry in einsum_ir solution: 104.223
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.013304
  time (eval):    0.00433926
  gflops (eval):  612.505
  gflops (total): 150.642
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.013304,0.00433926,612.505,150.642

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0420976
  gflops (total): 63.1347
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,63.1347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00201
  gflops (eval):  1322.3
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00201,1322.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.22
  maximum absolute entry in einsum_ir solution: 100.22
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132705
  time (eval):    0.0043131
  gflops (eval):  616.22
  gflops (total): 151.154
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132705,0.0043131,616.22,151.154

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0405695
  gflops (total): 65.5128
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.5128

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00203441
  gflops (eval):  1306.43
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00203441,1306.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.175
  maximum absolute entry in einsum_ir solution: 104.175
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132069
  time (eval):    0.00435898
  gflops (eval):  609.735
  gflops (total): 151.306
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132069,0.00435898,609.735,151.306

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0404052
  gflops (total): 65.7792
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.7792

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00202618
  gflops (eval):  1311.74
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00202618,1311.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.491
  maximum absolute entry in einsum_ir solution: 101.491
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131255
  time (eval):    0.00432232
  gflops (eval):  614.905
  gflops (total): 152.33
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131255,0.00432232,614.905,152.33

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0407808
  gflops (total): 65.1734
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.1734

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0026467
  gflops (eval):  1004.2
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0026467,1004.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.3506
  maximum absolute entry in einsum_ir solution: 98.3506
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.013214
  time (eval):    0.00436678
  gflops (eval):  608.645
  gflops (total): 151.177
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.013214,0.00436678,608.645,151.177

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0396067
  gflops (total): 67.1053
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.1053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00207764
  gflops (eval):  1279.25
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00207764,1279.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.405
  maximum absolute entry in einsum_ir solution: 103.405
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130261
  time (eval):    0.00458577
  gflops (eval):  579.58
  gflops (total): 150.911
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130261,0.00458577,579.58,150.911

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0395895
  gflops (total): 67.1346
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.1346

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0022056
  gflops (eval):  1205.03
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0022056,1205.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.898
  maximum absolute entry in einsum_ir solution: 98.898
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130741
  time (eval):    0.00432468
  gflops (eval):  614.57
  gflops (total): 152.759
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130741,0.00432468,614.57,152.759

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0406089
  gflops (total): 65.4492
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.4492

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00205109
  gflops (eval):  1295.81
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00205109,1295.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.398
  maximum absolute entry in einsum_ir solution: 102.398
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131476
  time (eval):    0.00435138
  gflops (eval):  610.8
  gflops (total): 151.885
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131476,0.00435138,610.8,151.885

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0413636
  gflops (total): 64.255
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.255

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0020289
  gflops (eval):  1309.98
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0020289,1309.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.302
  maximum absolute entry in einsum_ir solution: 102.302
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131937
  time (eval):    0.00433163
  gflops (eval):  613.584
  gflops (total): 151.656
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131937,0.00433163,613.584,151.656

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0403934
  gflops (total): 65.7984
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.7984

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00190222
  gflops (eval):  1397.22
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00190222,1397.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.385
  maximum absolute entry in einsum_ir solution: 107.385
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129031
  time (eval):    0.00434618
  gflops (eval):  611.53
  gflops (total): 154.083
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129031,0.00434618,611.53,154.083

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0392092
  gflops (total): 67.7857
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.7857

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0019522
  gflops (eval):  1361.45
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0019522,1361.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.344
  maximum absolute entry in einsum_ir solution: 105.344
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131763
  time (eval):    0.00432269
  gflops (eval):  614.853
  gflops (total): 151.884
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131763,0.00432269,614.853,151.884

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0407066
  gflops (total): 65.2922
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.2922

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00279041
  gflops (eval):  952.484
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00279041,952.484,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.527
  maximum absolute entry in einsum_ir solution: 101.527
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131577
  time (eval):    0.00459121
  gflops (eval):  578.894
  gflops (total): 149.746
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131577,0.00459121,578.894,149.746

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0404905
  gflops (total): 65.6405
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.6405

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00317863
  gflops (eval):  836.152
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00317863,836.152,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.328
  maximum absolute entry in einsum_ir solution: 102.328
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132612
  time (eval):    0.00466606
  gflops (eval):  569.607
  gflops (total): 148.256
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132612,0.00466606,569.607,148.256

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0398542
  gflops (total): 66.6886
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.6886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00205181
  gflops (eval):  1295.35
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00205181,1295.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.109
  maximum absolute entry in einsum_ir solution: 103.109
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0133297
  time (eval):    0.00433267
  gflops (eval):  613.438
  gflops (total): 150.48
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0133297,0.00433267,613.438,150.48

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0396798
  gflops (total): 66.9818
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.9818

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00243329
  gflops (eval):  1092.27
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00243329,1092.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.803
  maximum absolute entry in einsum_ir solution: 110.803
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131199
  time (eval):    0.00431825
  gflops (eval):  615.486
  gflops (total): 152.415
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131199,0.00431825,615.486,152.415

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0414433
  gflops (total): 64.1315
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.1315

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00243383
  gflops (eval):  1092.03
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00243383,1092.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.038
  maximum absolute entry in einsum_ir solution: 110.038
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0127604
  time (eval):    0.00432554
  gflops (eval):  614.448
  gflops (total): 155.556
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0127604,0.00432554,614.448,155.556

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0395126
  gflops (total): 67.2652
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.2652

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00186154
  gflops (eval):  1427.76
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00186154,1427.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.895
  maximum absolute entry in einsum_ir solution: 103.895
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0133612
  time (eval):    0.00435051
  gflops (eval):  610.922
  gflops (total): 150.06
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0133612,0.00435051,610.922,150.06

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0402774
  gflops (total): 65.9879
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.9879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00194198
  gflops (eval):  1368.61
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00194198,1368.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.256
  maximum absolute entry in einsum_ir solution: 108.256
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129719
  time (eval):    0.0043335
  gflops (eval):  613.32
  gflops (total): 153.583
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129719,0.0043335,613.32,153.583

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0405956
  gflops (total): 65.4707
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.4707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00193065
  gflops (eval):  1376.64
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00193065,1376.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.899
  maximum absolute entry in einsum_ir solution: 103.899
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130008
  time (eval):    0.00435804
  gflops (eval):  609.866
  gflops (total): 153.11
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130008,0.00435804,609.866,153.11

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0410389
  gflops (total): 64.7634
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.7634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00200499
  gflops (eval):  1325.6
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00200499,1325.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.233
  maximum absolute entry in einsum_ir solution: 104.233
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0133038
  time (eval):    0.00434119
  gflops (eval):  612.233
  gflops (total): 150.627
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0133038,0.00434119,612.233,150.627

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0412943
  gflops (total): 64.3628
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.3628

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00292889
  gflops (eval):  907.45
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00292889,907.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.97
  maximum absolute entry in einsum_ir solution: 100.97
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.013059
  time (eval):    0.00435858
  gflops (eval):  609.79
  gflops (total): 152.594
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.013059,0.00435858,609.79,152.594

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0399076
  gflops (total): 66.5994
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.5994

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00196958
  gflops (eval):  1349.44
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00196958,1349.44,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.004
  maximum absolute entry in einsum_ir solution: 104.004
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130117
  time (eval):    0.00433405
  gflops (eval):  613.242
  gflops (total): 153.226
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130117,0.00433405,613.242,153.226

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0402548
  gflops (total): 66.0249
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.0249

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0023533
  gflops (eval):  1129.4
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0023533,1129.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.592
  maximum absolute entry in einsum_ir solution: 103.592
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131535
  time (eval):    0.00432272
  gflops (eval):  614.849
  gflops (total): 152.082
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131535,0.00432272,614.849,152.082

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0407882
  gflops (total): 65.1614
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.1614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00297232
  gflops (eval):  894.191
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00297232,894.191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.828
  maximum absolute entry in einsum_ir solution: 101.828
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131105
  time (eval):    0.0043448
  gflops (eval):  611.724
  gflops (total): 152.264
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131105,0.0043448,611.724,152.264

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.039058
  gflops (total): 68.0481
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.0481

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00202293
  gflops (eval):  1313.85
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00202293,1313.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.62
  maximum absolute entry in einsum_ir solution: 103.62
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130455
  time (eval):    0.00435689
  gflops (eval):  610.028
  gflops (total): 152.727
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130455,0.00435689,610.028,152.727

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0394405
  gflops (total): 67.3881
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.3881

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00202664
  gflops (eval):  1311.44
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00202664,1311.44,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.662
  maximum absolute entry in einsum_ir solution: 105.662
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0128623
  time (eval):    0.00431227
  gflops (eval):  616.339
  gflops (total): 154.753
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0128623,0.00431227,616.339,154.753

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0401174
  gflops (total): 66.2511
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.2511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00236141
  gflops (eval):  1125.52
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00236141,1125.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.2015
  maximum absolute entry in einsum_ir solution: 97.2015
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129811
  time (eval):    0.00434858
  gflops (eval):  611.192
  gflops (total): 153.368
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129811,0.00434858,611.192,153.368

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0394283
  gflops (total): 67.409
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.409

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00202847
  gflops (eval):  1310.26
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00202847,1310.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.239
  maximum absolute entry in einsum_ir solution: 106.239
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0133079
  time (eval):    0.0043242
  gflops (eval):  614.638
  gflops (total): 150.738
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0133079,0.0043242,614.638,150.738

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0400936
  gflops (total): 66.2904
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.2904

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00209312
  gflops (eval):  1269.79
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00209312,1269.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.781
  maximum absolute entry in einsum_ir solution: 100.781
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131309
  time (eval):    0.00433611
  gflops (eval):  612.951
  gflops (total): 152.163
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131309,0.00433611,612.951,152.163

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0387047
  gflops (total): 68.6693
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.6693

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00223784
  gflops (eval):  1187.67
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00223784,1187.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.649
  maximum absolute entry in einsum_ir solution: 109.649
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131809
  time (eval):    0.00432791
  gflops (eval):  614.111
  gflops (total): 151.799
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131809,0.00432791,614.111,151.799

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0391731
  gflops (total): 67.8481
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.8481

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00204384
  gflops (eval):  1300.4
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00204384,1300.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.964
  maximum absolute entry in einsum_ir solution: 116.964
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131447
  time (eval):    0.00436311
  gflops (eval):  609.157
  gflops (total): 151.808
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131447,0.00436311,609.157,151.808

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0401092
  gflops (total): 66.2646
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.2646

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00215929
  gflops (eval):  1230.88
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00215929,1230.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.967
  maximum absolute entry in einsum_ir solution: 105.967
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132124
  time (eval):    0.0043126
  gflops (eval):  616.293
  gflops (total): 151.659
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132124,0.0043126,616.293,151.659

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0410337
  gflops (total): 64.7717
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.7717

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00203874
  gflops (eval):  1303.66
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00203874,1303.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.076
  maximum absolute entry in einsum_ir solution: 107.076
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0135844
  time (eval):    0.00432037
  gflops (eval):  615.184
  gflops (total): 148.442
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0135844,0.00432037,615.184,148.442

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0405164
  gflops (total): 65.5987
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.5987

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00249613
  gflops (eval):  1064.78
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00249613,1064.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.339
  maximum absolute entry in einsum_ir solution: 104.339
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130887
  time (eval):    0.00436779
  gflops (eval):  608.504
  gflops (total): 152.254
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130887,0.00436779,608.504,152.254

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0395243
  gflops (total): 67.2452
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.2452

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00267282
  gflops (eval):  994.389
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00267282,994.389,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.9825
  maximum absolute entry in einsum_ir solution: 99.9825
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129955
  time (eval):    0.00430438
  gflops (eval):  617.469
  gflops (total): 153.633
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129955,0.00430438,617.469,153.633

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0392912
  gflops (total): 67.6442
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.6442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00244818
  gflops (eval):  1085.63
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00244818,1085.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.2853
  maximum absolute entry in einsum_ir solution: 98.2853
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.012955
  time (eval):    0.00434977
  gflops (eval):  611.026
  gflops (total): 153.589
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.012955,0.00434977,611.026,153.589

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0405
  gflops (total): 65.6252
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.6252

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00193119
  gflops (eval):  1376.26
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00193119,1376.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.974
  maximum absolute entry in einsum_ir solution: 101.974
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131539
  time (eval):    0.00435635
  gflops (eval):  610.103
  gflops (total): 151.787
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131539,0.00435635,610.103,151.787

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0389783
  gflops (total): 68.1872
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.1872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00219183
  gflops (eval):  1212.6
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00219183,1212.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.711
  maximum absolute entry in einsum_ir solution: 118.711
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0128095
  time (eval):    0.00434354
  gflops (eval):  611.902
  gflops (total): 154.947
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0128095,0.00434354,611.902,154.947

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0417609
  gflops (total): 63.6437
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,63.6437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00190782
  gflops (eval):  1393.12
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00190782,1393.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.559
  maximum absolute entry in einsum_ir solution: 102.559
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,3,5,6,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130795
  time (eval):    0.00434518
  gflops (eval):  611.671
  gflops (total): 152.532
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130795,0.00434518,611.671,152.532

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.041384
  gflops (total): 64.2234
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.2234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00194187
  gflops (eval):  1368.69
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00194187,1368.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.522
  maximum absolute entry in einsum_ir solution: 106.522
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154111
  time (eval):    0.00737013
  gflops (eval):  1474.58
  gflops (total): 477.052
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154111,0.00737013,1474.58,477.052

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0247407
  gflops (total): 439.269
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,439.269

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.016947
  gflops (eval):  641.282
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.016947,641.282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2274
  maximum absolute entry in einsum_ir solution: 60.2274
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155464
  time (eval):    0.00736946
  gflops (eval):  1474.71
  gflops (total): 474.248
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155464,0.00736946,1474.71,474.248

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0239633
  gflops (total): 453.52
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,453.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175575
  gflops (eval):  618.984
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175575,618.984,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3491
  maximum absolute entry in einsum_ir solution: 57.3491
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151906
  time (eval):    0.00740848
  gflops (eval):  1466.94
  gflops (total): 480.896
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151906,0.00740848,1466.94,480.896

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0248976
  gflops (total): 436.5
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,436.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0172018
  gflops (eval):  631.782
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0172018,631.782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.3258
  maximum absolute entry in einsum_ir solution: 62.3258
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151339
  time (eval):    0.00740113
  gflops (eval):  1468.4
  gflops (total): 482.262
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151339,0.00740113,1468.4,482.262

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0231271
  gflops (total): 469.917
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,469.917

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173079
  gflops (eval):  627.911
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173079,627.911,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.8404
  maximum absolute entry in einsum_ir solution: 60.8404
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0146527
  time (eval):    0.00735658
  gflops (eval):  1477.29
  gflops (total): 493.783
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0146527,0.00735658,1477.29,493.783

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0225338
  gflops (total): 482.291
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,482.291

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0180368
  gflops (eval):  602.536
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0180368,602.536,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5342
  maximum absolute entry in einsum_ir solution: 58.5342
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148633
  time (eval):    0.00742858
  gflops (eval):  1462.97
  gflops (total): 487.525
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148633,0.00742858,1462.97,487.525

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0242216
  gflops (total): 448.684
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,448.684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0181509
  gflops (eval):  598.748
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0181509,598.748,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.6252
  maximum absolute entry in einsum_ir solution: 63.6252
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148495
  time (eval):    0.00743113
  gflops (eval):  1462.47
  gflops (total): 487.771
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148495,0.00743113,1462.47,487.771

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.02439
  gflops (total): 445.585
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,445.585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177481
  gflops (eval):  612.336
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177481,612.336,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.5711
  maximum absolute entry in einsum_ir solution: 64.5711
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015061
  time (eval):    0.00737487
  gflops (eval):  1473.63
  gflops (total): 484.396
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015061,0.00737487,1473.63,484.396

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0239503
  gflops (total): 453.766
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,453.766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0172133
  gflops (eval):  631.361
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0172133,631.361,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.7414
  maximum absolute entry in einsum_ir solution: 61.7414
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0146625
  time (eval):    0.00737961
  gflops (eval):  1472.68
  gflops (total): 493.048
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0146625,0.00737961,1472.68,493.048

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.023931
  gflops (total): 454.132
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,454.132

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017672
  gflops (eval):  614.976
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017672,614.976,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.6479
  maximum absolute entry in einsum_ir solution: 64.6479
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149751
  time (eval):    0.00741901
  gflops (eval):  1464.86
  gflops (total): 485.297
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149751,0.00741901,1464.86,485.297

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.024861
  gflops (total): 437.143
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,437.143

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0171638
  gflops (eval):  633.184
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0171638,633.184,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.7612
  maximum absolute entry in einsum_ir solution: 62.7612
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153361
  time (eval):    0.00739103
  gflops (eval):  1470.41
  gflops (total): 478.188
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153361,0.00739103,1470.41,478.188

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0232042
  gflops (total): 468.355
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,468.355

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017544
  gflops (eval):  619.46
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017544,619.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7629
  maximum absolute entry in einsum_ir solution: 58.7629
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150899
  time (eval):    0.00741942
  gflops (eval):  1464.78
  gflops (total): 482.815
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150899,0.00741942,1464.78,482.815

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0235925
  gflops (total): 460.648
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,460.648

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0162491
  gflops (eval):  668.825
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0162491,668.825,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7024
  maximum absolute entry in einsum_ir solution: 58.7024
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154657
  time (eval):    0.00736085
  gflops (eval):  1476.44
  gflops (total): 476.104
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154657,0.00736085,1476.44,476.104

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.023697
  gflops (total): 458.616
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,458.616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0178393
  gflops (eval):  609.206
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0178393,609.206,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.44
  maximum absolute entry in einsum_ir solution: 60.44
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151903
  time (eval):    0.00741686
  gflops (eval):  1465.29
  gflops (total): 480.725
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151903,0.00741686,1465.29,480.725

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.023582
  gflops (total): 460.853
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,460.853

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.016569
  gflops (eval):  655.912
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.016569,655.912,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7964
  maximum absolute entry in einsum_ir solution: 57.7964
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152289
  time (eval):    0.00740969
  gflops (eval):  1466.7
  gflops (total): 480.057
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152289,0.00740969,1466.7,480.057

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0240093
  gflops (total): 452.651
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,452.651

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0167257
  gflops (eval):  649.767
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0167257,649.767,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.8397
  maximum absolute entry in einsum_ir solution: 64.8397
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153763
  time (eval):    0.00739502
  gflops (eval):  1469.61
  gflops (total): 477.26
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153763,0.00739502,1469.61,477.26

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0238945
  gflops (total): 454.826
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,454.826

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175273
  gflops (eval):  620.051
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175273,620.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3994
  maximum absolute entry in einsum_ir solution: 58.3994
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152643
  time (eval):    0.007336
  gflops (eval):  1481.44
  gflops (total): 480.871
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152643,0.007336,1481.44,480.871

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0241063
  gflops (total): 450.829
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,450.829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0179
  gflops (eval):  607.139
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0179,607.139,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.264
  maximum absolute entry in einsum_ir solution: 58.264
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151882
  time (eval):    0.00734923
  gflops (eval):  1478.77
  gflops (total): 482.212
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151882,0.00734923,1478.77,482.212

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0244635
  gflops (total): 444.247
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,444.247

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0179003
  gflops (eval):  607.129
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0179003,607.129,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4921
  maximum absolute entry in einsum_ir solution: 55.4921
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152054
  time (eval):    0.00737923
  gflops (eval):  1472.76
  gflops (total): 481.205
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152054,0.00737923,1472.76,481.205

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.02457
  gflops (total): 442.321
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,442.321

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0172721
  gflops (eval):  629.213
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0172721,629.213,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6428
  maximum absolute entry in einsum_ir solution: 60.6428
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0147295
  time (eval):    0.00740048
  gflops (eval):  1468.53
  gflops (total): 491.09
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0147295,0.00740048,1468.53,491.09

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0232707
  gflops (total): 467.017
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,467.017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173812
  gflops (eval):  625.262
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173812,625.262,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6571
  maximum absolute entry in einsum_ir solution: 59.6571
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154071
  time (eval):    0.00742712
  gflops (eval):  1463.26
  gflops (total): 475.944
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154071,0.00742712,1463.26,475.944

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0247095
  gflops (total): 439.824
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,439.824

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017854
  gflops (eval):  608.706
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017854,608.706,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.4381
  maximum absolute entry in einsum_ir solution: 63.4381
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152468
  time (eval):    0.00751042
  gflops (eval):  1447.03
  gflops (total): 477.555
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152468,0.00751042,1447.03,477.555

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0232804
  gflops (total): 466.822
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,466.822

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0176965
  gflops (eval):  614.124
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0176965,614.124,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4453
  maximum absolute entry in einsum_ir solution: 60.4453
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151819
  time (eval):    0.00742357
  gflops (eval):  1463.96
  gflops (total): 480.76
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151819,0.00742357,1463.96,480.76

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0229724
  gflops (total): 473.081
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,473.081

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173655
  gflops (eval):  625.829
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173655,625.829,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.5278
  maximum absolute entry in einsum_ir solution: 63.5278
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151304
  time (eval):    0.00754347
  gflops (eval):  1440.69
  gflops (total): 479.31
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151304,0.00754347,1440.69,479.31

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0237909
  gflops (total): 456.805
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,456.805

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0180456
  gflops (eval):  602.241
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0180456,602.241,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.751
  maximum absolute entry in einsum_ir solution: 56.751
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015267
  time (eval):    0.00741733
  gflops (eval):  1465.19
  gflops (total): 479.088
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015267,0.00741733,1465.19,479.088

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0239584
  gflops (total): 453.612
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,453.612

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0164727
  gflops (eval):  659.749
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0164727,659.749,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4765
  maximum absolute entry in einsum_ir solution: 61.4765
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0144387
  time (eval):    0.0073743
  gflops (eval):  1473.74
  gflops (total): 498.226
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0144387,0.0073743,1473.74,498.226

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0246628
  gflops (total): 440.656
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,440.656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177175
  gflops (eval):  613.396
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177175,613.396,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3403
  maximum absolute entry in einsum_ir solution: 61.3403
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154206
  time (eval):    0.00739013
  gflops (eval):  1470.58
  gflops (total): 476.434
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154206,0.00739013,1470.58,476.434

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0236037
  gflops (total): 460.429
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,460.429

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0183114
  gflops (eval):  593.502
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0183114,593.502,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8575
  maximum absolute entry in einsum_ir solution: 57.8575
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154806
  time (eval):    0.00746336
  gflops (eval):  1456.16
  gflops (total): 473.667
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154806,0.00746336,1456.16,473.667

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0241153
  gflops (total): 450.661
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,450.661

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177703
  gflops (eval):  611.572
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177703,611.572,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.1138
  maximum absolute entry in einsum_ir solution: 62.1138
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153688
  time (eval):    0.0074167
  gflops (eval):  1465.32
  gflops (total): 476.961
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153688,0.0074167,1465.32,476.961

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.024456
  gflops (total): 444.383
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,444.383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174092
  gflops (eval):  624.258
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174092,624.258,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9922
  maximum absolute entry in einsum_ir solution: 57.9922
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151206
  time (eval):    0.00738196
  gflops (eval):  1472.21
  gflops (total): 482.96
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151206,0.00738196,1472.21,482.96

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0234318
  gflops (total): 463.807
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,463.807

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177358
  gflops (eval):  612.761
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177358,612.761,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5525
  maximum absolute entry in einsum_ir solution: 56.5525
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150424
  time (eval):    0.00743006
  gflops (eval):  1462.68
  gflops (total): 483.605
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150424,0.00743006,1462.68,483.605

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0244497
  gflops (total): 444.497
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,444.497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174736
  gflops (eval):  621.955
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174736,621.955,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6377
  maximum absolute entry in einsum_ir solution: 56.6377
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0145814
  time (eval):    0.00740632
  gflops (eval):  1467.37
  gflops (total): 494.267
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0145814,0.00740632,1467.37,494.267

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0238615
  gflops (total): 455.455
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,455.455

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0172701
  gflops (eval):  629.287
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0172701,629.287,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8969
  maximum absolute entry in einsum_ir solution: 57.8969
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153143
  time (eval):    0.00736712
  gflops (eval):  1475.18
  gflops (total): 479.151
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153143,0.00736712,1475.18,479.151

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0242248
  gflops (total): 448.624
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,448.624

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174734
  gflops (eval):  621.965
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174734,621.965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9132
  maximum absolute entry in einsum_ir solution: 60.9132
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149184
  time (eval):    0.00739747
  gflops (eval):  1469.13
  gflops (total): 486.999
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149184,0.00739747,1469.13,486.999

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0237851
  gflops (total): 456.917
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,456.917

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175604
  gflops (eval):  618.883
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175604,618.883,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.342
  maximum absolute entry in einsum_ir solution: 58.342
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0147929
  time (eval):    0.00736783
  gflops (eval):  1475.04
  gflops (total): 490.41
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0147929,0.00736783,1475.04,490.41

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0238125
  gflops (total): 456.392
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,456.392

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173493
  gflops (eval):  626.413
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173493,626.413,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.2798
  maximum absolute entry in einsum_ir solution: 62.2798
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151023
  time (eval):    0.00738403
  gflops (eval):  1471.8
  gflops (total): 483.308
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151023,0.00738403,1471.8,483.308

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0238449
  gflops (total): 455.772
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,455.772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173487
  gflops (eval):  626.436
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173487,626.436,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5178
  maximum absolute entry in einsum_ir solution: 59.5178
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0147206
  time (eval):    0.00739593
  gflops (eval):  1469.43
  gflops (total): 491.388
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0147206,0.00739593,1469.43,491.388

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0245606
  gflops (total): 442.49
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,442.49

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175044
  gflops (eval):  620.863
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175044,620.863,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2774
  maximum absolute entry in einsum_ir solution: 60.2774
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150864
  time (eval):    0.00749331
  gflops (eval):  1450.34
  gflops (total): 481.309
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150864,0.00749331,1450.34,481.309

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0240666
  gflops (total): 451.574
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,451.574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017081
  gflops (eval):  636.253
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017081,636.253,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.266
  maximum absolute entry in einsum_ir solution: 61.266
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150474
  time (eval):    0.00747192
  gflops (eval):  1454.49
  gflops (total): 482.601
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150474,0.00747192,1454.49,482.601

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0230179
  gflops (total): 472.146
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,472.146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017211
  gflops (eval):  631.445
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017211,631.445,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.0296
  maximum absolute entry in einsum_ir solution: 65.0296
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152324
  time (eval):    0.00737954
  gflops (eval):  1472.7
  gflops (total): 480.624
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152324,0.00737954,1472.7,480.624

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0244195
  gflops (total): 445.046
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,445.046

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174
  gflops (eval):  624.588
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174,624.588,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9852
  maximum absolute entry in einsum_ir solution: 61.9852
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151978
  time (eval):    0.00740102
  gflops (eval):  1468.42
  gflops (total): 480.903
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151978,0.00740102,1468.42,480.903

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0239952
  gflops (total): 452.916
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,452.916

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0172841
  gflops (eval):  628.774
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0172841,628.774,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6904
  maximum absolute entry in einsum_ir solution: 59.6904
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148286
  time (eval):    0.00743605
  gflops (eval):  1461.5
  gflops (total): 488.12
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148286,0.00743605,1461.5,488.12

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0244509
  gflops (total): 444.475
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,444.475

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017787
  gflops (eval):  611
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017787,611,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3299
  maximum absolute entry in einsum_ir solution: 60.3299
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151492
  time (eval):    0.00744305
  gflops (eval):  1460.13
  gflops (total): 481.041
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151492,0.00744305,1460.13,481.041

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0230877
  gflops (total): 470.718
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,470.718

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017179
  gflops (eval):  632.621
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017179,632.621,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0791
  maximum absolute entry in einsum_ir solution: 59.0791
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149656
  time (eval):    0.00743565
  gflops (eval):  1461.58
  gflops (total): 485.143
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149656,0.00743565,1461.58,485.143

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0233452
  gflops (total): 465.527
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,465.527

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174307
  gflops (eval):  623.486
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174307,623.486,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6989
  maximum absolute entry in einsum_ir solution: 56.6989
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149755
  time (eval):    0.00735578
  gflops (eval):  1477.45
  gflops (total): 486.665
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149755,0.00735578,1477.45,486.665

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0241439
  gflops (total): 450.127
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,450.127

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177108
  gflops (eval):  613.627
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177108,613.627,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.8671
  maximum absolute entry in einsum_ir solution: 61.8671
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149218
  time (eval):    0.00741618
  gflops (eval):  1465.42
  gflops (total): 486.517
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149218,0.00741618,1465.42,486.517

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0238846
  gflops (total): 455.013
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,455.013

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174783
  gflops (eval):  621.79
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174783,621.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4284
  maximum absolute entry in einsum_ir solution: 58.4284
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148752
  time (eval):    0.00735706
  gflops (eval):  1477.2
  gflops (total): 488.831
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148752,0.00735706,1477.2,488.831

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0233766
  gflops (total): 464.902
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,464.902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173832
  gflops (eval):  625.191
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173832,625.191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7852
  maximum absolute entry in einsum_ir solution: 58.7852
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151775
  time (eval):    0.00743528
  gflops (eval):  1461.66
  gflops (total): 480.606
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151775,0.00743528,1461.66,480.606

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0244597
  gflops (total): 444.316
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,444.316

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0166769
  gflops (eval):  651.668
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0166769,651.668,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8703
  maximum absolute entry in einsum_ir solution: 57.8703
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150415
  time (eval):    0.00738696
  gflops (eval):  1471.22
  gflops (total): 484.555
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150415,0.00738696,1471.22,484.555

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.023519
  gflops (total): 462.088
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,462.088

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0171975
  gflops (eval):  631.941
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0171975,631.941,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9635
  maximum absolute entry in einsum_ir solution: 59.9635
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151684
  time (eval):    0.00738676
  gflops (eval):  1471.26
  gflops (total): 481.834
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151684,0.00738676,1471.26,481.834

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0234376
  gflops (total): 463.691
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,463.691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175995
  gflops (eval):  617.509
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175995,617.509,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0726
  maximum absolute entry in einsum_ir solution: 59.0726
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150106
  time (eval):    0.00741903
  gflops (eval):  1464.86
  gflops (total): 484.529
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150106,0.00741903,1464.86,484.529

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0237308
  gflops (total): 457.963
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,457.963

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0178992
  gflops (eval):  607.168
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0178992,607.168,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2689
  maximum absolute entry in einsum_ir solution: 57.2689
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.014953
  time (eval):    0.00741375
  gflops (eval):  1465.9
  gflops (total): 485.893
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.014953,0.00741375,1465.9,485.893

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0231358
  gflops (total): 469.741
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,469.741

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0180265
  gflops (eval):  602.881
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0180265,602.881,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      68.6209
  maximum absolute entry in einsum_ir solution: 68.6209
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151208
  time (eval):    0.00737064
  gflops (eval):  1474.48
  gflops (total): 483.199
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151208,0.00737064,1474.48,483.199

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0246033
  gflops (total): 441.722
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,441.722

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174232
  gflops (eval):  623.755
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174232,623.755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0587
  maximum absolute entry in einsum_ir solution: 61.0587
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149068
  time (eval):    0.00738374
  gflops (eval):  1471.86
  gflops (total): 487.553
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149068,0.00738374,1471.86,487.553

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0231754
  gflops (total): 468.938
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,468.938

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174603
  gflops (eval):  622.43
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174603,622.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0751
  maximum absolute entry in einsum_ir solution: 59.0751
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149816
  time (eval):    0.00741155
  gflops (eval):  1466.33
  gflops (total): 485.319
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149816,0.00741155,1466.33,485.319

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0246483
  gflops (total): 440.916
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,440.916

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0172828
  gflops (eval):  628.824
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0172828,628.824,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.38
  maximum absolute entry in einsum_ir solution: 66.38
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153114
  time (eval):    0.00744556
  gflops (eval):  1459.64
  gflops (total): 477.561
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153114,0.00744556,1459.64,477.561

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.023111
  gflops (total): 470.245
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,470.245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017233
  gflops (eval):  630.641
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017233,630.641,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4877
  maximum absolute entry in einsum_ir solution: 61.4877
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0141579
  time (eval):    0.00736365
  gflops (eval):  1475.87
  gflops (total): 504.975
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0141579,0.00736365,1475.87,504.975

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0234856
  gflops (total): 462.744
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,462.744

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0172926
  gflops (eval):  628.466
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0172926,628.466,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6612
  maximum absolute entry in einsum_ir solution: 59.6612
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152523
  time (eval):    0.00734764
  gflops (eval):  1479.09
  gflops (total): 480.879
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152523,0.00734764,1479.09,480.879

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.023725
  gflops (total): 458.074
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,458.074

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0168129
  gflops (eval):  646.397
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0168129,646.397,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7319
  maximum absolute entry in einsum_ir solution: 60.7319
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152975
  time (eval):    0.00739565
  gflops (eval):  1469.49
  gflops (total): 478.904
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152975,0.00739565,1469.49,478.904

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0233277
  gflops (total): 465.875
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,465.875

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174653
  gflops (eval):  622.253
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174653,622.253,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1816
  maximum absolute entry in einsum_ir solution: 56.1816
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015207
  time (eval):    0.00735122
  gflops (eval):  1478.37
  gflops (total): 481.767
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015207,0.00735122,1478.37,481.767

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0236626
  gflops (total): 459.282
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,459.282

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0176378
  gflops (eval):  616.166
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0176378,616.166,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.0331
  maximum absolute entry in einsum_ir solution: 66.0331
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153193
  time (eval):    0.00739192
  gflops (eval):  1470.23
  gflops (total): 478.521
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153193,0.00739192,1470.23,478.521

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0241139
  gflops (total): 450.687
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,450.687

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0179929
  gflops (eval):  604.004
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0179929,604.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4002
  maximum absolute entry in einsum_ir solution: 58.4002
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151498
  time (eval):    0.00736649
  gflops (eval):  1475.31
  gflops (total): 482.665
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151498,0.00736649,1475.31,482.665

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0233364
  gflops (total): 465.703
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,465.703

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0178312
  gflops (eval):  609.482
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0178312,609.482,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.664
  maximum absolute entry in einsum_ir solution: 59.664
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151929
  time (eval):    0.00745374
  gflops (eval):  1458.04
  gflops (total): 479.887
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151929,0.00745374,1458.04,479.887

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0243233
  gflops (total): 446.807
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,446.807

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0166529
  gflops (eval):  652.609
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0166529,652.609,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4979
  maximum absolute entry in einsum_ir solution: 60.4979
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149683
  time (eval):    0.00741642
  gflops (eval):  1465.37
  gflops (total): 485.501
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149683,0.00741642,1465.37,485.501

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0240851
  gflops (total): 451.226
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,451.226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0170356
  gflops (eval):  637.948
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0170356,637.948,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2492
  maximum absolute entry in einsum_ir solution: 57.2492
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0146411
  time (eval):    0.0073822
  gflops (eval):  1472.17
  gflops (total): 493.469
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0146411,0.0073822,1472.17,493.469

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0243031
  gflops (total): 447.178
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,447.178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177937
  gflops (eval):  610.767
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177937,610.767,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.4469
  maximum absolute entry in einsum_ir solution: 65.4469
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154061
  time (eval):    0.00742688
  gflops (eval):  1463.31
  gflops (total): 475.971
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154061,0.00742688,1463.31,475.971

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0244454
  gflops (total): 444.575
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,444.575

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175041
  gflops (eval):  620.871
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175041,620.871,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2767
  maximum absolute entry in einsum_ir solution: 58.2767
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151779
  time (eval):    0.00736609
  gflops (eval):  1475.38
  gflops (total): 482.071
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151779,0.00736609,1475.38,482.071

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0246799
  gflops (total): 440.351
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,440.351

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175482
  gflops (eval):  619.314
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175482,619.314,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6642
  maximum absolute entry in einsum_ir solution: 61.6642
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150175
  time (eval):    0.00736173
  gflops (eval):  1476.26
  gflops (total): 485.621
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150175,0.00736173,1476.26,485.621

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0243899
  gflops (total): 445.586
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,445.586

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0171779
  gflops (eval):  632.663
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0171779,632.663,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4715
  maximum absolute entry in einsum_ir solution: 61.4715
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152455
  time (eval):    0.00741431
  gflops (eval):  1465.79
  gflops (total): 479.608
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152455,0.00741431,1465.79,479.608

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0244412
  gflops (total): 444.652
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,444.652

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0176868
  gflops (eval):  614.46
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0176868,614.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2503
  maximum absolute entry in einsum_ir solution: 58.2503
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157158
  time (eval):    0.00761286
  gflops (eval):  1427.56
  gflops (total): 465.856
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157158,0.00761286,1427.56,465.856

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0244424
  gflops (total): 444.629
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,444.629

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017847
  gflops (eval):  608.943
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017847,608.943,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.549
  maximum absolute entry in einsum_ir solution: 59.549
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151098
  time (eval):    0.00734755
  gflops (eval):  1479.11
  gflops (total): 483.932
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151098,0.00734755,1479.11,483.932

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0239578
  gflops (total): 453.623
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,453.623

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177334
  gflops (eval):  612.843
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177334,612.843,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7625
  maximum absolute entry in einsum_ir solution: 59.7625
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156509
  time (eval):    0.00743457
  gflops (eval):  1461.79
  gflops (total): 470.764
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156509,0.00743457,1461.79,470.764

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.024093
  gflops (total): 451.078
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,451.078

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017754
  gflops (eval):  612.135
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017754,612.135,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0835
  maximum absolute entry in einsum_ir solution: 58.0835
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149771
  time (eval):    0.00739268
  gflops (eval):  1470.08
  gflops (total): 485.826
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149771,0.00739268,1470.08,485.826

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0243627
  gflops (total): 446.085
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,446.085

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0179712
  gflops (eval):  604.734
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0179712,604.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4274
  maximum absolute entry in einsum_ir solution: 59.4274
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154278
  time (eval):    0.0073674
  gflops (eval):  1475.12
  gflops (total): 476.76
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154278,0.0073674,1475.12,476.76

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0231659
  gflops (total): 469.131
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,469.131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0164566
  gflops (eval):  660.395
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0164566,660.395,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2278
  maximum absolute entry in einsum_ir solution: 60.2278
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150372
  time (eval):    0.00740721
  gflops (eval):  1467.2
  gflops (total): 484.212
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150372,0.00740721,1467.2,484.212

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0230528
  gflops (total): 471.433
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,471.433

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0180787
  gflops (eval):  601.14
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0180787,601.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4781
  maximum absolute entry in einsum_ir solution: 61.4781
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149028
  time (eval):    0.0074734
  gflops (eval):  1454.2
  gflops (total): 485.688
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149028,0.0074734,1454.2,485.688

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.022901
  gflops (total): 474.557
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,474.557

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175717
  gflops (eval):  618.485
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175717,618.485,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8929
  maximum absolute entry in einsum_ir solution: 59.8929
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150932
  time (eval):    0.00741226
  gflops (eval):  1466.2
  gflops (total): 482.898
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150932,0.00741226,1466.2,482.898

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0245242
  gflops (total): 443.147
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,443.147

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173281
  gflops (eval):  627.18
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173281,627.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.6777
  maximum absolute entry in einsum_ir solution: 63.6777
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152922
  time (eval):    0.00741988
  gflops (eval):  1464.69
  gflops (total): 478.504
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152922,0.00741988,1464.69,478.504

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0231506
  gflops (total): 469.439
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,469.439

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173676
  gflops (eval):  625.753
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173676,625.753,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.5379
  maximum absolute entry in einsum_ir solution: 62.5379
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149783
  time (eval):    0.00793877
  gflops (eval):  1368.96
  gflops (total): 474.223
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149783,0.00793877,1368.96,474.223

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0231485
  gflops (total): 469.484
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,469.484

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0170914
  gflops (eval):  635.865
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0170914,635.865,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1108
  maximum absolute entry in einsum_ir solution: 56.1108
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152073
  time (eval):    0.00740871
  gflops (eval):  1466.9
  gflops (total): 480.536
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152073,0.00740871,1466.9,480.536

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.022612
  gflops (total): 480.621
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,480.621

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0176311
  gflops (eval):  616.401
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0176311,616.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1702
  maximum absolute entry in einsum_ir solution: 59.1702
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149793
  time (eval):    0.00737445
  gflops (eval):  1473.71
  gflops (total): 486.174
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149793,0.00737445,1473.71,486.174

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0249184
  gflops (total): 436.136
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,436.136

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017521
  gflops (eval):  620.274
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017521,620.274,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.1922
  maximum absolute entry in einsum_ir solution: 62.1922
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152376
  time (eval):    0.00748498
  gflops (eval):  1451.95
  gflops (total): 478.283
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152376,0.00748498,1451.95,478.283

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0227955
  gflops (total): 476.752
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,476.752

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173663
  gflops (eval):  625.801
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173663,625.801,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7465
  maximum absolute entry in einsum_ir solution: 57.7465
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153895
  time (eval):    0.00744173
  gflops (eval):  1460.39
  gflops (total): 476.007
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153895,0.00744173,1460.39,476.007

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0230764
  gflops (total): 470.95
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,470.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017195
  gflops (eval):  632.035
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017195,632.035,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0762
  maximum absolute entry in einsum_ir solution: 56.0762
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149225
  time (eval):    0.00740875
  gflops (eval):  1466.89
  gflops (total): 486.664
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149225,0.00740875,1466.89,486.664

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.02393
  gflops (total): 454.15
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,454.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0180779
  gflops (eval):  601.165
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0180779,601.165,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.6681
  maximum absolute entry in einsum_ir solution: 64.6681
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155608
  time (eval):    0.00739469
  gflops (eval):  1469.68
  gflops (total): 473.429
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155608,0.00739469,1469.68,473.429

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0248303
  gflops (total): 437.684
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,437.684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0172708
  gflops (eval):  629.26
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0172708,629.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1881
  maximum absolute entry in einsum_ir solution: 58.1881
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0147028
  time (eval):    0.00745638
  gflops (eval):  1457.52
  gflops (total): 490.444
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0147028,0.00745638,1457.52,490.444

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0182427
  gflops (total): 595.737
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,595.737

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173328
  gflops (eval):  627.009
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173328,627.009,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.8443
  maximum absolute entry in einsum_ir solution: 62.8443
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015013
  time (eval):    0.00734859
  gflops (eval):  1478.9
  gflops (total): 486.004
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015013,0.00734859,1478.9,486.004

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0245683
  gflops (total): 442.351
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,442.351

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0182364
  gflops (eval):  595.94
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0182364,595.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7819
  maximum absolute entry in einsum_ir solution: 60.7819
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149928
  time (eval):    0.00742099
  gflops (eval):  1464.47
  gflops (total): 484.872
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149928,0.00742099,1464.47,484.872

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0246988
  gflops (total): 440.014
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,440.014

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0179962
  gflops (eval):  603.894
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0179962,603.894,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.0558
  maximum absolute entry in einsum_ir solution: 63.0558
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154065
  time (eval):    0.00752839
  gflops (eval):  1443.58
  gflops (total): 473.855
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154065,0.00752839,1443.58,473.855

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0233162
  gflops (total): 466.106
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,466.106

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173897
  gflops (eval):  624.957
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173897,624.957,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8774
  maximum absolute entry in einsum_ir solution: 57.8774
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152047
  time (eval):    0.00742432
  gflops (eval):  1463.81
  gflops (total): 480.259
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152047,0.00742432,1463.81,480.259

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0233885
  gflops (total): 464.665
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,464.665

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175263
  gflops (eval):  620.087
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175263,620.087,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.5951
  maximum absolute entry in einsum_ir solution: 64.5951
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153986
  time (eval):    0.00733814
  gflops (eval):  1481.01
  gflops (total): 477.984
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153986,0.00733814,1481.01,477.984

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0243119
  gflops (total): 447.016
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,447.016

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0178652
  gflops (eval):  608.325
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0178652,608.325,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9058
  maximum absolute entry in einsum_ir solution: 56.9058
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150975
  time (eval):    0.00739112
  gflops (eval):  1470.39
  gflops (total): 483.26
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150975,0.00739112,1470.39,483.26

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0236757
  gflops (total): 459.029
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,459.029

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174243
  gflops (eval):  623.715
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174243,623.715,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.257
  maximum absolute entry in einsum_ir solution: 62.257
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149133
  time (eval):    0.00738669
  gflops (eval):  1471.27
  gflops (total): 487.347
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149133,0.00738669,1471.27,487.347

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0241534
  gflops (total): 449.95
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,449.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0179151
  gflops (eval):  606.628
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0179151,606.628,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1166
  maximum absolute entry in einsum_ir solution: 59.1166
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152023
  time (eval):    0.00742838
  gflops (eval):  1463.01
  gflops (total): 480.225
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152023,0.00742838,1463.01,480.225

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0248726
  gflops (total): 436.94
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,436.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0179746
  gflops (eval):  604.621
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0179746,604.621,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9865
  maximum absolute entry in einsum_ir solution: 58.9865
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149101
  time (eval):    0.00745113
  gflops (eval):  1458.55
  gflops (total): 486.012
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149101,0.00745113,1458.55,486.012

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.024129
  gflops (total): 450.405
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,450.405

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173064
  gflops (eval):  627.966
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173064,627.966,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9227
  maximum absolute entry in einsum_ir solution: 57.9227
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151857
  time (eval):    0.00748101
  gflops (eval):  1452.72
  gflops (total): 479.463
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151857,0.00748101,1452.72,479.463

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0248539
  gflops (total): 437.269
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,437.269

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0176137
  gflops (eval):  617.01
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0176137,617.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.7046
  maximum absolute entry in einsum_ir solution: 65.7046
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153901
  time (eval):    0.00736845
  gflops (eval):  1474.91
  gflops (total): 477.528
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153901,0.00736845,1474.91,477.528

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0241664
  gflops (total): 449.707
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,449.707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017829
  gflops (eval):  609.56
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017829,609.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4667
  maximum absolute entry in einsum_ir solution: 56.4667
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151659
  time (eval):    0.00738786
  gflops (eval):  1471.04
  gflops (total): 481.863
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151659,0.00738786,1471.04,481.863

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0248956
  gflops (total): 436.536
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,436.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.016774
  gflops (eval):  647.897
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.016774,647.897,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.3126
  maximum absolute entry in einsum_ir solution: 62.3126
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151258
  time (eval):    0.00741156
  gflops (eval):  1466.33
  gflops (total): 482.214
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151258,0.00741156,1466.33,482.214

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0248255
  gflops (total): 437.769
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,437.769

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0169697
  gflops (eval):  640.424
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0169697,640.424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0381
  maximum absolute entry in einsum_ir solution: 56.0381
  maximum element-wise difference:              0
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148328
  time (eval):    0.0074534
  gflops (eval):  1458.1
  gflops (total): 487.648
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148328,0.0074534,1458.1,487.648

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0242125
  gflops (total): 448.851
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,448.851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0164213
  gflops (eval):  661.813
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0164213,661.813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7958
  maximum absolute entry in einsum_ir solution: 56.7958
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152528
  time (eval):    0.00764937
  gflops (eval):  1420.75
  gflops (total): 474.532
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152528,0.00764937,1420.75,474.532

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529729
  gflops (total): 205.158
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229839
  gflops (eval):  472.844
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229839,472.844,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1856
  maximum absolute entry in einsum_ir solution: 61.1856
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153369
  time (eval):    0.00777925
  gflops (eval):  1397.03
  gflops (total): 470.139
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153369,0.00777925,1397.03,470.139

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0543496
  gflops (total): 199.961
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,199.961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232231
  gflops (eval):  467.974
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232231,467.974,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1081
  maximum absolute entry in einsum_ir solution: 57.1081
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150972
  time (eval):    0.00775417
  gflops (eval):  1401.54
  gflops (total): 475.586
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150972,0.00775417,1401.54,475.586

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538443
  gflops (total): 201.838
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.838

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233479
  gflops (eval):  465.474
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233479,465.474,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5612
  maximum absolute entry in einsum_ir solution: 59.5612
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151825
  time (eval):    0.00769533
  gflops (eval):  1412.26
  gflops (total): 475.038
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151825,0.00769533,1412.26,475.038

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539835
  gflops (total): 201.317
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.317

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231361
  gflops (eval):  469.734
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231361,469.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3969
  maximum absolute entry in einsum_ir solution: 58.3969
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155729
  time (eval):    0.00777064
  gflops (eval):  1398.57
  gflops (total): 465.559
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155729,0.00777064,1398.57,465.559

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533026
  gflops (total): 203.889
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.889

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232667
  gflops (eval):  467.098
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232667,467.098,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2776
  maximum absolute entry in einsum_ir solution: 58.2776
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153967
  time (eval):    0.00772137
  gflops (eval):  1407.5
  gflops (total): 470.1
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153967,0.00772137,1407.5,470.1

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529242
  gflops (total): 205.347
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230426
  gflops (eval):  471.641
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230426,471.641,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3391
  maximum absolute entry in einsum_ir solution: 59.3391
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149912
  time (eval):    0.00775099
  gflops (eval):  1402.12
  gflops (total): 477.871
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149912,0.00775099,1402.12,477.871

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0524024
  gflops (total): 207.392
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,207.392

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232063
  gflops (eval):  468.313
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232063,468.313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.75
  maximum absolute entry in einsum_ir solution: 58.75
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148851
  time (eval):    0.00771403
  gflops (eval):  1408.84
  gflops (total): 480.896
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148851,0.00771403,1408.84,480.896

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529806
  gflops (total): 205.128
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.128

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233299
  gflops (eval):  465.833
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233299,465.833,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.8447
  maximum absolute entry in einsum_ir solution: 61.8447
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154331
  time (eval):    0.00773918
  gflops (eval):  1404.26
  gflops (total): 469.002
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154331,0.00773918,1404.26,469.002

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0544121
  gflops (total): 199.732
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,199.732

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231292
  gflops (eval):  469.875
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231292,469.875,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      67.0112
  maximum absolute entry in einsum_ir solution: 67.0112
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0147033
  time (eval):    0.00768704
  gflops (eval):  1413.78
  gflops (total): 485.379
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0147033,0.00768704,1413.78,485.379

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.052817
  gflops (total): 205.764
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0234007
  gflops (eval):  464.423
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0234007,464.423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7717
  maximum absolute entry in einsum_ir solution: 58.7717
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.013791
  time (eval):    0.00765707
  gflops (eval):  1419.32
  gflops (total): 506.704
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.013791,0.00765707,1419.32,506.704

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525025
  gflops (total): 206.996
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.996

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230449
  gflops (eval):  471.594
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230449,471.594,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3167
  maximum absolute entry in einsum_ir solution: 57.3167
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153097
  time (eval):    0.00774559
  gflops (eval):  1403.1
  gflops (total): 471.381
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153097,0.00774559,1403.1,471.381

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528107
  gflops (total): 205.788
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.788

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023197
  gflops (eval):  468.501
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023197,468.501,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.2167
  maximum absolute entry in einsum_ir solution: 62.2167
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155868
  time (eval):    0.00773139
  gflops (eval):  1405.68
  gflops (total): 466.066
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155868,0.00773139,1405.68,466.066

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0537571
  gflops (total): 202.165
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.022929
  gflops (eval):  473.978
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.022929,473.978,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3738
  maximum absolute entry in einsum_ir solution: 55.3738
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157306
  time (eval):    0.00768946
  gflops (eval):  1413.34
  gflops (total): 464.039
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157306,0.00768946,1413.34,464.039

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0526323
  gflops (total): 206.486
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.486

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228457
  gflops (eval):  475.706
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228457,475.706,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6814
  maximum absolute entry in einsum_ir solution: 60.6814
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015347
  time (eval):    0.00772447
  gflops (eval):  1406.93
  gflops (total): 471.05
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015347,0.00772447,1406.93,471.05

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533723
  gflops (total): 203.623
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.623

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228495
  gflops (eval):  475.625
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228495,475.625,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8274
  maximum absolute entry in einsum_ir solution: 58.8274
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157331
  time (eval):    0.00781643
  gflops (eval):  1390.38
  gflops (total): 461.488
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157331,0.00781643,1390.38,461.488

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542205
  gflops (total): 200.437
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232935
  gflops (eval):  466.559
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232935,466.559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1558
  maximum absolute entry in einsum_ir solution: 59.1558
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153468
  time (eval):    0.00766413
  gflops (eval):  1418.01
  gflops (total): 472.29
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153468,0.00766413,1418.01,472.29

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0545819
  gflops (total): 199.11
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,199.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232504
  gflops (eval):  467.424
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232504,467.424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0755
  maximum absolute entry in einsum_ir solution: 57.0755
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0147309
  time (eval):    0.00769769
  gflops (eval):  1411.83
  gflops (total): 484.552
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0147309,0.00769769,1411.83,484.552

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532718
  gflops (total): 204.007
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.007

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232179
  gflops (eval):  468.08
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232179,468.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1785
  maximum absolute entry in einsum_ir solution: 61.1785
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154854
  time (eval):    0.00774995
  gflops (eval):  1402.31
  gflops (total): 467.727
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154854,0.00774995,1402.31,467.727

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.052834
  gflops (total): 205.698
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.698

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228923
  gflops (eval):  474.737
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228923,474.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8671
  maximum absolute entry in einsum_ir solution: 59.8671
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157041
  time (eval):    0.00771604
  gflops (eval):  1408.47
  gflops (total): 464.037
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157041,0.00771604,1408.47,464.037

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534634
  gflops (total): 203.276
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.276

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232002
  gflops (eval):  468.436
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232002,468.436,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7914
  maximum absolute entry in einsum_ir solution: 56.7914
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153252
  time (eval):    0.00771943
  gflops (eval):  1407.85
  gflops (total): 471.598
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153252,0.00771943,1407.85,471.598

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.052942
  gflops (total): 205.278
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.278

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230256
  gflops (eval):  471.988
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230256,471.988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2839
  maximum absolute entry in einsum_ir solution: 58.2839
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151883
  time (eval):    0.00772939
  gflops (eval):  1406.04
  gflops (total): 474.21
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151883,0.00772939,1406.04,474.21

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.054056
  gflops (total): 201.047
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.047

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230754
  gflops (eval):  470.97
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230754,470.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.2776
  maximum absolute entry in einsum_ir solution: 62.2776
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155138
  time (eval):    0.0077612
  gflops (eval):  1400.28
  gflops (total): 466.932
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155138,0.0077612,1400.28,466.932

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540591
  gflops (total): 201.036
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.036

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230161
  gflops (eval):  472.184
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230161,472.184,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4473
  maximum absolute entry in einsum_ir solution: 60.4473
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157394
  time (eval):    0.00772206
  gflops (eval):  1407.37
  gflops (total): 463.219
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157394,0.00772206,1407.37,463.219

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0517121
  gflops (total): 210.16
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,210.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231979
  gflops (eval):  468.483
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231979,468.483,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5869
  maximum absolute entry in einsum_ir solution: 60.5869
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156753
  time (eval):    0.00771955
  gflops (eval):  1407.83
  gflops (total): 464.539
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156753,0.00771955,1407.83,464.539

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0537641
  gflops (total): 202.139
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.139

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231342
  gflops (eval):  469.773
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231342,469.773,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.0957
  maximum absolute entry in einsum_ir solution: 65.0957
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154986
  time (eval):    0.00768124
  gflops (eval):  1414.85
  gflops (total): 468.848
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154986,0.00768124,1414.85,468.848

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538871
  gflops (total): 201.677
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.677

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231305
  gflops (eval):  469.847
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231305,469.847,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6744
  maximum absolute entry in einsum_ir solution: 59.6744
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015467
  time (eval):    0.00777606
  gflops (eval):  1397.6
  gflops (total): 467.573
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015467,0.00777606,1397.6,467.573

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053632
  gflops (total): 202.637
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.637

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231101
  gflops (eval):  470.262
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231101,470.262,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7125
  maximum absolute entry in einsum_ir solution: 55.7125
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154878
  time (eval):    0.00771313
  gflops (eval):  1409
  gflops (total): 468.422
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154878,0.00771313,1409,468.422

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534639
  gflops (total): 203.274
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.274

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.022994
  gflops (eval):  472.637
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.022994,472.637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1632
  maximum absolute entry in einsum_ir solution: 58.1632
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153321
  time (eval):    0.00769966
  gflops (eval):  1411.47
  gflops (total): 471.863
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153321,0.00769966,1411.47,471.863

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0527017
  gflops (total): 206.214
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.214

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232369
  gflops (eval):  467.697
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232369,467.697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0444
  maximum absolute entry in einsum_ir solution: 60.0444
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015502
  time (eval):    0.00768155
  gflops (eval):  1414.8
  gflops (total): 468.773
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015502,0.00768155,1414.8,468.773

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534003
  gflops (total): 203.516
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.516

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228072
  gflops (eval):  476.508
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228072,476.508,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1311
  maximum absolute entry in einsum_ir solution: 57.1311
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154814
  time (eval):    0.00770415
  gflops (eval):  1410.64
  gflops (total): 468.733
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154814,0.00770415,1410.64,468.733

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053016
  gflops (total): 204.991
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231333
  gflops (eval):  469.792
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231333,469.792,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.844
  maximum absolute entry in einsum_ir solution: 59.844
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015511
  time (eval):    0.00771603
  gflops (eval):  1408.47
  gflops (total): 467.895
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015511,0.00771603,1408.47,467.895

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529048
  gflops (total): 205.422
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.422

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231173
  gflops (eval):  470.115
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231173,470.115,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.737
  maximum absolute entry in einsum_ir solution: 60.737
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015561
  time (eval):    0.00765814
  gflops (eval):  1419.12
  gflops (total): 468.055
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015561,0.00765814,1419.12,468.055

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540157
  gflops (total): 201.198
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.198

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230642
  gflops (eval):  471.199
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230642,471.199,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8526
  maximum absolute entry in einsum_ir solution: 58.8526
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0158997
  time (eval):    0.00766982
  gflops (eval):  1416.96
  gflops (total): 461.096
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0158997,0.00766982,1416.96,461.096

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535693
  gflops (total): 202.874
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.874

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229291
  gflops (eval):  473.975
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229291,473.975,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.1844
  maximum absolute entry in einsum_ir solution: 62.1844
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153181
  time (eval):    0.00769491
  gflops (eval):  1412.34
  gflops (total): 472.247
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153181,0.00769491,1412.34,472.247

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0517925
  gflops (total): 209.834
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,209.834

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231401
  gflops (eval):  469.652
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231401,469.652,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9333
  maximum absolute entry in einsum_ir solution: 56.9333
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0159018
  time (eval):    0.00769632
  gflops (eval):  1412.08
  gflops (total): 460.537
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0159018,0.00769632,1412.08,460.537

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0537126
  gflops (total): 202.333
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233809
  gflops (eval):  464.815
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233809,464.815,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1201
  maximum absolute entry in einsum_ir solution: 57.1201
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148842
  time (eval):    0.00775062
  gflops (eval):  1402.19
  gflops (total): 480.137
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148842,0.00775062,1402.19,480.137

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532951
  gflops (total): 203.918
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.918

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231102
  gflops (eval):  470.26
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231102,470.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5925
  maximum absolute entry in einsum_ir solution: 59.5925
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152276
  time (eval):    0.00769344
  gflops (eval):  1412.61
  gflops (total): 474.142
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152276,0.00769344,1412.61,474.142

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528924
  gflops (total): 205.471
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.471

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023404
  gflops (eval):  464.357
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023404,464.357,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.5762
  maximum absolute entry in einsum_ir solution: 63.5762
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157323
  time (eval):    0.00770297
  gflops (eval):  1410.86
  gflops (total): 463.737
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157323,0.00770297,1410.86,463.737

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053356
  gflops (total): 203.685
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.685

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230274
  gflops (eval):  471.952
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230274,471.952,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9688
  maximum absolute entry in einsum_ir solution: 61.9688
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154935
  time (eval):    0.00770668
  gflops (eval):  1410.18
  gflops (total): 468.436
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154935,0.00770668,1410.18,468.436

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530502
  gflops (total): 204.859
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.859

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230098
  gflops (eval):  472.313
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230098,472.313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6768
  maximum absolute entry in einsum_ir solution: 58.6768
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156139
  time (eval):    0.00769288
  gflops (eval):  1412.71
  gflops (total): 466.295
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156139,0.00769288,1412.71,466.295

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0546262
  gflops (total): 198.949
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,198.949

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231786
  gflops (eval):  468.873
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231786,468.873,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9466
  maximum absolute entry in einsum_ir solution: 61.9466
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156528
  time (eval):    0.00779168
  gflops (eval):  1394.8
  gflops (total): 463.557
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156528,0.00779168,1394.8,463.557

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0510701
  gflops (total): 212.802
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,212.802

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228852
  gflops (eval):  474.884
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228852,474.884,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0698
  maximum absolute entry in einsum_ir solution: 58.0698
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150434
  time (eval):    0.00774526
  gflops (eval):  1403.16
  gflops (total): 476.895
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150434,0.00774526,1403.16,476.895

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525625
  gflops (total): 206.76
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231779
  gflops (eval):  468.888
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231779,468.888,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4213
  maximum absolute entry in einsum_ir solution: 59.4213
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152339
  time (eval):    0.00772885
  gflops (eval):  1406.14
  gflops (total): 473.281
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152339,0.00772885,1406.14,473.281

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533865
  gflops (total): 203.569
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.569

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232309
  gflops (eval):  467.818
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232309,467.818,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0555
  maximum absolute entry in einsum_ir solution: 56.0555
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157153
  time (eval):    0.00772013
  gflops (eval):  1407.73
  gflops (total): 463.734
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157153,0.00772013,1407.73,463.734

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539745
  gflops (total): 201.351
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.351

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232069
  gflops (eval):  468.3
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232069,468.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7166
  maximum absolute entry in einsum_ir solution: 59.7166
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152414
  time (eval):    0.00770946
  gflops (eval):  1409.67
  gflops (total): 473.526
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152414,0.00770946,1409.67,473.526

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534163
  gflops (total): 203.455
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.455

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228647
  gflops (eval):  475.31
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228647,475.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5644
  maximum absolute entry in einsum_ir solution: 60.5644
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150737
  time (eval):    0.00768354
  gflops (eval):  1414.43
  gflops (total): 477.555
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150737,0.00768354,1414.43,477.555

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532878
  gflops (total): 203.946
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232508
  gflops (eval):  467.417
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232508,467.417,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7368
  maximum absolute entry in einsum_ir solution: 56.7368
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151766
  time (eval):    0.00768336
  gflops (eval):  1414.46
  gflops (total): 475.408
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151766,0.00768336,1414.46,475.408

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.054617
  gflops (total): 198.982
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,198.982

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231544
  gflops (eval):  469.363
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231544,469.363,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.633
  maximum absolute entry in einsum_ir solution: 60.633
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156435
  time (eval):    0.00774504
  gflops (eval):  1403.2
  gflops (total): 464.664
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156435,0.00774504,1403.2,464.664

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.05356
  gflops (total): 202.909
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232328
  gflops (eval):  467.779
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232328,467.779,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.142
  maximum absolute entry in einsum_ir solution: 61.142
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015825
  time (eval):    0.00775565
  gflops (eval):  1401.28
  gflops (total): 460.879
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015825,0.00775565,1401.28,460.879

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0527708
  gflops (total): 205.944
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230327
  gflops (eval):  471.843
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230327,471.843,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.054
  maximum absolute entry in einsum_ir solution: 59.054
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149403
  time (eval):    0.00769254
  gflops (eval):  1412.77
  gflops (total): 480.18
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149403,0.00769254,1412.77,480.18

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534335
  gflops (total): 203.39
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232481
  gflops (eval):  467.471
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232481,467.471,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.3685
  maximum absolute entry in einsum_ir solution: 63.3685
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154663
  time (eval):    0.0076925
  gflops (eval):  1412.78
  gflops (total): 469.275
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154663,0.0076925,1412.78,469.275

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531801
  gflops (total): 204.359
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230893
  gflops (eval):  470.686
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230893,470.686,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.9123
  maximum absolute entry in einsum_ir solution: 62.9123
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0144271
  time (eval):    0.00768675
  gflops (eval):  1413.84
  gflops (total): 491.448
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0144271,0.00768675,1413.84,491.448

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538325
  gflops (total): 201.882
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232529
  gflops (eval):  467.374
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232529,467.374,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0367
  maximum absolute entry in einsum_ir solution: 61.0367
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015435
  time (eval):    0.00772362
  gflops (eval):  1407.09
  gflops (total): 469.277
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015435,0.00772362,1407.09,469.277

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0520888
  gflops (total): 208.64
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,208.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231584
  gflops (eval):  469.282
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231584,469.282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.5768
  maximum absolute entry in einsum_ir solution: 61.5768
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156112
  time (eval):    0.00768784
  gflops (eval):  1413.64
  gflops (total): 466.45
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156112,0.00768784,1413.64,466.45

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532955
  gflops (total): 203.916
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.916

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232613
  gflops (eval):  467.205
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232613,467.205,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6972
  maximum absolute entry in einsum_ir solution: 58.6972
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149156
  time (eval):    0.00773082
  gflops (eval):  1405.78
  gflops (total): 479.89
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149156,0.00773082,1405.78,479.89

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0526573
  gflops (total): 206.388
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.388

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230948
  gflops (eval):  470.575
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230948,470.575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.145
  maximum absolute entry in einsum_ir solution: 60.145
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149458
  time (eval):    0.00770696
  gflops (eval):  1410.13
  gflops (total): 479.757
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149458,0.00770696,1410.13,479.757

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0527753
  gflops (total): 205.926
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.926

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230654
  gflops (eval):  471.175
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230654,471.175,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.2945
  maximum absolute entry in einsum_ir solution: 63.2945
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0125825
  time (eval):    0.00768091
  gflops (eval):  1414.91
  gflops (total): 536.327
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0125825,0.00768091,1414.91,536.327

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0537747
  gflops (total): 202.099
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231445
  gflops (eval):  469.563
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231445,469.563,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.8412
  maximum absolute entry in einsum_ir solution: 61.8412
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015333
  time (eval):    0.00772712
  gflops (eval):  1406.45
  gflops (total): 471.282
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015333,0.00772712,1406.45,471.282

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538457
  gflops (total): 201.833
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.833

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230178
  gflops (eval):  472.149
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230178,472.149,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1673
  maximum absolute entry in einsum_ir solution: 59.1673
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155063
  time (eval):    0.00771552
  gflops (eval):  1408.57
  gflops (total): 468
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155063,0.00771552,1408.57,468

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532328
  gflops (total): 204.157
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.157

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230415
  gflops (eval):  471.663
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230415,471.663,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6114
  maximum absolute entry in einsum_ir solution: 61.6114
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153662
  time (eval):    0.00768317
  gflops (eval):  1414.5
  gflops (total): 471.502
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153662,0.00768317,1414.5,471.502

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542178
  gflops (total): 200.448
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.448

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0234198
  gflops (eval):  464.044
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0234198,464.044,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      67.0731
  maximum absolute entry in einsum_ir solution: 67.0731
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148262
  time (eval):    0.00788875
  gflops (eval):  1377.64
  gflops (total): 478.444
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148262,0.00788875,1377.64,478.444

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053781
  gflops (total): 202.075
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.075

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228414
  gflops (eval):  475.795
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228414,475.795,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9688
  maximum absolute entry in einsum_ir solution: 56.9688
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0147899
  time (eval):    0.0077128
  gflops (eval):  1409.06
  gflops (total): 482.957
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0147899,0.0077128,1409.06,482.957

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.052718
  gflops (total): 206.15
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230476
  gflops (eval):  471.538
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230476,471.538,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0351
  maximum absolute entry in einsum_ir solution: 61.0351
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153311
  time (eval):    0.00769191
  gflops (eval):  1412.89
  gflops (total): 472.042
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153311,0.00769191,1412.89,472.042

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532821
  gflops (total): 203.968
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230276
  gflops (eval):  471.947
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230276,471.947,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6252
  maximum absolute entry in einsum_ir solution: 56.6252
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154723
  time (eval):    0.00768743
  gflops (eval):  1413.71
  gflops (total): 469.256
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154723,0.00768743,1413.71,469.256

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0520112
  gflops (total): 208.952
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,208.952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231911
  gflops (eval):  468.621
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231911,468.621,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.444
  maximum absolute entry in einsum_ir solution: 63.444
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153746
  time (eval):    0.00772982
  gflops (eval):  1405.96
  gflops (total): 470.378
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153746,0.00772982,1405.96,470.378

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534326
  gflops (total): 203.393
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.393

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231419
  gflops (eval):  469.617
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231419,469.617,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2055
  maximum absolute entry in einsum_ir solution: 57.2055
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015107
  time (eval):    0.00772939
  gflops (eval):  1406.04
  gflops (total): 475.899
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015107,0.00772939,1406.04,475.899

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531246
  gflops (total): 204.572
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.572

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.022908
  gflops (eval):  474.411
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.022908,474.411,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9457
  maximum absolute entry in einsum_ir solution: 57.9457
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153469
  time (eval):    0.00775381
  gflops (eval):  1401.61
  gflops (total): 470.454
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153469,0.00775381,1401.61,470.454

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539272
  gflops (total): 201.528
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232695
  gflops (eval):  467.041
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232695,467.041,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7625
  maximum absolute entry in einsum_ir solution: 59.7625
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155037
  time (eval):    0.00773454
  gflops (eval):  1405.1
  gflops (total): 467.671
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155037,0.00773454,1405.1,467.671

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534575
  gflops (total): 203.298
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.298

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231716
  gflops (eval):  469.015
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231716,469.015,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4403
  maximum absolute entry in einsum_ir solution: 58.4403
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153397
  time (eval):    0.00766512
  gflops (eval):  1417.83
  gflops (total): 472.415
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153397,0.00766512,1417.83,472.415

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0523221
  gflops (total): 207.71
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,207.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230143
  gflops (eval):  472.221
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230143,472.221,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.0753
  maximum absolute entry in einsum_ir solution: 66.0753
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156028
  time (eval):    0.00771053
  gflops (eval):  1409.48
  gflops (total): 466.163
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156028,0.00771053,1409.48,466.163

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534549
  gflops (total): 203.308
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.308

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233707
  gflops (eval):  465.019
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233707,465.019,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9182
  maximum absolute entry in einsum_ir solution: 58.9182
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0159859
  time (eval):    0.00764686
  gflops (eval):  1421.21
  gflops (total): 459.862
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0159859,0.00764686,1421.21,459.862

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0522132
  gflops (total): 208.143
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,208.143

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230292
  gflops (eval):  471.914
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230292,471.914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.0208
  maximum absolute entry in einsum_ir solution: 64.0208
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149896
  time (eval):    0.00768091
  gflops (eval):  1414.91
  gflops (total): 479.382
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149896,0.00768091,1414.91,479.382

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538319
  gflops (total): 201.884
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232475
  gflops (eval):  467.483
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232475,467.483,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0378
  maximum absolute entry in einsum_ir solution: 61.0378
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015821
  time (eval):    0.00770353
  gflops (eval):  1410.76
  gflops (total): 461.979
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015821,0.00770353,1410.76,461.979

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542091
  gflops (total): 200.48
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0227776
  gflops (eval):  477.128
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0227776,477.128,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3641
  maximum absolute entry in einsum_ir solution: 59.3641
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154815
  time (eval):    0.00768464
  gflops (eval):  1414.23
  gflops (total): 469.126
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154815,0.00768464,1414.23,469.126

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538215
  gflops (total): 201.923
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.923

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233912
  gflops (eval):  464.612
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233912,464.612,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.8675
  maximum absolute entry in einsum_ir solution: 63.8675
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153932
  time (eval):    0.00772065
  gflops (eval):  1407.63
  gflops (total): 470.187
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153932,0.00772065,1407.63,470.187

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529893
  gflops (total): 205.095
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.095

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231927
  gflops (eval):  468.589
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231927,468.589,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.0704
  maximum absolute entry in einsum_ir solution: 62.0704
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157449
  time (eval):    0.00770552
  gflops (eval):  1410.39
  gflops (total): 463.438
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157449,0.00770552,1410.39,463.438

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0537151
  gflops (total): 202.323
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.323

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229384
  gflops (eval):  473.783
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229384,473.783,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.3775
  maximum absolute entry in einsum_ir solution: 62.3775
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015891
  time (eval):    0.00776678
  gflops (eval):  1399.27
  gflops (total): 459.376
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015891,0.00776678,1399.27,459.376

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0543258
  gflops (total): 200.049
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023255
  gflops (eval):  467.332
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023255,467.332,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4248
  maximum absolute entry in einsum_ir solution: 60.4248
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156288
  time (eval):    0.00765178
  gflops (eval):  1420.3
  gflops (total): 466.82
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156288,0.00765178,1420.3,466.82

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0519351
  gflops (total): 209.258
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,209.258

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231552
  gflops (eval):  469.346
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231552,469.346,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.3463
  maximum absolute entry in einsum_ir solution: 62.3463
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157825
  time (eval):    0.00784294
  gflops (eval):  1385.68
  gflops (total): 460.004
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157825,0.00784294,1385.68,460.004

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542703
  gflops (total): 200.254
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.254

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229381
  gflops (eval):  473.79
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229381,473.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8885
  maximum absolute entry in einsum_ir solution: 57.8885
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0160878
  time (eval):    0.00771705
  gflops (eval):  1408.29
  gflops (total): 456.539
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0160878,0.00771705,1408.29,456.539

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053489
  gflops (total): 203.179
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230097
  gflops (eval):  472.314
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230097,472.314,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0158
  maximum absolute entry in einsum_ir solution: 57.0158
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155427
  time (eval):    0.00770132
  gflops (eval):  1411.16
  gflops (total): 467.553
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155427,0.00770132,1411.16,467.553

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0526639
  gflops (total): 206.362
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.362

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228737
  gflops (eval):  475.122
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228737,475.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.7137
  maximum absolute entry in einsum_ir solution: 61.7137
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151815
  time (eval):    0.00767942
  gflops (eval):  1415.19
  gflops (total): 475.389
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151815,0.00767942,1415.19,475.389

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539937
  gflops (total): 201.279
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.279

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023249
  gflops (eval):  467.453
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023249,467.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9112
  maximum absolute entry in einsum_ir solution: 56.9112
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157808
  time (eval):    0.00779713
  gflops (eval):  1393.82
  gflops (total): 460.932
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157808,0.00779713,1393.82,460.932

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534484
  gflops (total): 203.333
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232354
  gflops (eval):  467.726
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232354,467.726,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9508
  maximum absolute entry in einsum_ir solution: 61.9508
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156403
  time (eval):    0.00771427
  gflops (eval):  1408.79
  gflops (total): 465.34
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156403,0.00771427,1408.79,465.34

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542884
  gflops (total): 200.187
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.187

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228374
  gflops (eval):  475.877
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228374,475.877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7192
  maximum absolute entry in einsum_ir solution: 59.7192
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0159024
  time (eval):    0.00776041
  gflops (eval):  1400.42
  gflops (total): 459.278
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0159024,0.00776041,1400.42,459.278

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525817
  gflops (total): 206.684
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0234814
  gflops (eval):  462.827
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0234814,462.827,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1184
  maximum absolute entry in einsum_ir solution: 58.1184
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154137
  time (eval):    0.00770063
  gflops (eval):  1411.29
  gflops (total): 470.176
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154137,0.00770063,1411.29,470.176

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0544067
  gflops (total): 199.751
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,199.751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023083
  gflops (eval):  470.814
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023083,470.814,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5656
  maximum absolute entry in einsum_ir solution: 59.5656
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152857
  time (eval):    0.00771817
  gflops (eval):  1408.08
  gflops (total): 472.435
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152857,0.00771817,1408.08,472.435

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0546399
  gflops (total): 198.899
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,198.899

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230549
  gflops (eval):  471.39
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230549,471.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1325
  maximum absolute entry in einsum_ir solution: 61.1325
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150504
  time (eval):    0.00774809
  gflops (eval):  1402.64
  gflops (total): 476.691
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150504,0.00774809,1402.64,476.691

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533767
  gflops (total): 203.606
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023347
  gflops (eval):  465.491
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023347,465.491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4896
  maximum absolute entry in einsum_ir solution: 60.4896
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154019
  time (eval):    0.0076892
  gflops (eval):  1413.39
  gflops (total): 470.649
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154019,0.0076892,1413.39,470.649

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533994
  gflops (total): 203.52
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229226
  gflops (eval):  474.11
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229226,474.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.061
  maximum absolute entry in einsum_ir solution: 59.061
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152975
  time (eval):    0.00768508
  gflops (eval):  1414.15
  gflops (total): 472.871
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152975,0.00768508,1414.15,472.871

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0541264
  gflops (total): 200.786
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229545
  gflops (eval):  473.45
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229545,473.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7902
  maximum absolute entry in einsum_ir solution: 57.7902
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.014912
  time (eval):    0.0077216
  gflops (eval):  1407.46
  gflops (total): 480.163
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.014912,0.0077216,1407.46,480.163

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540738
  gflops (total): 200.981
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230287
  gflops (eval):  471.925
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230287,471.925,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1637
  maximum absolute entry in einsum_ir solution: 59.1637
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148149
  time (eval):    0.00772267
  gflops (eval):  1407.26
  gflops (total): 482.208
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148149,0.00772267,1407.26,482.208

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525634
  gflops (total): 206.756
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.756

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023034
  gflops (eval):  471.817
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023034,471.817,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9718
  maximum absolute entry in einsum_ir solution: 56.9718
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156475
  time (eval):    0.00773713
  gflops (eval):  1404.63
  gflops (total): 464.742
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156475,0.00773713,1404.63,464.742

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532839
  gflops (total): 203.961
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230222
  gflops (eval):  472.059
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230222,472.059,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6803
  maximum absolute entry in einsum_ir solution: 60.6803
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155139
  time (eval):    0.00762876
  gflops (eval):  1424.59
  gflops (total): 469.601
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155139,0.00762876,1424.59,469.601

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542438
  gflops (total): 200.351
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.351

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230608
  gflops (eval):  471.269
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230608,471.269,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4644
  maximum absolute entry in einsum_ir solution: 55.4644
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154248
  time (eval):    0.00774151
  gflops (eval):  1403.84
  gflops (total): 469.122
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154248,0.00774151,1403.84,469.122

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540803
  gflops (total): 200.957
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.957

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230159
  gflops (eval):  472.187
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230159,472.187,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2004
  maximum absolute entry in einsum_ir solution: 58.2004
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153423
  time (eval):    0.00769366
  gflops (eval):  1412.57
  gflops (total): 471.776
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153423,0.00769366,1412.57,471.776

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530307
  gflops (total): 204.935
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.935

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.022883
  gflops (eval):  474.931
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.022883,474.931,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2978
  maximum absolute entry in einsum_ir solution: 60.2978
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155655
  time (eval):    0.00773637
  gflops (eval):  1404.77
  gflops (total): 466.393
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155655,0.00773637,1404.77,466.393

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0541438
  gflops (total): 200.721
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.721

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230943
  gflops (eval):  470.585
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230943,470.585,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2496
  maximum absolute entry in einsum_ir solution: 59.2496
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154904
  time (eval):    0.00765998
  gflops (eval):  1418.78
  gflops (total): 469.445
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154904,0.00765998,1418.78,469.445

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.05354
  gflops (total): 202.985
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.985

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231935
  gflops (eval):  468.573
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231935,468.573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8045
  maximum absolute entry in einsum_ir solution: 58.8045
  maximum element-wise difference:              0
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151605
  time (eval):    0.00768844
  gflops (eval):  1413.53
  gflops (total): 475.639
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151605,0.00768844,1413.53,475.639

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0524144
  gflops (total): 207.344
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,207.344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230446
  gflops (eval):  471.599
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230446,471.599,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7781
  maximum absolute entry in einsum_ir solution: 60.7781
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154791
  time (eval):    0.0042561
  gflops (eval):  2553.47
  gflops (total): 550.681
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154791,0.0042561,2553.47,550.681

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535517
  gflops (total): 202.941
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.941

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023026
  gflops (eval):  471.98
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023026,471.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.287
  maximum absolute entry in einsum_ir solution: 61.287
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015735
  time (eval):    0.00431703
  gflops (eval):  2517.43
  gflops (total): 541.982
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015735,0.00431703,2517.43,541.982

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528098
  gflops (total): 205.792
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.792

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230813
  gflops (eval):  470.85
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230813,470.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6579
  maximum absolute entry in einsum_ir solution: 57.6579
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154537
  time (eval):    0.00429652
  gflops (eval):  2529.44
  gflops (total): 550.263
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154537,0.00429652,2529.44,550.263

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530799
  gflops (total): 204.745
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.02321
  gflops (eval):  468.239
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.02321,468.239,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.206
  maximum absolute entry in einsum_ir solution: 56.206
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157618
  time (eval):    0.00429474
  gflops (eval):  2530.49
  gflops (total): 541.86
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157618,0.00429474,2530.49,541.86

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0523416
  gflops (total): 207.633
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,207.633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232743
  gflops (eval):  466.945
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232743,466.945,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6287
  maximum absolute entry in einsum_ir solution: 60.6287
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153181
  time (eval):    0.00427277
  gflops (eval):  2543.51
  gflops (total): 554.74
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153181,0.00427277,2543.51,554.74

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0527211
  gflops (total): 206.138
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230545
  gflops (eval):  471.398
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230545,471.398,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.4578
  maximum absolute entry in einsum_ir solution: 62.4578
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155703
  time (eval):    0.0042987
  gflops (eval):  2528.16
  gflops (total): 546.974
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155703,0.0042987,2528.16,546.974

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.052581
  gflops (total): 206.687
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.687

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230372
  gflops (eval):  471.75
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230372,471.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3418
  maximum absolute entry in einsum_ir solution: 60.3418
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157637
  time (eval):    0.0042741
  gflops (eval):  2542.71
  gflops (total): 542.365
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157637,0.0042741,2542.71,542.365

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540173
  gflops (total): 201.192
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.192

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233208
  gflops (eval):  466.013
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233208,466.013,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6901
  maximum absolute entry in einsum_ir solution: 58.6901
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151332
  time (eval):    0.00422866
  gflops (eval):  2570.04
  gflops (total): 561.3
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151332,0.00422866,2570.04,561.3

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528363
  gflops (total): 205.689
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.689

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230281
  gflops (eval):  471.938
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230281,471.938,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3457
  maximum absolute entry in einsum_ir solution: 56.3457
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151437
  time (eval):    0.00425173
  gflops (eval):  2556.09
  gflops (total): 560.328
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151437,0.00425173,2556.09,560.328

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534041
  gflops (total): 203.502
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.502

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231888
  gflops (eval):  468.668
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231888,468.668,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0195
  maximum absolute entry in einsum_ir solution: 56.0195
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0158021
  time (eval):    0.00427673
  gflops (eval):  2541.15
  gflops (total): 541.258
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0158021,0.00427673,2541.15,541.258

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531755
  gflops (total): 204.376
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.376

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230371
  gflops (eval):  471.753
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230371,471.753,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7404
  maximum absolute entry in einsum_ir solution: 58.7404
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0139978
  time (eval):    0.00430182
  gflops (eval):  2526.33
  gflops (total): 593.883
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0139978,0.00430182,2526.33,593.883

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0522838
  gflops (total): 207.862
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,207.862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231639
  gflops (eval):  469.17
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231639,469.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5703
  maximum absolute entry in einsum_ir solution: 60.5703
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153619
  time (eval):    0.00428545
  gflops (eval):  2535.98
  gflops (total): 553.145
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153619,0.00428545,2535.98,553.145

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0537154
  gflops (total): 202.322
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.322

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232365
  gflops (eval):  467.705
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232365,467.705,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.6801
  maximum absolute entry in einsum_ir solution: 64.6801
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155284
  time (eval):    0.00425735
  gflops (eval):  2552.72
  gflops (total): 549.277
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155284,0.00425735,2552.72,549.277

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530322
  gflops (total): 204.929
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.929

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229237
  gflops (eval):  474.086
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229237,474.086,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9159
  maximum absolute entry in einsum_ir solution: 58.9159
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015511
  time (eval):    0.0043132
  gflops (eval):  2519.67
  gflops (total): 548.209
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015511,0.0043132,2519.67,548.209

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053039
  gflops (total): 204.902
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229915
  gflops (eval):  472.689
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229915,472.689,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9538
  maximum absolute entry in einsum_ir solution: 59.9538
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157326
  time (eval):    0.00423437
  gflops (eval):  2566.57
  gflops (total): 544.29
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157326,0.00423437,2566.57,544.29

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534285
  gflops (total): 203.409
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.409

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232095
  gflops (eval):  468.248
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232095,468.248,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5467
  maximum absolute entry in einsum_ir solution: 57.5467
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150683
  time (eval):    0.00429355
  gflops (eval):  2531.2
  gflops (total): 561.301
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150683,0.00429355,2531.2,561.301

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0526276
  gflops (total): 206.504
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.504

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232129
  gflops (eval):  468.181
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232129,468.181,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9643
  maximum absolute entry in einsum_ir solution: 58.9643
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154505
  time (eval):    0.00425206
  gflops (eval):  2555.9
  gflops (total): 551.594
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154505,0.00425206,2555.9,551.594

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538612
  gflops (total): 201.775
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.775

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232364
  gflops (eval):  467.706
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232364,467.706,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.433
  maximum absolute entry in einsum_ir solution: 58.433
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154096
  time (eval):    0.00429638
  gflops (eval):  2529.53
  gflops (total): 551.5
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154096,0.00429638,2529.53,551.5

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525101
  gflops (total): 206.966
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229239
  gflops (eval):  474.082
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229239,474.082,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.6945
  maximum absolute entry in einsum_ir solution: 62.6945
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155441
  time (eval):    0.00432305
  gflops (eval):  2513.92
  gflops (total): 547.024
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155441,0.00432305,2513.92,547.024

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533716
  gflops (total): 203.626
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.626

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233208
  gflops (eval):  466.014
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233208,466.014,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8299
  maximum absolute entry in einsum_ir solution: 59.8299
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154008
  time (eval):    0.00427278
  gflops (eval):  2543.5
  gflops (total): 552.407
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154008,0.00427278,2543.5,552.407

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540539
  gflops (total): 201.055
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.055

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230823
  gflops (eval):  470.829
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230823,470.829,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7061
  maximum absolute entry in einsum_ir solution: 60.7061
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154773
  time (eval):    0.00429434
  gflops (eval):  2530.73
  gflops (total): 549.666
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154773,0.00429434,2530.73,549.666

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0524985
  gflops (total): 207.012
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,207.012

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233972
  gflops (eval):  464.492
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233972,464.492,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6543
  maximum absolute entry in einsum_ir solution: 57.6543
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154634
  time (eval):    0.00431117
  gflops (eval):  2520.85
  gflops (total): 549.587
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154634,0.00431117,2520.85,549.587

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532606
  gflops (total): 204.05
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231777
  gflops (eval):  468.891
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231777,468.891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8569
  maximum absolute entry in einsum_ir solution: 59.8569
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152516
  time (eval):    0.00427759
  gflops (eval):  2540.64
  gflops (total): 556.492
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152516,0.00427759,2540.64,556.492

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0544642
  gflops (total): 199.541
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,199.541

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232897
  gflops (eval):  466.637
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232897,466.637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.1705
  maximum absolute entry in einsum_ir solution: 55.1705
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154964
  time (eval):    0.00430946
  gflops (eval):  2521.85
  gflops (total): 548.717
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154964,0.00430946,2521.85,548.717

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0541396
  gflops (total): 200.737
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.737

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232524
  gflops (eval):  467.385
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232524,467.385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2043
  maximum absolute entry in einsum_ir solution: 61.2043
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0158774
  time (eval):    0.00422727
  gflops (eval):  2570.89
  gflops (total): 540.561
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0158774,0.00422727,2570.89,540.561

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535385
  gflops (total): 202.991
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232468
  gflops (eval):  467.497
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232468,467.497,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8724
  maximum absolute entry in einsum_ir solution: 57.8724
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155139
  time (eval):    0.00430915
  gflops (eval):  2522.04
  gflops (total): 548.241
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155139,0.00430915,2522.04,548.241

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542868
  gflops (total): 200.193
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.193

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0235274
  gflops (eval):  461.922
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0235274,461.922,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8473
  maximum absolute entry in einsum_ir solution: 59.8473
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153986
  time (eval):    0.00431853
  gflops (eval):  2516.55
  gflops (total): 551.187
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153986,0.00431853,2516.55,551.187

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535212
  gflops (total): 203.057
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.057

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232213
  gflops (eval):  468.01
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232213,468.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9477
  maximum absolute entry in einsum_ir solution: 55.9477
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150395
  time (eval):    0.00429342
  gflops (eval):  2531.27
  gflops (total): 562.139
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150395,0.00429342,2531.27,562.139

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528645
  gflops (total): 205.579
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.579

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230787
  gflops (eval):  470.902
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230787,470.902,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7765
  maximum absolute entry in einsum_ir solution: 57.7765
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153129
  time (eval):    0.0042525
  gflops (eval):  2555.63
  gflops (total): 555.462
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153129,0.0042525,2555.63,555.462

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525587
  gflops (total): 206.775
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.775

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231296
  gflops (eval):  469.866
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231296,469.866,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2494
  maximum absolute entry in einsum_ir solution: 61.2494
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156478
  time (eval):    0.00432519
  gflops (eval):  2512.68
  gflops (total): 544.125
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156478,0.00432519,2512.68,544.125

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0546686
  gflops (total): 198.795
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,198.795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233007
  gflops (eval):  466.415
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233007,466.415,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9448
  maximum absolute entry in einsum_ir solution: 56.9448
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153777
  time (eval):    0.00426396
  gflops (eval):  2548.76
  gflops (total): 553.304
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153777,0.00426396,2548.76,553.304

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531267
  gflops (total): 204.564
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.564

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233917
  gflops (eval):  464.602
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233917,464.602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6487
  maximum absolute entry in einsum_ir solution: 56.6487
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157832
  time (eval):    0.00432454
  gflops (eval):  2513.06
  gflops (total): 540.479
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157832,0.00432454,2513.06,540.479

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534972
  gflops (total): 203.148
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.148

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232082
  gflops (eval):  468.275
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232082,468.275,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0845
  maximum absolute entry in einsum_ir solution: 58.0845
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149305
  time (eval):    0.00427324
  gflops (eval):  2543.23
  gflops (total): 565.923
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149305,0.00427324,2543.23,565.923

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0537923
  gflops (total): 202.033
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.033

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229797
  gflops (eval):  472.932
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229797,472.932,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.1706
  maximum absolute entry in einsum_ir solution: 65.1706
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148036
  time (eval):    0.0043226
  gflops (eval):  2514.19
  gflops (total): 568.215
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148036,0.0043226,2514.19,568.215

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542199
  gflops (total): 200.44
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233424
  gflops (eval):  465.583
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233424,465.583,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5204
  maximum absolute entry in einsum_ir solution: 59.5204
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152036
  time (eval):    0.00429192
  gflops (eval):  2532.16
  gflops (total): 557.452
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152036,0.00429192,2532.16,557.452

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539223
  gflops (total): 201.546
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231025
  gflops (eval):  470.417
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231025,470.417,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6992
  maximum absolute entry in einsum_ir solution: 57.6992
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.012907
  time (eval):    0.0042975
  gflops (eval):  2528.87
  gflops (total): 631.686
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.012907,0.0042975,2528.87,631.686

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535776
  gflops (total): 202.843
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.843

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232837
  gflops (eval):  466.757
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232837,466.757,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7264
  maximum absolute entry in einsum_ir solution: 57.7264
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149993
  time (eval):    0.00432236
  gflops (eval):  2514.32
  gflops (total): 562.468
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149993,0.00432236,2514.32,562.468

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0536946
  gflops (total): 202.401
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.401

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231373
  gflops (eval):  469.71
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231373,469.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4459
  maximum absolute entry in einsum_ir solution: 60.4459
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149817
  time (eval):    0.00420107
  gflops (eval):  2586.92
  gflops (total): 566.542
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149817,0.00420107,2586.92,566.542

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053885
  gflops (total): 201.685
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.685

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231629
  gflops (eval):  469.191
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231629,469.191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7243
  maximum absolute entry in einsum_ir solution: 56.7243
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149627
  time (eval):    0.00430594
  gflops (eval):  2523.91
  gflops (total): 564.015
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149627,0.00430594,2523.91,564.015

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532816
  gflops (total): 203.97
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230841
  gflops (eval):  470.793
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230841,470.793,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1331
  maximum absolute entry in einsum_ir solution: 60.1331
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155705
  time (eval):    0.00428646
  gflops (eval):  2535.38
  gflops (total): 547.306
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155705,0.00428646,2535.38,547.306

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542781
  gflops (total): 200.225
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233323
  gflops (eval):  465.785
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233323,465.785,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9649
  maximum absolute entry in einsum_ir solution: 57.9649
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148514
  time (eval):    0.00427932
  gflops (eval):  2539.61
  gflops (total): 568.083
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148514,0.00427932,2539.61,568.083

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529785
  gflops (total): 205.137
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.137

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231111
  gflops (eval):  470.243
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231111,470.243,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0625
  maximum absolute entry in einsum_ir solution: 57.0625
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155012
  time (eval):    0.00435293
  gflops (eval):  2496.67
  gflops (total): 547.383
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155012,0.00435293,2496.67,547.383

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053054
  gflops (total): 204.845
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.845

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0234412
  gflops (eval):  463.62
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0234412,463.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7079
  maximum absolute entry in einsum_ir solution: 60.7079
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151029
  time (eval):    0.00423666
  gflops (eval):  2565.19
  gflops (total): 561.947
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151029,0.00423666,2565.19,561.947

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532392
  gflops (total): 204.132
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.132

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231568
  gflops (eval):  469.314
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231568,469.314,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2152
  maximum absolute entry in einsum_ir solution: 57.2152
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150321
  time (eval):    0.00425791
  gflops (eval):  2552.38
  gflops (total): 563.391
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150321,0.00425791,2552.38,563.391

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0541964
  gflops (total): 200.526
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.526

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0235267
  gflops (eval):  461.936
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0235267,461.936,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      71.0725
  maximum absolute entry in einsum_ir solution: 71.0725
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151111
  time (eval):    0.00430027
  gflops (eval):  2527.24
  gflops (total): 559.869
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151111,0.00430027,2527.24,559.869

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0544829
  gflops (total): 199.472
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,199.472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0234936
  gflops (eval):  462.586
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0234936,462.586,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.8078
  maximum absolute entry in einsum_ir solution: 60.8078
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156072
  time (eval):    0.00430329
  gflops (eval):  2525.47
  gflops (total): 545.834
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156072,0.00430329,2525.47,545.834

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531328
  gflops (total): 204.541
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.541

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023384
  gflops (eval):  464.755
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023384,464.755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8948
  maximum absolute entry in einsum_ir solution: 59.8948
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015554
  time (eval):    0.0042338
  gflops (eval):  2566.92
  gflops (total): 549.218
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015554,0.0042338,2566.92,549.218

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530699
  gflops (total): 204.783
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.783

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231009
  gflops (eval):  470.45
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231009,470.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.628
  maximum absolute entry in einsum_ir solution: 64.628
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149774
  time (eval):    0.00428598
  gflops (eval):  2535.67
  gflops (total): 564.17
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149774,0.00428598,2535.67,564.17

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525369
  gflops (total): 206.861
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.861

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231437
  gflops (eval):  469.58
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231437,469.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8719
  maximum absolute entry in einsum_ir solution: 58.8719
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0128918
  time (eval):    0.00428955
  gflops (eval):  2533.56
  gflops (total): 632.537
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0128918,0.00428955,2533.56,632.537

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528428
  gflops (total): 205.663
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.663

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230775
  gflops (eval):  470.928
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230775,470.928,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4585
  maximum absolute entry in einsum_ir solution: 60.4585
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153943
  time (eval):    0.00431139
  gflops (eval):  2520.72
  gflops (total): 551.507
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153943,0.00431139,2520.72,551.507

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0545478
  gflops (total): 199.235
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,199.235

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023308
  gflops (eval):  466.27
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023308,466.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2733
  maximum absolute entry in einsum_ir solution: 59.2733
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155174
  time (eval):    0.00426106
  gflops (eval):  2550.5
  gflops (total): 549.477
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155174,0.00426106,2550.5,549.477

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532788
  gflops (total): 203.98
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023177
  gflops (eval):  468.906
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023177,468.906,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0326
  maximum absolute entry in einsum_ir solution: 61.0326
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0138506
  time (eval):    0.00429726
  gflops (eval):  2529.01
  gflops (total): 598.848
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0138506,0.00429726,2529.01,598.848

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0524614
  gflops (total): 207.158
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,207.158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229039
  gflops (eval):  474.496
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229039,474.496,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.727
  maximum absolute entry in einsum_ir solution: 55.727
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015604
  time (eval):    0.00422129
  gflops (eval):  2574.53
  gflops (total): 548.181
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015604,0.00422129,2574.53,548.181

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529252
  gflops (total): 205.343
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.343

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231032
  gflops (eval):  470.403
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231032,470.403,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6229
  maximum absolute entry in einsum_ir solution: 59.6229
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156393
  time (eval):    0.00425893
  gflops (eval):  2551.77
  gflops (total): 546.17
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156393,0.00425893,2551.77,546.17

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538929
  gflops (total): 201.656
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230789
  gflops (eval):  470.899
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230789,470.899,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4563
  maximum absolute entry in einsum_ir solution: 57.4563
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153837
  time (eval):    0.00428204
  gflops (eval):  2538
  gflops (total): 552.626
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153837,0.00428204,2538,552.626

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535684
  gflops (total): 202.878
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.878

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232688
  gflops (eval):  467.056
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232688,467.056,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1705
  maximum absolute entry in einsum_ir solution: 60.1705
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155773
  time (eval):    0.00432028
  gflops (eval):  2515.54
  gflops (total): 546.188
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155773,0.00432028,2515.54,546.188

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0526856
  gflops (total): 206.277
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.277

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232969
  gflops (eval):  466.493
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232969,466.493,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.868
  maximum absolute entry in einsum_ir solution: 61.868
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015582
  time (eval):    0.00427019
  gflops (eval):  2545.04
  gflops (total): 547.437
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015582,0.00427019,2545.04,547.437

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528742
  gflops (total): 205.541
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.541

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230647
  gflops (eval):  471.189
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230647,471.189,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0507
  maximum absolute entry in einsum_ir solution: 59.0507
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156281
  time (eval):    0.00431103
  gflops (eval):  2520.93
  gflops (total): 545.049
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156281,0.00431103,2520.93,545.049

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535126
  gflops (total): 203.089
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.089

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230797
  gflops (eval):  470.882
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230797,470.882,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8676
  maximum absolute entry in einsum_ir solution: 56.8676
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156624
  time (eval):    0.00431514
  gflops (eval):  2518.53
  gflops (total): 544.002
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156624,0.00431514,2518.53,544.002

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534358
  gflops (total): 203.381
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023175
  gflops (eval):  468.946
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023175,468.946,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4897
  maximum absolute entry in einsum_ir solution: 58.4897
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150068
  time (eval):    0.00426464
  gflops (eval):  2548.35
  gflops (total): 563.935
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150068,0.00426464,2548.35,563.935

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.05342
  gflops (total): 203.441
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231847
  gflops (eval):  468.75
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231847,468.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5856
  maximum absolute entry in einsum_ir solution: 58.5856
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157572
  time (eval):    0.00427555
  gflops (eval):  2541.85
  gflops (total): 542.503
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157572,0.00427555,2541.85,542.503

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0541145
  gflops (total): 200.83
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.83

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232386
  gflops (eval):  467.663
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232386,467.663,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.0683
  maximum absolute entry in einsum_ir solution: 63.0683
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156698
  time (eval):    0.00424761
  gflops (eval):  2558.57
  gflops (total): 545.643
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156698,0.00424761,2558.57,545.643

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0527787
  gflops (total): 205.913
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.913

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233096
  gflops (eval):  466.238
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233096,466.238,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3791
  maximum absolute entry in einsum_ir solution: 61.3791
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0159311
  time (eval):    0.00429611
  gflops (eval):  2529.69
  gflops (total): 537.288
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0159311,0.00429611,2529.69,537.288

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535426
  gflops (total): 202.975
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.975

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230062
  gflops (eval):  472.387
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230062,472.387,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1659
  maximum absolute entry in einsum_ir solution: 56.1659
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156227
  time (eval):    0.00428131
  gflops (eval):  2538.43
  gflops (total): 546.011
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156227,0.00428131,2538.43,546.011

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533012
  gflops (total): 203.894
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232787
  gflops (eval):  466.857
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232787,466.857,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8019
  maximum absolute entry in einsum_ir solution: 57.8019
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155331
  time (eval):    0.00427846
  gflops (eval):  2540.13
  gflops (total): 548.561
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155331,0.00427846,2540.13,548.561

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535605
  gflops (total): 202.907
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.907

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231396
  gflops (eval):  469.663
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231396,469.663,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.928
  maximum absolute entry in einsum_ir solution: 59.928
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149413
  time (eval):    0.00426354
  gflops (eval):  2549.01
  gflops (total): 565.89
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149413,0.00426354,2549.01,565.89

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.05328
  gflops (total): 203.976
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.976

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232884
  gflops (eval):  466.662
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232884,466.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.582
  maximum absolute entry in einsum_ir solution: 61.582
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149857
  time (eval):    0.00427182
  gflops (eval):  2544.07
  gflops (total): 564.343
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149857,0.00427182,2544.07,564.343

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0526238
  gflops (total): 206.519
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.519

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229135
  gflops (eval):  474.299
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229135,474.299,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7522
  maximum absolute entry in einsum_ir solution: 59.7522
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152947
  time (eval):    0.00428993
  gflops (eval):  2533.33
  gflops (total): 554.916
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152947,0.00428993,2533.33,554.916

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053033
  gflops (total): 204.926
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.926

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229461
  gflops (eval):  473.624
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229461,473.624,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9112
  maximum absolute entry in einsum_ir solution: 60.9112
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153669
  time (eval):    0.004248
  gflops (eval):  2558.34
  gflops (total): 554.06
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153669,0.004248,2558.34,554.06

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529452
  gflops (total): 205.265
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.265

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231677
  gflops (eval):  469.093
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231677,469.093,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1139
  maximum absolute entry in einsum_ir solution: 60.1139
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152531
  time (eval):    0.00428064
  gflops (eval):  2538.83
  gflops (total): 556.362
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152531,0.00428064,2538.83,556.362

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530828
  gflops (total): 204.733
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.733

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232455
  gflops (eval):  467.524
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232455,467.524,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3322
  maximum absolute entry in einsum_ir solution: 59.3322
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0160876
  time (eval):    0.00430278
  gflops (eval):  2525.76
  gflops (total): 532.988
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0160876,0.00430278,2525.76,532.988

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533631
  gflops (total): 203.658
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.658

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230644
  gflops (eval):  471.196
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230644,471.196,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5006
  maximum absolute entry in einsum_ir solution: 59.5006
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152306
  time (eval):    0.00427192
  gflops (eval):  2544.01
  gflops (total): 557.251
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152306,0.00427192,2544.01,557.251

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529921
  gflops (total): 205.084
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.084

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229471
  gflops (eval):  473.603
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229471,473.603,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9831
  maximum absolute entry in einsum_ir solution: 59.9831
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154615
  time (eval):    0.00424236
  gflops (eval):  2561.74
  gflops (total): 551.557
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154615,0.00424236,2561.74,551.557

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538332
  gflops (total): 201.88
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232369
  gflops (eval):  467.697
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232369,467.697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.428
  maximum absolute entry in einsum_ir solution: 58.428
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156912
  time (eval):    0.00429354
  gflops (eval):  2531.2
  gflops (total): 543.807
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156912,0.00429354,2531.2,543.807

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0536618
  gflops (total): 202.525
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.525

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231986
  gflops (eval):  468.47
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231986,468.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.8995
  maximum absolute entry in einsum_ir solution: 62.8995
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156013
  time (eval):    0.00428159
  gflops (eval):  2538.27
  gflops (total): 546.591
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156013,0.00428159,2538.27,546.591

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535348
  gflops (total): 203.005
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.005

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233016
  gflops (eval):  466.399
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233016,466.399,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4997
  maximum absolute entry in einsum_ir solution: 61.4997
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0141206
  time (eval):    0.00428893
  gflops (eval):  2533.93
  gflops (total): 590.338
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0141206,0.00428893,2533.93,590.338

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535614
  gflops (total): 202.904
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.904

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232142
  gflops (eval):  468.154
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232142,468.154,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8154
  maximum absolute entry in einsum_ir solution: 55.8154
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154609
  time (eval):    0.00428612
  gflops (eval):  2535.59
  gflops (total): 550.353
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154609,0.00428612,2535.59,550.353

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0547617
  gflops (total): 198.457
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,198.457

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232653
  gflops (eval):  467.126
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232653,467.126,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1175
  maximum absolute entry in einsum_ir solution: 61.1175
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150676
  time (eval):    0.00432034
  gflops (eval):  2515.5
  gflops (total): 560.545
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150676,0.00432034,2515.5,560.545

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532523
  gflops (total): 204.082
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.082

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230296
  gflops (eval):  471.906
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230296,471.906,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1219
  maximum absolute entry in einsum_ir solution: 60.1219
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154432
  time (eval):    0.00427844
  gflops (eval):  2540.14
  gflops (total): 551.06
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154432,0.00427844,2540.14,551.06

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535895
  gflops (total): 202.797
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.797

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230246
  gflops (eval):  472.008
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230246,472.008,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8516
  maximum absolute entry in einsum_ir solution: 58.8516
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149244
  time (eval):    0.00429693
  gflops (eval):  2529.2
  gflops (total): 565.405
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149244,0.00429693,2529.2,565.405

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535677
  gflops (total): 202.88
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.022884
  gflops (eval):  474.909
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.022884,474.909,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8489
  maximum absolute entry in einsum_ir solution: 56.8489
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155802
  time (eval):    0.00426795
  gflops (eval):  2546.38
  gflops (total): 547.549
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155802,0.00426795,2546.38,547.549

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539596
  gflops (total): 201.407
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.407

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230184
  gflops (eval):  472.136
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230184,472.136,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.281
  maximum absolute entry in einsum_ir solution: 58.281
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0131891
  time (eval):    0.00430411
  gflops (eval):  2524.99
  gflops (total): 621.26
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0131891,0.00430411,2524.99,621.26

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528475
  gflops (total): 205.645
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.645

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231598
  gflops (eval):  469.253
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231598,469.253,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9711
  maximum absolute entry in einsum_ir solution: 58.9711
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153719
  time (eval):    0.00430822
  gflops (eval):  2522.58
  gflops (total): 552.224
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153719,0.00430822,2522.58,552.224

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529634
  gflops (total): 205.195
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.195

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229946
  gflops (eval):  472.626
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229946,472.626,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7775
  maximum absolute entry in einsum_ir solution: 60.7775
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154552
  time (eval):    0.00427245
  gflops (eval):  2543.7
  gflops (total): 550.892
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154552,0.00427245,2543.7,550.892

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053615
  gflops (total): 202.701
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231567
  gflops (eval):  469.316
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231567,469.316,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1289
  maximum absolute entry in einsum_ir solution: 59.1289
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154771
  time (eval):    0.00431023
  gflops (eval):  2521.4
  gflops (total): 549.233
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154771,0.00431023,2521.4,549.233

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530775
  gflops (total): 204.754
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.754

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023253
  gflops (eval):  467.373
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023253,467.373,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0557
  maximum absolute entry in einsum_ir solution: 57.0557
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157268
  time (eval):    0.00429057
  gflops (eval):  2532.96
  gflops (total): 542.919
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157268,0.00429057,2532.96,542.919

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535533
  gflops (total): 202.935
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.935

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229417
  gflops (eval):  473.714
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229417,473.714,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2938
  maximum absolute entry in einsum_ir solution: 59.2938
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157514
  time (eval):    0.00425733
  gflops (eval):  2552.73
  gflops (total): 543.153
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157514,0.00425733,2552.73,543.153

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530275
  gflops (total): 204.947
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.947

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231063
  gflops (eval):  470.34
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231063,470.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9776
  maximum absolute entry in einsum_ir solution: 56.9776
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149765
  time (eval):    0.00430626
  gflops (eval):  2523.73
  gflops (total): 563.604
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149765,0.00430626,2523.73,563.604

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0544763
  gflops (total): 199.496
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,199.496

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233391
  gflops (eval):  465.649
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233391,465.649,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1199
  maximum absolute entry in einsum_ir solution: 58.1199
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157279
  time (eval):    0.00424544
  gflops (eval):  2559.88
  gflops (total): 544.117
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157279,0.00424544,2559.88,544.117

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525945
  gflops (total): 206.634
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230137
  gflops (eval):  472.232
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230137,472.232,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6574
  maximum absolute entry in einsum_ir solution: 61.6574
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150366
  time (eval):    0.00427475
  gflops (eval):  2542.33
  gflops (total): 562.768
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150366,0.00427475,2542.33,562.768

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529947
  gflops (total): 205.074
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.074

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0234694
  gflops (eval):  463.064
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0234694,463.064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.1439
  maximum absolute entry in einsum_ir solution: 62.1439
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154703
  time (eval):    0.00433092
  gflops (eval):  2509.36
  gflops (total): 548.846
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154703,0.00433092,2509.36,548.846

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530714
  gflops (total): 204.777
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229568
  gflops (eval):  473.402
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229568,473.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1821
  maximum absolute entry in einsum_ir solution: 57.1821
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0141781
  time (eval):    0.00426175
  gflops (eval):  2550.08
  gflops (total): 589.366
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0141781,0.00426175,2550.08,589.366

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0536561
  gflops (total): 202.546
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232734
  gflops (eval):  466.962
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232734,466.962,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.8373
  maximum absolute entry in einsum_ir solution: 62.8373
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015491
  time (eval):    0.0043265
  gflops (eval):  2511.92
  gflops (total): 548.395
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015491,0.0043265,2511.92,548.395

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531959
  gflops (total): 204.298
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.298

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231752
  gflops (eval):  468.943
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231752,468.943,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8425
  maximum absolute entry in einsum_ir solution: 59.8425
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0158091
  time (eval):    0.00431357
  gflops (eval):  2519.45
  gflops (total): 540.077
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0158091,0.00431357,2519.45,540.077

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528267
  gflops (total): 205.726
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.726

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230247
  gflops (eval):  472.008
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230247,472.008,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1001
  maximum absolute entry in einsum_ir solution: 61.1001
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149988
  time (eval):    0.00428332
  gflops (eval):  2537.24
  gflops (total): 563.62
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149988,0.00428332,2537.24,563.62

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535283
  gflops (total): 203.029
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.029

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232244
  gflops (eval):  467.948
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232244,467.948,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.2012
  maximum absolute entry in einsum_ir solution: 63.2012
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150821
  time (eval):    0.00429823
  gflops (eval):  2528.44
  gflops (total): 560.766
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150821,0.00429823,2528.44,560.766

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535875
  gflops (total): 202.805
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.805

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231967
  gflops (eval):  468.507
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231967,468.507,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7674
  maximum absolute entry in einsum_ir solution: 57.7674
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015984
  time (eval):    0.0042355
  gflops (eval):  2565.89
  gflops (total): 537.492
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015984,0.0042355,2565.89,537.492

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534112
  gflops (total): 203.475
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.475

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233354
  gflops (eval):  465.723
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233354,465.723,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.0093
  maximum absolute entry in einsum_ir solution: 64.0093
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154493
  time (eval):    0.0042984
  gflops (eval):  2528.34
  gflops (total): 550.332
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154493,0.0042984,2528.34,550.332

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0536479
  gflops (total): 202.577
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231069
  gflops (eval):  470.328
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231069,470.328,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7948
  maximum absolute entry in einsum_ir solution: 58.7948
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155688
  time (eval):    0.00425357
  gflops (eval):  2554.99
  gflops (total): 548.261
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155688,0.00425357,2554.99,548.261

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531847
  gflops (total): 204.341
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.341

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232929
  gflops (eval):  466.572
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232929,466.572,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9642
  maximum absolute entry in einsum_ir solution: 57.9642
  maximum element-wise difference:              0
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148713
  time (eval):    0.00430205
  gflops (eval):  2526.19
  gflops (total): 566.82
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148713,0.00430205,2526.19,566.82

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528753
  gflops (total): 205.537
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.537

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231958
  gflops (eval):  468.526
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231958,468.526,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0314
  maximum absolute entry in einsum_ir solution: 56.0314
  maximum element-wise difference:              0
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129415
  time (eval):    0.00274885
  gflops (eval):  3974.04
  gflops (total): 696.229
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129415,0.00274885,3974.04,696.229

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0289442
  gflops (total): 377.417
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,377.417

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00398706
  gflops (eval):  2739.87
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00398706,2739.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      433.515
  maximum absolute entry in einsum_ir solution: 433.516
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0132095
  time (eval):    0.00278056
  gflops (eval):  3928.72
  gflops (total): 683.178
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0132095,0.00278056,3928.72,683.178

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.029588
  gflops (total): 369.206
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,369.206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00420582
  gflops (eval):  2597.36
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00420582,2597.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      418.682
  maximum absolute entry in einsum_ir solution: 418.683
  maximum element-wise difference:              0.00160217
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129489
  time (eval):    0.00271114
  gflops (eval):  4029.32
  gflops (total): 697.574
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129489,0.00271114,4029.32,697.574

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0289838
  gflops (total): 376.902
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,376.902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00435488
  gflops (eval):  2508.46
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00435488,2508.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      447.444
  maximum absolute entry in einsum_ir solution: 447.444
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0124211
  time (eval):    0.00275051
  gflops (eval):  3971.65
  gflops (total): 720.033
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0124211,0.00275051,3971.65,720.033

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283993
  gflops (total): 384.659
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,384.659

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00405268
  gflops (eval):  2695.51
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00405268,2695.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      424.775
  maximum absolute entry in einsum_ir solution: 424.775
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130986
  time (eval):    0.00273825
  gflops (eval):  3989.42
  gflops (total): 689.788
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130986,0.00273825,3989.42,689.788

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0291174
  gflops (total): 375.173
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,375.173

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0040605
  gflops (eval):  2690.32
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0040605,2690.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      434.664
  maximum absolute entry in einsum_ir solution: 434.664
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130707
  time (eval):    0.00281187
  gflops (eval):  3884.98
  gflops (total): 687.799
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130707,0.00281187,3884.98,687.799

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287405
  gflops (total): 380.092
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.092

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00413541
  gflops (eval):  2641.59
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00413541,2641.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      445.339
  maximum absolute entry in einsum_ir solution: 445.339
  maximum element-wise difference:              0.0017395
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0132316
  time (eval):    0.00274128
  gflops (eval):  3985.02
  gflops (total): 683.911
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0132316,0.00274128,3985.02,683.911

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0288562
  gflops (total): 378.568
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.568

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00412391
  gflops (eval):  2648.96
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00412391,2648.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      429.122
  maximum absolute entry in einsum_ir solution: 429.122
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0127344
  time (eval):    0.0027785
  gflops (eval):  3931.63
  gflops (total): 704.19
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0127344,0.0027785,3931.63,704.19

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0293282
  gflops (total): 372.476
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,372.476

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00411285
  gflops (eval):  2656.08
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00411285,2656.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      430.077
  maximum absolute entry in einsum_ir solution: 430.077
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129293
  time (eval):    0.00275866
  gflops (eval):  3959.9
  gflops (total): 696.333
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129293,0.00275866,3959.9,696.333

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0284907
  gflops (total): 383.425
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,383.425

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0040705
  gflops (eval):  2683.71
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0040705,2683.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.087
  maximum absolute entry in einsum_ir solution: 472.088
  maximum element-wise difference:              0.00154114
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129335
  time (eval):    0.00273916
  gflops (eval):  3988.1
  gflops (total): 697.013
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129335,0.00273916,3988.1,697.013

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0284919
  gflops (total): 383.408
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,383.408

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00385022
  gflops (eval):  2837.25
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00385022,2837.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      408.662
  maximum absolute entry in einsum_ir solution: 408.661
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130038
  time (eval):    0.00271659
  gflops (eval):  4021.23
  gflops (total): 694.896
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130038,0.00271659,4021.23,694.896

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0284671
  gflops (total): 383.742
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,383.742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00409359
  gflops (eval):  2668.58
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00409359,2668.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      409.539
  maximum absolute entry in einsum_ir solution: 409.538
  maximum element-wise difference:              0.0015564
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128086
  time (eval):    0.00271928
  gflops (eval):  4017.26
  gflops (total): 703.511
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128086,0.00271928,4017.26,703.511

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286414
  gflops (total): 381.407
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,381.407

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00409158
  gflops (eval):  2669.88
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00409158,2669.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      447.144
  maximum absolute entry in einsum_ir solution: 447.143
  maximum element-wise difference:              0.0017395
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.013327
  time (eval):    0.00276373
  gflops (eval):  3952.64
  gflops (total): 678.903
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.013327,0.00276373,3952.64,678.903

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.029376
  gflops (total): 371.87
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,371.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00408358
  gflops (eval):  2675.11
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00408358,2675.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.723
  maximum absolute entry in einsum_ir solution: 469.724
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128375
  time (eval):    0.00275594
  gflops (eval):  3963.81
  gflops (total): 700.553
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128375,0.00275594,3963.81,700.553

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0282516
  gflops (total): 386.669
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,386.669

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00430443
  gflops (eval):  2537.86
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00430443,2537.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      413.613
  maximum absolute entry in einsum_ir solution: 413.614
  maximum element-wise difference:              0.00161743
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128711
  time (eval):    0.00268421
  gflops (eval):  4069.74
  gflops (total): 702.27
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128711,0.00268421,4069.74,702.27

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028909
  gflops (total): 377.877
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,377.877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00411185
  gflops (eval):  2656.73
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00411185,2656.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      438.11
  maximum absolute entry in einsum_ir solution: 438.11
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.013212
  time (eval):    0.00273719
  gflops (eval):  3990.96
  gflops (total): 684.927
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.013212,0.00273719,3990.96,684.927

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0288444
  gflops (total): 378.723
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.723

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00418056
  gflops (eval):  2613.06
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00418056,2613.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      422.705
  maximum absolute entry in einsum_ir solution: 422.706
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129937
  time (eval):    0.002744
  gflops (eval):  3981.07
  gflops (total): 694.133
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129937,0.002744,3981.07,694.133

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286701
  gflops (total): 381.025
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,381.025

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00413025
  gflops (eval):  2644.89
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00413025,2644.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.817
  maximum absolute entry in einsum_ir solution: 471.816
  maximum element-wise difference:              0.00161743
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129738
  time (eval):    0.00275151
  gflops (eval):  3970.2
  gflops (total): 694.681
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129738,0.00275151,3970.2,694.681

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0285207
  gflops (total): 383.021
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,383.021

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00403678
  gflops (eval):  2706.13
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00403678,2706.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      429.891
  maximum absolute entry in einsum_ir solution: 429.891
  maximum element-wise difference:              0.00167847
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128942
  time (eval):    0.00274778
  gflops (eval):  3975.6
  gflops (total): 698.379
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128942,0.00274778,3975.6,698.379

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0300765
  gflops (total): 363.208
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,363.208

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00405733
  gflops (eval):  2692.42
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00405733,2692.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      428.08
  maximum absolute entry in einsum_ir solution: 428.08
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129371
  time (eval):    0.00274943
  gflops (eval):  3973.2
  gflops (total): 696.396
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129371,0.00274943,3973.2,696.396

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0291846
  gflops (total): 374.308
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,374.308

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0042414
  gflops (eval):  2575.57
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0042414,2575.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      426.8
  maximum absolute entry in einsum_ir solution: 426.8
  maximum element-wise difference:              0.00149536
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.013023
  time (eval):    0.00270795
  gflops (eval):  4034.06
  gflops (total): 694.429
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.013023,0.00270795,4034.06,694.429

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0295381
  gflops (total): 369.829
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,369.829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00390789
  gflops (eval):  2795.38
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00390789,2795.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      432.776
  maximum absolute entry in einsum_ir solution: 432.777
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0127929
  time (eval):    0.00273436
  gflops (eval):  3995.1
  gflops (total): 703.539
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0127929,0.00273436,3995.1,703.539

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0289255
  gflops (total): 377.661
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,377.661

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00418392
  gflops (eval):  2610.96
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00418392,2610.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      448.101
  maximum absolute entry in einsum_ir solution: 448.1
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128919
  time (eval):    0.00274082
  gflops (eval):  3985.69
  gflops (total): 698.794
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128919,0.00274082,3985.69,698.794

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0288267
  gflops (total): 378.955
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.955

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00426956
  gflops (eval):  2558.59
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00426956,2558.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      447.65
  maximum absolute entry in einsum_ir solution: 447.65
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129616
  time (eval):    0.0027746
  gflops (eval):  3937.15
  gflops (total): 694.197
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129616,0.0027746,3937.15,694.197

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287517
  gflops (total): 379.945
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,379.945

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0043098
  gflops (eval):  2534.7
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0043098,2534.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      404.168
  maximum absolute entry in einsum_ir solution: 404.168
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129196
  time (eval):    0.00272209
  gflops (eval):  4013.1
  gflops (total): 698.394
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129196,0.00272209,4013.1,698.394

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0280934
  gflops (total): 388.847
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,388.847

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00432741
  gflops (eval):  2524.38
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00432741,2524.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      447.368
  maximum absolute entry in einsum_ir solution: 447.368
  maximum element-wise difference:              0.00177002
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129464
  time (eval):    0.00275616
  gflops (eval):  3963.5
  gflops (total): 695.683
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129464,0.00275616,3963.5,695.683

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0290313
  gflops (total): 376.285
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,376.285

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00424823
  gflops (eval):  2571.43
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00424823,2571.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      453.093
  maximum absolute entry in einsum_ir solution: 453.093
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0127518
  time (eval):    0.00271893
  gflops (eval):  4017.77
  gflops (total): 706.112
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0127518,0.00271893,4017.77,706.112

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0289282
  gflops (total): 377.626
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,377.626

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00421054
  gflops (eval):  2594.45
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00421054,2594.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      421.026
  maximum absolute entry in einsum_ir solution: 421.027
  maximum element-wise difference:              0.00167847
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129048
  time (eval):    0.00272645
  gflops (eval):  4006.69
  gflops (total): 698.861
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129048,0.00272645,4006.69,698.861

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0282956
  gflops (total): 386.068
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,386.068

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0043645
  gflops (eval):  2502.93
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0043645,2502.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      443.851
  maximum absolute entry in einsum_ir solution: 443.852
  maximum element-wise difference:              0.00180054
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129578
  time (eval):    0.00278382
  gflops (eval):  3924.12
  gflops (total): 693.958
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129578,0.00278382,3924.12,693.958

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028864
  gflops (total): 378.466
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.466

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00406511
  gflops (eval):  2687.27
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00406511,2687.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      455.063
  maximum absolute entry in einsum_ir solution: 455.062
  maximum element-wise difference:              0.00164795
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129803
  time (eval):    0.0027494
  gflops (eval):  3973.24
  gflops (total): 694.486
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129803,0.0027494,3973.24,694.486

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287271
  gflops (total): 380.269
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.269

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00427875
  gflops (eval):  2553.09
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00427875,2553.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      419.346
  maximum absolute entry in einsum_ir solution: 419.346
  maximum element-wise difference:              0.00152588
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130091
  time (eval):    0.00274791
  gflops (eval):  3975.4
  gflops (total): 693.283
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130091,0.00274791,3975.4,693.283

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0292549
  gflops (total): 373.409
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,373.409

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00438348
  gflops (eval):  2492.1
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00438348,2492.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      440.328
  maximum absolute entry in einsum_ir solution: 440.327
  maximum element-wise difference:              0.0017395
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129401
  time (eval):    0.00275909
  gflops (eval):  3959.3
  gflops (total): 695.836
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129401,0.00275909,3959.3,695.836

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286187
  gflops (total): 381.71
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,381.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00432005
  gflops (eval):  2528.69
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00432005,2528.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      445.317
  maximum absolute entry in einsum_ir solution: 445.317
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129092
  time (eval):    0.00277153
  gflops (eval):  3941.52
  gflops (total): 696.655
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129092,0.00277153,3941.52,696.655

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283976
  gflops (total): 384.683
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,384.683

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00402813
  gflops (eval):  2711.94
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00402813,2711.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.365
  maximum absolute entry in einsum_ir solution: 466.365
  maximum element-wise difference:              0.00157166
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129615
  time (eval):    0.00273412
  gflops (eval):  3995.45
  gflops (total): 695.993
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129615,0.00273412,3995.45,695.993

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0290435
  gflops (total): 376.127
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,376.127

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0040926
  gflops (eval):  2669.22
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0040926,2669.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      442.561
  maximum absolute entry in einsum_ir solution: 442.56
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128945
  time (eval):    0.00278606
  gflops (eval):  3920.96
  gflops (total): 696.659
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128945,0.00278606,3920.96,696.659

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286889
  gflops (total): 380.775
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.775

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00429578
  gflops (eval):  2542.97
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00429578,2542.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      429.974
  maximum absolute entry in einsum_ir solution: 429.973
  maximum element-wise difference:              0.00143433
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130374
  time (eval):    0.00275887
  gflops (eval):  3959.6
  gflops (total): 691.557
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130374,0.00275887,3959.6,691.557

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283741
  gflops (total): 385.001
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,385.001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00443206
  gflops (eval):  2464.78
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00443206,2464.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      447.02
  maximum absolute entry in einsum_ir solution: 447.019
  maximum element-wise difference:              0.00164795
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131717
  time (eval):    0.00275056
  gflops (eval):  3971.57
  gflops (total): 686.087
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131717,0.00275056,3971.57,686.087

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.029055
  gflops (total): 375.978
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,375.978

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00435872
  gflops (eval):  2506.25
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00435872,2506.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      426.697
  maximum absolute entry in einsum_ir solution: 426.697
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130343
  time (eval):    0.00280058
  gflops (eval):  3900.64
  gflops (total): 689.874
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130343,0.00280058,3900.64,689.874

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287547
  gflops (total): 379.904
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,379.904

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00437355
  gflops (eval):  2497.75
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00437355,2497.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      458.751
  maximum absolute entry in einsum_ir solution: 458.751
  maximum element-wise difference:              0.00177002
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128767
  time (eval):    0.00274306
  gflops (eval):  3982.43
  gflops (total): 699.375
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128767,0.00274306,3982.43,699.375

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287301
  gflops (total): 380.23
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00419866
  gflops (eval):  2601.8
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00419866,2601.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.554
  maximum absolute entry in einsum_ir solution: 482.553
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131689
  time (eval):    0.00272277
  gflops (eval):  4012.1
  gflops (total): 687.409
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131689,0.00272277,4012.1,687.409

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0285815
  gflops (total): 382.206
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,382.206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00413751
  gflops (eval):  2640.24
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00413751,2640.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      435.423
  maximum absolute entry in einsum_ir solution: 435.423
  maximum element-wise difference:              0.0015564
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129243
  time (eval):    0.00274282
  gflops (eval):  3982.78
  gflops (total): 697.261
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129243,0.00274282,3982.78,697.261

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0294551
  gflops (total): 370.871
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,370.871

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00407419
  gflops (eval):  2681.28
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00407419,2681.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      435.489
  maximum absolute entry in einsum_ir solution: 435.489
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130481
  time (eval):    0.00272265
  gflops (eval):  4012.28
  gflops (total): 692.678
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130481,0.00272265,4012.28,692.678

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0284151
  gflops (total): 384.444
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,384.444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00453489
  gflops (eval):  2408.89
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00453489,2408.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      460.455
  maximum absolute entry in einsum_ir solution: 460.455
  maximum element-wise difference:              0.00164795
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131165
  time (eval):    0.0027285
  gflops (eval):  4003.68
  gflops (total): 689.433
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131165,0.0027285,4003.68,689.433

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0288312
  gflops (total): 378.896
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.896

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00408586
  gflops (eval):  2673.62
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00408586,2673.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      411.628
  maximum absolute entry in einsum_ir solution: 411.628
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128445
  time (eval):    0.00272914
  gflops (eval):  4002.74
  gflops (total): 701.444
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128445,0.00272914,4002.74,701.444

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286388
  gflops (total): 381.442
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,381.442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00423653
  gflops (eval):  2578.53
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00423653,2578.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      426.189
  maximum absolute entry in einsum_ir solution: 426.188
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129848
  time (eval):    0.00272357
  gflops (eval):  4010.93
  gflops (total): 695.428
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129848,0.00272357,4010.93,695.428

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283543
  gflops (total): 385.269
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,385.269

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00403307
  gflops (eval):  2708.62
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00403307,2708.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      417.425
  maximum absolute entry in einsum_ir solution: 417.424
  maximum element-wise difference:              0.0015564
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0135453
  time (eval):    0.00272649
  gflops (eval):  4006.64
  gflops (total): 671.348
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0135453,0.00272649,4006.64,671.348

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0293943
  gflops (total): 371.639
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,371.639

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00416003
  gflops (eval):  2625.96
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00416003,2625.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      458.566
  maximum absolute entry in einsum_ir solution: 458.565
  maximum element-wise difference:              0.00180054
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130711
  time (eval):    0.00272203
  gflops (eval):  4013.2
  gflops (total): 691.695
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130711,0.00272203,4013.2,691.695

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0293849
  gflops (total): 371.757
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,371.757

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00421577
  gflops (eval):  2591.23
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00421577,2591.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      456.113
  maximum absolute entry in einsum_ir solution: 456.111
  maximum element-wise difference:              0.00164795
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130168
  time (eval):    0.00273422
  gflops (eval):  3995.3
  gflops (total): 693.545
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130168,0.00273422,3995.3,693.545

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0285771
  gflops (total): 382.266
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,382.266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00409526
  gflops (eval):  2667.49
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00409526,2667.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      421.377
  maximum absolute entry in einsum_ir solution: 421.378
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129707
  time (eval):    0.00272231
  gflops (eval):  4012.78
  gflops (total): 696.108
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129707,0.00272231,4012.78,696.108

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028767
  gflops (total): 379.743
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,379.743

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00401805
  gflops (eval):  2718.74
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00401805,2718.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      457.658
  maximum absolute entry in einsum_ir solution: 457.658
  maximum element-wise difference:              0.00180054
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0127475
  time (eval):    0.00280297
  gflops (eval):  3897.31
  gflops (total): 702.49
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0127475,0.00280297,3897.31,702.49

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0285543
  gflops (total): 382.571
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,382.571

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00430802
  gflops (eval):  2535.75
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00430802,2535.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      432.725
  maximum absolute entry in einsum_ir solution: 432.725
  maximum element-wise difference:              0.00161743
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130044
  time (eval):    0.00271155
  gflops (eval):  4028.71
  gflops (total): 695.093
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130044,0.00271155,4028.71,695.093

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0289607
  gflops (total): 377.202
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,377.202

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00406324
  gflops (eval):  2688.5
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00406324,2688.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      428.707
  maximum absolute entry in einsum_ir solution: 428.706
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129368
  time (eval):    0.00273034
  gflops (eval):  4000.98
  gflops (total): 697.258
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129368,0.00273034,4000.98,697.258

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0295913
  gflops (total): 369.164
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,369.164

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00422191
  gflops (eval):  2587.46
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00422191,2587.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      418.479
  maximum absolute entry in einsum_ir solution: 418.48
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128789
  time (eval):    0.00276724
  gflops (eval):  3947.64
  gflops (total): 698.193
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128789,0.00276724,3947.64,698.193

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0290069
  gflops (total): 376.601
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,376.601

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00401535
  gflops (eval):  2720.57
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00401535,2720.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      459.622
  maximum absolute entry in einsum_ir solution: 459.622
  maximum element-wise difference:              0.0015564
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131193
  time (eval):    0.00278156
  gflops (eval):  3927.31
  gflops (total): 687.008
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131193,0.00278156,3927.31,687.008

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286725
  gflops (total): 380.994
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.994

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00411097
  gflops (eval):  2657.29
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00411097,2657.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.312
  maximum absolute entry in einsum_ir solution: 481.313
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131476
  time (eval):    0.00276063
  gflops (eval):  3957.09
  gflops (total): 686.691
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131476,0.00276063,3957.09,686.691

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286706
  gflops (total): 381.019
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,381.019

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00403353
  gflops (eval):  2708.31
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00403353,2708.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      431.294
  maximum absolute entry in einsum_ir solution: 431.294
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130418
  time (eval):    0.00276084
  gflops (eval):  3956.78
  gflops (total): 691.282
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130418,0.00276084,3956.78,691.282

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283627
  gflops (total): 385.155
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,385.155

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00444725
  gflops (eval):  2456.36
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00444725,2456.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      432.835
  maximum absolute entry in einsum_ir solution: 432.834
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128977
  time (eval):    0.00276327
  gflops (eval):  3953.31
  gflops (total): 697.533
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128977,0.00276327,3953.31,697.533

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028686
  gflops (total): 380.814
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.814

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00399937
  gflops (eval):  2731.44
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00399937,2731.44,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      441.116
  maximum absolute entry in einsum_ir solution: 441.116
  maximum element-wise difference:              0.00164795
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130155
  time (eval):    0.00278493
  gflops (eval):  3922.56
  gflops (total): 691.376
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130155,0.00278493,3922.56,691.376

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0289218
  gflops (total): 377.71
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,377.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00402882
  gflops (eval):  2711.47
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00402882,2711.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      424.736
  maximum absolute entry in einsum_ir solution: 424.736
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0132508
  time (eval):    0.00273925
  gflops (eval):  3987.96
  gflops (total): 683.175
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0132508,0.00273925,3987.96,683.175

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283647
  gflops (total): 385.129
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,385.129

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00408438
  gflops (eval):  2674.59
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00408438,2674.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.005
  maximum absolute entry in einsum_ir solution: 477.005
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129774
  time (eval):    0.00273598
  gflops (eval):  3992.74
  gflops (total): 695.209
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129774,0.00273598,3992.74,695.209

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0291338
  gflops (total): 374.962
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,374.962

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0040591
  gflops (eval):  2691.25
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0040591,2691.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      434.832
  maximum absolute entry in einsum_ir solution: 434.831
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131483
  time (eval):    0.00274362
  gflops (eval):  3981.61
  gflops (total): 687.397
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131483,0.00274362,3981.61,687.397

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0292727
  gflops (total): 373.182
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,373.182

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00400181
  gflops (eval):  2729.77
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00400181,2729.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      429.414
  maximum absolute entry in einsum_ir solution: 429.415
  maximum element-wise difference:              0.00167847
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131024
  time (eval):    0.00272363
  gflops (eval):  4010.84
  gflops (total): 690.258
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131024,0.00272363,4010.84,690.258

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0298624
  gflops (total): 365.812
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,365.812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00416347
  gflops (eval):  2623.78
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00416347,2623.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      413.319
  maximum absolute entry in einsum_ir solution: 413.319
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0133367
  time (eval):    0.00273542
  gflops (eval):  3993.56
  gflops (total): 679.689
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0133367,0.00273542,3993.56,679.689

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0289276
  gflops (total): 377.634
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,377.634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0041184
  gflops (eval):  2652.5
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0041184,2652.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      406.99
  maximum absolute entry in einsum_ir solution: 406.99
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128406
  time (eval):    0.00276061
  gflops (eval):  3957.11
  gflops (total): 700.205
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128406,0.00276061,3957.11,700.205

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028883
  gflops (total): 378.216
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.216

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00410518
  gflops (eval):  2661.04
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00410518,2661.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      434.346
  maximum absolute entry in einsum_ir solution: 434.346
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129575
  time (eval):    0.00278129
  gflops (eval):  3927.69
  gflops (total): 694.086
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129575,0.00278129,3927.69,694.086

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286665
  gflops (total): 381.074
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,381.074

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00441464
  gflops (eval):  2474.5
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00441464,2474.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      454.296
  maximum absolute entry in einsum_ir solution: 454.296
  maximum element-wise difference:              0.0015564
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131708
  time (eval):    0.00275059
  gflops (eval):  3971.53
  gflops (total): 686.124
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131708,0.00275059,3971.53,686.124

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0291695
  gflops (total): 374.502
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,374.502

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00416642
  gflops (eval):  2621.93
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00416642,2621.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      442.855
  maximum absolute entry in einsum_ir solution: 442.855
  maximum element-wise difference:              0.00154114
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130628
  time (eval):    0.00273495
  gflops (eval):  3994.23
  gflops (total): 691.493
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130628,0.00273495,3994.23,691.493

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0289954
  gflops (total): 376.751
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,376.751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00406612
  gflops (eval):  2686.6
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00406612,2686.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      430.603
  maximum absolute entry in einsum_ir solution: 430.602
  maximum element-wise difference:              0.00187683
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.013179
  time (eval):    0.00273219
  gflops (eval):  3998.28
  gflops (total): 686.563
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.013179,0.00273219,3998.28,686.563

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0285793
  gflops (total): 382.236
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,382.236

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00408646
  gflops (eval):  2673.23
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00408646,2673.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      438.74
  maximum absolute entry in einsum_ir solution: 438.741
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130046
  time (eval):    0.00273596
  gflops (eval):  3992.77
  gflops (total): 694.005
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130046,0.00273596,3992.77,694.005

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0289457
  gflops (total): 377.397
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,377.397

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00408579
  gflops (eval):  2673.67
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00408579,2673.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      402.133
  maximum absolute entry in einsum_ir solution: 402.133
  maximum element-wise difference:              0.00180054
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129026
  time (eval):    0.00269166
  gflops (eval):  4058.48
  gflops (total): 700.516
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129026,0.00269166,4058.48,700.516

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0284877
  gflops (total): 383.465
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,383.465

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00412514
  gflops (eval):  2648.17
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00412514,2648.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      444.048
  maximum absolute entry in einsum_ir solution: 444.047
  maximum element-wise difference:              0.00149536
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129657
  time (eval):    0.00278355
  gflops (eval):  3924.51
  gflops (total): 693.623
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129657,0.00278355,3924.51,693.623

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287716
  gflops (total): 379.682
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,379.682

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0040715
  gflops (eval):  2683.05
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0040715,2683.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      452.772
  maximum absolute entry in einsum_ir solution: 452.771
  maximum element-wise difference:              0.00134277
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130299
  time (eval):    0.00274096
  gflops (eval):  3985.48
  gflops (total): 692.672
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130299,0.00274096,3985.48,692.672

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283992
  gflops (total): 384.661
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,384.661

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0041768
  gflops (eval):  2615.41
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0041768,2615.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      447.97
  maximum absolute entry in einsum_ir solution: 447.97
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129023
  time (eval):    0.00271337
  gflops (eval):  4026.01
  gflops (total): 699.555
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129023,0.00271337,4026.01,699.555

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287967
  gflops (total): 379.35
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,379.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00411479
  gflops (eval):  2654.82
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00411479,2654.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      416.399
  maximum absolute entry in einsum_ir solution: 416.399
  maximum element-wise difference:              0.00177002
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130386
  time (eval):    0.00272689
  gflops (eval):  4006.04
  gflops (total): 692.907
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130386,0.00272689,4006.04,692.907

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0285368
  gflops (total): 382.806
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,382.806

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00402043
  gflops (eval):  2717.14
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00402043,2717.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      431.154
  maximum absolute entry in einsum_ir solution: 431.153
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0127581
  time (eval):    0.00273179
  gflops (eval):  3998.86
  gflops (total): 705.238
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0127581,0.00273179,3998.86,705.238

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0285285
  gflops (total): 382.916
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,382.916

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00444414
  gflops (eval):  2458.08
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00444414,2458.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      445.477
  maximum absolute entry in einsum_ir solution: 445.477
  maximum element-wise difference:              0.00161743
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.013033
  time (eval):    0.00271705
  gflops (eval):  4020.55
  gflops (total): 693.586
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.013033,0.00271705,4020.55,693.586

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0291414
  gflops (total): 374.863
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,374.863

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00442258
  gflops (eval):  2470.06
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00442258,2470.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      430.235
  maximum absolute entry in einsum_ir solution: 430.235
  maximum element-wise difference:              0.00167847
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131735
  time (eval):    0.00274161
  gflops (eval):  3984.54
  gflops (total): 686.394
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131735,0.00274161,3984.54,686.394

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0292248
  gflops (total): 373.794
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,373.794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00422006
  gflops (eval):  2588.6
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00422006,2588.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      425.639
  maximum absolute entry in einsum_ir solution: 425.638
  maximum element-wise difference:              0.0017395
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131442
  time (eval):    0.00273104
  gflops (eval):  3999.95
  gflops (total): 688.12
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131442,0.00273104,3999.95,688.12

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0288688
  gflops (total): 378.404
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.404

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00407061
  gflops (eval):  2683.64
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00407061,2683.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      420.229
  maximum absolute entry in einsum_ir solution: 420.229
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129736
  time (eval):    0.0027445
  gflops (eval):  3980.34
  gflops (total): 694.998
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129736,0.0027445,3980.34,694.998

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286979
  gflops (total): 380.657
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.657

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00413655
  gflops (eval):  2640.86
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00413655,2640.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.935
  maximum absolute entry in einsum_ir solution: 502.935
  maximum element-wise difference:              0.00161743
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131225
  time (eval):    0.00271659
  gflops (eval):  4021.24
  gflops (total): 689.689
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131225,0.00271659,4021.24,689.689

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0290758
  gflops (total): 375.709
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,375.709

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00415257
  gflops (eval):  2630.67
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00415257,2630.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      431.916
  maximum absolute entry in einsum_ir solution: 431.916
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130594
  time (eval):    0.00273839
  gflops (eval):  3989.22
  gflops (total): 691.494
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130594,0.00273839,3989.22,691.494

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287106
  gflops (total): 380.488
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.488

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00413847
  gflops (eval):  2639.63
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00413847,2639.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      437.454
  maximum absolute entry in einsum_ir solution: 437.455
  maximum element-wise difference:              0.00161743
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129893
  time (eval):    0.00275808
  gflops (eval):  3960.74
  gflops (total): 693.708
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129893,0.00275808,3960.74,693.708

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286377
  gflops (total): 381.457
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,381.457

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00405478
  gflops (eval):  2694.11
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00405478,2694.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      457.126
  maximum absolute entry in einsum_ir solution: 457.126
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130131
  time (eval):    0.00275386
  gflops (eval):  3966.82
  gflops (total): 692.844
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130131,0.00275386,3966.82,692.844

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0282384
  gflops (total): 386.85
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,386.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00431363
  gflops (eval):  2532.45
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00431363,2532.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      439.23
  maximum absolute entry in einsum_ir solution: 439.23
  maximum element-wise difference:              0.00161743
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131958
  time (eval):    0.00278673
  gflops (eval):  3920.02
  gflops (total): 683.5
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131958,0.00278673,3920.02,683.5

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0289131
  gflops (total): 377.823
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,377.823

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00406705
  gflops (eval):  2685.99
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00406705,2685.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      417.87
  maximum absolute entry in einsum_ir solution: 417.871
  maximum element-wise difference:              0.00167847
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131676
  time (eval):    0.00270194
  gflops (eval):  4043.04
  gflops (total): 688.368
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131676,0.00270194,4043.04,688.368

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0285999
  gflops (total): 381.961
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,381.961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00416889
  gflops (eval):  2620.37
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00416889,2620.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      456.605
  maximum absolute entry in einsum_ir solution: 456.606
  maximum element-wise difference:              0.00180054
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131813
  time (eval):    0.00273384
  gflops (eval):  3995.86
  gflops (total): 686.395
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131813,0.00273384,3995.86,686.395

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0289439
  gflops (total): 377.421
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,377.421

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00414736
  gflops (eval):  2633.98
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00414736,2633.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      416.083
  maximum absolute entry in einsum_ir solution: 416.084
  maximum element-wise difference:              0.00167847
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130048
  time (eval):    0.00276645
  gflops (eval):  3948.75
  gflops (total): 692.655
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130048,0.00276645,3948.75,692.655

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0280659
  gflops (total): 389.228
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,389.228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00426545
  gflops (eval):  2561.05
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00426545,2561.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      403.619
  maximum absolute entry in einsum_ir solution: 403.62
  maximum element-wise difference:              0.00161743
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.01316
  time (eval):    0.00275269
  gflops (eval):  3968.5
  gflops (total): 686.499
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.01316,0.00275269,3968.5,686.499

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283429
  gflops (total): 385.424
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,385.424

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00409285
  gflops (eval):  2669.06
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00409285,2669.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      457.274
  maximum absolute entry in einsum_ir solution: 457.275
  maximum element-wise difference:              0.00167847
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129822
  time (eval):    0.00275059
  gflops (eval):  3971.53
  gflops (total): 694.351
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129822,0.00275059,3971.53,694.351

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286211
  gflops (total): 381.678
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,381.678

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00407079
  gflops (eval):  2683.52
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00407079,2683.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      433.379
  maximum absolute entry in einsum_ir solution: 433.379
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131111
  time (eval):    0.00269733
  gflops (eval):  4049.95
  gflops (total): 691.028
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131111,0.00269733,4049.95,691.028

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0289574
  gflops (total): 377.246
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,377.246

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00469877
  gflops (eval):  2324.87
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00469877,2324.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.398
  maximum absolute entry in einsum_ir solution: 503.398
  maximum element-wise difference:              0.00149536
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130702
  time (eval):    0.00274406
  gflops (eval):  3980.97
  gflops (total): 690.769
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130702,0.00274406,3980.97,690.769

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287492
  gflops (total): 379.977
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,379.977

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00414973
  gflops (eval):  2632.47
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00414973,2632.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      437.163
  maximum absolute entry in einsum_ir solution: 437.164
  maximum element-wise difference:              0.00167847
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129339
  time (eval):    0.00275881
  gflops (eval):  3959.69
  gflops (total): 696.123
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129339,0.00275881,3959.69,696.123

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283609
  gflops (total): 385.179
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,385.179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00419662
  gflops (eval):  2603.06
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00419662,2603.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      431.24
  maximum absolute entry in einsum_ir solution: 431.24
  maximum element-wise difference:              0.00152588
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129108
  time (eval):    0.00275785
  gflops (eval):  3961.07
  gflops (total): 697.19
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129108,0.00275785,3961.07,697.19

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286847
  gflops (total): 380.831
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.831

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00432361
  gflops (eval):  2526.6
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00432361,2526.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      399.436
  maximum absolute entry in einsum_ir solution: 399.436
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131219
  time (eval):    0.0026961
  gflops (eval):  4051.8
  gflops (total): 690.609
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131219,0.0026961,4051.8,690.609

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286996
  gflops (total): 380.634
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00436734
  gflops (eval):  2501.3
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00436734,2501.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      436.369
  maximum absolute entry in einsum_ir solution: 436.369
  maximum element-wise difference:              0.0017395
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129084
  time (eval):    0.00276258
  gflops (eval):  3954.29
  gflops (total): 697.086
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129084,0.00276258,3954.29,697.086

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0288168
  gflops (total): 379.086
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,379.086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00408142
  gflops (eval):  2676.53
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00408142,2676.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      435.294
  maximum absolute entry in einsum_ir solution: 435.294
  maximum element-wise difference:              0.00152588
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0132588
  time (eval):    0.00329353
  gflops (eval):  3316.82
  gflops (total): 659.971
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0132588,0.00329353,3316.82,659.971

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0292902
  gflops (total): 372.958
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,372.958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0040922
  gflops (eval):  2669.48
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0040922,2669.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      425.864
  maximum absolute entry in einsum_ir solution: 425.865
  maximum element-wise difference:              0.00177002
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131582
  time (eval):    0.00274863
  gflops (eval):  3974.36
  gflops (total): 686.753
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131582,0.00274863,3974.36,686.753

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0293503
  gflops (total): 372.196
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,372.196

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00411458
  gflops (eval):  2654.96
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00411458,2654.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      409.467
  maximum absolute entry in einsum_ir solution: 409.467
  maximum element-wise difference:              0.00160217
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0132461
  time (eval):    0.00277417
  gflops (eval):  3937.77
  gflops (total): 681.89
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0132461,0.00277417,3937.77,681.89

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.02922
  gflops (total): 373.855
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,373.855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00403574
  gflops (eval):  2706.83
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00403574,2706.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      426.983
  maximum absolute entry in einsum_ir solution: 426.982
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0133673
  time (eval):    0.00273771
  gflops (eval):  3990.21
  gflops (total): 678.302
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0133673,0.00273771,3990.21,678.302

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287768
  gflops (total): 379.613
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,379.613

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00414449
  gflops (eval):  2635.8
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00414449,2635.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.842
  maximum absolute entry in einsum_ir solution: 478.842
  maximum element-wise difference:              0.0017395
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.013174
  time (eval):    0.0027511
  gflops (eval):  3970.8
  gflops (total): 685.962
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.013174,0.0027511,3970.8,685.962

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0291764
  gflops (total): 374.414
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,374.414

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0041663
  gflops (eval):  2622
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0041663,2622,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.283
  maximum absolute entry in einsum_ir solution: 466.284
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130195
  time (eval):    0.0298385
  gflops (eval):  1427.03
  gflops (total): 993.525
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130195,0.0298385,1427.03,993.525

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0506527
  gflops (total): 840.636
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,840.636

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00810728
  gflops (eval):  5252.13
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00810728,5252.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1849.92
  maximum absolute entry in einsum_ir solution: 1849.91
  maximum element-wise difference:              0.0224609
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131079
  time (eval):    0.0298387
  gflops (eval):  1427.02
  gflops (total): 991.474
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131079,0.0298387,1427.02,991.474

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0508481
  gflops (total): 837.405
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,837.405

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00821154
  gflops (eval):  5185.44
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00821154,5185.44,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1649.15
  maximum absolute entry in einsum_ir solution: 1649.14
  maximum element-wise difference:              0.0245361
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129144
  time (eval):    0.0301411
  gflops (eval):  1412.7
  gflops (total): 988.965
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129144,0.0301411,1412.7,988.965

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0509739
  gflops (total): 835.337
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,835.337

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00820452
  gflops (eval):  5189.88
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00820452,5189.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1810.5
  maximum absolute entry in einsum_ir solution: 1810.49
  maximum element-wise difference:              0.0246582
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131475
  time (eval):    0.0299667
  gflops (eval):  1420.92
  gflops (total): 987.62
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131475,0.0299667,1420.92,987.62

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0497117
  gflops (total): 856.547
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,856.547

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0080701
  gflops (eval):  5276.32
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0080701,5276.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1723.99
  maximum absolute entry in einsum_ir solution: 1723.99
  maximum element-wise difference:              0.0264893
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131201
  time (eval):    0.0298809
  gflops (eval):  1425.01
  gflops (total): 990.219
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131201,0.0298809,1425.01,990.219

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0512044
  gflops (total): 831.578
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,831.578

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00830467
  gflops (eval):  5127.28
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00830467,5127.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1710.33
  maximum absolute entry in einsum_ir solution: 1710.32
  maximum element-wise difference:              0.0307617
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130518
  time (eval):    0.0298939
  gflops (eval):  1424.39
  gflops (total): 991.494
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130518,0.0298939,1424.39,991.494

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0500288
  gflops (total): 851.118
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,851.118

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0081211
  gflops (eval):  5243.18
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0081211,5243.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1880.09
  maximum absolute entry in einsum_ir solution: 1880.09
  maximum element-wise difference:              0.0311279
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0133433
  time (eval):    0.0298577
  gflops (eval):  1426.11
  gflops (total): 985.636
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0133433,0.0298577,1426.11,985.636

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0502997
  gflops (total): 846.535
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,846.535

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.008113
  gflops (eval):  5248.42
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.008113,5248.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1850.38
  maximum absolute entry in einsum_ir solution: 1850.37
  maximum element-wise difference:              0.0234375
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128897
  time (eval):    0.0299045
  gflops (eval):  1423.88
  gflops (total): 995.006
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128897,0.0299045,1423.88,995.006

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0497439
  gflops (total): 855.994
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,855.994

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808104
  gflops (eval):  5269.18
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808104,5269.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1787.6
  maximum absolute entry in einsum_ir solution: 1787.59
  maximum element-wise difference:              0.0328369
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130668
  time (eval):    0.0298469
  gflops (eval):  1426.63
  gflops (total): 992.235
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130668,0.0298469,1426.63,992.235

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0507529
  gflops (total): 838.975
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,838.975

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00816622
  gflops (eval):  5214.21
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00816622,5214.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1843.55
  maximum absolute entry in einsum_ir solution: 1843.53
  maximum element-wise difference:              0.0224609
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129876
  time (eval):    0.0298632
  gflops (eval):  1425.85
  gflops (total): 993.691
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129876,0.0298632,1425.85,993.691

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0501082
  gflops (total): 849.769
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,849.769

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00807441
  gflops (eval):  5273.51
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00807441,5273.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1863.64
  maximum absolute entry in einsum_ir solution: 1863.63
  maximum element-wise difference:              0.0290527
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128773
  time (eval):    0.029884
  gflops (eval):  1424.86
  gflops (total): 995.769
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128773,0.029884,1424.86,995.769

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0506891
  gflops (total): 840.032
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,840.032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00816443
  gflops (eval):  5215.36
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00816443,5215.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1678.75
  maximum absolute entry in einsum_ir solution: 1678.76
  maximum element-wise difference:              0.0236816
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128905
  time (eval):    0.0298717
  gflops (eval):  1425.44
  gflops (total): 995.749
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128905,0.0298717,1425.44,995.749

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0512169
  gflops (total): 831.374
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,831.374

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00804182
  gflops (eval):  5294.88
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00804182,5294.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1622.79
  maximum absolute entry in einsum_ir solution: 1622.78
  maximum element-wise difference:              0.0291748
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128477
  time (eval):    0.0298631
  gflops (eval):  1425.85
  gflops (total): 996.948
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128477,0.0298631,1425.85,996.948

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0500888
  gflops (total): 850.099
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,850.099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00809379
  gflops (eval):  5260.88
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00809379,5260.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1722.87
  maximum absolute entry in einsum_ir solution: 1722.86
  maximum element-wise difference:              0.0270996
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0126351
  time (eval):    0.029848
  gflops (eval):  1426.58
  gflops (total): 1002.29
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0126351,0.029848,1426.58,1002.29

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0508344
  gflops (total): 837.63
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,837.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00812962
  gflops (eval):  5237.69
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00812962,5237.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1848.32
  maximum absolute entry in einsum_ir solution: 1848.31
  maximum element-wise difference:              0.0238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0132295
  time (eval):    0.029963
  gflops (eval):  1421.1
  gflops (total): 985.829
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0132295,0.029963,1421.1,985.829

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0502378
  gflops (total): 847.578
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,847.578

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00805665
  gflops (eval):  5285.13
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00805665,5285.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1716.11
  maximum absolute entry in einsum_ir solution: 1716.11
  maximum element-wise difference:              0.0258789
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130709
  time (eval):    0.0298396
  gflops (eval):  1426.98
  gflops (total): 992.309
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130709,0.0298396,1426.98,992.309

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.050764
  gflops (total): 838.792
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,838.792

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808418
  gflops (eval):  5267.13
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808418,5267.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1668.75
  maximum absolute entry in einsum_ir solution: 1668.74
  maximum element-wise difference:              0.0236816
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131523
  time (eval):    0.0298497
  gflops (eval):  1426.5
  gflops (total): 990.198
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131523,0.0298497,1426.5,990.198

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.049665
  gflops (total): 857.353
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,857.353

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00819347
  gflops (eval):  5196.87
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00819347,5196.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1668.38
  maximum absolute entry in einsum_ir solution: 1668.39
  maximum element-wise difference:              0.0266113
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130468
  time (eval):    0.0298453
  gflops (eval):  1426.7
  gflops (total): 992.733
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130468,0.0298453,1426.7,992.733

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0511938
  gflops (total): 831.75
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,831.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0080745
  gflops (eval):  5273.45
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0080745,5273.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1747.1
  maximum absolute entry in einsum_ir solution: 1747.1
  maximum element-wise difference:              0.0239258
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131429
  time (eval):    0.0300036
  gflops (eval):  1419.18
  gflops (total): 986.88
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131429,0.0300036,1419.18,986.88

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0504947
  gflops (total): 843.266
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,843.266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00814082
  gflops (eval):  5230.48
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00814082,5230.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1897.45
  maximum absolute entry in einsum_ir solution: 1897.46
  maximum element-wise difference:              0.0253906
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128102
  time (eval):    0.0298649
  gflops (eval):  1425.77
  gflops (total): 997.781
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128102,0.0298649,1425.77,997.781

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0497231
  gflops (total): 856.35
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,856.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00813825
  gflops (eval):  5232.14
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00813825,5232.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1606.42
  maximum absolute entry in einsum_ir solution: 1606.42
  maximum element-wise difference:              0.026123
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130753
  time (eval):    0.0298577
  gflops (eval):  1426.11
  gflops (total): 991.788
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130753,0.0298577,1426.11,991.788

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0500316
  gflops (total): 851.071
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,851.071

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00805994
  gflops (eval):  5282.97
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00805994,5282.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1615.62
  maximum absolute entry in einsum_ir solution: 1615.61
  maximum element-wise difference:              0.024231
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.013011
  time (eval):    0.0302447
  gflops (eval):  1407.87
  gflops (total): 984.389
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.013011,0.0302447,1407.87,984.389

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.05077
  gflops (total): 838.693
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,838.693

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00818758
  gflops (eval):  5200.61
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00818758,5200.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1608.19
  maximum absolute entry in einsum_ir solution: 1608.18
  maximum element-wise difference:              0.0261841
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131041
  time (eval):    0.0298571
  gflops (eval):  1426.14
  gflops (total): 991.137
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131041,0.0298571,1426.14,991.137

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0504468
  gflops (total): 844.066
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,844.066

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808608
  gflops (eval):  5265.89
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808608,5265.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1710.65
  maximum absolute entry in einsum_ir solution: 1710.65
  maximum element-wise difference:              0.0335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128902
  time (eval):    0.0298756
  gflops (eval):  1425.26
  gflops (total): 995.664
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128902,0.0298756,1425.26,995.664

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0505761
  gflops (total): 841.908
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,841.908

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00809225
  gflops (eval):  5261.88
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00809225,5261.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1641.81
  maximum absolute entry in einsum_ir solution: 1641.82
  maximum element-wise difference:              0.0252686
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128978
  time (eval):    0.0299545
  gflops (eval):  1421.5
  gflops (total): 993.655
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128978,0.0299545,1421.5,993.655

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0510405
  gflops (total): 834.248
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,834.248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0080948
  gflops (eval):  5260.22
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0080948,5260.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1634.73
  maximum absolute entry in einsum_ir solution: 1634.73
  maximum element-wise difference:              0.0274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.013
  time (eval):    0.0299043
  gflops (eval):  1423.89
  gflops (total): 992.452
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.013,0.0299043,1423.89,992.452

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.05123
  gflops (total): 831.162
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,831.162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00818178
  gflops (eval):  5204.3
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00818178,5204.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1731.89
  maximum absolute entry in einsum_ir solution: 1731.9
  maximum element-wise difference:              0.0253906
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129279
  time (eval):    0.0298717
  gflops (eval):  1425.44
  gflops (total): 994.878
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129279,0.0298717,1425.44,994.878

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0502336
  gflops (total): 847.648
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,847.648

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0082942
  gflops (eval):  5133.76
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0082942,5133.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1712.61
  maximum absolute entry in einsum_ir solution: 1712.6
  maximum element-wise difference:              0.0233154
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131452
  time (eval):    0.0298369
  gflops (eval):  1427.1
  gflops (total): 990.655
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131452,0.0298369,1427.1,990.655

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0507432
  gflops (total): 839.136
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,839.136

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00807713
  gflops (eval):  5271.73
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00807713,5271.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1804.42
  maximum absolute entry in einsum_ir solution: 1804.42
  maximum element-wise difference:              0.026001
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129479
  time (eval):    0.0298707
  gflops (eval):  1425.49
  gflops (total): 994.438
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129479,0.0298707,1425.49,994.438

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0502907
  gflops (total): 846.686
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,846.686

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00803891
  gflops (eval):  5296.79
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00803891,5296.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1815.92
  maximum absolute entry in einsum_ir solution: 1815.92
  maximum element-wise difference:              0.0255127
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129165
  time (eval):    0.029847
  gflops (eval):  1426.62
  gflops (total): 995.718
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129165,0.029847,1426.62,995.718

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0509456
  gflops (total): 835.801
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,835.801

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00804983
  gflops (eval):  5289.61
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00804983,5289.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1608.6
  maximum absolute entry in einsum_ir solution: 1608.6
  maximum element-wise difference:              0.0319824
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129328
  time (eval):    0.0298662
  gflops (eval):  1425.71
  gflops (total): 994.893
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129328,0.0298662,1425.71,994.893

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0518863
  gflops (total): 820.649
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,820.649

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00810558
  gflops (eval):  5253.23
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00810558,5253.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1729.84
  maximum absolute entry in einsum_ir solution: 1729.84
  maximum element-wise difference:              0.0250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0132981
  time (eval):    0.0302753
  gflops (eval):  1406.44
  gflops (total): 977.211
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0132981,0.0302753,1406.44,977.211

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0496959
  gflops (total): 856.82
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,856.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00806161
  gflops (eval):  5281.88
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00806161,5281.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1730.63
  maximum absolute entry in einsum_ir solution: 1730.61
  maximum element-wise difference:              0.0299072
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130137
  time (eval):    0.0298556
  gflops (eval):  1426.21
  gflops (total): 993.262
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130137,0.0298556,1426.21,993.262

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0512233
  gflops (total): 831.271
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,831.271

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00815576
  gflops (eval):  5220.9
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00815576,5220.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1763.16
  maximum absolute entry in einsum_ir solution: 1763.16
  maximum element-wise difference:              0.027832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0127377
  time (eval):    0.0299829
  gflops (eval):  1420.16
  gflops (total): 996.719
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0127377,0.0299829,1420.16,996.719

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0514189
  gflops (total): 828.109
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,828.109

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00806989
  gflops (eval):  5276.46
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00806989,5276.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1863.27
  maximum absolute entry in einsum_ir solution: 1863.28
  maximum element-wise difference:              0.0305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129591
  time (eval):    0.0298643
  gflops (eval):  1425.8
  gflops (total): 994.327
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129591,0.0298643,1425.8,994.327

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.050403
  gflops (total): 844.8
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,844.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00804748
  gflops (eval):  5291.15
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00804748,5291.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1735.19
  maximum absolute entry in einsum_ir solution: 1735.2
  maximum element-wise difference:              0.0241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131848
  time (eval):    0.0301734
  gflops (eval):  1411.19
  gflops (total): 982.062
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131848,0.0301734,1411.19,982.062

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0495265
  gflops (total): 859.751
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,859.751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00803659
  gflops (eval):  5298.32
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00803659,5298.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1837.37
  maximum absolute entry in einsum_ir solution: 1837.35
  maximum element-wise difference:              0.0262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130758
  time (eval):    0.0298565
  gflops (eval):  1426.17
  gflops (total): 991.804
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130758,0.0298565,1426.17,991.804

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0510848
  gflops (total): 833.524
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,833.524

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00811117
  gflops (eval):  5249.6
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00811117,5249.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1733.4
  maximum absolute entry in einsum_ir solution: 1733.39
  maximum element-wise difference:              0.03479
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0133163
  time (eval):    0.029819
  gflops (eval):  1427.96
  gflops (total): 987.135
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0133163,0.029819,1427.96,987.135

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0495699
  gflops (total): 858.998
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,858.998

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0082191
  gflops (eval):  5180.67
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0082191,5180.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1778.63
  maximum absolute entry in einsum_ir solution: 1778.63
  maximum element-wise difference:              0.0291748
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130516
  time (eval):    0.0298481
  gflops (eval):  1426.57
  gflops (total): 992.557
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130516,0.0298481,1426.57,992.557

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0508124
  gflops (total): 837.993
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,837.993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00817349
  gflops (eval):  5209.57
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00817349,5209.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1628
  maximum absolute entry in einsum_ir solution: 1628
  maximum element-wise difference:              0.0267334
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131674
  time (eval):    0.0301376
  gflops (eval):  1412.87
  gflops (total): 983.268
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131674,0.0301376,1412.87,983.268

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0498356
  gflops (total): 854.417
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,854.417

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00815236
  gflops (eval):  5223.08
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00815236,5223.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1682.06
  maximum absolute entry in einsum_ir solution: 1682.06
  maximum element-wise difference:              0.0267334
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130292
  time (eval):    0.0297967
  gflops (eval):  1429.03
  gflops (total): 994.269
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130292,0.0297967,1429.03,994.269

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0508726
  gflops (total): 837.001
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,837.001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0081156
  gflops (eval):  5246.74
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0081156,5246.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1862.03
  maximum absolute entry in einsum_ir solution: 1862.03
  maximum element-wise difference:              0.027832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130698
  time (eval):    0.0298765
  gflops (eval):  1425.22
  gflops (total): 991.481
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130698,0.0298765,1425.22,991.481

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0507191
  gflops (total): 839.534
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,839.534

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00809069
  gflops (eval):  5262.9
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00809069,5262.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1616.76
  maximum absolute entry in einsum_ir solution: 1616.77
  maximum element-wise difference:              0.0281982
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0132768
  time (eval):    0.0298416
  gflops (eval):  1426.88
  gflops (total): 987.524
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0132768,0.0298416,1426.88,987.524

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0503363
  gflops (total): 845.919
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,845.919

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00807496
  gflops (eval):  5273.14
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00807496,5273.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1726.61
  maximum absolute entry in einsum_ir solution: 1726.63
  maximum element-wise difference:              0.0286865
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130348
  time (eval):    0.029848
  gflops (eval):  1426.58
  gflops (total): 992.95
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130348,0.029848,1426.58,992.95

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0502481
  gflops (total): 847.404
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,847.404

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0081476
  gflops (eval):  5226.13
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0081476,5226.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1784.34
  maximum absolute entry in einsum_ir solution: 1784.34
  maximum element-wise difference:              0.0251465
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130066
  time (eval):    0.0298731
  gflops (eval):  1425.38
  gflops (total): 993.022
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130066,0.0298731,1425.38,993.022

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0504017
  gflops (total): 844.822
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,844.822

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00810307
  gflops (eval):  5254.85
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00810307,5254.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1734.27
  maximum absolute entry in einsum_ir solution: 1734.28
  maximum element-wise difference:              0.02771
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0127931
  time (eval):    0.0298542
  gflops (eval):  1426.28
  gflops (total): 998.431
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0127931,0.0298542,1426.28,998.431

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0506447
  gflops (total): 840.768
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,840.768

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00811493
  gflops (eval):  5247.17
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00811493,5247.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1938.46
  maximum absolute entry in einsum_ir solution: 1938.45
  maximum element-wise difference:              0.0366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0132389
  time (eval):    0.0298689
  gflops (eval):  1425.58
  gflops (total): 987.766
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0132389,0.0298689,1425.58,987.766

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0513357
  gflops (total): 829.45
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,829.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00813591
  gflops (eval):  5233.64
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00813591,5233.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1697.54
  maximum absolute entry in einsum_ir solution: 1697.54
  maximum element-wise difference:              0.0245361
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130106
  time (eval):    0.0298202
  gflops (eval):  1427.9
  gflops (total): 994.153
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130106,0.0298202,1427.9,994.153

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.052354
  gflops (total): 813.317
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,813.317

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808859
  gflops (eval):  5264.26
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808859,5264.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1797.78
  maximum absolute entry in einsum_ir solution: 1797.78
  maximum element-wise difference:              0.0336914
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0132085
  time (eval):    0.0298812
  gflops (eval):  1424.99
  gflops (total): 988.182
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0132085,0.0298812,1424.99,988.182

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0502833
  gflops (total): 846.811
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,846.811

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0080962
  gflops (eval):  5259.31
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0080962,5259.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1784.76
  maximum absolute entry in einsum_ir solution: 1784.76
  maximum element-wise difference:              0.0310059
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0133652
  time (eval):    0.02981
  gflops (eval):  1428.39
  gflops (total): 986.224
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0133652,0.02981,1428.39,986.224

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0508718
  gflops (total): 837.014
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,837.014

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0080701
  gflops (eval):  5276.32
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0080701,5276.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1747.09
  maximum absolute entry in einsum_ir solution: 1747.1
  maximum element-wise difference:              0.0275879
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129967
  time (eval):    0.0298729
  gflops (eval):  1425.39
  gflops (total): 993.255
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129967,0.0298729,1425.39,993.255

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0512835
  gflops (total): 830.296
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,830.296

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00815099
  gflops (eval):  5223.96
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00815099,5223.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1892.96
  maximum absolute entry in einsum_ir solution: 1892.95
  maximum element-wise difference:              0.0328369
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130569
  time (eval):    0.0302454
  gflops (eval):  1407.83
  gflops (total): 983.329
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130569,0.0302454,1407.83,983.329

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0501753
  gflops (total): 848.634
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,848.634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808494
  gflops (eval):  5266.63
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808494,5266.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1756.15
  maximum absolute entry in einsum_ir solution: 1756.15
  maximum element-wise difference:              0.026123
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0124411
  time (eval):    0.0299155
  gflops (eval):  1423.35
  gflops (total): 1005.28
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0124411,0.0299155,1423.35,1005.28

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0500007
  gflops (total): 851.596
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,851.596

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00806078
  gflops (eval):  5282.42
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00806078,5282.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1750.04
  maximum absolute entry in einsum_ir solution: 1750.04
  maximum element-wise difference:              0.0249023
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130017
  time (eval):    0.0302692
  gflops (eval):  1406.72
  gflops (total): 984.042
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130017,0.0302692,1406.72,984.042

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0506267
  gflops (total): 841.067
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,841.067

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00804526
  gflops (eval):  5292.61
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00804526,5292.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1874.04
  maximum absolute entry in einsum_ir solution: 1874.04
  maximum element-wise difference:              0.0244751
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129973
  time (eval):    0.0298711
  gflops (eval):  1425.47
  gflops (total): 993.283
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129973,0.0298711,1425.47,993.283

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.051049
  gflops (total): 834.109
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,834.109

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00812252
  gflops (eval):  5242.27
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00812252,5242.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1729.8
  maximum absolute entry in einsum_ir solution: 1729.81
  maximum element-wise difference:              0.026123
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.013259
  time (eval):    0.0299213
  gflops (eval):  1423.08
  gflops (total): 986.108
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.013259,0.0299213,1423.08,986.108

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.050827
  gflops (total): 837.753
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,837.753

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00814474
  gflops (eval):  5227.96
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00814474,5227.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1759.81
  maximum absolute entry in einsum_ir solution: 1759.82
  maximum element-wise difference:              0.0264893
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130968
  time (eval):    0.0298996
  gflops (eval):  1424.11
  gflops (total): 990.324
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130968,0.0298996,1424.11,990.324

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0510047
  gflops (total): 834.834
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,834.834

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00805947
  gflops (eval):  5283.28
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00805947,5283.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1849.19
  maximum absolute entry in einsum_ir solution: 1849.19
  maximum element-wise difference:              0.0318604
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128721
  time (eval):    0.0298067
  gflops (eval):  1428.55
  gflops (total): 997.694
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128721,0.0298067,1428.55,997.694

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0493867
  gflops (total): 862.185
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,862.185

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00811698
  gflops (eval):  5245.85
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00811698,5245.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1613.26
  maximum absolute entry in einsum_ir solution: 1613.27
  maximum element-wise difference:              0.0301514
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129982
  time (eval):    0.0300855
  gflops (eval):  1415.32
  gflops (total): 988.319
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129982,0.0300855,1415.32,988.319

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0511332
  gflops (total): 832.736
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,832.736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808449
  gflops (eval):  5266.93
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808449,5266.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1822.51
  maximum absolute entry in einsum_ir solution: 1822.52
  maximum element-wise difference:              0.0283203
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0133623
  time (eval):    0.0298306
  gflops (eval):  1427.41
  gflops (total): 985.82
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0133623,0.0298306,1427.41,985.82

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0510356
  gflops (total): 834.328
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,834.328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00811002
  gflops (eval):  5250.35
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00811002,5250.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1676.7
  maximum absolute entry in einsum_ir solution: 1676.68
  maximum element-wise difference:              0.0352783
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129929
  time (eval):    0.0298511
  gflops (eval):  1426.43
  gflops (total): 993.848
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129929,0.0298511,1426.43,993.848

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.049155
  gflops (total): 866.247
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,866.247

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00814233
  gflops (eval):  5229.51
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00814233,5229.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1911.27
  maximum absolute entry in einsum_ir solution: 1911.26
  maximum element-wise difference:              0.0335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.013007
  time (eval):    0.0298726
  gflops (eval):  1425.4
  gflops (total): 993.022
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.013007,0.0298726,1425.4,993.022

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.051577
  gflops (total): 825.57
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,825.57

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0081302
  gflops (eval):  5237.32
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0081302,5237.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1684.63
  maximum absolute entry in einsum_ir solution: 1684.64
  maximum element-wise difference:              0.0258789
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129574
  time (eval):    0.0298803
  gflops (eval):  1425.04
  gflops (total): 993.995
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129574,0.0298803,1425.04,993.995

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0504921
  gflops (total): 843.309
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,843.309

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00815702
  gflops (eval):  5220.1
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00815702,5220.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1777.08
  maximum absolute entry in einsum_ir solution: 1777.06
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130149
  time (eval):    0.0298963
  gflops (eval):  1424.27
  gflops (total): 992.292
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130149,0.0298963,1424.27,992.292

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0510703
  gflops (total): 833.761
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,833.761

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00816071
  gflops (eval):  5217.74
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00816071,5217.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1707.55
  maximum absolute entry in einsum_ir solution: 1707.56
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130509
  time (eval):    0.0298599
  gflops (eval):  1426.01
  gflops (total): 992.301
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130509,0.0298599,1426.01,992.301

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.050342
  gflops (total): 845.824
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,845.824

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808519
  gflops (eval):  5266.47
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808519,5266.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1756.45
  maximum absolute entry in einsum_ir solution: 1756.45
  maximum element-wise difference:              0.0272217
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130178
  time (eval):    0.0298462
  gflops (eval):  1426.66
  gflops (total): 993.386
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130178,0.0298462,1426.66,993.386

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0514025
  gflops (total): 828.373
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,828.373

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00809261
  gflops (eval):  5261.64
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00809261,5261.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1984.96
  maximum absolute entry in einsum_ir solution: 1984.96
  maximum element-wise difference:              0.0264893
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130442
  time (eval):    0.0302687
  gflops (eval):  1406.75
  gflops (total): 983.088
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130442,0.0302687,1406.75,983.088

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0514217
  gflops (total): 828.063
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,828.063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0081641
  gflops (eval):  5215.57
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0081641,5215.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1667.05
  maximum absolute entry in einsum_ir solution: 1667.06
  maximum element-wise difference:              0.0299072
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129481
  time (eval):    0.0299316
  gflops (eval):  1422.59
  gflops (total): 993.019
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129481,0.0299316,1422.59,993.019

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.051388
  gflops (total): 828.607
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,828.607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00813944
  gflops (eval):  5231.37
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00813944,5231.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1798.23
  maximum absolute entry in einsum_ir solution: 1798.24
  maximum element-wise difference:              0.0283203
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131599
  time (eval):    0.02983
  gflops (eval):  1427.43
  gflops (total): 990.475
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131599,0.02983,1427.43,990.475

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0504972
  gflops (total): 843.223
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,843.223

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00809563
  gflops (eval):  5259.68
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00809563,5259.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1917.35
  maximum absolute entry in einsum_ir solution: 1917.35
  maximum element-wise difference:              0.0273438
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130131
  time (eval):    0.0298395
  gflops (eval):  1426.98
  gflops (total): 993.648
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130131,0.0298395,1426.98,993.648

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0516778
  gflops (total): 823.96
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,823.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00813221
  gflops (eval):  5236.02
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00813221,5236.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1752.51
  maximum absolute entry in einsum_ir solution: 1752.51
  maximum element-wise difference:              0.0273438
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130021
  time (eval):    0.0300238
  gflops (eval):  1418.22
  gflops (total): 989.647
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130021,0.0300238,1418.22,989.647

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0516309
  gflops (total): 824.708
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,824.708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00811301
  gflops (eval):  5248.41
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00811301,5248.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1726.46
  maximum absolute entry in einsum_ir solution: 1726.46
  maximum element-wise difference:              0.026001
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129228
  time (eval):    0.0298638
  gflops (eval):  1425.82
  gflops (total): 995.181
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129228,0.0298638,1425.82,995.181

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0513744
  gflops (total): 828.827
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,828.827

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808586
  gflops (eval):  5266.04
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808586,5266.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1795.76
  maximum absolute entry in einsum_ir solution: 1795.75
  maximum element-wise difference:              0.0258789
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129223
  time (eval):    0.0298769
  gflops (eval):  1425.2
  gflops (total): 994.889
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129223,0.0298769,1425.2,994.889

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0508041
  gflops (total): 838.129
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,838.129

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00813762
  gflops (eval):  5232.54
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00813762,5232.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1770.72
  maximum absolute entry in einsum_ir solution: 1770.71
  maximum element-wise difference:              0.0246582
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128184
  time (eval):    0.0302146
  gflops (eval):  1409.27
  gflops (total): 989.483
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128184,0.0302146,1409.27,989.483

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0489618
  gflops (total): 869.666
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,869.666

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808624
  gflops (eval):  5265.79
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808624,5265.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1812.64
  maximum absolute entry in einsum_ir solution: 1812.65
  maximum element-wise difference:              0.0291138
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130171
  time (eval):    0.0298812
  gflops (eval):  1424.99
  gflops (total): 992.589
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130171,0.0298812,1424.99,992.589

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0508552
  gflops (total): 837.287
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,837.287

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00825678
  gflops (eval):  5157.03
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00825678,5157.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1757
  maximum absolute entry in einsum_ir solution: 1756.99
  maximum element-wise difference:              0.0317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130353
  time (eval):    0.0298317
  gflops (eval):  1427.36
  gflops (total): 993.314
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130353,0.0298317,1427.36,993.314

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0512501
  gflops (total): 830.836
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,830.836

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0080962
  gflops (eval):  5259.31
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0080962,5259.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1927.66
  maximum absolute entry in einsum_ir solution: 1927.65
  maximum element-wise difference:              0.024292
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128575
  time (eval):    0.0300239
  gflops (eval):  1418.22
  gflops (total): 992.982
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128575,0.0300239,1418.22,992.982

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0511841
  gflops (total): 831.907
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,831.907

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00802092
  gflops (eval):  5308.67
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00802092,5308.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1761.88
  maximum absolute entry in einsum_ir solution: 1761.87
  maximum element-wise difference:              0.0240479
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128452
  time (eval):    0.0298218
  gflops (eval):  1427.83
  gflops (total): 997.971
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128452,0.0298218,1427.83,997.971

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0506822
  gflops (total): 840.146
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,840.146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00814707
  gflops (eval):  5226.47
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00814707,5226.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1689.15
  maximum absolute entry in einsum_ir solution: 1689.18
  maximum element-wise difference:              0.0316162
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131108
  time (eval):    0.0298688
  gflops (eval):  1425.58
  gflops (total): 990.713
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131108,0.0298688,1425.58,990.713

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0512273
  gflops (total): 831.206
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,831.206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00817947
  gflops (eval):  5205.77
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00817947,5205.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1825.35
  maximum absolute entry in einsum_ir solution: 1825.34
  maximum element-wise difference:              0.026123
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.013185
  time (eval):    0.029849
  gflops (eval):  1426.53
  gflops (total): 989.46
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.013185,0.029849,1426.53,989.46

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0509192
  gflops (total): 836.235
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,836.235

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.008163
  gflops (eval):  5216.27
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.008163,5216.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1878.02
  maximum absolute entry in einsum_ir solution: 1878.01
  maximum element-wise difference:              0.0251465
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129585
  time (eval):    0.0298124
  gflops (eval):  1428.28
  gflops (total): 995.546
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129585,0.0298124,1428.28,995.546

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.051416
  gflops (total): 828.156
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,828.156

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00816759
  gflops (eval):  5213.34
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00816759,5213.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1743.37
  maximum absolute entry in einsum_ir solution: 1743.39
  maximum element-wise difference:              0.0270996
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129242
  time (eval):    0.0309127
  gflops (eval):  1377.44
  gflops (total): 971.336
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129242,0.0309127,1377.44,971.336

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0507809
  gflops (total): 838.513
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,838.513

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00809708
  gflops (eval):  5258.74
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00809708,5258.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1698.75
  maximum absolute entry in einsum_ir solution: 1698.74
  maximum element-wise difference:              0.026001
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130511
  time (eval):    0.0298562
  gflops (eval):  1426.18
  gflops (total): 992.381
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130511,0.0298562,1426.18,992.381

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0500032
  gflops (total): 851.554
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,851.554

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00821497
  gflops (eval):  5183.27
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00821497,5183.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1632.33
  maximum absolute entry in einsum_ir solution: 1632.35
  maximum element-wise difference:              0.0281982
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130041
  time (eval):    0.0298068
  gflops (eval):  1428.55
  gflops (total): 994.616
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130041,0.0298068,1428.55,994.616

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0513579
  gflops (total): 829.093
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,829.093

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00821217
  gflops (eval):  5185.04
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00821217,5185.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1668.78
  maximum absolute entry in einsum_ir solution: 1668.77
  maximum element-wise difference:              0.0300903
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0125769
  time (eval):    0.0298607
  gflops (eval):  1425.97
  gflops (total): 1003.36
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0125769,0.0298607,1425.97,1003.36

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0504588
  gflops (total): 843.866
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,843.866

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00805714
  gflops (eval):  5284.81
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00805714,5284.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1751.36
  maximum absolute entry in einsum_ir solution: 1751.35
  maximum element-wise difference:              0.0251465
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0133836
  time (eval):    0.029891
  gflops (eval):  1424.52
  gflops (total): 983.959
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0133836,0.029891,1424.52,983.959

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0505835
  gflops (total): 841.786
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,841.786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00809286
  gflops (eval):  5261.48
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00809286,5261.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1768.7
  maximum absolute entry in einsum_ir solution: 1768.71
  maximum element-wise difference:              0.026123
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.012991
  time (eval):    0.0299012
  gflops (eval):  1424.04
  gflops (total): 992.73
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.012991,0.0299012,1424.04,992.73

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0512057
  gflops (total): 831.557
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,831.557

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808805
  gflops (eval):  5264.61
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808805,5264.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1813.07
  maximum absolute entry in einsum_ir solution: 1813.09
  maximum element-wise difference:              0.0268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130459
  time (eval):    0.0298588
  gflops (eval):  1426.06
  gflops (total): 992.442
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130459,0.0298588,1426.06,992.442

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0496991
  gflops (total): 856.764
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,856.764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00815253
  gflops (eval):  5222.97
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00815253,5222.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1609.83
  maximum absolute entry in einsum_ir solution: 1609.83
  maximum element-wise difference:              0.0280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129941
  time (eval):    0.0298572
  gflops (eval):  1426.13
  gflops (total): 993.677
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129941,0.0298572,1426.13,993.677

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0513325
  gflops (total): 829.503
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,829.503

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00807525
  gflops (eval):  5272.95
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00807525,5272.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1723.67
  maximum absolute entry in einsum_ir solution: 1723.68
  maximum element-wise difference:              0.0229492
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.013125
  time (eval):    0.0298137
  gflops (eval):  1428.22
  gflops (total): 991.657
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.013125,0.0298137,1428.22,991.657

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0497126
  gflops (total): 856.531
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,856.531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00804779
  gflops (eval):  5290.95
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00804779,5290.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1710.27
  maximum absolute entry in einsum_ir solution: 1710.29
  maximum element-wise difference:              0.0288086
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128638
  time (eval):    0.0300377
  gflops (eval):  1417.57
  gflops (total): 992.518
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128638,0.0300377,1417.57,992.518

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0507646
  gflops (total): 838.781
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,838.781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00815247
  gflops (eval):  5223.01
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00815247,5223.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1759.46
  maximum absolute entry in einsum_ir solution: 1759.44
  maximum element-wise difference:              0.0354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0132366
  time (eval):    0.029874
  gflops (eval):  1425.34
  gflops (total): 987.703
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0132366,0.029874,1425.34,987.703

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0512823
  gflops (total): 830.314
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,830.314

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0081384
  gflops (eval):  5232.04
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0081384,5232.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1937.74
  maximum absolute entry in einsum_ir solution: 1937.74
  maximum element-wise difference:              0.0269775
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0134897
  time (eval):    0.0300838
  gflops (eval):  1415.4
  gflops (total): 977.21
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0134897,0.0300838,1415.4,977.21

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0518848
  gflops (total): 820.672
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,820.672

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00805344
  gflops (eval):  5287.23
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00805344,5287.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1778.14
  maximum absolute entry in einsum_ir solution: 1778.14
  maximum element-wise difference:              0.0288086
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130391
  time (eval):    0.0297873
  gflops (eval):  1429.48
  gflops (total): 994.257
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130391,0.0297873,1429.48,994.257

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0511853
  gflops (total): 831.887
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,831.887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00806201
  gflops (eval):  5281.61
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00806201,5281.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1807.98
  maximum absolute entry in einsum_ir solution: 1807.98
  maximum element-wise difference:              0.0297852
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131492
  time (eval):    0.0298347
  gflops (eval):  1427.21
  gflops (total): 990.612
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131492,0.0298347,1427.21,990.612

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.051103
  gflops (total): 833.228
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,833.228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00812676
  gflops (eval):  5239.53
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00812676,5239.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1652.74
  maximum absolute entry in einsum_ir solution: 1652.75
  maximum element-wise difference:              0.0253906
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131717
  time (eval):    0.0299178
  gflops (eval):  1423.25
  gflops (total): 988.186
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131717,0.0299178,1423.25,988.186

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0503283
  gflops (total): 846.053
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,846.053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00811522
  gflops (eval):  5246.98
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00811522,5246.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1659.38
  maximum absolute entry in einsum_ir solution: 1659.38
  maximum element-wise difference:              0.0288086
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130924
  time (eval):    0.0298684
  gflops (eval):  1425.6
  gflops (total): 991.145
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130924,0.0298684,1425.6,991.145

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0507795
  gflops (total): 838.536
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,838.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00809988
  gflops (eval):  5256.92
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00809988,5256.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1858.29
  maximum absolute entry in einsum_ir solution: 1858.3
  maximum element-wise difference:              0.027832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130191
  time (eval):    0.0298437
  gflops (eval):  1426.78
  gflops (total): 993.412
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130191,0.0298437,1426.78,993.412

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0516025
  gflops (total): 825.162
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,825.162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808151
  gflops (eval):  5268.87
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808151,5268.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1712.09
  maximum absolute entry in einsum_ir solution: 1712.08
  maximum element-wise difference:              0.0258789
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131046
  time (eval):    0.0299039
  gflops (eval):  1423.91
  gflops (total): 990.046
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131046,0.0299039,1423.91,990.046

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0509703
  gflops (total): 835.397
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,835.397

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00804515
  gflops (eval):  5292.69
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00804515,5292.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1702.42
  maximum absolute entry in einsum_ir solution: 1702.42
  maximum element-wise difference:              0.0317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[2,6,4,7,5,3]],[[4,5,0,1,6,7]->[0,6,4,7,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.012728
  time (eval):    0.0298651
  gflops (eval):  1425.76
  gflops (total): 999.702
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.012728,0.0298651,1425.76,999.702

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0513793
  gflops (total): 828.747
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,828.747

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00804034
  gflops (eval):  5295.85
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00804034,5295.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1688.03
  maximum absolute entry in einsum_ir solution: 1688.03
  maximum element-wise difference:              0.0308838
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.012998
  time (eval):    0.0293246
  gflops (eval):  1421.79
  gflops (total): 985.133
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.012998,0.0293246,1421.79,985.133

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0379074
  gflops (total): 1099.87
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1099.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785074
  gflops (eval):  5310.75
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785074,5310.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1646.85
  maximum absolute entry in einsum_ir solution: 1646.87
  maximum element-wise difference:              0.0252686
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0132942
  time (eval):    0.029307
  gflops (eval):  1422.64
  gflops (total): 978.688
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0132942,0.029307,1422.64,978.688

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0381143
  gflops (total): 1093.9
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1093.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0078293
  gflops (eval):  5325.3
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0078293,5325.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1759.31
  maximum absolute entry in einsum_ir solution: 1759.3
  maximum element-wise difference:              0.0307617
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130297
  time (eval):    0.029315
  gflops (eval):  1422.25
  gflops (total): 984.616
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130297,0.029315,1422.25,984.616

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0378431
  gflops (total): 1101.74
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1101.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0079322
  gflops (eval):  5256.22
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0079322,5256.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1698.26
  maximum absolute entry in einsum_ir solution: 1698.27
  maximum element-wise difference:              0.0266724
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129453
  time (eval):    0.0295102
  gflops (eval):  1412.84
  gflops (total): 982.047
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129453,0.0295102,1412.84,982.047

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375466
  gflops (total): 1110.44
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1110.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782053
  gflops (eval):  5331.27
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782053,5331.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1589.93
  maximum absolute entry in einsum_ir solution: 1589.93
  maximum element-wise difference:              0.026062
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130223
  time (eval):    0.0293026
  gflops (eval):  1422.85
  gflops (total): 985.078
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130223,0.0293026,1422.85,985.078

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373894
  gflops (total): 1115.11
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1115.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00786184
  gflops (eval):  5303.25
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00786184,5303.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1784.01
  maximum absolute entry in einsum_ir solution: 1784.01
  maximum element-wise difference:              0.0299072
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130211
  time (eval):    0.0293178
  gflops (eval):  1422.12
  gflops (total): 984.753
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130211,0.0293178,1422.12,984.753

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0378145
  gflops (total): 1102.58
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1102.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00781712
  gflops (eval):  5333.59
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00781712,5333.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1615.8
  maximum absolute entry in einsum_ir solution: 1615.8
  maximum element-wise difference:              0.0251465
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128841
  time (eval):    0.0293299
  gflops (eval):  1421.53
  gflops (total): 987.667
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128841,0.0293299,1421.53,987.667

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376015
  gflops (total): 1108.82
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1108.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00783537
  gflops (eval):  5321.17
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00783537,5321.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1815.99
  maximum absolute entry in einsum_ir solution: 1815.98
  maximum element-wise difference:              0.0209351
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131123
  time (eval):    0.0293183
  gflops (eval):  1422.09
  gflops (total): 982.626
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131123,0.0293183,1422.09,982.626

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0379443
  gflops (total): 1098.8
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1098.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00780558
  gflops (eval):  5341.48
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00780558,5341.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1714.19
  maximum absolute entry in einsum_ir solution: 1714.19
  maximum element-wise difference:              0.0268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129946
  time (eval):    0.0293296
  gflops (eval):  1421.55
  gflops (total): 985.095
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129946,0.0293296,1421.55,985.095

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0378002
  gflops (total): 1102.99
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1102.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784063
  gflops (eval):  5317.6
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784063,5317.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1632.96
  maximum absolute entry in einsum_ir solution: 1632.96
  maximum element-wise difference:              0.0285645
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131783
  time (eval):    0.0293404
  gflops (eval):  1421.02
  gflops (total): 980.589
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131783,0.0293404,1421.02,980.589

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375945
  gflops (total): 1109.03
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1109.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785786
  gflops (eval):  5305.94
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785786,5305.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1714.76
  maximum absolute entry in einsum_ir solution: 1714.78
  maximum element-wise difference:              0.0289307
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128542
  time (eval):    0.0293419
  gflops (eval):  1420.95
  gflops (total): 988.085
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128542,0.0293419,1420.95,988.085

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0377747
  gflops (total): 1103.74
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1103.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784146
  gflops (eval):  5317.04
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784146,5317.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1803.41
  maximum absolute entry in einsum_ir solution: 1803.41
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130736
  time (eval):    0.0293224
  gflops (eval):  1421.89
  gflops (total): 983.426
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130736,0.0293224,1421.89,983.426

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376997
  gflops (total): 1105.93
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1105.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784624
  gflops (eval):  5313.79
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784624,5313.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1735.03
  maximum absolute entry in einsum_ir solution: 1735.03
  maximum element-wise difference:              0.0288086
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129745
  time (eval):    0.0293321
  gflops (eval):  1421.43
  gflops (total): 985.504
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129745,0.0293321,1421.43,985.504

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373312
  gflops (total): 1116.85
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1116.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785144
  gflops (eval):  5310.28
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785144,5310.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1703.43
  maximum absolute entry in einsum_ir solution: 1703.42
  maximum element-wise difference:              0.0228271
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129416
  time (eval):    0.0293357
  gflops (eval):  1421.25
  gflops (total): 986.186
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129416,0.0293357,1421.25,986.186

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371974
  gflops (total): 1120.87
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1120.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785153
  gflops (eval):  5310.21
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785153,5310.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1866.36
  maximum absolute entry in einsum_ir solution: 1866.36
  maximum element-wise difference:              0.0253906
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0125812
  time (eval):    0.0295537
  gflops (eval):  1410.77
  gflops (total): 989.521
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0125812,0.0295537,1410.77,989.521

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373746
  gflops (total): 1115.55
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1115.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00790264
  gflops (eval):  5275.87
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00790264,5275.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1661.96
  maximum absolute entry in einsum_ir solution: 1661.98
  maximum element-wise difference:              0.026001
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129805
  time (eval):    0.0292654
  gflops (eval):  1424.66
  gflops (total): 986.92
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129805,0.0292654,1424.66,986.92

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374207
  gflops (total): 1114.18
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1114.18

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00792391
  gflops (eval):  5261.71
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00792391,5261.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1679.69
  maximum absolute entry in einsum_ir solution: 1679.67
  maximum element-wise difference:              0.0227051
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128086
  time (eval):    0.0293344
  gflops (eval):  1421.31
  gflops (total): 989.331
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128086,0.0293344,1421.31,989.331

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376721
  gflops (total): 1106.74
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1106.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785304
  gflops (eval):  5309.19
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785304,5309.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1769.87
  maximum absolute entry in einsum_ir solution: 1769.86
  maximum element-wise difference:              0.0280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130321
  time (eval):    0.029326
  gflops (eval):  1421.72
  gflops (total): 984.306
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130321,0.029326,1421.72,984.306

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374793
  gflops (total): 1112.44
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1112.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782887
  gflops (eval):  5325.59
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782887,5325.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1672.06
  maximum absolute entry in einsum_ir solution: 1672.05
  maximum element-wise difference:              0.0267334
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130768
  time (eval):    0.0293408
  gflops (eval):  1421
  gflops (total): 982.925
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130768,0.0293408,1421,982.925

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372445
  gflops (total): 1119.45
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1119.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00781839
  gflops (eval):  5332.73
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00781839,5332.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1824.31
  maximum absolute entry in einsum_ir solution: 1824.31
  maximum element-wise difference:              0.0264893
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129531
  time (eval):    0.0292855
  gflops (eval):  1423.68
  gflops (total): 987.091
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129531,0.0292855,1423.68,987.091

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375398
  gflops (total): 1110.64
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1110.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785336
  gflops (eval):  5308.98
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785336,5308.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1724.97
  maximum absolute entry in einsum_ir solution: 1724.97
  maximum element-wise difference:              0.0224609
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130926
  time (eval):    0.0293155
  gflops (eval):  1422.23
  gflops (total): 983.144
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130926,0.0293155,1422.23,983.144

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0378078
  gflops (total): 1102.77
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1102.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782533
  gflops (eval):  5327.99
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782533,5327.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1964.57
  maximum absolute entry in einsum_ir solution: 1964.56
  maximum element-wise difference:              0.022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0132971
  time (eval):    0.0295316
  gflops (eval):  1411.82
  gflops (total): 973.489
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0132971,0.0295316,1411.82,973.489

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375495
  gflops (total): 1110.36
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1110.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782904
  gflops (eval):  5325.47
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782904,5325.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1688.88
  maximum absolute entry in einsum_ir solution: 1688.89
  maximum element-wise difference:              0.0223389
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128614
  time (eval):    0.029291
  gflops (eval):  1423.42
  gflops (total): 989.109
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128614,0.029291,1423.42,989.109

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0380164
  gflops (total): 1096.72
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1096.72

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00780791
  gflops (eval):  5339.89
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00780791,5339.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1719.08
  maximum absolute entry in einsum_ir solution: 1719.07
  maximum element-wise difference:              0.0235596
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130043
  time (eval):    0.0292975
  gflops (eval):  1423.1
  gflops (total): 985.618
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130043,0.0292975,1423.1,985.618

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0379287
  gflops (total): 1099.25
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1099.25

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00787351
  gflops (eval):  5295.39
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00787351,5295.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1642.16
  maximum absolute entry in einsum_ir solution: 1642.16
  maximum element-wise difference:              0.0349121
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130752
  time (eval):    0.0293186
  gflops (eval):  1422.08
  gflops (total): 983.477
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130752,0.0293186,1422.08,983.477

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372096
  gflops (total): 1120.5
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1120.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784372
  gflops (eval):  5315.5
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784372,5315.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1578.05
  maximum absolute entry in einsum_ir solution: 1578.05
  maximum element-wise difference:              0.0250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129025
  time (eval):    0.0293275
  gflops (eval):  1421.65
  gflops (total): 987.291
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129025,0.0293275,1421.65,987.291

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373238
  gflops (total): 1117.07
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1117.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00786836
  gflops (eval):  5298.86
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00786836,5298.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1643.13
  maximum absolute entry in einsum_ir solution: 1643.13
  maximum element-wise difference:              0.0269775
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130482
  time (eval):    0.0292787
  gflops (eval):  1424.02
  gflops (total): 985.031
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130482,0.0292787,1424.02,985.031

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.037366
  gflops (total): 1115.81
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1115.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00788722
  gflops (eval):  5286.19
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00788722,5286.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1673.47
  maximum absolute entry in einsum_ir solution: 1673.47
  maximum element-wise difference:              0.0247803
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0127779
  time (eval):    0.0292855
  gflops (eval):  1423.68
  gflops (total): 991.201
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0127779,0.0292855,1423.68,991.201

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374225
  gflops (total): 1114.13
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1114.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779931
  gflops (eval):  5345.77
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779931,5345.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1640.55
  maximum absolute entry in einsum_ir solution: 1640.56
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130325
  time (eval):    0.029359
  gflops (eval):  1420.12
  gflops (total): 983.532
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130325,0.029359,1420.12,983.532

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375672
  gflops (total): 1109.83
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1109.83

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785254
  gflops (eval):  5309.53
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785254,5309.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1735.48
  maximum absolute entry in einsum_ir solution: 1735.47
  maximum element-wise difference:              0.0240479
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.013088
  time (eval):    0.0293181
  gflops (eval):  1422.1
  gflops (total): 983.191
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.013088,0.0293181,1422.1,983.191

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376076
  gflops (total): 1108.64
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1108.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00789886
  gflops (eval):  5278.4
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00789886,5278.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1846.77
  maximum absolute entry in einsum_ir solution: 1846.78
  maximum element-wise difference:              0.0290527
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.012897
  time (eval):    0.0293232
  gflops (eval):  1421.85
  gflops (total): 987.522
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.012897,0.0293232,1421.85,987.522

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0383039
  gflops (total): 1088.49
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1088.49

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00796215
  gflops (eval):  5236.45
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00796215,5236.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1756.92
  maximum absolute entry in einsum_ir solution: 1756.93
  maximum element-wise difference:              0.0269775
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130175
  time (eval):    0.0293254
  gflops (eval):  1421.75
  gflops (total): 984.66
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130175,0.0293254,1421.75,984.66

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373338
  gflops (total): 1116.77
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1116.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00794882
  gflops (eval):  5245.22
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00794882,5245.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1733.95
  maximum absolute entry in einsum_ir solution: 1733.97
  maximum element-wise difference:              0.0296631
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.012927
  time (eval):    0.0293327
  gflops (eval):  1421.4
  gflops (total): 986.598
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.012927,0.0293327,1421.4,986.598

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372016
  gflops (total): 1120.74
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1120.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0078671
  gflops (eval):  5299.71
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0078671,5299.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1686.77
  maximum absolute entry in einsum_ir solution: 1686.77
  maximum element-wise difference:              0.0252686
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129666
  time (eval):    0.0293377
  gflops (eval):  1421.15
  gflops (total): 985.557
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129666,0.0293377,1421.15,985.557

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0381725
  gflops (total): 1092.23
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1092.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00780077
  gflops (eval):  5344.77
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00780077,5344.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1696.66
  maximum absolute entry in einsum_ir solution: 1696.68
  maximum element-wise difference:              0.0285645
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128396
  time (eval):    0.029291
  gflops (eval):  1423.42
  gflops (total): 989.622
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128396,0.029291,1423.42,989.622

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0368332
  gflops (total): 1131.95
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1131.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00776236
  gflops (eval):  5371.22
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00776236,5371.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1801.17
  maximum absolute entry in einsum_ir solution: 1801.17
  maximum element-wise difference:              0.0262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130425
  time (eval):    0.0293462
  gflops (eval):  1420.74
  gflops (total): 983.594
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130425,0.0293462,1420.74,983.594

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374098
  gflops (total): 1114.5
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1114.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784587
  gflops (eval):  5314.05
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784587,5314.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1694.91
  maximum absolute entry in einsum_ir solution: 1694.91
  maximum element-wise difference:              0.02771
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131655
  time (eval):    0.0292691
  gflops (eval):  1424.48
  gflops (total): 982.531
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131655,0.0292691,1424.48,982.531

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373584
  gflops (total): 1116.04
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1116.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00788722
  gflops (eval):  5286.19
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00788722,5286.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1737.6
  maximum absolute entry in einsum_ir solution: 1737.6
  maximum element-wise difference:              0.024292
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130713
  time (eval):    0.0293426
  gflops (eval):  1420.91
  gflops (total): 983.012
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130713,0.0293426,1420.91,983.012

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376131
  gflops (total): 1108.48
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1108.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00780694
  gflops (eval):  5340.55
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00780694,5340.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1807.41
  maximum absolute entry in einsum_ir solution: 1807.41
  maximum element-wise difference:              0.02771
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129863
  time (eval):    0.0293535
  gflops (eval):  1420.39
  gflops (total): 984.731
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129863,0.0293535,1420.39,984.731

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374209
  gflops (total): 1114.17
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1114.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00783611
  gflops (eval):  5320.67
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00783611,5320.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1620.02
  maximum absolute entry in einsum_ir solution: 1620.03
  maximum element-wise difference:              0.0354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131885
  time (eval):    0.0304234
  gflops (eval):  1370.44
  gflops (total): 956.007
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131885,0.0304234,1370.44,956.007

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375273
  gflops (total): 1111.01
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1111.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785056
  gflops (eval):  5310.87
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785056,5310.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1768.8
  maximum absolute entry in einsum_ir solution: 1768.8
  maximum element-wise difference:              0.0287476
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0132773
  time (eval):    0.0296105
  gflops (eval):  1408.06
  gflops (total): 972.149
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0132773,0.0296105,1408.06,972.149

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0381265
  gflops (total): 1093.55
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1093.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00780941
  gflops (eval):  5338.86
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00780941,5338.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1760.26
  maximum absolute entry in einsum_ir solution: 1760.28
  maximum element-wise difference:              0.0296631
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.013058
  time (eval):    0.0296011
  gflops (eval):  1408.5
  gflops (total): 977.36
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.013058,0.0296011,1408.5,977.36

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.037563
  gflops (total): 1109.96
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1109.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785793
  gflops (eval):  5305.89
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785793,5305.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1756.01
  maximum absolute entry in einsum_ir solution: 1756.01
  maximum element-wise difference:              0.0262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131629
  time (eval):    0.0293014
  gflops (eval):  1422.91
  gflops (total): 981.844
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131629,0.0293014,1422.91,981.844

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0381343
  gflops (total): 1093.33
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1093.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00781011
  gflops (eval):  5338.38
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00781011,5338.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1784
  maximum absolute entry in einsum_ir solution: 1784
  maximum element-wise difference:              0.0235596
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130709
  time (eval):    0.0292964
  gflops (eval):  1423.16
  gflops (total): 984.092
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130709,0.0292964,1423.16,984.092

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373888
  gflops (total): 1115.13
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1115.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00786785
  gflops (eval):  5299.2
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00786785,5299.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1828.56
  maximum absolute entry in einsum_ir solution: 1828.56
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0133006
  time (eval):    0.0293072
  gflops (eval):  1422.63
  gflops (total): 978.537
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0133006,0.0293072,1422.63,978.537

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0377112
  gflops (total): 1105.6
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1105.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785127
  gflops (eval):  5310.39
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785127,5310.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1762.72
  maximum absolute entry in einsum_ir solution: 1762.73
  maximum element-wise difference:              0.0244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.012984
  time (eval):    0.0293477
  gflops (eval):  1420.67
  gflops (total): 984.919
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.012984,0.0293477,1420.67,984.919

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0377377
  gflops (total): 1104.82
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1104.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00789757
  gflops (eval):  5279.26
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00789757,5279.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1777.43
  maximum absolute entry in einsum_ir solution: 1777.45
  maximum element-wise difference:              0.0297852
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130896
  time (eval):    0.0293225
  gflops (eval):  1421.89
  gflops (total): 983.053
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130896,0.0293225,1421.89,983.053

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0378692
  gflops (total): 1100.98
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1100.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00786858
  gflops (eval):  5298.71
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00786858,5298.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1653.02
  maximum absolute entry in einsum_ir solution: 1653.02
  maximum element-wise difference:              0.0285645
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130928
  time (eval):    0.0303881
  gflops (eval):  1372.03
  gflops (total): 958.887
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130928,0.0303881,1372.03,958.887

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.037723
  gflops (total): 1105.25
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1105.25

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782691
  gflops (eval):  5326.92
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782691,5326.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1604.5
  maximum absolute entry in einsum_ir solution: 1604.51
  maximum element-wise difference:              0.0286865
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129688
  time (eval):    0.0293365
  gflops (eval):  1421.21
  gflops (total): 985.535
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129688,0.0293365,1421.21,985.535

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371496
  gflops (total): 1122.31
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1122.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00781366
  gflops (eval):  5335.96
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00781366,5335.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1646.43
  maximum absolute entry in einsum_ir solution: 1646.43
  maximum element-wise difference:              0.0290527
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128485
  time (eval):    0.029305
  gflops (eval):  1422.74
  gflops (total): 989.084
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128485,0.029305,1422.74,989.084

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373817
  gflops (total): 1115.34
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1115.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0078814
  gflops (eval):  5290.09
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0078814,5290.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2003.49
  maximum absolute entry in einsum_ir solution: 2003.5
  maximum element-wise difference:              0.0252686
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0132666
  time (eval):    0.0293195
  gflops (eval):  1422.04
  gflops (total): 979.037
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0132666,0.0293195,1422.04,979.037

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376318
  gflops (total): 1107.93
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1107.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782422
  gflops (eval):  5328.75
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782422,5328.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1974.47
  maximum absolute entry in einsum_ir solution: 1974.46
  maximum element-wise difference:              0.0292358
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128994
  time (eval):    0.0292729
  gflops (eval):  1424.3
  gflops (total): 988.644
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128994,0.0292729,1424.3,988.644

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371199
  gflops (total): 1123.21
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1123.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00783977
  gflops (eval):  5318.18
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00783977,5318.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1726.65
  maximum absolute entry in einsum_ir solution: 1726.63
  maximum element-wise difference:              0.0270386
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129195
  time (eval):    0.0292956
  gflops (eval):  1423.19
  gflops (total): 987.638
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129195,0.0292956,1423.19,987.638

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0378627
  gflops (total): 1101.17
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1101.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785171
  gflops (eval):  5310.1
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785171,5310.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1742.07
  maximum absolute entry in einsum_ir solution: 1742.07
  maximum element-wise difference:              0.0250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131767
  time (eval):    0.029285
  gflops (eval):  1423.71
  gflops (total): 981.905
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131767,0.029285,1423.71,981.905

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.037673
  gflops (total): 1106.72
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1106.72

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782482
  gflops (eval):  5328.34
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782482,5328.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1623.75
  maximum absolute entry in einsum_ir solution: 1623.74
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130487
  time (eval):    0.029662
  gflops (eval):  1405.62
  gflops (total): 976.18
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130487,0.029662,1405.62,976.18

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376924
  gflops (total): 1106.15
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1106.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779187
  gflops (eval):  5350.88
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779187,5350.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1662.29
  maximum absolute entry in einsum_ir solution: 1662.3
  maximum element-wise difference:              0.0271606
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0133365
  time (eval):    0.0293144
  gflops (eval):  1422.28
  gflops (total): 977.549
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0133365,0.0293144,1422.28,977.549

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0378361
  gflops (total): 1101.94
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1101.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785031
  gflops (eval):  5311.04
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785031,5311.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1786.44
  maximum absolute entry in einsum_ir solution: 1786.44
  maximum element-wise difference:              0.0253906
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131532
  time (eval):    0.0293448
  gflops (eval):  1420.81
  gflops (total): 981.065
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131532,0.0293448,1420.81,981.065

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0382176
  gflops (total): 1090.95
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1090.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00783747
  gflops (eval):  5319.74
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00783747,5319.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1824.12
  maximum absolute entry in einsum_ir solution: 1824.12
  maximum element-wise difference:              0.0281982
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130409
  time (eval):    0.0293327
  gflops (eval):  1421.39
  gflops (total): 983.945
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130409,0.0293327,1421.39,983.945

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0382413
  gflops (total): 1090.27
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1090.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0079061
  gflops (eval):  5273.56
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0079061,5273.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1771.1
  maximum absolute entry in einsum_ir solution: 1771.1
  maximum element-wise difference:              0.0247803
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130383
  time (eval):    0.0292894
  gflops (eval):  1423.49
  gflops (total): 985.011
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130383,0.0292894,1423.49,985.011

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376554
  gflops (total): 1107.23
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1107.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779696
  gflops (eval):  5347.38
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779696,5347.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1901.87
  maximum absolute entry in einsum_ir solution: 1901.88
  maximum element-wise difference:              0.0255127
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130222
  time (eval):    0.0293512
  gflops (eval):  1420.5
  gflops (total): 983.951
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130222,0.0293512,1420.5,983.951

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373965
  gflops (total): 1114.9
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1114.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00789872
  gflops (eval):  5278.49
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00789872,5278.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1539.08
  maximum absolute entry in einsum_ir solution: 1539.08
  maximum element-wise difference:              0.0219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130713
  time (eval):    0.0292914
  gflops (eval):  1423.4
  gflops (total): 984.198
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130713,0.0292914,1423.4,984.198

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0379889
  gflops (total): 1097.51
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1097.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00792737
  gflops (eval):  5259.42
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00792737,5259.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1842.24
  maximum absolute entry in einsum_ir solution: 1842.25
  maximum element-wise difference:              0.0249023
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130927
  time (eval):    0.0292633
  gflops (eval):  1424.77
  gflops (total): 984.356
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130927,0.0292633,1424.77,984.356

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375155
  gflops (total): 1111.36
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1111.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785068
  gflops (eval):  5310.79
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785068,5310.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1658.76
  maximum absolute entry in einsum_ir solution: 1658.76
  maximum element-wise difference:              0.0269775
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130941
  time (eval):    0.0293259
  gflops (eval):  1421.72
  gflops (total): 982.869
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130941,0.0293259,1421.72,982.869

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374836
  gflops (total): 1112.31
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1112.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779214
  gflops (eval):  5350.69
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779214,5350.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1744.59
  maximum absolute entry in einsum_ir solution: 1744.6
  maximum element-wise difference:              0.0240479
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130679
  time (eval):    0.0293284
  gflops (eval):  1421.6
  gflops (total): 983.419
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130679,0.0293284,1421.6,983.419

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374547
  gflops (total): 1113.17
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1113.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782884
  gflops (eval):  5325.61
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782884,5325.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1576.23
  maximum absolute entry in einsum_ir solution: 1576.24
  maximum element-wise difference:              0.0251465
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0132996
  time (eval):    0.0293542
  gflops (eval):  1420.36
  gflops (total): 977.483
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0132996,0.0293542,1420.36,977.483

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373716
  gflops (total): 1115.64
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1115.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00789723
  gflops (eval):  5279.49
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00789723,5279.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1634.97
  maximum absolute entry in einsum_ir solution: 1634.97
  maximum element-wise difference:              0.0288086
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129513
  time (eval):    0.0297449
  gflops (eval):  1401.7
  gflops (total): 976.51
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129513,0.0297449,1401.7,976.51

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372882
  gflops (total): 1118.14
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1118.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00780857
  gflops (eval):  5339.43
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00780857,5339.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1770.1
  maximum absolute entry in einsum_ir solution: 1770.1
  maximum element-wise difference:              0.0233765
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129026
  time (eval):    0.0302988
  gflops (eval):  1376.07
  gflops (total): 965.092
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129026,0.0302988,1376.07,965.092

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371863
  gflops (total): 1121.2
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1121.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784958
  gflops (eval):  5311.54
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784958,5311.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1832.9
  maximum absolute entry in einsum_ir solution: 1832.89
  maximum element-wise difference:              0.0283203
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.013037
  time (eval):    0.0293201
  gflops (eval):  1422
  gflops (total): 984.327
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.013037,0.0293201,1422,984.327

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374764
  gflops (total): 1112.52
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1112.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0078223
  gflops (eval):  5330.06
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0078223,5330.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1906.68
  maximum absolute entry in einsum_ir solution: 1906.69
  maximum element-wise difference:              0.0234375
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129631
  time (eval):    0.0296441
  gflops (eval):  1406.46
  gflops (total): 978.551
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129631,0.0296441,1406.46,978.551

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374626
  gflops (total): 1112.93
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1112.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00787507
  gflops (eval):  5294.35
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00787507,5294.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1602.86
  maximum absolute entry in einsum_ir solution: 1602.88
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0135043
  time (eval):    0.0293033
  gflops (eval):  1422.82
  gflops (total): 973.971
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0135043,0.0293033,1422.82,973.971

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376621
  gflops (total): 1107.04
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1107.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782373
  gflops (eval):  5329.09
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782373,5329.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1852.11
  maximum absolute entry in einsum_ir solution: 1852.09
  maximum element-wise difference:              0.0236816
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.012225
  time (eval):    0.0294793
  gflops (eval):  1414.33
  gflops (total): 999.736
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.012225,0.0294793,1414.33,999.736

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375254
  gflops (total): 1111.07
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1111.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782938
  gflops (eval):  5325.24
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782938,5325.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1687.79
  maximum absolute entry in einsum_ir solution: 1687.8
  maximum element-wise difference:              0.0249023
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129732
  time (eval):    0.029339
  gflops (eval):  1421.09
  gflops (total): 985.373
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129732,0.029339,1421.09,985.373

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373942
  gflops (total): 1114.97
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1114.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00790183
  gflops (eval):  5276.41
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00790183,5276.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1775.1
  maximum absolute entry in einsum_ir solution: 1775.1
  maximum element-wise difference:              0.0244751
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129351
  time (eval):    0.0293233
  gflops (eval):  1421.85
  gflops (total): 986.628
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129351,0.0293233,1421.85,986.628

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0378614
  gflops (total): 1101.21
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1101.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00788327
  gflops (eval):  5288.84
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00788327,5288.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1753.5
  maximum absolute entry in einsum_ir solution: 1753.5
  maximum element-wise difference:              0.0263672
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0126714
  time (eval):    0.0303471
  gflops (eval):  1373.88
  gflops (total): 969.195
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0126714,0.0303471,1373.88,969.195

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.03813
  gflops (total): 1093.45
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1093.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00776321
  gflops (eval):  5370.63
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00776321,5370.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1926.41
  maximum absolute entry in einsum_ir solution: 1926.43
  maximum element-wise difference:              0.0256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131018
  time (eval):    0.0302334
  gflops (eval):  1379.05
  gflops (total): 962.113
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131018,0.0302334,1379.05,962.113

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373327
  gflops (total): 1116.8
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1116.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779326
  gflops (eval):  5349.92
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779326,5349.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1833.8
  maximum absolute entry in einsum_ir solution: 1833.8
  maximum element-wise difference:              0.0310059
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129489
  time (eval):    0.0293195
  gflops (eval):  1422.03
  gflops (total): 986.395
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129489,0.0293195,1422.03,986.395

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371182
  gflops (total): 1123.26
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1123.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00793933
  gflops (eval):  5251.49
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00793933,5251.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1696.04
  maximum absolute entry in einsum_ir solution: 1696.04
  maximum element-wise difference:              0.0264893
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129334
  time (eval):    0.0293312
  gflops (eval):  1421.47
  gflops (total): 986.483
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129334,0.0293312,1421.47,986.483

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372203
  gflops (total): 1120.18
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1120.18

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00787096
  gflops (eval):  5297.11
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00787096,5297.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1923.7
  maximum absolute entry in einsum_ir solution: 1923.69
  maximum element-wise difference:              0.0311279
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130685
  time (eval):    0.0293037
  gflops (eval):  1422.8
  gflops (total): 983.979
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130685,0.0293037,1422.8,983.979

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373511
  gflops (total): 1116.26
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1116.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784753
  gflops (eval):  5312.93
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784753,5312.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1786.79
  maximum absolute entry in einsum_ir solution: 1786.79
  maximum element-wise difference:              0.0241699
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0126658
  time (eval):    0.0293431
  gflops (eval):  1420.89
  gflops (total): 992.487
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0126658,0.0293431,1420.89,992.487

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376026
  gflops (total): 1108.79
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1108.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0078187
  gflops (eval):  5332.51
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0078187,5332.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1756.96
  maximum absolute entry in einsum_ir solution: 1756.95
  maximum element-wise difference:              0.029541
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0127762
  time (eval):    0.0293438
  gflops (eval):  1420.86
  gflops (total): 989.872
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0127762,0.0293438,1420.86,989.872

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.037319
  gflops (total): 1117.22
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1117.22

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00788319
  gflops (eval):  5288.89
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00788319,5288.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1687.37
  maximum absolute entry in einsum_ir solution: 1687.37
  maximum element-wise difference:              0.0245361
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0123734
  time (eval):    0.03051
  gflops (eval):  1366.55
  gflops (total): 972.248
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0123734,0.03051,1366.55,972.248

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374379
  gflops (total): 1113.67
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1113.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782558
  gflops (eval):  5327.83
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782558,5327.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1772.46
  maximum absolute entry in einsum_ir solution: 1772.45
  maximum element-wise difference:              0.0239258
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128113
  time (eval):    0.0292618
  gflops (eval):  1424.84
  gflops (total): 990.973
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128113,0.0292618,1424.84,990.973

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0379755
  gflops (total): 1097.9
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1097.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779071
  gflops (eval):  5351.68
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779071,5351.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1716.37
  maximum absolute entry in einsum_ir solution: 1716.36
  maximum element-wise difference:              0.0247803
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131999
  time (eval):    0.0293263
  gflops (eval):  1421.7
  gflops (total): 980.415
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131999,0.0293263,1421.7,980.415

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376709
  gflops (total): 1106.78
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1106.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00781935
  gflops (eval):  5332.07
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00781935,5332.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1763.95
  maximum absolute entry in einsum_ir solution: 1763.95
  maximum element-wise difference:              0.026123
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130922
  time (eval):    0.0293418
  gflops (eval):  1420.95
  gflops (total): 982.547
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130922,0.0293418,1420.95,982.547

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375925
  gflops (total): 1109.09
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1109.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784367
  gflops (eval):  5315.54
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784367,5315.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1879.39
  maximum absolute entry in einsum_ir solution: 1879.38
  maximum element-wise difference:              0.0265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130657
  time (eval):    0.0293055
  gflops (eval):  1422.71
  gflops (total): 984.002
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130657,0.0293055,1422.71,984.002

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0378865
  gflops (total): 1100.48
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1100.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00783011
  gflops (eval):  5324.75
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00783011,5324.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1826.76
  maximum absolute entry in einsum_ir solution: 1826.76
  maximum element-wise difference:              0.0264893
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128148
  time (eval):    0.0292645
  gflops (eval):  1424.71
  gflops (total): 990.828
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128148,0.0292645,1424.71,990.828

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376085
  gflops (total): 1108.61
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1108.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0077617
  gflops (eval):  5371.68
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0077617,5371.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1821.3
  maximum absolute entry in einsum_ir solution: 1821.31
  maximum element-wise difference:              0.0292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130872
  time (eval):    0.029335
  gflops (eval):  1421.28
  gflops (total): 982.82
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130872,0.029335,1421.28,982.82

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372318
  gflops (total): 1119.83
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1119.83

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00781206
  gflops (eval):  5337.05
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00781206,5337.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1745.89
  maximum absolute entry in einsum_ir solution: 1745.89
  maximum element-wise difference:              0.0272217
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130433
  time (eval):    0.0293391
  gflops (eval):  1421.08
  gflops (total): 983.742
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130433,0.0293391,1421.08,983.742

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0377358
  gflops (total): 1104.87
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1104.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00797262
  gflops (eval):  5229.57
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00797262,5229.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1618.9
  maximum absolute entry in einsum_ir solution: 1618.9
  maximum element-wise difference:              0.0321045
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129367
  time (eval):    0.0293341
  gflops (eval):  1421.33
  gflops (total): 986.339
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129367,0.0293341,1421.33,986.339

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374149
  gflops (total): 1114.35
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1114.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785405
  gflops (eval):  5308.51
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785405,5308.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1908.84
  maximum absolute entry in einsum_ir solution: 1908.83
  maximum element-wise difference:              0.0263672
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130145
  time (eval):    0.0293347
  gflops (eval):  1421.3
  gflops (total): 984.514
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130145,0.0293347,1421.3,984.514

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375808
  gflops (total): 1109.43
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1109.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785452
  gflops (eval):  5308.19
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785452,5308.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1702.6
  maximum absolute entry in einsum_ir solution: 1702.59
  maximum element-wise difference:              0.0355225
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128852
  time (eval):    0.0292981
  gflops (eval):  1423.07
  gflops (total): 988.385
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128852,0.0292981,1423.07,988.385

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374815
  gflops (total): 1112.37
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1112.37

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784858
  gflops (eval):  5312.22
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784858,5312.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1822.27
  maximum absolute entry in einsum_ir solution: 1822.28
  maximum element-wise difference:              0.0258179
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128781
  time (eval):    0.0293356
  gflops (eval):  1421.25
  gflops (total): 987.673
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128781,0.0293356,1421.25,987.673

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371148
  gflops (total): 1123.36
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1123.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00794807
  gflops (eval):  5245.72
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00794807,5245.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1863.1
  maximum absolute entry in einsum_ir solution: 1863.09
  maximum element-wise difference:              0.0288086
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128142
  time (eval):    0.0292874
  gflops (eval):  1423.6
  gflops (total): 990.304
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128142,0.0292874,1423.6,990.304

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372732
  gflops (total): 1118.59
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1118.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0078683
  gflops (eval):  5298.9
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0078683,5298.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1862.79
  maximum absolute entry in einsum_ir solution: 1862.8
  maximum element-wise difference:              0.0284424
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129794
  time (eval):    0.0292936
  gflops (eval):  1423.29
  gflops (total): 986.289
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129794,0.0292936,1423.29,986.289

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.037361
  gflops (total): 1115.96
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1115.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00783604
  gflops (eval):  5320.71
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00783604,5320.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1790.88
  maximum absolute entry in einsum_ir solution: 1790.88
  maximum element-wise difference:              0.0267334
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131143
  time (eval):    0.0292664
  gflops (eval):  1424.62
  gflops (total): 983.781
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131143,0.0292664,1424.62,983.781

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371712
  gflops (total): 1121.66
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1121.66

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00787773
  gflops (eval):  5292.55
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00787773,5292.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1675.46
  maximum absolute entry in einsum_ir solution: 1675.46
  maximum element-wise difference:              0.0268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128666
  time (eval):    0.0293499
  gflops (eval):  1420.56
  gflops (total): 987.606
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128666,0.0293499,1420.56,987.606

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375961
  gflops (total): 1108.98
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1108.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00778379
  gflops (eval):  5356.43
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00778379,5356.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1757.55
  maximum absolute entry in einsum_ir solution: 1757.55
  maximum element-wise difference:              0.0297852
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129353
  time (eval):    0.0292808
  gflops (eval):  1423.91
  gflops (total): 987.618
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129353,0.0292808,1423.91,987.618

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374545
  gflops (total): 1113.17
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1113.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782547
  gflops (eval):  5327.91
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782547,5327.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1836.98
  maximum absolute entry in einsum_ir solution: 1836.98
  maximum element-wise difference:              0.0244751
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129305
  time (eval):    0.0292757
  gflops (eval):  1424.16
  gflops (total): 987.848
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129305,0.0292757,1424.16,987.848

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375753
  gflops (total): 1109.59
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1109.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00780863
  gflops (eval):  5339.39
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00780863,5339.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1734.4
  maximum absolute entry in einsum_ir solution: 1734.41
  maximum element-wise difference:              0.0252075
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0132342
  time (eval):    0.0293529
  gflops (eval):  1420.41
  gflops (total): 979.013
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0132342,0.0293529,1420.41,979.013

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371433
  gflops (total): 1122.5
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1122.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779897
  gflops (eval):  5346.01
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779897,5346.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1822.5
  maximum absolute entry in einsum_ir solution: 1822.5
  maximum element-wise difference:              0.0224609
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[2,4,6,7,5,3]],[[0,1,4,5,6,7]->[0,4,6,7,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130326
  time (eval):    0.0292966
  gflops (eval):  1423.15
  gflops (total): 984.98
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130326,0.0292966,1423.15,984.98

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0378193
  gflops (total): 1102.43
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1102.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784031
  gflops (eval):  5317.82
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784031,5317.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1745.27
  maximum absolute entry in einsum_ir solution: 1745.27
  maximum element-wise difference:              0.0218506
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0124907
  time (eval):    0.011635
  gflops (eval):  3578.79
  gflops (total): 1725.93
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0124907,0.011635,3578.79,1725.93

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0235735
  gflops (total): 1766.36
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1766.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0269282
  gflops (eval):  1546.31
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0269282,1546.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.7
  maximum absolute entry in einsum_ir solution: 121.7
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0134725
  time (eval):    0.0117621
  gflops (eval):  3540.12
  gflops (total): 1650.08
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0134725,0.0117621,3540.12,1650.08

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0238891
  gflops (total): 1743.02
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1743.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268962
  gflops (eval):  1548.14
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268962,1548.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.931
  maximum absolute entry in einsum_ir solution: 111.931
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131762
  time (eval):    0.0117239
  gflops (eval):  3551.64
  gflops (total): 1672.25
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131762,0.0117239,3551.64,1672.25

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0236724
  gflops (total): 1758.97
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1758.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266993
  gflops (eval):  1559.56
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266993,1559.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.62
  maximum absolute entry in einsum_ir solution: 114.62
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013277
  time (eval):    0.0117542
  gflops (eval):  3542.49
  gflops (total): 1663.49
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013277,0.0117542,3542.49,1663.49

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0239045
  gflops (total): 1741.9
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1741.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0263107
  gflops (eval):  1582.6
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0263107,1582.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.274
  maximum absolute entry in einsum_ir solution: 113.274
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132384
  time (eval):    0.0117107
  gflops (eval):  3555.66
  gflops (total): 1668.97
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132384,0.0117107,3555.66,1668.97

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0238609
  gflops (total): 1745.08
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1745.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0273876
  gflops (eval):  1520.37
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0273876,1520.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.31
  maximum absolute entry in einsum_ir solution: 113.31
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131398
  time (eval):    0.0115883
  gflops (eval):  3593.2
  gflops (total): 1683.88
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131398,0.0115883,3593.2,1683.88

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234212
  gflops (total): 1777.84
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1777.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266538
  gflops (eval):  1562.22
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266538,1562.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.174
  maximum absolute entry in einsum_ir solution: 110.174
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132741
  time (eval):    0.0118162
  gflops (eval):  3523.9
  gflops (total): 1659.57
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132741,0.0118162,3523.9,1659.57

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0235354
  gflops (total): 1769.21
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1769.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0269926
  gflops (eval):  1542.61
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0269926,1542.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.344
  maximum absolute entry in einsum_ir solution: 113.344
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0127142
  time (eval):    0.0116861
  gflops (eval):  3563.14
  gflops (total): 1706.5
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0127142,0.0116861,3563.14,1706.5

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232005
  gflops (total): 1794.76
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1794.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268391
  gflops (eval):  1551.44
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268391,1551.44,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.772
  maximum absolute entry in einsum_ir solution: 112.772
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129623
  time (eval):    0.0117444
  gflops (eval):  3545.44
  gflops (total): 1685.34
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129623,0.0117444,3545.44,1685.34

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0228761
  gflops (total): 1820.2
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1820.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.026964
  gflops (eval):  1544.25
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.026964,1544.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.874
  maximum absolute entry in einsum_ir solution: 110.874
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0137479
  time (eval):    0.0117238
  gflops (eval):  3551.67
  gflops (total): 1634.72
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0137479,0.0117238,3551.67,1634.72

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0228307
  gflops (total): 1823.83
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1823.83

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.026732
  gflops (eval):  1557.65
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.026732,1557.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.861
  maximum absolute entry in einsum_ir solution: 119.861
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131179
  time (eval):    0.0116354
  gflops (eval):  3578.65
  gflops (total): 1682.16
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131179,0.0116354,3578.65,1682.16

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0233581
  gflops (total): 1782.64
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1782.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266426
  gflops (eval):  1562.88
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266426,1562.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.671
  maximum absolute entry in einsum_ir solution: 109.671
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0136855
  time (eval):    0.0116741
  gflops (eval):  3566.81
  gflops (total): 1641.95
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0136855,0.0116741,3566.81,1641.95

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0230773
  gflops (total): 1804.33
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1804.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0270313
  gflops (eval):  1540.41
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0270313,1540.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.508
  maximum absolute entry in einsum_ir solution: 114.508
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0128021
  time (eval):    0.0117607
  gflops (eval):  3540.53
  gflops (total): 1695.21
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0128021,0.0117607,3540.53,1695.21

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0228345
  gflops (total): 1823.52
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1823.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266328
  gflops (eval):  1563.45
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266328,1563.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      130.567
  maximum absolute entry in einsum_ir solution: 130.567
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132105
  time (eval):    0.011724
  gflops (eval):  3551.61
  gflops (total): 1669.94
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132105,0.011724,3551.61,1669.94

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234634
  gflops (total): 1774.65
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1774.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267288
  gflops (eval):  1557.84
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267288,1557.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.704
  maximum absolute entry in einsum_ir solution: 105.704
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133718
  time (eval):    0.0117422
  gflops (eval):  3546.1
  gflops (total): 1658.01
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133718,0.0117422,3546.1,1658.01

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0230158
  gflops (total): 1809.16
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1809.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.026878
  gflops (eval):  1549.19
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.026878,1549.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.044
  maximum absolute entry in einsum_ir solution: 108.044
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013145
  time (eval):    0.0116809
  gflops (eval):  3564.73
  gflops (total): 1677.25
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013145,0.0116809,3564.73,1677.25

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0238554
  gflops (total): 1745.48
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1745.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267893
  gflops (eval):  1554.32
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267893,1554.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.175
  maximum absolute entry in einsum_ir solution: 116.175
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131381
  time (eval):    0.0116799
  gflops (eval):  3565.03
  gflops (total): 1677.78
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131381,0.0116799,3565.03,1677.78

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0233934
  gflops (total): 1779.96
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1779.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268387
  gflops (eval):  1551.46
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268387,1551.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.818
  maximum absolute entry in einsum_ir solution: 113.818
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0126161
  time (eval):    0.0117057
  gflops (eval):  3557.17
  gflops (total): 1712.01
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0126161,0.0117057,3557.17,1712.01

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232754
  gflops (total): 1788.98
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1788.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265278
  gflops (eval):  1569.64
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265278,1569.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.424
  maximum absolute entry in einsum_ir solution: 114.424
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013593
  time (eval):    0.0117549
  gflops (eval):  3542.29
  gflops (total): 1642.71
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013593,0.0117549,3542.29,1642.71

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0231429
  gflops (total): 1799.22
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1799.22

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265495
  gflops (eval):  1568.36
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265495,1568.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.555
  maximum absolute entry in einsum_ir solution: 119.555
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133593
  time (eval):    0.0117722
  gflops (eval):  3537.08
  gflops (total): 1656.85
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133593,0.0117722,3537.08,1656.85

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0227533
  gflops (total): 1830.03
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1830.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0273697
  gflops (eval):  1521.36
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0273697,1521.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.977
  maximum absolute entry in einsum_ir solution: 108.977
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130379
  time (eval):    0.011724
  gflops (eval):  3551.62
  gflops (total): 1681.58
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130379,0.011724,3551.62,1681.58

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0226534
  gflops (total): 1838.1
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1838.1

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.026621
  gflops (eval):  1564.15
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.026621,1564.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.605
  maximum absolute entry in einsum_ir solution: 111.605
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131768
  time (eval):    0.0117804
  gflops (eval):  3534.63
  gflops (total): 1668.43
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131768,0.0117804,3534.63,1668.43

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232587
  gflops (total): 1790.26
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1790.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0271639
  gflops (eval):  1532.89
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0271639,1532.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      123.511
  maximum absolute entry in einsum_ir solution: 123.511
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130837
  time (eval):    0.0116787
  gflops (eval):  3565.41
  gflops (total): 1681.55
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130837,0.0116787,3565.41,1681.55

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234696
  gflops (total): 1774.18
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1774.18

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266244
  gflops (eval):  1563.95
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266244,1563.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.236
  maximum absolute entry in einsum_ir solution: 118.236
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132271
  time (eval):    0.0117512
  gflops (eval):  3543.39
  gflops (total): 1667.01
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132271,0.0117512,3543.39,1667.01

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0236015
  gflops (total): 1764.26
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1764.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268538
  gflops (eval):  1550.59
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268538,1550.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.181
  maximum absolute entry in einsum_ir solution: 111.181
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130049
  time (eval):    0.0117076
  gflops (eval):  3556.6
  gflops (total): 1684.95
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130049,0.0117076,3556.6,1684.95

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0235301
  gflops (total): 1769.61
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1769.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.026745
  gflops (eval):  1556.89
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.026745,1556.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.939
  maximum absolute entry in einsum_ir solution: 113.939
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129104
  time (eval):    0.0117596
  gflops (eval):  3540.86
  gflops (total): 1687.85
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129104,0.0117596,3540.86,1687.85

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0233696
  gflops (total): 1781.77
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1781.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268105
  gflops (eval):  1553.09
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268105,1553.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.341
  maximum absolute entry in einsum_ir solution: 112.341
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130214
  time (eval):    0.0117178
  gflops (eval):  3553.5
  gflops (total): 1683.12
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130214,0.0117178,3553.5,1683.12

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0228751
  gflops (total): 1820.28
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1820.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0271217
  gflops (eval):  1535.27
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0271217,1535.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.34
  maximum absolute entry in einsum_ir solution: 110.34
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132268
  time (eval):    0.0117437
  gflops (eval):  3545.67
  gflops (total): 1667.54
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132268,0.0117437,3545.67,1667.54

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232716
  gflops (total): 1789.27
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1789.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267225
  gflops (eval):  1558.21
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267225,1558.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.639
  maximum absolute entry in einsum_ir solution: 111.639
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013285
  time (eval):    0.0117733
  gflops (eval):  3536.75
  gflops (total): 1661.69
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013285,0.0117733,3536.75,1661.69

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0235536
  gflops (total): 1767.85
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1767.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0272224
  gflops (eval):  1529.6
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0272224,1529.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.187
  maximum absolute entry in einsum_ir solution: 110.187
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129746
  time (eval):    0.0117115
  gflops (eval):  3555.4
  gflops (total): 1686.74
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129746,0.0117115,3555.4,1686.74

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0239542
  gflops (total): 1738.29
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1738.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268211
  gflops (eval):  1552.48
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268211,1552.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.711
  maximum absolute entry in einsum_ir solution: 107.711
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129756
  time (eval):    0.0117121
  gflops (eval):  3555.22
  gflops (total): 1686.64
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129756,0.0117121,3555.22,1686.64

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232029
  gflops (total): 1794.57
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1794.57

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267576
  gflops (eval):  1556.17
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267576,1556.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.54
  maximum absolute entry in einsum_ir solution: 109.54
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129181
  time (eval):    0.0117055
  gflops (eval):  3557.23
  gflops (total): 1691.03
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129181,0.0117055,3557.23,1691.03

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234743
  gflops (total): 1773.82
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1773.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0270219
  gflops (eval):  1540.94
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0270219,1540.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.617
  maximum absolute entry in einsum_ir solution: 111.617
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131826
  time (eval):    0.0118122
  gflops (eval):  3525.11
  gflops (total): 1665.91
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131826,0.0118122,3525.11,1665.91

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0233552
  gflops (total): 1782.87
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1782.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268221
  gflops (eval):  1552.42
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268221,1552.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.311
  maximum absolute entry in einsum_ir solution: 111.311
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131882
  time (eval):    0.0116813
  gflops (eval):  3564.62
  gflops (total): 1674.31
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131882,0.0116813,3564.62,1674.31

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0227918
  gflops (total): 1826.94
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1826.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0264433
  gflops (eval):  1574.66
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0264433,1574.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.353
  maximum absolute entry in einsum_ir solution: 108.353
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0136728
  time (eval):    0.0117654
  gflops (eval):  3539.13
  gflops (total): 1636.88
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0136728,0.0117654,3539.13,1636.88

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0235633
  gflops (total): 1767.12
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1767.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266738
  gflops (eval):  1561.05
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266738,1561.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.548
  maximum absolute entry in einsum_ir solution: 114.548
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129995
  time (eval):    0.0118233
  gflops (eval):  3521.78
  gflops (total): 1677.45
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129995,0.0118233,3521.78,1677.45

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0236526
  gflops (total): 1760.45
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1760.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268971
  gflops (eval):  1548.09
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268971,1548.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.651
  maximum absolute entry in einsum_ir solution: 112.651
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131922
  time (eval):    0.0116884
  gflops (eval):  3562.42
  gflops (total): 1673.56
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131922,0.0116884,3562.42,1673.56

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0231823
  gflops (total): 1796.16
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1796.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0273069
  gflops (eval):  1524.86
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0273069,1524.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.273
  maximum absolute entry in einsum_ir solution: 115.273
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130233
  time (eval):    0.0117968
  gflops (eval):  3529.71
  gflops (total): 1677.64
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130233,0.0117968,3529.71,1677.64

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0228466
  gflops (total): 1822.55
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1822.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0264448
  gflops (eval):  1574.57
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0264448,1574.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      128.995
  maximum absolute entry in einsum_ir solution: 128.995
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013021
  time (eval):    0.0117534
  gflops (eval):  3542.72
  gflops (total): 1680.73
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013021,0.0117534,3542.72,1680.73

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0237829
  gflops (total): 1750.8
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1750.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0271887
  gflops (eval):  1531.49
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0271887,1531.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.165
  maximum absolute entry in einsum_ir solution: 116.165
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131781
  time (eval):    0.0116454
  gflops (eval):  3575.58
  gflops (total): 1677.41
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131781,0.0116454,3575.58,1677.41

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0227809
  gflops (total): 1827.81
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1827.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267446
  gflops (eval):  1556.92
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267446,1556.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.958
  maximum absolute entry in einsum_ir solution: 113.958
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129436
  time (eval):    0.011683
  gflops (eval):  3564.09
  gflops (total): 1690.82
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129436,0.011683,3564.09,1690.82

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234484
  gflops (total): 1775.78
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1775.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265861
  gflops (eval):  1566.2
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265861,1566.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.037
  maximum absolute entry in einsum_ir solution: 110.037
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133419
  time (eval):    0.0117325
  gflops (eval):  3549.06
  gflops (total): 1660.63
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133419,0.0117325,3549.06,1660.63

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0233066
  gflops (total): 1786.58
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1786.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266437
  gflops (eval):  1562.82
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266437,1562.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.551
  maximum absolute entry in einsum_ir solution: 118.551
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130043
  time (eval):    0.0116972
  gflops (eval):  3559.77
  gflops (total): 1685.7
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130043,0.0116972,3559.77,1685.7

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0237711
  gflops (total): 1751.67
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1751.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267116
  gflops (eval):  1558.84
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267116,1558.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.019
  maximum absolute entry in einsum_ir solution: 113.019
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132673
  time (eval):    0.011755
  gflops (eval):  3542.26
  gflops (total): 1664.08
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132673,0.011755,3542.26,1664.08

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.023475
  gflops (total): 1773.77
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1773.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0273975
  gflops (eval):  1519.82
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0273975,1519.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.643
  maximum absolute entry in einsum_ir solution: 113.643
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133067
  time (eval):    0.0117014
  gflops (eval):  3558.49
  gflops (total): 1665.03
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133067,0.0117014,3558.49,1665.03

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0224853
  gflops (total): 1851.84
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1851.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0262982
  gflops (eval):  1583.35
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0262982,1583.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.248
  maximum absolute entry in einsum_ir solution: 110.248
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130067
  time (eval):    0.0117142
  gflops (eval):  3554.6
  gflops (total): 1684.37
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130067,0.0117142,3554.6,1684.37

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0235455
  gflops (total): 1768.46
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1768.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268599
  gflops (eval):  1550.24
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268599,1550.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.617
  maximum absolute entry in einsum_ir solution: 108.617
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133589
  time (eval):    0.0117212
  gflops (eval):  3552.46
  gflops (total): 1660.24
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133589,0.0117212,3552.46,1660.24

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0231802
  gflops (total): 1796.33
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1796.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265644
  gflops (eval):  1567.48
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265644,1567.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.692
  maximum absolute entry in einsum_ir solution: 116.692
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131312
  time (eval):    0.0120336
  gflops (eval):  3460.24
  gflops (total): 1654.66
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131312,0.0120336,3460.24,1654.66

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0237232
  gflops (total): 1755.21
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1755.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267258
  gflops (eval):  1558.02
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267258,1558.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.552
  maximum absolute entry in einsum_ir solution: 109.552
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133657
  time (eval):    0.0117132
  gflops (eval):  3554.89
  gflops (total): 1660.33
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133657,0.0117132,3554.89,1660.33

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0243556
  gflops (total): 1709.63
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1709.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0273977
  gflops (eval):  1519.81
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0273977,1519.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.806
  maximum absolute entry in einsum_ir solution: 110.806
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0136383
  time (eval):    0.0117097
  gflops (eval):  3555.95
  gflops (total): 1642.7
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0136383,0.0117097,3555.95,1642.7

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234774
  gflops (total): 1773.59
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1773.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265877
  gflops (eval):  1566.11
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265877,1566.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.492
  maximum absolute entry in einsum_ir solution: 113.492
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129961
  time (eval):    0.0119606
  gflops (eval):  3481.35
  gflops (total): 1668.45
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129961,0.0119606,3481.35,1668.45

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0238087
  gflops (total): 1748.91
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1748.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0269893
  gflops (eval):  1542.8
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0269893,1542.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.286
  maximum absolute entry in einsum_ir solution: 119.286
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130417
  time (eval):    0.0116934
  gflops (eval):  3560.92
  gflops (total): 1683.41
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130417,0.0116934,3560.92,1683.41

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0228609
  gflops (total): 1821.41
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1821.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0262945
  gflops (eval):  1583.57
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0262945,1583.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.84
  maximum absolute entry in einsum_ir solution: 109.84
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133064
  time (eval):    0.0117676
  gflops (eval):  3538.46
  gflops (total): 1660.66
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133064,0.0117676,3538.46,1660.66

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.022684
  gflops (total): 1835.62
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1835.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267616
  gflops (eval):  1555.93
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267616,1555.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.371
  maximum absolute entry in einsum_ir solution: 112.371
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130449
  time (eval):    0.0117113
  gflops (eval):  3555.47
  gflops (total): 1681.97
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130449,0.0117113,3555.47,1681.97

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0231422
  gflops (total): 1799.28
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1799.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0270602
  gflops (eval):  1538.76
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0270602,1538.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.82
  maximum absolute entry in einsum_ir solution: 115.82
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133353
  time (eval):    0.0117951
  gflops (eval):  3530.21
  gflops (total): 1656.93
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133353,0.0117951,3530.21,1656.93

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.022844
  gflops (total): 1822.76
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1822.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267497
  gflops (eval):  1556.62
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267497,1556.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.684
  maximum absolute entry in einsum_ir solution: 116.684
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132595
  time (eval):    0.0117574
  gflops (eval):  3541.52
  gflops (total): 1664.44
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132595,0.0117574,3541.52,1664.44

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0236628
  gflops (total): 1759.69
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1759.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.027056
  gflops (eval):  1539
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.027056,1539,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.121
  maximum absolute entry in einsum_ir solution: 112.121
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133537
  time (eval):    0.0117938
  gflops (eval):  3530.59
  gflops (total): 1655.8
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133537,0.0117938,3530.59,1655.8

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0239047
  gflops (total): 1741.88
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1741.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267818
  gflops (eval):  1554.76
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267818,1554.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.442
  maximum absolute entry in einsum_ir solution: 109.442
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129748
  time (eval):    0.0117761
  gflops (eval):  3535.91
  gflops (total): 1682.33
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129748,0.0117761,3535.91,1682.33

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.023176
  gflops (total): 1796.65
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1796.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268289
  gflops (eval):  1552.03
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268289,1552.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.71
  maximum absolute entry in einsum_ir solution: 118.71
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130811
  time (eval):    0.0118113
  gflops (eval):  3525.36
  gflops (total): 1672.77
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130811,0.0118113,3525.36,1672.77

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0231981
  gflops (total): 1794.94
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1794.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268389
  gflops (eval):  1551.45
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268389,1551.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.754
  maximum absolute entry in einsum_ir solution: 108.754
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132851
  time (eval):    0.0117437
  gflops (eval):  3545.66
  gflops (total): 1663.65
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132851,0.0117437,3545.66,1663.65

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0229015
  gflops (total): 1818.18
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1818.18

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267179
  gflops (eval):  1558.47
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267179,1558.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.393
  maximum absolute entry in einsum_ir solution: 114.393
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.012898
  time (eval):    0.0117397
  gflops (eval):  3546.86
  gflops (total): 1690.06
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.012898,0.0117397,3546.86,1690.06

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0233451
  gflops (total): 1783.64
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1783.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0273365
  gflops (eval):  1523.21
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0273365,1523.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.353
  maximum absolute entry in einsum_ir solution: 120.353
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132957
  time (eval):    0.011859
  gflops (eval):  3511.2
  gflops (total): 1655.32
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132957,0.011859,3511.2,1655.32

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234601
  gflops (total): 1774.89
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1774.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266381
  gflops (eval):  1563.15
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266381,1563.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.843
  maximum absolute entry in einsum_ir solution: 116.843
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131388
  time (eval):    0.0117204
  gflops (eval):  3552.72
  gflops (total): 1675
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131388,0.0117204,3552.72,1675

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234334
  gflops (total): 1776.92
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1776.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268171
  gflops (eval):  1552.71
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268171,1552.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.72
  maximum absolute entry in einsum_ir solution: 114.72
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132283
  time (eval):    0.0116213
  gflops (eval):  3583.01
  gflops (total): 1675.65
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132283,0.0116213,3583.01,1675.65

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0233271
  gflops (total): 1785.01
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1785.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268541
  gflops (eval):  1550.57
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268541,1550.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.897
  maximum absolute entry in einsum_ir solution: 120.897
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013178
  time (eval):    0.0117071
  gflops (eval):  3556.76
  gflops (total): 1673.26
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013178,0.0117071,3556.76,1673.26

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.022849
  gflops (total): 1822.37
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1822.37

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268822
  gflops (eval):  1548.95
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268822,1548.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.922
  maximum absolute entry in einsum_ir solution: 110.922
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0128538
  time (eval):    0.0117312
  gflops (eval):  3549.43
  gflops (total): 1693.68
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0128538,0.0117312,3549.43,1693.68

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232093
  gflops (total): 1794.07
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1794.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.027213
  gflops (eval):  1530.12
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.027213,1530.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.531
  maximum absolute entry in einsum_ir solution: 117.531
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013143
  time (eval):    0.0117369
  gflops (eval):  3547.71
  gflops (total): 1673.61
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013143,0.0117369,3547.71,1673.61

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.02319
  gflops (total): 1795.57
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1795.57

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266434
  gflops (eval):  1562.83
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266434,1562.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.614
  maximum absolute entry in einsum_ir solution: 118.614
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132117
  time (eval):    0.0117662
  gflops (eval):  3538.89
  gflops (total): 1667.04
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132117,0.0117662,3538.89,1667.04

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0241548
  gflops (total): 1723.84
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1723.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266453
  gflops (eval):  1562.72
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266453,1562.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.603
  maximum absolute entry in einsum_ir solution: 112.603
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131654
  time (eval):    0.0117163
  gflops (eval):  3553.94
  gflops (total): 1673.49
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131654,0.0117163,3553.94,1673.49

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0228709
  gflops (total): 1820.62
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1820.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0273099
  gflops (eval):  1524.69
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0273099,1524.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.796
  maximum absolute entry in einsum_ir solution: 112.796
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132256
  time (eval):    0.0116923
  gflops (eval):  3561.25
  gflops (total): 1671.06
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132256,0.0116923,3561.25,1671.06

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0225462
  gflops (total): 1846.84
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1846.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0261843
  gflops (eval):  1590.23
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0261843,1590.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.579
  maximum absolute entry in einsum_ir solution: 110.579
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0128236
  time (eval):    0.011713
  gflops (eval):  3554.94
  gflops (total): 1697.02
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0128236,0.011713,3554.94,1697.02

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.023676
  gflops (total): 1758.71
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1758.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268655
  gflops (eval):  1549.91
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268655,1549.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.307
  maximum absolute entry in einsum_ir solution: 121.307
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132334
  time (eval):    0.011716
  gflops (eval):  3554.04
  gflops (total): 1668.94
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132334,0.011716,3554.04,1668.94

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0229063
  gflops (total): 1817.81
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1817.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.027
  gflops (eval):  1542.19
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.027,1542.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.33
  maximum absolute entry in einsum_ir solution: 108.33
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129394
  time (eval):    0.0117305
  gflops (eval):  3549.65
  gflops (total): 1687.85
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129394,0.0117305,3549.65,1687.85

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0225692
  gflops (total): 1844.96
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1844.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265981
  gflops (eval):  1565.49
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265981,1565.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      128.937
  maximum absolute entry in einsum_ir solution: 128.937
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133192
  time (eval):    0.0118392
  gflops (eval):  3517.05
  gflops (total): 1655.08
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133192,0.0118392,3517.05,1655.08

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0233171
  gflops (total): 1785.78
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1785.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0271141
  gflops (eval):  1535.7
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0271141,1535.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.974
  maximum absolute entry in einsum_ir solution: 111.974
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131673
  time (eval):    0.0116522
  gflops (eval):  3573.49
  gflops (total): 1677.68
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131673,0.0116522,3573.49,1677.68

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0228546
  gflops (total): 1821.92
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1821.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267521
  gflops (eval):  1556.48
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267521,1556.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.685
  maximum absolute entry in einsum_ir solution: 113.685
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129951
  time (eval):    0.0117415
  gflops (eval):  3546.34
  gflops (total): 1683.31
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129951,0.0117415,3546.34,1683.31

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234281
  gflops (total): 1777.32
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1777.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0272239
  gflops (eval):  1529.51
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0272239,1529.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.712
  maximum absolute entry in einsum_ir solution: 119.712
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013241
  time (eval):    0.0117167
  gflops (eval):  3553.82
  gflops (total): 1668.39
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013241,0.0117167,3553.82,1668.39

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0227028
  gflops (total): 1834.1
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1834.1

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266942
  gflops (eval):  1559.86
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266942,1559.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.222
  maximum absolute entry in einsum_ir solution: 115.222
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0136089
  time (eval):    0.0120449
  gflops (eval):  3456.99
  gflops (total): 1623.12
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0136089,0.0120449,3456.99,1623.12

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0226554
  gflops (total): 1837.94
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1837.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265063
  gflops (eval):  1570.92
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265063,1570.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.037
  maximum absolute entry in einsum_ir solution: 106.037
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132128
  time (eval):    0.0118016
  gflops (eval):  3528.28
  gflops (total): 1664.61
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132128,0.0118016,3528.28,1664.61

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0235107
  gflops (total): 1771.07
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1771.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0273742
  gflops (eval):  1521.11
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0273742,1521.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.898
  maximum absolute entry in einsum_ir solution: 114.898
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130745
  time (eval):    0.0117386
  gflops (eval):  3547.19
  gflops (total): 1678.11
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130745,0.0117386,3547.19,1678.11

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.023404
  gflops (total): 1779.15
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1779.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.026974
  gflops (eval):  1543.68
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.026974,1543.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.325
  maximum absolute entry in einsum_ir solution: 114.325
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130229
  time (eval):    0.0117032
  gflops (eval):  3557.94
  gflops (total): 1684.02
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130229,0.0117032,3557.94,1684.02

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.023999
  gflops (total): 1735.04
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1735.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0273345
  gflops (eval):  1523.32
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0273345,1523.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.608
  maximum absolute entry in einsum_ir solution: 120.608
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133345
  time (eval):    0.0116571
  gflops (eval):  3572.01
  gflops (total): 1666.13
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133345,0.0116571,3572.01,1666.13

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0235054
  gflops (total): 1771.47
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1771.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266255
  gflops (eval):  1563.88
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266255,1563.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.203
  maximum absolute entry in einsum_ir solution: 115.203
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131946
  time (eval):    0.0117263
  gflops (eval):  3550.92
  gflops (total): 1670.86
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131946,0.0117263,3550.92,1670.86

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234534
  gflops (total): 1775.4
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1775.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0263071
  gflops (eval):  1582.81
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0263071,1582.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.534
  maximum absolute entry in einsum_ir solution: 116.534
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131958
  time (eval):    0.0116723
  gflops (eval):  3567.34
  gflops (total): 1674.4
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131958,0.0116723,3567.34,1674.4

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0235323
  gflops (total): 1769.45
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1769.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0270838
  gflops (eval):  1537.42
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0270838,1537.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.077
  maximum absolute entry in einsum_ir solution: 112.077
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132922
  time (eval):    0.0117585
  gflops (eval):  3541.21
  gflops (total): 1662.2
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132922,0.0117585,3541.21,1662.2

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0225777
  gflops (total): 1844.26
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1844.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266869
  gflops (eval):  1560.28
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266869,1560.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.447
  maximum absolute entry in einsum_ir solution: 110.447
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129105
  time (eval):    0.0116775
  gflops (eval):  3565.76
  gflops (total): 1693.48
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129105,0.0116775,3565.76,1693.48

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0235421
  gflops (total): 1768.71
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1768.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268771
  gflops (eval):  1549.24
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268771,1549.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.016
  maximum absolute entry in einsum_ir solution: 120.016
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0138133
  time (eval):    0.0116812
  gflops (eval):  3564.64
  gflops (total): 1633.26
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0138133,0.0116812,3564.64,1633.26

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0233475
  gflops (total): 1783.46
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1783.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268693
  gflops (eval):  1549.69
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268693,1549.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.139
  maximum absolute entry in einsum_ir solution: 110.139
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130277
  time (eval):    0.0117337
  gflops (eval):  3548.69
  gflops (total): 1681.62
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130277,0.0117337,3548.69,1681.62

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0229994
  gflops (total): 1810.45
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1810.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0269529
  gflops (eval):  1544.89
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0269529,1544.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.73
  maximum absolute entry in einsum_ir solution: 110.73
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013144
  time (eval):    0.0117026
  gflops (eval):  3558.11
  gflops (total): 1675.85
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013144,0.0117026,3558.11,1675.85

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0230333
  gflops (total): 1807.78
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1807.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268726
  gflops (eval):  1549.5
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268726,1549.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.285
  maximum absolute entry in einsum_ir solution: 113.285
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131346
  time (eval):    0.0117345
  gflops (eval):  3548.44
  gflops (total): 1674.33
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131346,0.0117345,3548.44,1674.33

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234265
  gflops (total): 1777.44
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1777.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267633
  gflops (eval):  1555.83
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267633,1555.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.465
  maximum absolute entry in einsum_ir solution: 110.465
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129582
  time (eval):    0.0117303
  gflops (eval):  3549.71
  gflops (total): 1686.58
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129582,0.0117303,3549.71,1686.58

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0235332
  gflops (total): 1769.38
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1769.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268902
  gflops (eval):  1548.49
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268902,1548.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.064
  maximum absolute entry in einsum_ir solution: 116.064
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131504
  time (eval):    0.0117207
  gflops (eval):  3552.62
  gflops (total): 1674.2
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131504,0.0117207,3552.62,1674.2

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0231764
  gflops (total): 1796.62
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1796.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0272127
  gflops (eval):  1530.14
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0272127,1530.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.281
  maximum absolute entry in einsum_ir solution: 111.281
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131906
  time (eval):    0.0116983
  gflops (eval):  3559.41
  gflops (total): 1673
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131906,0.0116983,3559.41,1673

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0237804
  gflops (total): 1750.99
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1750.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0270778
  gflops (eval):  1537.76
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0270778,1537.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.017
  maximum absolute entry in einsum_ir solution: 113.017
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132037
  time (eval):    0.0118925
  gflops (eval):  3501.31
  gflops (total): 1659.19
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132037,0.0118925,3501.31,1659.19

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0226441
  gflops (total): 1838.86
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1838.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.026772
  gflops (eval):  1555.32
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.026772,1555.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.472
  maximum absolute entry in einsum_ir solution: 116.472
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129372
  time (eval):    0.0116316
  gflops (eval):  3579.83
  gflops (total): 1694.8
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129372,0.0116316,3579.83,1694.8

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0231628
  gflops (total): 1797.68
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1797.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0263281
  gflops (eval):  1581.55
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0263281,1581.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.958
  maximum absolute entry in einsum_ir solution: 113.958
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132098
  time (eval):    0.0117325
  gflops (eval):  3549.04
  gflops (total): 1669.42
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132098,0.0117325,3549.04,1669.42

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0228691
  gflops (total): 1820.77
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1820.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0269299
  gflops (eval):  1546.21
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0269299,1546.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.048
  maximum absolute entry in einsum_ir solution: 110.048
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0135388
  time (eval):    0.0117361
  gflops (eval):  3547.94
  gflops (total): 1647.45
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0135388,0.0117361,3547.94,1647.45

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0228212
  gflops (total): 1824.59
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1824.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266688
  gflops (eval):  1561.34
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266688,1561.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.288
  maximum absolute entry in einsum_ir solution: 117.288
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132867
  time (eval):    0.011706
  gflops (eval):  3557.07
  gflops (total): 1666.05
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132867,0.011706,3557.07,1666.05

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0236854
  gflops (total): 1758.01
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1758.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0273754
  gflops (eval):  1521.04
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0273754,1521.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.197
  maximum absolute entry in einsum_ir solution: 119.197
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129958
  time (eval):    0.0117525
  gflops (eval):  3543
  gflops (total): 1682.5
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129958,0.0117525,3543,1682.5

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.022572
  gflops (total): 1844.73
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1844.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0269793
  gflops (eval):  1543.37
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0269793,1543.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.02
  maximum absolute entry in einsum_ir solution: 109.02
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,4,6,7,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129713
  time (eval):    0.0117904
  gflops (eval):  3531.63
  gflops (total): 1681.6
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129713,0.0117904,3531.63,1681.6

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0237856
  gflops (total): 1750.61
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1750.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267771
  gflops (eval):  1555.03
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267771,1555.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.032
  maximum absolute entry in einsum_ir solution: 107.032
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130903
  time (eval):    0.0113657
  gflops (eval):  3663.48
  gflops (total): 1702.57
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130903,0.0113657,3663.48,1702.57

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0431004
  gflops (total): 966.07
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,966.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0274698
  gflops (eval):  1515.78
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0274698,1515.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.798
  maximum absolute entry in einsum_ir solution: 111.798
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131393
  time (eval):    0.0113995
  gflops (eval):  3652.63
  gflops (total): 1696.83
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131393,0.0113995,3652.63,1696.83

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0438539
  gflops (total): 949.472
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,949.472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268244
  gflops (eval):  1552.25
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268244,1552.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.39
  maximum absolute entry in einsum_ir solution: 109.39
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130846
  time (eval):    0.0113593
  gflops (eval):  3665.54
  gflops (total): 1703.41
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130846,0.0113593,3665.54,1703.41

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0433907
  gflops (total): 959.608
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,959.608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0272546
  gflops (eval):  1527.74
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0272546,1527.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.206
  maximum absolute entry in einsum_ir solution: 112.206
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0136167
  time (eval):    0.0113644
  gflops (eval):  3663.9
  gflops (total): 1666.78
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0136167,0.0113644,3663.9,1666.78

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0435003
  gflops (total): 957.19
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,957.19

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269424
  gflops (eval):  1545.45
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269424,1545.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.386
  maximum absolute entry in einsum_ir solution: 109.386
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130786
  time (eval):    0.0114468
  gflops (eval):  3637.53
  gflops (total): 1697.75
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130786,0.0114468,3637.53,1697.75

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0441375
  gflops (total): 943.371
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,943.371

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270681
  gflops (eval):  1538.27
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270681,1538.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.117
  maximum absolute entry in einsum_ir solution: 105.117
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130441
  time (eval):    0.0113436
  gflops (eval):  3670.62
  gflops (total): 1707.34
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130441,0.0113436,3670.62,1707.34

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.043628
  gflops (total): 954.388
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,954.388

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0274669
  gflops (eval):  1515.94
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0274669,1515.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.24
  maximum absolute entry in einsum_ir solution: 119.24
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130365
  time (eval):    0.0113134
  gflops (eval):  3680.43
  gflops (total): 1709.99
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130365,0.0113134,3680.43,1709.99

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0434432
  gflops (total): 958.448
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,958.448

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268402
  gflops (eval):  1551.33
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268402,1551.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.101
  maximum absolute entry in einsum_ir solution: 112.101
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130577
  time (eval):    0.0114073
  gflops (eval):  3650.12
  gflops (total): 1701.94
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130577,0.0114073,3650.12,1701.94

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0438326
  gflops (total): 949.933
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,949.933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270336
  gflops (eval):  1540.24
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270336,1540.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.929
  maximum absolute entry in einsum_ir solution: 108.929
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130303
  time (eval):    0.0113985
  gflops (eval):  3652.95
  gflops (total): 1704.47
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130303,0.0113985,3652.95,1704.47

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0436546
  gflops (total): 953.805
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,953.805

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.026774
  gflops (eval):  1555.17
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.026774,1555.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.969
  maximum absolute entry in einsum_ir solution: 106.969
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131827
  time (eval):    0.0114044
  gflops (eval):  3651.03
  gflops (total): 1693.49
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131827,0.0114044,3651.03,1693.49

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0443793
  gflops (total): 938.231
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,938.231

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269982
  gflops (eval):  1542.25
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269982,1542.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.232
  maximum absolute entry in einsum_ir solution: 110.232
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130344
  time (eval):    0.0114304
  gflops (eval):  3642.73
  gflops (total): 1701.96
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130344,0.0114304,3642.73,1701.96

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0440682
  gflops (total): 944.854
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,944.854

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0277202
  gflops (eval):  1502.08
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0277202,1502.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.043
  maximum absolute entry in einsum_ir solution: 107.043
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131677
  time (eval):    0.0113797
  gflops (eval):  3658.98
  gflops (total): 1696.23
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131677,0.0113797,3658.98,1696.23

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.042928
  gflops (total): 969.951
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,969.951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267222
  gflops (eval):  1558.18
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267222,1558.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.974
  maximum absolute entry in einsum_ir solution: 111.974
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130241
  time (eval):    0.011369
  gflops (eval):  3662.42
  gflops (total): 1706.96
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130241,0.011369,3662.42,1706.96

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0441114
  gflops (total): 943.929
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,943.929

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268768
  gflops (eval):  1549.22
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268768,1549.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.608
  maximum absolute entry in einsum_ir solution: 113.608
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.013097
  time (eval):    0.0113908
  gflops (eval):  3655.4
  gflops (total): 1700.36
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.013097,0.0113908,3655.4,1700.36

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0433997
  gflops (total): 959.409
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,959.409

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0275074
  gflops (eval):  1513.7
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0275074,1513.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.489
  maximum absolute entry in einsum_ir solution: 121.489
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131327
  time (eval):    0.0114151
  gflops (eval):  3647.63
  gflops (total): 1696.2
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131327,0.0114151,3647.63,1696.2

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0438766
  gflops (total): 948.981
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,948.981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267529
  gflops (eval):  1556.39
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267529,1556.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      124.747
  maximum absolute entry in einsum_ir solution: 124.747
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.013123
  time (eval):    0.0119417
  gflops (eval):  3486.78
  gflops (total): 1661.22
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.013123,0.0119417,3486.78,1661.22

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0445622
  gflops (total): 934.38
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,934.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0266335
  gflops (eval):  1563.37
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0266335,1563.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.248
  maximum absolute entry in einsum_ir solution: 116.248
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130967
  time (eval):    0.0114533
  gflops (eval):  3635.47
  gflops (total): 1696.05
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130967,0.0114533,3635.47,1696.05

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.044566
  gflops (total): 934.301
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,934.301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.026871
  gflops (eval):  1549.56
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.026871,1549.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.663
  maximum absolute entry in einsum_ir solution: 108.663
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132248
  time (eval):    0.0116777
  gflops (eval):  3565.59
  gflops (total): 1672.04
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132248,0.0116777,3565.59,1672.04

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0447664
  gflops (total): 930.118
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,930.118

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0271148
  gflops (eval):  1535.62
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0271148,1535.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.53
  maximum absolute entry in einsum_ir solution: 110.53
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0134439
  time (eval):    0.0114162
  gflops (eval):  3647.29
  gflops (total): 1674.9
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0134439,0.0114162,3647.29,1674.9

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0443178
  gflops (total): 939.532
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,939.532

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0277802
  gflops (eval):  1498.84
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0277802,1498.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.587
  maximum absolute entry in einsum_ir solution: 115.587
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0133153
  time (eval):    0.0114262
  gflops (eval):  3644.07
  gflops (total): 1682.92
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0133153,0.0114262,3644.07,1682.92

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0429735
  gflops (total): 968.923
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,968.923

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269492
  gflops (eval):  1545.06
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269492,1545.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.705
  maximum absolute entry in einsum_ir solution: 111.705
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130797
  time (eval):    0.0113968
  gflops (eval):  3653.48
  gflops (total): 1701.15
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130797,0.0113968,3653.48,1701.15

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0436752
  gflops (total): 953.356
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,953.356

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269076
  gflops (eval):  1547.45
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269076,1547.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.841
  maximum absolute entry in einsum_ir solution: 106.841
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129029
  time (eval):    0.0114284
  gflops (eval):  3643.37
  gflops (total): 1711.29
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129029,0.0114284,3643.37,1711.29

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0439255
  gflops (total): 947.924
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,947.924

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0275735
  gflops (eval):  1510.07
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0275735,1510.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      122.129
  maximum absolute entry in einsum_ir solution: 122.129
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130676
  time (eval):    0.0114566
  gflops (eval):  3634.4
  gflops (total): 1697.83
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130676,0.0114566,3634.4,1697.83

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0435109
  gflops (total): 956.956
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,956.956

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0265067
  gflops (eval):  1570.85
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0265067,1570.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.455
  maximum absolute entry in einsum_ir solution: 113.455
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131108
  time (eval):    0.0113796
  gflops (eval):  3659
  gflops (total): 1700.17
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131108,0.0113796,3659,1700.17

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0444052
  gflops (total): 937.684
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,937.684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268675
  gflops (eval):  1549.75
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268675,1549.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.501
  maximum absolute entry in einsum_ir solution: 114.501
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132688
  time (eval):    0.0114778
  gflops (eval):  3627.69
  gflops (total): 1682.57
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132688,0.0114778,3627.69,1682.57

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0447277
  gflops (total): 930.922
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,930.922

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0273957
  gflops (eval):  1519.87
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0273957,1519.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.719
  maximum absolute entry in einsum_ir solution: 113.719
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0128235
  time (eval):    0.0113914
  gflops (eval):  3655.22
  gflops (total): 1719.52
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0128235,0.0113914,3655.22,1719.52

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0433688
  gflops (total): 960.091
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,960.091

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268417
  gflops (eval):  1551.25
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268417,1551.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.36
  maximum absolute entry in einsum_ir solution: 111.36
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129017
  time (eval):    0.0113897
  gflops (eval):  3655.75
  gflops (total): 1714.1
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129017,0.0113897,3655.75,1714.1

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0443823
  gflops (total): 938.168
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,938.168

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0271112
  gflops (eval):  1535.83
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0271112,1535.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.862
  maximum absolute entry in einsum_ir solution: 106.862
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129981
  time (eval):    0.0113695
  gflops (eval):  3662.27
  gflops (total): 1708.75
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129981,0.0113695,3662.27,1708.75

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.043788
  gflops (total): 950.9
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,950.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0272067
  gflops (eval):  1530.44
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0272067,1530.44,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.135
  maximum absolute entry in einsum_ir solution: 110.135
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130201
  time (eval):    0.0113977
  gflops (eval):  3653.18
  gflops (total): 1705.23
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130201,0.0113977,3653.18,1705.23

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0435756
  gflops (total): 955.536
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,955.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267237
  gflops (eval):  1558.1
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267237,1558.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.755
  maximum absolute entry in einsum_ir solution: 110.755
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131012
  time (eval):    0.0113797
  gflops (eval):  3658.97
  gflops (total): 1700.84
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131012,0.0113797,3658.97,1700.84

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0443399
  gflops (total): 939.064
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,939.064

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.027419
  gflops (eval):  1518.59
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.027419,1518.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.743
  maximum absolute entry in einsum_ir solution: 116.743
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0135205
  time (eval):    0.0113447
  gflops (eval):  3670.26
  gflops (total): 1674.55
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0135205,0.0113447,3670.26,1674.55

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0429644
  gflops (total): 969.129
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,969.129

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267972
  gflops (eval):  1553.82
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267972,1553.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.049
  maximum absolute entry in einsum_ir solution: 111.049
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129977
  time (eval):    0.0113523
  gflops (eval):  3667.81
  gflops (total): 1709.98
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129977,0.0113523,3667.81,1709.98

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0447956
  gflops (total): 929.511
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,929.511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0266547
  gflops (eval):  1562.12
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0266547,1562.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.261
  maximum absolute entry in einsum_ir solution: 120.261
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0126619
  time (eval):    0.0114023
  gflops (eval):  3651.71
  gflops (total): 1730.29
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0126619,0.0114023,3651.71,1730.29

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0435807
  gflops (total): 955.423
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,955.423

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0272239
  gflops (eval):  1529.47
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0272239,1529.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.198
  maximum absolute entry in einsum_ir solution: 115.198
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132916
  time (eval):    0.011455
  gflops (eval):  3634.93
  gflops (total): 1682.57
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132916,0.011455,3634.93,1682.57

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0437739
  gflops (total): 951.207
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,951.207

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268191
  gflops (eval):  1552.55
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268191,1552.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.376
  maximum absolute entry in einsum_ir solution: 110.376
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0128973
  time (eval):    0.0114138
  gflops (eval):  3648.05
  gflops (total): 1712.72
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0128973,0.0114138,3648.05,1712.72

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0432252
  gflops (total): 963.282
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,963.282

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268052
  gflops (eval):  1553.36
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268052,1553.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.017
  maximum absolute entry in einsum_ir solution: 111.017
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129929
  time (eval):    0.01138
  gflops (eval):  3658.88
  gflops (total): 1708.38
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129929,0.01138,3658.88,1708.38

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0443975
  gflops (total): 937.846
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,937.846

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269795
  gflops (eval):  1543.32
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269795,1543.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.818
  maximum absolute entry in einsum_ir solution: 106.818
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131027
  time (eval):    0.0114481
  gflops (eval):  3637.12
  gflops (total): 1696
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131027,0.0114481,3637.12,1696

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0437902
  gflops (total): 950.854
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,950.854

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0265454
  gflops (eval):  1568.56
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0265454,1568.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.04
  maximum absolute entry in einsum_ir solution: 106.04
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0128704
  time (eval):    0.0113529
  gflops (eval):  3667.6
  gflops (total): 1718.92
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0128704,0.0113529,3667.6,1718.92

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0445317
  gflops (total): 935.02
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,935.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0274248
  gflops (eval):  1518.26
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0274248,1518.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.412
  maximum absolute entry in einsum_ir solution: 116.412
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.013193
  time (eval):    0.0114184
  gflops (eval):  3646.56
  gflops (total): 1691.82
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.013193,0.0114184,3646.56,1691.82

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.043205
  gflops (total): 963.731
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,963.731

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267132
  gflops (eval):  1558.7
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267132,1558.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.607
  maximum absolute entry in einsum_ir solution: 115.607
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129427
  time (eval):    0.0114049
  gflops (eval):  3650.9
  gflops (total): 1710.15
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129427,0.0114049,3650.9,1710.15

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0438298
  gflops (total): 949.993
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,949.993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268523
  gflops (eval):  1550.63
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268523,1550.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.811
  maximum absolute entry in einsum_ir solution: 112.811
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0133494
  time (eval):    0.0114417
  gflops (eval):  3639.16
  gflops (total): 1679.56
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0133494,0.0114417,3639.16,1679.56

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.044831
  gflops (total): 928.778
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,928.778

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0273668
  gflops (eval):  1521.48
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0273668,1521.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.352
  maximum absolute entry in einsum_ir solution: 111.352
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131587
  time (eval):    0.0113608
  gflops (eval):  3665.06
  gflops (total): 1698.16
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131587,0.0113608,3665.06,1698.16

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0442961
  gflops (total): 939.993
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,939.993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0272668
  gflops (eval):  1527.06
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0272668,1527.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.04
  maximum absolute entry in einsum_ir solution: 112.04
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129514
  time (eval):    0.0113844
  gflops (eval):  3657.48
  gflops (total): 1710.98
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129514,0.0113844,3657.48,1710.98

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0435999
  gflops (total): 955.003
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,955.003

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267291
  gflops (eval):  1557.78
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267291,1557.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.495
  maximum absolute entry in einsum_ir solution: 109.495
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.013044
  time (eval):    0.0114244
  gflops (eval):  3644.65
  gflops (total): 1701.7
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.013044,0.0114244,3644.65,1701.7

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0443579
  gflops (total): 938.683
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,938.683

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0276142
  gflops (eval):  1507.85
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0276142,1507.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.863
  maximum absolute entry in einsum_ir solution: 119.863
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130145
  time (eval):    0.0113135
  gflops (eval):  3680.39
  gflops (total): 1711.53
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130145,0.0113135,3680.39,1711.53

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0440616
  gflops (total): 944.996
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,944.996

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0265508
  gflops (eval):  1568.24
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0265508,1568.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.631
  maximum absolute entry in einsum_ir solution: 110.631
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130268
  time (eval):    0.0113784
  gflops (eval):  3659.38
  gflops (total): 1706.11
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130268,0.0113784,3659.38,1706.11

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0438827
  gflops (total): 948.848
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,948.848

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267617
  gflops (eval):  1555.88
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267617,1555.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.702
  maximum absolute entry in einsum_ir solution: 115.702
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131237
  time (eval):    0.0113651
  gflops (eval):  3663.69
  gflops (total): 1700.29
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131237,0.0113651,3663.69,1700.29

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0435303
  gflops (total): 956.53
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,956.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0278162
  gflops (eval):  1496.9
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0278162,1496.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.382
  maximum absolute entry in einsum_ir solution: 108.382
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130462
  time (eval):    0.0114077
  gflops (eval):  3649.98
  gflops (total): 1702.71
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130462,0.0114077,3649.98,1702.71

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0433695
  gflops (total): 960.077
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,960.077

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268985
  gflops (eval):  1547.97
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268985,1547.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.135
  maximum absolute entry in einsum_ir solution: 115.135
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131765
  time (eval):    0.0114151
  gflops (eval):  3647.64
  gflops (total): 1693.19
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131765,0.0114151,3647.64,1693.19

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0431934
  gflops (total): 963.991
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,963.991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.027627
  gflops (eval):  1507.15
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.027627,1507.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.57
  maximum absolute entry in einsum_ir solution: 111.57
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132118
  time (eval):    0.0113762
  gflops (eval):  3660.11
  gflops (total): 1693.43
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132118,0.0113762,3660.11,1693.43

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0422386
  gflops (total): 985.781
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,985.781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268193
  gflops (eval):  1552.54
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268193,1552.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.771
  maximum absolute entry in einsum_ir solution: 110.771
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132941
  time (eval):    0.0114486
  gflops (eval):  3636.96
  gflops (total): 1682.84
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132941,0.0114486,3636.96,1682.84

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0436629
  gflops (total): 953.625
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,953.625

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268345
  gflops (eval):  1551.66
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268345,1551.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.787
  maximum absolute entry in einsum_ir solution: 114.787
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0133928
  time (eval):    0.011375
  gflops (eval):  3660.49
  gflops (total): 1681.14
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0133928,0.011375,3660.49,1681.14

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.043574
  gflops (total): 955.572
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,955.572

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0275997
  gflops (eval):  1508.64
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0275997,1508.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.904
  maximum absolute entry in einsum_ir solution: 115.904
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131851
  time (eval):    0.011378
  gflops (eval):  3659.53
  gflops (total): 1695.15
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131851,0.011378,3659.53,1695.15

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0432189
  gflops (total): 963.422
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,963.422

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268426
  gflops (eval):  1551.19
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268426,1551.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.5
  maximum absolute entry in einsum_ir solution: 112.5
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131138
  time (eval):    0.0113964
  gflops (eval):  3653.62
  gflops (total): 1698.8
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131138,0.0113964,3653.62,1698.8

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0434855
  gflops (total): 957.514
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,957.514

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0266392
  gflops (eval):  1563.04
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0266392,1563.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.633
  maximum absolute entry in einsum_ir solution: 109.633
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132201
  time (eval):    0.011436
  gflops (eval):  3640.97
  gflops (total): 1688.75
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132201,0.011436,3640.97,1688.75

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0441455
  gflops (total): 943.201
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,943.201

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267677
  gflops (eval):  1555.53
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267677,1555.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.137
  maximum absolute entry in einsum_ir solution: 110.137
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132432
  time (eval):    0.0114424
  gflops (eval):  3638.94
  gflops (total): 1686.73
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132432,0.0114424,3638.94,1686.73

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0433794
  gflops (total): 959.858
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,959.858

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267329
  gflops (eval):  1557.56
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267329,1557.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.536
  maximum absolute entry in einsum_ir solution: 108.536
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0139032
  time (eval):    0.01138
  gflops (eval):  3658.86
  gflops (total): 1646.86
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0139032,0.01138,3658.86,1646.86

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0438017
  gflops (total): 950.603
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,950.603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0273878
  gflops (eval):  1520.31
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0273878,1520.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.387
  maximum absolute entry in einsum_ir solution: 113.387
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0133526
  time (eval):    0.0114528
  gflops (eval):  3635.61
  gflops (total): 1678.58
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0133526,0.0114528,3635.61,1678.58

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0432595
  gflops (total): 962.519
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,962.519

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268888
  gflops (eval):  1548.53
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268888,1548.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.037
  maximum absolute entry in einsum_ir solution: 118.037
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132003
  time (eval):    0.0114475
  gflops (eval):  3637.3
  gflops (total): 1689.32
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132003,0.0114475,3637.3,1689.32

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0438271
  gflops (total): 950.052
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,950.052

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.026911
  gflops (eval):  1547.25
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.026911,1547.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.655
  maximum absolute entry in einsum_ir solution: 106.655
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0128031
  time (eval):    0.0113669
  gflops (eval):  3663.09
  gflops (total): 1722.71
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0128031,0.0113669,3663.09,1722.71

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0432099
  gflops (total): 963.623
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,963.623

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0275867
  gflops (eval):  1509.35
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0275867,1509.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.058
  maximum absolute entry in einsum_ir solution: 109.058
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130159
  time (eval):    0.0113557
  gflops (eval):  3666.71
  gflops (total): 1708.46
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130159,0.0113557,3666.71,1708.46

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0427744
  gflops (total): 973.434
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,973.434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267663
  gflops (eval):  1555.61
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267663,1555.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.842
  maximum absolute entry in einsum_ir solution: 111.842
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132125
  time (eval):    0.0113691
  gflops (eval):  3662.4
  gflops (total): 1693.87
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132125,0.0113691,3662.4,1693.87

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0436925
  gflops (total): 952.979
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,952.979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267116
  gflops (eval):  1558.8
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267116,1558.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      124.11
  maximum absolute entry in einsum_ir solution: 124.11
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129419
  time (eval):    0.0114958
  gflops (eval):  3622.02
  gflops (total): 1703.85
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129419,0.0114958,3622.02,1703.85

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0443487
  gflops (total): 938.878
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,938.878

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267641
  gflops (eval):  1555.74
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267641,1555.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.585
  maximum absolute entry in einsum_ir solution: 118.585
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.013731
  time (eval):    0.0114153
  gflops (eval):  3647.55
  gflops (total): 1655.83
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.013731,0.0114153,3647.55,1655.83

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.044185
  gflops (total): 942.357
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,942.357

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269371
  gflops (eval):  1545.75
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269371,1545.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.405
  maximum absolute entry in einsum_ir solution: 113.405
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131876
  time (eval):    0.0113733
  gflops (eval):  3661.02
  gflops (total): 1695.29
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131876,0.0113733,3661.02,1695.29

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.043776
  gflops (total): 951.162
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,951.162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0271871
  gflops (eval):  1531.54
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0271871,1531.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.797
  maximum absolute entry in einsum_ir solution: 110.797
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0135054
  time (eval):    0.0114119
  gflops (eval):  3648.65
  gflops (total): 1671.05
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0135054,0.0114119,3648.65,1671.05

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.04418
  gflops (total): 942.464
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,942.464

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269106
  gflops (eval):  1547.27
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269106,1547.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.993
  maximum absolute entry in einsum_ir solution: 106.993
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130284
  time (eval):    0.0114314
  gflops (eval):  3642.42
  gflops (total): 1702.3
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130284,0.0114314,3642.42,1702.3

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0442222
  gflops (total): 941.563
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,941.563

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267779
  gflops (eval):  1554.94
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267779,1554.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.038
  maximum absolute entry in einsum_ir solution: 112.038
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131956
  time (eval):    0.0113193
  gflops (eval):  3678.51
  gflops (total): 1698.48
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131956,0.0113193,3678.51,1698.48

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0434856
  gflops (total): 957.513
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,957.513

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269774
  gflops (eval):  1543.44
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269774,1543.44,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.621
  maximum absolute entry in einsum_ir solution: 116.621
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132951
  time (eval):    0.0114536
  gflops (eval):  3635.38
  gflops (total): 1682.43
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132951,0.0114536,3635.38,1682.43

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0443067
  gflops (total): 939.769
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,939.769

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.026726
  gflops (eval):  1557.96
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.026726,1557.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.645
  maximum absolute entry in einsum_ir solution: 110.645
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131043
  time (eval):    0.0114605
  gflops (eval):  3633.19
  gflops (total): 1695.03
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131043,0.0114605,3633.19,1695.03

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0433548
  gflops (total): 960.403
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,960.403

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268402
  gflops (eval):  1551.33
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268402,1551.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.968
  maximum absolute entry in einsum_ir solution: 112.968
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132506
  time (eval):    0.0114561
  gflops (eval):  3634.57
  gflops (total): 1685.29
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132506,0.0114561,3634.57,1685.29

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0432782
  gflops (total): 962.101
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,962.101

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269429
  gflops (eval):  1545.42
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269429,1545.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.279
  maximum absolute entry in einsum_ir solution: 115.279
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132404
  time (eval):    0.0113351
  gflops (eval):  3673.37
  gflops (total): 1694.29
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132404,0.0113351,3673.37,1694.29

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0438813
  gflops (total): 948.878
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,948.878

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269521
  gflops (eval):  1544.89
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269521,1544.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.764
  maximum absolute entry in einsum_ir solution: 104.764
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132481
  time (eval):    0.0113775
  gflops (eval):  3659.67
  gflops (total): 1690.84
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132481,0.0113775,3659.67,1690.84

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0433542
  gflops (total): 960.415
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,960.415

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268439
  gflops (eval):  1551.11
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268439,1551.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.324
  maximum absolute entry in einsum_ir solution: 107.324
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131766
  time (eval):    0.0113246
  gflops (eval):  3676.77
  gflops (total): 1699.43
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131766,0.0113246,3676.77,1699.43

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0441015
  gflops (total): 944.142
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,944.142

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270339
  gflops (eval):  1540.22
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270339,1540.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.35
  maximum absolute entry in einsum_ir solution: 109.35
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0134344
  time (eval):    0.0114592
  gflops (eval):  3633.6
  gflops (total): 1672.64
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0134344,0.0114592,3633.6,1672.64

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0441867
  gflops (total): 942.32
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,942.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.026964
  gflops (eval):  1544.21
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.026964,1544.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.535
  maximum absolute entry in einsum_ir solution: 117.535
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132254
  time (eval):    0.0113648
  gflops (eval):  3663.77
  gflops (total): 1693.28
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132254,0.0113648,3663.77,1693.28

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0439568
  gflops (total): 947.249
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,947.249

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0275956
  gflops (eval):  1508.86
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0275956,1508.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      128.711
  maximum absolute entry in einsum_ir solution: 128.711
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130428
  time (eval):    0.011401
  gflops (eval):  3652.13
  gflops (total): 1703.42
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130428,0.011401,3652.13,1703.42

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0431824
  gflops (total): 964.236
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,964.236

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0265479
  gflops (eval):  1568.41
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0265479,1568.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.874
  maximum absolute entry in einsum_ir solution: 113.874
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131398
  time (eval):    0.0114653
  gflops (eval):  3631.65
  gflops (total): 1692.25
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131398,0.0114653,3631.65,1692.25

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0431367
  gflops (total): 965.259
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,965.259

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268733
  gflops (eval):  1549.42
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268733,1549.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.448
  maximum absolute entry in einsum_ir solution: 118.448
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129449
  time (eval):    0.0114824
  gflops (eval):  3626.24
  gflops (total): 1704.57
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129449,0.0114824,3626.24,1704.57

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0442913
  gflops (total): 940.094
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,940.094

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0275615
  gflops (eval):  1510.73
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0275615,1510.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.8
  maximum absolute entry in einsum_ir solution: 106.8
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132317
  time (eval):    0.0113896
  gflops (eval):  3655.78
  gflops (total): 1691.14
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132317,0.0113896,3655.78,1691.14

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0434596
  gflops (total): 958.087
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,958.087

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270991
  gflops (eval):  1536.51
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270991,1536.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.064
  maximum absolute entry in einsum_ir solution: 115.064
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.013069
  time (eval):    0.0113641
  gflops (eval):  3664
  gflops (total): 1704.16
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.013069,0.0113641,3664,1704.16

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0436821
  gflops (total): 953.205
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,953.205

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0274516
  gflops (eval):  1516.78
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0274516,1516.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.502
  maximum absolute entry in einsum_ir solution: 108.502
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132264
  time (eval):    0.0114694
  gflops (eval):  3630.36
  gflops (total): 1686.04
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132264,0.0114694,3630.36,1686.04

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0431644
  gflops (total): 964.638
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,964.638

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268447
  gflops (eval):  1551.07
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268447,1551.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.846
  maximum absolute entry in einsum_ir solution: 109.846
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129622
  time (eval):    0.0114659
  gflops (eval):  3631.46
  gflops (total): 1704.51
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129622,0.0114659,3631.46,1704.51

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0444105
  gflops (total): 937.573
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,937.573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267314
  gflops (eval):  1557.65
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267314,1557.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.606
  maximum absolute entry in einsum_ir solution: 114.606
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130481
  time (eval):    0.0114136
  gflops (eval):  3648.12
  gflops (total): 1702.17
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130481,0.0114136,3648.12,1702.17

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0445325
  gflops (total): 935.004
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,935.004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0275379
  gflops (eval):  1512.03
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0275379,1512.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.176
  maximum absolute entry in einsum_ir solution: 120.176
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131827
  time (eval):    0.0113984
  gflops (eval):  3652.99
  gflops (total): 1693.9
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131827,0.0113984,3652.99,1693.9

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0439411
  gflops (total): 947.587
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,947.587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269437
  gflops (eval):  1545.37
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269437,1545.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.651
  maximum absolute entry in einsum_ir solution: 114.651
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131478
  time (eval):    0.0113669
  gflops (eval):  3663.08
  gflops (total): 1698.49
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131478,0.0113669,3663.08,1698.49

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0434689
  gflops (total): 957.881
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,957.881

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.026862
  gflops (eval):  1550.07
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.026862,1550.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.922
  maximum absolute entry in einsum_ir solution: 108.922
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131608
  time (eval):    0.0114247
  gflops (eval):  3644.55
  gflops (total): 1693.6
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131608,0.0114247,3644.55,1693.6

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0453189
  gflops (total): 918.779
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,918.779

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0273761
  gflops (eval):  1520.96
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0273761,1520.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.863
  maximum absolute entry in einsum_ir solution: 109.863
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130657
  time (eval):    0.0114419
  gflops (eval):  3639.09
  gflops (total): 1698.98
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130657,0.0114419,3639.09,1698.98

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0435264
  gflops (total): 956.616
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,956.616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270269
  gflops (eval):  1540.62
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270269,1540.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.656
  maximum absolute entry in einsum_ir solution: 114.656
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129657
  time (eval):    0.0113922
  gflops (eval):  3654.98
  gflops (total): 1709.43
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129657,0.0113922,3654.98,1709.43

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0447624
  gflops (total): 930.202
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,930.202

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267854
  gflops (eval):  1554.5
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267854,1554.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.426
  maximum absolute entry in einsum_ir solution: 119.426
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130963
  time (eval):    0.0114025
  gflops (eval):  3651.67
  gflops (total): 1699.6
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130963,0.0114025,3651.67,1699.6

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0436496
  gflops (total): 953.915
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,953.915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269919
  gflops (eval):  1542.61
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269919,1542.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.488
  maximum absolute entry in einsum_ir solution: 120.488
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130818
  time (eval):    0.0114003
  gflops (eval):  3652.36
  gflops (total): 1700.75
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130818,0.0114003,3652.36,1700.75

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0444206
  gflops (total): 937.358
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,937.358

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269132
  gflops (eval):  1547.12
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269132,1547.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.997
  maximum absolute entry in einsum_ir solution: 116.997
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129317
  time (eval):    0.0114558
  gflops (eval):  3634.68
  gflops (total): 1707.36
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129317,0.0114558,3634.68,1707.36

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0436848
  gflops (total): 953.147
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,953.147

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0274694
  gflops (eval):  1515.8
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0274694,1515.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.137
  maximum absolute entry in einsum_ir solution: 117.137
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130074
  time (eval):    0.0113617
  gflops (eval):  3664.78
  gflops (total): 1708.65
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130074,0.0113617,3664.78,1708.65

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0438421
  gflops (total): 949.727
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,949.727

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.026921
  gflops (eval):  1546.68
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.026921,1546.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.56
  maximum absolute entry in einsum_ir solution: 112.56
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131842
  time (eval):    0.011401
  gflops (eval):  3652.15
  gflops (total): 1693.62
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131842,0.011401,3652.15,1693.62

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0442415
  gflops (total): 941.153
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,941.153

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268027
  gflops (eval):  1553.5
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268027,1553.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.242
  maximum absolute entry in einsum_ir solution: 111.242
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130918
  time (eval):    0.0114284
  gflops (eval):  3643.39
  gflops (total): 1698.12
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130918,0.0114284,3643.39,1698.12

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0436488
  gflops (total): 953.932
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,953.932

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0274912
  gflops (eval):  1514.6
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0274912,1514.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.296
  maximum absolute entry in einsum_ir solution: 120.296
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.012946
  time (eval):    0.0114567
  gflops (eval):  3634.38
  gflops (total): 1706.29
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.012946,0.0114567,3634.38,1706.29

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0430096
  gflops (total): 968.111
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,968.111

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269233
  gflops (eval):  1546.54
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269233,1546.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.074
  maximum absolute entry in einsum_ir solution: 113.074
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129274
  time (eval):    0.0114806
  gflops (eval):  3626.81
  gflops (total): 1705.92
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129274,0.0114806,3626.81,1705.92

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0436153
  gflops (total): 954.666
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,954.666

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267571
  gflops (eval):  1556.15
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267571,1556.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.038
  maximum absolute entry in einsum_ir solution: 115.038
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132603
  time (eval):    0.0114687
  gflops (eval):  3630.59
  gflops (total): 1683.77
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132603,0.0114687,3630.59,1683.77

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0438067
  gflops (total): 950.495
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,950.495

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269025
  gflops (eval):  1547.74
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269025,1547.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.435
  maximum absolute entry in einsum_ir solution: 111.435
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131864
  time (eval):    0.0113785
  gflops (eval):  3659.35
  gflops (total): 1695.02
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131864,0.0113785,3659.35,1695.02

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0433436
  gflops (total): 960.65
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,960.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268719
  gflops (eval):  1549.5
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268719,1549.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.31
  maximum absolute entry in einsum_ir solution: 110.31
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,6,7,4,5]->[0,1,4,6,7,5]],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132372
  time (eval):    0.0116239
  gflops (eval):  3582.1
  gflops (total): 1674.83
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132372,0.0116239,3582.1,1674.83

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0449575
  gflops (total): 926.165
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,926.165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0272324
  gflops (eval):  1528.99
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0272324,1528.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.874
  maximum absolute entry in einsum_ir solution: 111.874
  maximum element-wise difference:              0
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0189647
  time (eval):    0.195482
  gflops (eval):  3891.06
  gflops (total): 3546.95
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0189647,0.195482,3891.06,3546.95

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135882
  gflops (total): 5597.73
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5597.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130134
  gflops (eval):  5845.02
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130134,5845.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.023
  maximum absolute entry in einsum_ir solution: 498.022
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0181915
  time (eval):    0.18894
  gflops (eval):  4025.79
  gflops (total): 3672.22
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0181915,0.18894,4025.79,3672.22

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136241
  gflops (total): 5582.98
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5582.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130322
  gflops (eval):  5836.57
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130322,5836.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.078
  maximum absolute entry in einsum_ir solution: 478.078
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0182854
  time (eval):    0.189701
  gflops (eval):  4009.65
  gflops (total): 3657.13
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0182854,0.189701,4009.65,3657.13

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136258
  gflops (total): 5582.3
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5582.3

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129928
  gflops (eval):  5854.28
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129928,5854.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      513.402
  maximum absolute entry in einsum_ir solution: 513.402
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0186881
  time (eval):    0.189263
  gflops (eval):  4018.91
  gflops (total): 3657.74
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0186881,0.189263,4018.91,3657.74

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135436
  gflops (total): 5616.17
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5616.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.12995
  gflops (eval):  5853.27
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.12995,5853.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.41
  maximum absolute entry in einsum_ir solution: 528.409
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.018503
  time (eval):    0.188429
  gflops (eval):  4036.71
  gflops (total): 3675.76
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.018503,0.188429,4036.71,3675.76

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136529
  gflops (total): 5571.2
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5571.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129877
  gflops (eval):  5856.54
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129877,5856.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.621
  maximum absolute entry in einsum_ir solution: 466.621
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0186102
  time (eval):    0.19509
  gflops (eval):  3898.88
  gflops (total): 3559.34
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0186102,0.19509,3898.88,3559.34

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136866
  gflops (total): 5557.51
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5557.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130002
  gflops (eval):  5850.93
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130002,5850.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.075
  maximum absolute entry in einsum_ir solution: 481.075
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0171571
  time (eval):    0.190377
  gflops (eval):  3995.4
  gflops (total): 3665.09
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0171571,0.190377,3995.4,3665.09

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136058
  gflops (total): 5590.51
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5590.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.13012
  gflops (eval):  5845.63
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.13012,5845.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.806
  maximum absolute entry in einsum_ir solution: 482.807
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0193906
  time (eval):    0.192248
  gflops (eval):  3956.52
  gflops (total): 3594.02
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0193906,0.192248,3956.52,3594.02

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13576
  gflops (total): 5602.79
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5602.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.128952
  gflops (eval):  5898.59
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.128952,5898.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.206
  maximum absolute entry in einsum_ir solution: 470.205
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0191588
  time (eval):    0.191564
  gflops (eval):  3970.65
  gflops (total): 3609.64
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0191588,0.191564,3970.65,3609.64

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13595
  gflops (total): 5594.93
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5594.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129884
  gflops (eval):  5856.25
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129884,5856.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.748
  maximum absolute entry in einsum_ir solution: 467.749
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0189135
  time (eval):    0.195562
  gflops (eval):  3889.48
  gflops (total): 3546.48
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0189135,0.195562,3889.48,3546.48

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135892
  gflops (total): 5597.32
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5597.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129908
  gflops (eval):  5855.18
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129908,5855.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.427
  maximum absolute entry in einsum_ir solution: 471.428
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0178422
  time (eval):    0.189152
  gflops (eval):  4021.29
  gflops (total): 3674.67
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0178422,0.189152,4021.29,3674.67

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13597
  gflops (total): 5594.12
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5594.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130846
  gflops (eval):  5813.21
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130846,5813.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.536
  maximum absolute entry in einsum_ir solution: 493.536
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0180736
  time (eval):    0.190777
  gflops (eval):  3987.03
  gflops (total): 3642
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0180736,0.190777,3987.03,3642

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134923
  gflops (total): 5637.53
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5637.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129814
  gflops (eval):  5859.39
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129814,5859.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.788
  maximum absolute entry in einsum_ir solution: 515.787
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0181413
  time (eval):    0.188836
  gflops (eval):  4028
  gflops (total): 3674.96
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0181413,0.188836,4028,3674.96

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136422
  gflops (total): 5575.58
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5575.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130038
  gflops (eval):  5849.32
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130038,5849.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.855
  maximum absolute entry in einsum_ir solution: 484.855
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0178632
  time (eval):    0.189876
  gflops (eval):  4005.94
  gflops (total): 3661.47
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0178632,0.189876,4005.94,3661.47

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134748
  gflops (total): 5644.83
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5644.83

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129655
  gflops (eval):  5866.59
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129655,5866.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.563
  maximum absolute entry in einsum_ir solution: 479.564
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0183199
  time (eval):    0.189517
  gflops (eval):  4013.52
  gflops (total): 3659.75
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0183199,0.189517,4013.52,3659.75

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.137072
  gflops (total): 5549.14
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5549.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130052
  gflops (eval):  5848.67
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130052,5848.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.047
  maximum absolute entry in einsum_ir solution: 473.047
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0197498
  time (eval):    0.192378
  gflops (eval):  3953.84
  gflops (total): 3585.72
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0197498,0.192378,3953.84,3585.72

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135224
  gflops (total): 5624.98
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5624.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129809
  gflops (eval):  5859.63
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129809,5859.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.885
  maximum absolute entry in einsum_ir solution: 482.885
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0191338
  time (eval):    0.19578
  gflops (eval):  3885.14
  gflops (total): 3539.24
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0191338,0.19578,3885.14,3539.24

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136162
  gflops (total): 5586.23
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5586.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129731
  gflops (eval):  5863.16
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129731,5863.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.459
  maximum absolute entry in einsum_ir solution: 483.461
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0189344
  time (eval):    0.191343
  gflops (eval):  3975.23
  gflops (total): 3617.28
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0189344,0.191343,3975.23,3617.28

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136124
  gflops (total): 5587.8
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5587.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129769
  gflops (eval):  5861.45
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129769,5861.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.241
  maximum absolute entry in einsum_ir solution: 483.242
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0181189
  time (eval):    0.189855
  gflops (eval):  4006.38
  gflops (total): 3657.34
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0181189,0.189855,4006.38,3657.34

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135771
  gflops (total): 5602.31
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5602.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130296
  gflops (eval):  5837.75
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130296,5837.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      453.315
  maximum absolute entry in einsum_ir solution: 453.315
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0174798
  time (eval):    0.189354
  gflops (eval):  4017
  gflops (total): 3677.52
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0174798,0.189354,4017,3677.52

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135244
  gflops (total): 5624.15
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5624.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129399
  gflops (eval):  5878.2
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129399,5878.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.988
  maximum absolute entry in einsum_ir solution: 468.989
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0192326
  time (eval):    0.192071
  gflops (eval):  3960.16
  gflops (total): 3599.71
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0192326,0.192071,3960.16,3599.71

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136202
  gflops (total): 5584.58
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5584.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130145
  gflops (eval):  5844.5
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130145,5844.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.823
  maximum absolute entry in einsum_ir solution: 472.823
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0182777
  time (eval):    0.190251
  gflops (eval):  3998.04
  gflops (total): 3647.61
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0182777,0.190251,3998.04,3647.61

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135357
  gflops (total): 5619.46
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5619.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130015
  gflops (eval):  5850.36
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130015,5850.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.177
  maximum absolute entry in einsum_ir solution: 482.177
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.017022
  time (eval):    0.190416
  gflops (eval):  3994.57
  gflops (total): 3666.79
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.017022,0.190416,3994.57,3666.79

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.129131
  gflops (total): 5890.41
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5890.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129617
  gflops (eval):  5868.29
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129617,5868.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.384
  maximum absolute entry in einsum_ir solution: 461.384
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0191356
  time (eval):    0.19532
  gflops (eval):  3894.29
  gflops (total): 3546.8
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0191356,0.19532,3894.29,3546.8

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134908
  gflops (total): 5638.16
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5638.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.1292
  gflops (eval):  5887.25
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.1292,5887.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.318
  maximum absolute entry in einsum_ir solution: 497.318
  maximum element-wise difference:              0.00212097
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0179316
  time (eval):    0.191963
  gflops (eval):  3962.39
  gflops (total): 3623.88
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0179316,0.191963,3962.39,3623.88

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135981
  gflops (total): 5593.65
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5593.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130355
  gflops (eval):  5835.08
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130355,5835.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.865
  maximum absolute entry in einsum_ir solution: 481.866
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0178821
  time (eval):    0.189328
  gflops (eval):  4017.54
  gflops (total): 3670.83
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0178821,0.189328,4017.54,3670.83

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135536
  gflops (total): 5612.05
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5612.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129931
  gflops (eval):  5854.13
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129931,5854.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      505.827
  maximum absolute entry in einsum_ir solution: 505.826
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0176062
  time (eval):    0.191286
  gflops (eval):  3976.42
  gflops (total): 3641.27
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0176062,0.191286,3976.42,3641.27

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135895
  gflops (total): 5597.21
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5597.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129549
  gflops (eval):  5871.4
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129549,5871.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.467
  maximum absolute entry in einsum_ir solution: 476.467
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0193374
  time (eval):    0.192419
  gflops (eval):  3952.99
  gflops (total): 3592.01
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0193374,0.192419,3952.99,3592.01

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135265
  gflops (total): 5623.29
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5623.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129925
  gflops (eval):  5854.38
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129925,5854.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      521.975
  maximum absolute entry in einsum_ir solution: 521.976
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0176914
  time (eval):    0.190533
  gflops (eval):  3992.12
  gflops (total): 3652.94
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0176914,0.190533,3992.12,3652.94

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13452
  gflops (total): 5654.44
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5654.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129868
  gflops (eval):  5856.96
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129868,5856.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.367
  maximum absolute entry in einsum_ir solution: 487.367
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0181429
  time (eval):    0.18999
  gflops (eval):  4003.54
  gflops (total): 3654.55
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0181429,0.18999,4003.54,3654.55

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136392
  gflops (total): 5576.82
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5576.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130152
  gflops (eval):  5844.19
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130152,5844.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.172
  maximum absolute entry in einsum_ir solution: 471.172
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0190882
  time (eval):    0.193832
  gflops (eval):  3924.18
  gflops (total): 3572.38
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0190882,0.193832,3924.18,3572.38

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13623
  gflops (total): 5583.46
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5583.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.12972
  gflops (eval):  5863.63
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.12972,5863.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.155
  maximum absolute entry in einsum_ir solution: 476.155
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0179999
  time (eval):    0.191558
  gflops (eval):  3970.77
  gflops (total): 3629.7
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0179999,0.191558,3970.77,3629.7

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136522
  gflops (total): 5571.5
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5571.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129719
  gflops (eval):  5863.67
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129719,5863.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.303
  maximum absolute entry in einsum_ir solution: 464.304
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0179322
  time (eval):    0.189357
  gflops (eval):  4016.92
  gflops (total): 3669.42
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0179322,0.189357,4016.92,3669.42

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134811
  gflops (total): 5642.23
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5642.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129748
  gflops (eval):  5862.36
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129748,5862.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      516.775
  maximum absolute entry in einsum_ir solution: 516.775
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0176459
  time (eval):    0.190777
  gflops (eval):  3987.02
  gflops (total): 3649.46
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0176459,0.190777,3987.02,3649.46

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135027
  gflops (total): 5633.17
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5633.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129868
  gflops (eval):  5856.96
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129868,5856.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.014
  maximum absolute entry in einsum_ir solution: 482.014
  maximum element-wise difference:              0.00193787
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0176168
  time (eval):    0.190596
  gflops (eval):  3990.81
  gflops (total): 3653.15
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0176168,0.190596,3990.81,3653.15

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135272
  gflops (total): 5622.99
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5622.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130184
  gflops (eval):  5842.76
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130184,5842.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.242
  maximum absolute entry in einsum_ir solution: 482.242
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0188633
  time (eval):    0.194947
  gflops (eval):  3901.74
  gflops (total): 3557.51
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0188633,0.194947,3901.74,3557.51

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136485
  gflops (total): 5573.03
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5573.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129874
  gflops (eval):  5856.7
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129874,5856.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.276
  maximum absolute entry in einsum_ir solution: 483.276
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0177101
  time (eval):    0.189613
  gflops (eval):  4011.5
  gflops (total): 3668.82
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0177101,0.189613,4011.5,3668.82

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134849
  gflops (total): 5640.61
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5640.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129976
  gflops (eval):  5852.1
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129976,5852.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.297
  maximum absolute entry in einsum_ir solution: 467.297
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0190103
  time (eval):    0.19125
  gflops (eval):  3977.17
  gflops (total): 3617.59
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0190103,0.19125,3977.17,3617.59

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13609
  gflops (total): 5589.17
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5589.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130109
  gflops (eval):  5846.14
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130109,5846.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.38
  maximum absolute entry in einsum_ir solution: 476.38
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0174437
  time (eval):    0.190686
  gflops (eval):  3988.93
  gflops (total): 3654.61
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0174437,0.190686,3988.93,3654.61

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135505
  gflops (total): 5613.3
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5613.3

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130001
  gflops (eval):  5850.99
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130001,5850.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      459.336
  maximum absolute entry in einsum_ir solution: 459.336
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0173909
  time (eval):    0.189938
  gflops (eval):  4004.64
  gflops (total): 3668.73
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0173909,0.189938,4004.64,3668.73

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.130034
  gflops (total): 5849.51
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5849.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130041
  gflops (eval):  5849.18
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130041,5849.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.667
  maximum absolute entry in einsum_ir solution: 475.667
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0179594
  time (eval):    0.190606
  gflops (eval):  3990.6
  gflops (total): 3646.97
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0179594,0.190606,3990.6,3646.97

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136057
  gflops (total): 5590.53
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5590.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129699
  gflops (eval):  5864.61
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129699,5864.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      463.501
  maximum absolute entry in einsum_ir solution: 463.5
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0190077
  time (eval):    0.194471
  gflops (eval):  3911.29
  gflops (total): 3563.04
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0190077,0.194471,3911.29,3563.04

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136788
  gflops (total): 5560.65
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5560.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129892
  gflops (eval):  5855.86
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129892,5855.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      490.298
  maximum absolute entry in einsum_ir solution: 490.298
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0176801
  time (eval):    0.190337
  gflops (eval):  3996.24
  gflops (total): 3656.58
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0176801,0.190337,3996.24,3656.58

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134724
  gflops (total): 5645.85
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5645.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129917
  gflops (eval):  5854.76
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129917,5854.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.901
  maximum absolute entry in einsum_ir solution: 475.901
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0173871
  time (eval):    0.190379
  gflops (eval):  3995.35
  gflops (total): 3661
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0173871,0.190379,3995.35,3661

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135698
  gflops (total): 5605.32
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5605.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.12993
  gflops (eval):  5854.15
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.12993,5854.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.799
  maximum absolute entry in einsum_ir solution: 508.8
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.017578
  time (eval):    0.189448
  gflops (eval):  4015
  gflops (total): 3674.09
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.017578,0.189448,4015,3674.09

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135105
  gflops (total): 5629.96
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5629.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130059
  gflops (eval):  5848.38
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130059,5848.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.708
  maximum absolute entry in einsum_ir solution: 503.709
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.01716
  time (eval):    0.19087
  gflops (eval):  3985.07
  gflops (total): 3656.35
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.01716,0.19087,3985.07,3656.35

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135494
  gflops (total): 5613.77
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5613.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130054
  gflops (eval):  5848.61
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130054,5848.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.661
  maximum absolute entry in einsum_ir solution: 502.66
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0183366
  time (eval):    0.187987
  gflops (eval):  4046.2
  gflops (total): 3686.6
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0183366,0.187987,4046.2,3686.6

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136809
  gflops (total): 5559.81
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5559.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129803
  gflops (eval):  5859.91
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129803,5859.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.115
  maximum absolute entry in einsum_ir solution: 461.115
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0182254
  time (eval):    0.190945
  gflops (eval):  3983.51
  gflops (total): 3636.42
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0182254,0.190945,3983.51,3636.42

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135676
  gflops (total): 5606.25
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5606.25

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.12985
  gflops (eval):  5857.78
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.12985,5857.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.459
  maximum absolute entry in einsum_ir solution: 491.459
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0171452
  time (eval):    0.18959
  gflops (eval):  4011.98
  gflops (total): 3679.26
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0171452,0.18959,4011.98,3679.26

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.129712
  gflops (total): 5864.02
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5864.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129969
  gflops (eval):  5852.41
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129969,5852.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.142
  maximum absolute entry in einsum_ir solution: 481.142
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0179356
  time (eval):    0.190374
  gflops (eval):  3995.46
  gflops (total): 3651.45
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0179356,0.190374,3995.46,3651.45

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134764
  gflops (total): 5644.17
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5644.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129997
  gflops (eval):  5851.15
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129997,5851.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.074
  maximum absolute entry in einsum_ir solution: 477.074
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0177637
  time (eval):    0.190551
  gflops (eval):  3991.75
  gflops (total): 3651.36
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0177637,0.190551,3991.75,3651.36

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135689
  gflops (total): 5605.69
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5605.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130326
  gflops (eval):  5836.37
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130326,5836.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.651
  maximum absolute entry in einsum_ir solution: 501.651
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.017835
  time (eval):    0.189322
  gflops (eval):  4017.67
  gflops (total): 3671.77
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.017835,0.189322,4017.67,3671.77

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135939
  gflops (total): 5595.4
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5595.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130061
  gflops (eval):  5848.27
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130061,5848.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.039
  maximum absolute entry in einsum_ir solution: 484.038
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0179718
  time (eval):    0.190754
  gflops (eval):  3987.51
  gflops (total): 3644.18
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0179718,0.190754,3987.51,3644.18

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135169
  gflops (total): 5627.26
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5627.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129913
  gflops (eval):  5854.92
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129913,5854.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.626
  maximum absolute entry in einsum_ir solution: 483.626
  maximum element-wise difference:              0.00209045
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0177144
  time (eval):    0.189483
  gflops (eval):  4014.24
  gflops (total): 3671.04
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0177144,0.189483,4014.24,3671.04

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136906
  gflops (total): 5555.88
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5555.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130123
  gflops (eval):  5845.48
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130123,5845.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      521.211
  maximum absolute entry in einsum_ir solution: 521.212
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0195889
  time (eval):    0.196477
  gflops (eval):  3871.35
  gflops (total): 3520.37
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0195889,0.196477,3871.35,3520.37

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136043
  gflops (total): 5591.13
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5591.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130038
  gflops (eval):  5849.33
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130038,5849.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.887
  maximum absolute entry in einsum_ir solution: 481.887
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0189951
  time (eval):    0.194766
  gflops (eval):  3905.36
  gflops (total): 3558.33
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0189951,0.194766,3905.36,3558.33

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136424
  gflops (total): 5575.5
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5575.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130033
  gflops (eval):  5849.53
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130033,5849.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.158
  maximum absolute entry in einsum_ir solution: 487.157
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0177213
  time (eval):    0.19043
  gflops (eval):  3994.29
  gflops (total): 3654.23
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0177213,0.19043,3994.29,3654.23

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136423
  gflops (total): 5575.53
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5575.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130003
  gflops (eval):  5850.88
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130003,5850.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.518
  maximum absolute entry in einsum_ir solution: 504.518
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0189624
  time (eval):    0.19333
  gflops (eval):  3934.38
  gflops (total): 3582.95
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0189624,0.19333,3934.38,3582.95

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136468
  gflops (total): 5573.7
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5573.7

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129662
  gflops (eval):  5866.28
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129662,5866.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.415
  maximum absolute entry in einsum_ir solution: 482.415
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0187996
  time (eval):    0.19171
  gflops (eval):  3967.61
  gflops (total): 3613.29
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0187996,0.19171,3967.61,3613.29

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136123
  gflops (total): 5587.82
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5587.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.12994
  gflops (eval):  5853.72
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.12994,5853.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.072
  maximum absolute entry in einsum_ir solution: 484.073
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0186762
  time (eval):    0.18948
  gflops (eval):  4014.32
  gflops (total): 3654.15
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0186762,0.18948,4014.32,3654.15

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136111
  gflops (total): 5588.32
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5588.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129608
  gflops (eval):  5868.71
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129608,5868.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.832
  maximum absolute entry in einsum_ir solution: 524.834
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0173746
  time (eval):    0.18974
  gflops (eval):  4008.82
  gflops (total): 3672.52
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0173746,0.18974,4008.82,3672.52

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135325
  gflops (total): 5620.79
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5620.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130261
  gflops (eval):  5839.29
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130261,5839.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.958
  maximum absolute entry in einsum_ir solution: 480.958
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0184699
  time (eval):    0.189913
  gflops (eval):  4005.17
  gflops (total): 3650.17
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0184699,0.189913,4005.17,3650.17

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136546
  gflops (total): 5570.53
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5570.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130129
  gflops (eval):  5845.2
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130129,5845.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.592
  maximum absolute entry in einsum_ir solution: 497.593
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0185172
  time (eval):    0.188533
  gflops (eval):  4034.47
  gflops (total): 3673.66
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0185172,0.188533,4034.47,3673.66

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135781
  gflops (total): 5601.92
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5601.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129992
  gflops (eval):  5851.38
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129992,5851.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      463.933
  maximum absolute entry in einsum_ir solution: 463.933
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0186963
  time (eval):    0.192105
  gflops (eval):  3959.46
  gflops (total): 3608.29
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0186963,0.192105,3959.46,3608.29

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13673
  gflops (total): 5563.04
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5563.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129953
  gflops (eval):  5853.14
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129953,5853.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.079
  maximum absolute entry in einsum_ir solution: 474.079
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0183275
  time (eval):    0.188699
  gflops (eval):  4030.93
  gflops (total): 3674.08
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0183275,0.188699,4030.93,3674.08

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136266
  gflops (total): 5581.98
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5581.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130217
  gflops (eval):  5841.27
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130217,5841.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      451.785
  maximum absolute entry in einsum_ir solution: 451.784
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0175233
  time (eval):    0.190778
  gflops (eval):  3987
  gflops (total): 3651.6
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0175233,0.190778,3987,3651.6

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135035
  gflops (total): 5632.86
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5632.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.1302
  gflops (eval):  5842.02
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.1302,5842.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.878
  maximum absolute entry in einsum_ir solution: 523.877
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.01884
  time (eval):    0.193513
  gflops (eval):  3930.66
  gflops (total): 3581.93
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.01884,0.193513,3930.66,3581.93

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136626
  gflops (total): 5567.27
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5567.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129925
  gflops (eval):  5854.38
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129925,5854.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.618
  maximum absolute entry in einsum_ir solution: 466.618
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0181165
  time (eval):    0.190867
  gflops (eval):  3985.15
  gflops (total): 3639.68
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0181165,0.190867,3985.15,3639.68

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135296
  gflops (total): 5621.98
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5621.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129853
  gflops (eval):  5857.63
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129853,5857.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.597
  maximum absolute entry in einsum_ir solution: 487.597
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0186475
  time (eval):    0.190184
  gflops (eval):  3999.46
  gflops (total): 3642.33
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0186475,0.190184,3999.46,3642.33

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13687
  gflops (total): 5557.33
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5557.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130109
  gflops (eval):  5846.12
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130109,5846.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.172
  maximum absolute entry in einsum_ir solution: 472.171
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0188616
  time (eval):    0.195345
  gflops (eval):  3893.78
  gflops (total): 3550.92
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0188616,0.195345,3893.78,3550.92

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136085
  gflops (total): 5589.39
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5589.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129915
  gflops (eval):  5854.86
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129915,5854.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.715
  maximum absolute entry in einsum_ir solution: 473.715
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0188316
  time (eval):    0.192473
  gflops (eval):  3951.89
  gflops (total): 3599.7
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0188316,0.192473,3951.89,3599.7

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135193
  gflops (total): 5626.26
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5626.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.12984
  gflops (eval):  5858.23
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.12984,5858.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.831
  maximum absolute entry in einsum_ir solution: 484.832
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0186329
  time (eval):    0.193314
  gflops (eval):  3934.69
  gflops (total): 3588.78
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0186329,0.193314,3934.69,3588.78

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136693
  gflops (total): 5564.55
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5564.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129679
  gflops (eval):  5865.5
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129679,5865.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.914
  maximum absolute entry in einsum_ir solution: 472.914
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0194281
  time (eval):    0.193481
  gflops (eval):  3931.31
  gflops (total): 3572.58
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0194281,0.193481,3931.31,3572.58

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13621
  gflops (total): 5584.27
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5584.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129938
  gflops (eval):  5853.82
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129938,5853.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.268
  maximum absolute entry in einsum_ir solution: 498.267
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0182428
  time (eval):    0.191269
  gflops (eval):  3976.77
  gflops (total): 3630.5
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0182428,0.191269,3976.77,3630.5

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135431
  gflops (total): 5616.38
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5616.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129958
  gflops (eval):  5852.89
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129958,5852.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.973
  maximum absolute entry in einsum_ir solution: 484.974
  maximum element-wise difference:              0.0019989
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0176874
  time (eval):    0.190523
  gflops (eval):  3992.34
  gflops (total): 3653.19
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0176874,0.190523,3992.34,3653.19

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135141
  gflops (total): 5628.42
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5628.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130138
  gflops (eval):  5844.83
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130138,5844.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.61
  maximum absolute entry in einsum_ir solution: 486.609
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0185048
  time (eval):    0.190313
  gflops (eval):  3996.74
  gflops (total): 3642.56
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0185048,0.190313,3996.74,3642.56

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135916
  gflops (total): 5596.36
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5596.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129876
  gflops (eval):  5856.61
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129876,5856.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.766
  maximum absolute entry in einsum_ir solution: 461.767
  maximum element-wise difference:              0.00190735
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0193687
  time (eval):    0.194073
  gflops (eval):  3919.31
  gflops (total): 3563.65
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0193687,0.194073,3919.31,3563.65

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136167
  gflops (total): 5586.04
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5586.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129829
  gflops (eval):  5858.71
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129829,5858.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.819
  maximum absolute entry in einsum_ir solution: 475.819
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0186456
  time (eval):    0.190136
  gflops (eval):  4000.46
  gflops (total): 3643.19
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0186456,0.190136,4000.46,3643.19

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136142
  gflops (total): 5587.07
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5587.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129561
  gflops (eval):  5870.86
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129561,5870.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.318
  maximum absolute entry in einsum_ir solution: 491.318
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0182088
  time (eval):    0.192816
  gflops (eval):  3944.87
  gflops (total): 3604.47
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0182088,0.192816,3944.87,3604.47

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136622
  gflops (total): 5567.42
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5567.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130175
  gflops (eval):  5843.15
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130175,5843.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      564.22
  maximum absolute entry in einsum_ir solution: 564.22
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0192182
  time (eval):    0.193673
  gflops (eval):  3927.41
  gflops (total): 3572.88
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0192182,0.193673,3927.41,3572.88

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136131
  gflops (total): 5587.51
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5587.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.12994
  gflops (eval):  5853.71
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.12994,5853.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.915
  maximum absolute entry in einsum_ir solution: 476.915
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0184513
  time (eval):    0.187505
  gflops (eval):  4056.59
  gflops (total): 3693.17
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0184513,0.187505,4056.59,3693.17

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134538
  gflops (total): 5653.68
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5653.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129934
  gflops (eval):  5854
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129934,5854,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.712
  maximum absolute entry in einsum_ir solution: 491.712
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0177129
  time (eval):    0.190032
  gflops (eval):  4002.66
  gflops (total): 3661.38
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0177129,0.190032,4002.66,3661.38

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136708
  gflops (total): 5563.91
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5563.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129827
  gflops (eval):  5858.8
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129827,5858.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      547.916
  maximum absolute entry in einsum_ir solution: 547.917
  maximum element-wise difference:              0.00193787
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0181305
  time (eval):    0.190145
  gflops (eval):  4000.27
  gflops (total): 3652.04
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0181305,0.190145,4000.27,3652.04

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136309
  gflops (total): 5580.2
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5580.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129555
  gflops (eval):  5871.1
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129555,5871.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.922
  maximum absolute entry in einsum_ir solution: 480.922
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0189141
  time (eval):    0.190278
  gflops (eval):  3997.48
  gflops (total): 3636.05
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0189141,0.190278,3997.48,3636.05

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135121
  gflops (total): 5629.25
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5629.25

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129785
  gflops (eval):  5860.73
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129785,5860.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.497
  maximum absolute entry in einsum_ir solution: 465.497
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0182926
  time (eval):    0.189422
  gflops (eval):  4015.54
  gflops (total): 3661.9
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0182926,0.189422,4015.54,3661.9

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136295
  gflops (total): 5580.77
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5580.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.12912
  gflops (eval):  5890.88
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.12912,5890.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.918
  maximum absolute entry in einsum_ir solution: 495.919
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0184383
  time (eval):    0.189403
  gflops (eval):  4015.94
  gflops (total): 3659.67
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0184383,0.189403,4015.94,3659.67

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136328
  gflops (total): 5579.41
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5579.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130035
  gflops (eval):  5849.46
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130035,5849.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.474
  maximum absolute entry in einsum_ir solution: 484.474
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0193115
  time (eval):    0.192742
  gflops (eval):  3946.37
  gflops (total): 3586.98
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0193115,0.192742,3946.37,3586.98

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136264
  gflops (total): 5582.07
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5582.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.13003
  gflops (eval):  5849.69
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.13003,5849.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.641
  maximum absolute entry in einsum_ir solution: 492.64
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.019635
  time (eval):    0.193761
  gflops (eval):  3925.63
  gflops (total): 3564.42
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.019635,0.193761,3925.63,3564.42

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135697
  gflops (total): 5605.38
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5605.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.13008
  gflops (eval):  5847.43
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.13008,5847.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.814
  maximum absolute entry in einsum_ir solution: 481.814
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.017694
  time (eval):    0.188935
  gflops (eval):  4025.9
  gflops (total): 3681.15
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.017694,0.188935,4025.9,3681.15

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134445
  gflops (total): 5657.6
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5657.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130119
  gflops (eval):  5845.69
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130119,5845.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.872
  maximum absolute entry in einsum_ir solution: 487.871
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0198437
  time (eval):    0.191546
  gflops (eval):  3971.02
  gflops (total): 3598.25
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0198437,0.191546,3971.02,3598.25

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134536
  gflops (total): 5653.73
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5653.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129367
  gflops (eval):  5879.63
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129367,5879.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.031
  maximum absolute entry in einsum_ir solution: 479.031
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0185755
  time (eval):    0.189894
  gflops (eval):  4005.55
  gflops (total): 3648.64
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0185755,0.189894,4005.55,3648.64

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134681
  gflops (total): 5647.66
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5647.66

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130191
  gflops (eval):  5842.45
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130191,5842.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.001
  maximum absolute entry in einsum_ir solution: 466.001
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0185238
  time (eval):    0.189661
  gflops (eval):  4010.49
  gflops (total): 3653.64
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0185238,0.189661,4010.49,3653.64

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136288
  gflops (total): 5581.07
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5581.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129997
  gflops (eval):  5851.18
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129997,5851.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      456.676
  maximum absolute entry in einsum_ir solution: 456.675
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0178646
  time (eval):    0.190366
  gflops (eval):  3995.63
  gflops (total): 3652.83
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0178646,0.190366,3995.63,3652.83

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135567
  gflops (total): 5610.74
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5610.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129796
  gflops (eval):  5860.2
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129796,5860.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.21
  maximum absolute entry in einsum_ir solution: 500.211
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0176202
  time (eval):    0.189695
  gflops (eval):  4009.78
  gflops (total): 3668.97
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0176202,0.189695,4009.78,3668.97

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134651
  gflops (total): 5648.92
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5648.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130052
  gflops (eval):  5848.66
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130052,5848.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.903
  maximum absolute entry in einsum_ir solution: 475.903
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0190087
  time (eval):    0.19542
  gflops (eval):  3892.3
  gflops (total): 3547.25
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0190087,0.19542,3892.3,3547.25

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134716
  gflops (total): 5646.21
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5646.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129922
  gflops (eval):  5854.51
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129922,5854.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.549
  maximum absolute entry in einsum_ir solution: 488.549
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0177104
  time (eval):    0.190046
  gflops (eval):  4002.36
  gflops (total): 3661.17
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0177104,0.190046,4002.36,3661.17

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135433
  gflops (total): 5616.32
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5616.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129685
  gflops (eval):  5865.21
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129685,5865.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.793
  maximum absolute entry in einsum_ir solution: 483.793
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0182948
  time (eval):    0.188234
  gflops (eval):  4040.89
  gflops (total): 3682.94
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0182948,0.188234,4040.89,3682.94

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136162
  gflops (total): 5586.24
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5586.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129707
  gflops (eval):  5864.23
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129707,5864.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.211
  maximum absolute entry in einsum_ir solution: 485.212
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0177436
  time (eval):    0.190927
  gflops (eval):  3983.88
  gflops (total): 3645.13
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0177436,0.190927,3983.88,3645.13

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135374
  gflops (total): 5618.73
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5618.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129792
  gflops (eval):  5860.41
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129792,5860.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.807
  maximum absolute entry in einsum_ir solution: 468.808
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.019489
  time (eval):    0.195033
  gflops (eval):  3900.02
  gflops (total): 3545.71
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.019489,0.195033,3900.02,3545.71

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136399
  gflops (total): 5576.53
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5576.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130024
  gflops (eval):  5849.94
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130024,5849.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.93
  maximum absolute entry in einsum_ir solution: 477.932
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0174403
  time (eval):    0.190777
  gflops (eval):  3987.03
  gflops (total): 3653.08
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0174403,0.190777,3987.03,3653.08

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.130318
  gflops (total): 5836.72
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5836.72

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129584
  gflops (eval):  5869.79
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129584,5869.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.858
  maximum absolute entry in einsum_ir solution: 489.858
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131938
  time (eval):    0.203982
  gflops (eval):  4498.52
  gflops (total): 4225.23
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131938,0.203982,4498.52,4225.23

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203945
  gflops (total): 4499.36
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4499.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154165
  gflops (eval):  5952.18
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154165,5952.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.392
  maximum absolute entry in einsum_ir solution: 514.391
  maximum element-wise difference:              0.00271606
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132593
  time (eval):    0.204307
  gflops (eval):  4491.38
  gflops (total): 4217.65
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132593,0.204307,4491.38,4217.65

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203047
  gflops (total): 4519.25
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4519.25

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155221
  gflops (eval):  5911.68
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155221,5911.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.082
  maximum absolute entry in einsum_ir solution: 491.083
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130425
  time (eval):    0.204069
  gflops (eval):  4496.61
  gflops (total): 4226.48
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130425,0.204069,4496.61,4226.48

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.199611
  gflops (total): 4597.04
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4597.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154737
  gflops (eval):  5930.19
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154737,5930.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      561.098
  maximum absolute entry in einsum_ir solution: 561.098
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131296
  time (eval):    0.204015
  gflops (eval):  4497.8
  gflops (total): 4225.84
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131296,0.204015,4497.8,4225.84

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201588
  gflops (total): 4551.96
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4551.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154793
  gflops (eval):  5928.06
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154793,5928.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.595
  maximum absolute entry in einsum_ir solution: 486.595
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130764
  time (eval):    0.204004
  gflops (eval):  4498.04
  gflops (total): 4227.09
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130764,0.204004,4498.04,4227.09

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202325
  gflops (total): 4535.36
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4535.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154928
  gflops (eval):  5922.87
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154928,5922.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      521.278
  maximum absolute entry in einsum_ir solution: 521.278
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131414
  time (eval):    0.204012
  gflops (eval):  4497.86
  gflops (total): 4225.67
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131414,0.204012,4497.86,4225.67

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202426
  gflops (total): 4533.11
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4533.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154458
  gflops (eval):  5940.9
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154458,5940.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.493
  maximum absolute entry in einsum_ir solution: 514.493
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131666
  time (eval):    0.203936
  gflops (eval):  4499.55
  gflops (total): 4226.66
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131666,0.203936,4499.55,4226.66

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203314
  gflops (total): 4513.32
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4513.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154777
  gflops (eval):  5928.67
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154777,5928.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.506
  maximum absolute entry in einsum_ir solution: 501.506
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0129327
  time (eval):    0.20402
  gflops (eval):  4497.68
  gflops (total): 4229.57
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0129327,0.20402,4497.68,4229.57

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20225
  gflops (total): 4537.07
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4537.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154862
  gflops (eval):  5925.4
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154862,5925.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.309
  maximum absolute entry in einsum_ir solution: 492.309
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130815
  time (eval):    0.204264
  gflops (eval):  4492.32
  gflops (total): 4221.94
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130815,0.204264,4492.32,4221.94

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202892
  gflops (total): 4522.7
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4522.7

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154927
  gflops (eval):  5922.93
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154927,5922.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.212
  maximum absolute entry in einsum_ir solution: 532.212
  maximum element-wise difference:              0.00260925
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130284
  time (eval):    0.203755
  gflops (eval):  4503.54
  gflops (total): 4232.88
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130284,0.203755,4503.54,4232.88

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200919
  gflops (total): 4567.11
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4567.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154865
  gflops (eval):  5925.3
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154865,5925.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      511.272
  maximum absolute entry in einsum_ir solution: 511.272
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132462
  time (eval):    0.204064
  gflops (eval):  4496.73
  gflops (total): 4222.63
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132462,0.204064,4496.73,4222.63

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203243
  gflops (total): 4514.89
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4514.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154205
  gflops (eval):  5950.66
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154205,5950.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.247
  maximum absolute entry in einsum_ir solution: 509.248
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131984
  time (eval):    0.203979
  gflops (eval):  4498.59
  gflops (total): 4225.2
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131984,0.203979,4498.59,4225.2

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201441
  gflops (total): 4555.29
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4555.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154842
  gflops (eval):  5926.15
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154842,5926.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.766
  maximum absolute entry in einsum_ir solution: 491.766
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131138
  time (eval):    0.204024
  gflops (eval):  4497.62
  gflops (total): 4225.99
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131138,0.204024,4497.62,4225.99

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202873
  gflops (total): 4523.12
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4523.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154762
  gflops (eval):  5929.23
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154762,5929.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.086
  maximum absolute entry in einsum_ir solution: 514.086
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131127
  time (eval):    0.203872
  gflops (eval):  4500.96
  gflops (total): 4228.96
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131127,0.203872,4500.96,4228.96

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201339
  gflops (total): 4557.58
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4557.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155039
  gflops (eval):  5918.64
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155039,5918.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      535.187
  maximum absolute entry in einsum_ir solution: 535.187
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0133453
  time (eval):    0.203993
  gflops (eval):  4498.29
  gflops (total): 4222.08
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0133453,0.203993,4498.29,4222.08

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202148
  gflops (total): 4539.35
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4539.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154569
  gflops (eval):  5936.62
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154569,5936.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.568
  maximum absolute entry in einsum_ir solution: 487.57
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130649
  time (eval):    0.204175
  gflops (eval):  4494.29
  gflops (total): 4224
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130649,0.204175,4494.29,4224

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203046
  gflops (total): 4519.26
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4519.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154839
  gflops (eval):  5926.29
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154839,5926.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      518.201
  maximum absolute entry in einsum_ir solution: 518.2
  maximum element-wise difference:              0.00221252
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132712
  time (eval):    0.203876
  gflops (eval):  4500.87
  gflops (total): 4225.8
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132712,0.203876,4500.87,4225.8

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203215
  gflops (total): 4515.51
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4515.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.153792
  gflops (eval):  5966.65
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.153792,5966.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.784
  maximum absolute entry in einsum_ir solution: 526.784
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132018
  time (eval):    0.203804
  gflops (eval):  4502.46
  gflops (total): 4228.55
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132018,0.203804,4502.46,4228.55

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202851
  gflops (total): 4523.62
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4523.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154789
  gflops (eval):  5928.2
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154789,5928.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.821
  maximum absolute entry in einsum_ir solution: 496.82
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130096
  time (eval):    0.203842
  gflops (eval):  4501.62
  gflops (total): 4231.56
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130096,0.203842,4501.62,4231.56

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202433
  gflops (total): 4532.95
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4532.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154512
  gflops (eval):  5938.83
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154512,5938.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.025
  maximum absolute entry in einsum_ir solution: 504.025
  maximum element-wise difference:              0.00271606
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0104746
  time (eval):    0.203861
  gflops (eval):  4501.2
  gflops (total): 4281.22
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0104746,0.203861,4501.2,4281.22

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203705
  gflops (total): 4504.65
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4504.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154567
  gflops (eval):  5936.71
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154567,5936.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.863
  maximum absolute entry in einsum_ir solution: 501.863
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131295
  time (eval):    0.204068
  gflops (eval):  4496.63
  gflops (total): 4224.81
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131295,0.204068,4496.63,4224.81

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201702
  gflops (total): 4549.37
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4549.37

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15524
  gflops (eval):  5910.97
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15524,5910.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.856
  maximum absolute entry in einsum_ir solution: 524.856
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132939
  time (eval):    0.204149
  gflops (eval):  4494.86
  gflops (total): 4220.06
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132939,0.204149,4494.86,4220.06

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201503
  gflops (total): 4553.87
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4553.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154982
  gflops (eval):  5920.8
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154982,5920.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.97
  maximum absolute entry in einsum_ir solution: 533.971
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130332
  time (eval):    0.203918
  gflops (eval):  4499.94
  gflops (total): 4229.61
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130332,0.203918,4499.94,4229.61

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201705
  gflops (total): 4549.31
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4549.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154443
  gflops (eval):  5941.46
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154443,5941.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.865
  maximum absolute entry in einsum_ir solution: 514.866
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0129905
  time (eval):    0.20391
  gflops (eval):  4500.11
  gflops (total): 4230.6
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0129905,0.20391,4500.11,4230.6

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201344
  gflops (total): 4557.47
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4557.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154735
  gflops (eval):  5930.26
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154735,5930.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.718
  maximum absolute entry in einsum_ir solution: 524.717
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0134203
  time (eval):    0.203985
  gflops (eval):  4498.47
  gflops (total): 4220.78
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0134203,0.203985,4498.47,4220.78

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201654
  gflops (total): 4550.46
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4550.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154801
  gflops (eval):  5927.73
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154801,5927.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      519.664
  maximum absolute entry in einsum_ir solution: 519.665
  maximum element-wise difference:              0.00296021
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0133117
  time (eval):    0.203877
  gflops (eval):  4500.85
  gflops (total): 4224.99
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0133117,0.203877,4500.85,4224.99

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203617
  gflops (total): 4506.59
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4506.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154571
  gflops (eval):  5936.55
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154571,5936.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.38
  maximum absolute entry in einsum_ir solution: 540.38
  maximum element-wise difference:              0.00271606
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130751
  time (eval):    0.204211
  gflops (eval):  4493.49
  gflops (total): 4223.09
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130751,0.204211,4493.49,4223.09

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200852
  gflops (total): 4568.63
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4568.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15459
  gflops (eval):  5935.85
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15459,5935.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.386
  maximum absolute entry in einsum_ir solution: 498.386
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0134537
  time (eval):    0.204177
  gflops (eval):  4494.22
  gflops (total): 4216.4
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0134537,0.204177,4494.22,4216.4

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201256
  gflops (total): 4559.47
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4559.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154651
  gflops (eval):  5933.47
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154651,5933.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.258
  maximum absolute entry in einsum_ir solution: 506.258
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130777
  time (eval):    0.203938
  gflops (eval):  4499.49
  gflops (total): 4228.35
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130777,0.203938,4499.49,4228.35

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203509
  gflops (total): 4508.99
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4508.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154793
  gflops (eval):  5928.03
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154793,5928.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      519.401
  maximum absolute entry in einsum_ir solution: 519.401
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0134352
  time (eval):    0.204086
  gflops (eval):  4496.23
  gflops (total): 4218.52
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0134352,0.204086,4496.23,4218.52

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202418
  gflops (total): 4533.29
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4533.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154721
  gflops (eval):  5930.79
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154721,5930.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.234
  maximum absolute entry in einsum_ir solution: 515.234
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130084
  time (eval):    0.203731
  gflops (eval):  4504.08
  gflops (total): 4233.75
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130084,0.203731,4504.08,4233.75

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201375
  gflops (total): 4556.78
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4556.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.153969
  gflops (eval):  5959.78
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.153969,5959.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.688
  maximum absolute entry in einsum_ir solution: 489.689
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132542
  time (eval):    0.203857
  gflops (eval):  4501.3
  gflops (total): 4226.5
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132542,0.203857,4501.3,4226.5

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201206
  gflops (total): 4560.61
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4560.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154314
  gflops (eval):  5946.43
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154314,5946.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.879
  maximum absolute entry in einsum_ir solution: 489.88
  maximum element-wise difference:              0.00233459
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.013218
  time (eval):    0.203961
  gflops (eval):  4499.01
  gflops (total): 4225.19
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.013218,0.203961,4499.01,4225.19

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20159
  gflops (total): 4551.9
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4551.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154667
  gflops (eval):  5932.87
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154667,5932.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.133
  maximum absolute entry in einsum_ir solution: 502.133
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0129276
  time (eval):    0.204052
  gflops (eval):  4496.99
  gflops (total): 4229.06
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0129276,0.204052,4496.99,4229.06

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202536
  gflops (total): 4530.65
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4530.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154508
  gflops (eval):  5938.97
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154508,5938.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.999
  maximum absolute entry in einsum_ir solution: 529.998
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130819
  time (eval):    0.203687
  gflops (eval):  4505.04
  gflops (total): 4233.16
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130819,0.203687,4505.04,4233.16

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201661
  gflops (total): 4550.3
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4550.3

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154349
  gflops (eval):  5945.1
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154349,5945.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.196
  maximum absolute entry in einsum_ir solution: 479.197
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132641
  time (eval):    0.203586
  gflops (eval):  4507.28
  gflops (total): 4231.58
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132641,0.203586,4507.28,4231.58

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201439
  gflops (total): 4555.32
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4555.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154972
  gflops (eval):  5921.2
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154972,5921.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      518.935
  maximum absolute entry in einsum_ir solution: 518.935
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00839847
  time (eval):    0.204175
  gflops (eval):  4494.28
  gflops (total): 4316.72
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00839847,0.204175,4494.28,4316.72

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202796
  gflops (total): 4524.84
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4524.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154629
  gflops (eval):  5934.34
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154629,5934.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.537
  maximum absolute entry in einsum_ir solution: 526.537
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130864
  time (eval):    0.203598
  gflops (eval):  4507.01
  gflops (total): 4234.82
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130864,0.203598,4507.01,4234.82

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201211
  gflops (total): 4560.48
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4560.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154676
  gflops (eval):  5932.51
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154676,5932.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      550.444
  maximum absolute entry in einsum_ir solution: 550.443
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0127875
  time (eval):    0.203905
  gflops (eval):  4500.22
  gflops (total): 4234.66
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0127875,0.203905,4500.22,4234.66

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202425
  gflops (total): 4533.13
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4533.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154576
  gflops (eval):  5936.37
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154576,5936.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.715
  maximum absolute entry in einsum_ir solution: 502.715
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132139
  time (eval):    0.203921
  gflops (eval):  4499.89
  gflops (total): 4226.04
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132139,0.203921,4499.89,4226.04

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202936
  gflops (total): 4521.72
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4521.72

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154783
  gflops (eval):  5928.43
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154783,5928.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.682
  maximum absolute entry in einsum_ir solution: 491.68
  maximum element-wise difference:              0.00276184
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0133371
  time (eval):    0.204252
  gflops (eval):  4492.58
  gflops (total): 4217.21
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0133371,0.204252,4492.58,4217.21

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202374
  gflops (total): 4534.28
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4534.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154103
  gflops (eval):  5954.57
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154103,5954.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.952
  maximum absolute entry in einsum_ir solution: 509.951
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.013152
  time (eval):    0.204151
  gflops (eval):  4494.81
  gflops (total): 4222.77
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.013152,0.204151,4494.81,4222.77

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202518
  gflops (total): 4531.04
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4531.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154943
  gflops (eval):  5922.29
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154943,5922.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      535.774
  maximum absolute entry in einsum_ir solution: 535.774
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0129655
  time (eval):    0.203365
  gflops (eval):  4512.18
  gflops (total): 4241.75
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0129655,0.203365,4512.18,4241.75

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202716
  gflops (total): 4526.63
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4526.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154366
  gflops (eval):  5944.42
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154366,5944.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.573
  maximum absolute entry in einsum_ir solution: 548.573
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0128405
  time (eval):    0.204241
  gflops (eval):  4492.83
  gflops (total): 4227.08
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0128405,0.204241,4492.83,4227.08

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202506
  gflops (total): 4531.33
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4531.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154903
  gflops (eval):  5923.83
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154903,5923.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.707
  maximum absolute entry in einsum_ir solution: 495.707
  maximum element-wise difference:              0.00271606
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132106
  time (eval):    0.203823
  gflops (eval):  4502.04
  gflops (total): 4228
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132106,0.203823,4502.04,4228

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203289
  gflops (total): 4513.88
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4513.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155192
  gflops (eval):  5912.79
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155192,5912.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.087
  maximum absolute entry in einsum_ir solution: 526.086
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130413
  time (eval):    0.20419
  gflops (eval):  4493.95
  gflops (total): 4224.16
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130413,0.20419,4493.95,4224.16

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201364
  gflops (total): 4557.01
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4557.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155956
  gflops (eval):  5883.84
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155956,5883.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.309
  maximum absolute entry in einsum_ir solution: 493.309
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130746
  time (eval):    0.204011
  gflops (eval):  4497.9
  gflops (total): 4227
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130746,0.204011,4497.9,4227

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201336
  gflops (total): 4557.64
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4557.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154875
  gflops (eval):  5924.91
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154875,5924.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.51
  maximum absolute entry in einsum_ir solution: 514.51
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.013055
  time (eval):    0.203768
  gflops (eval):  4503.26
  gflops (total): 4232.12
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.013055,0.203768,4503.26,4232.12

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202838
  gflops (total): 4523.91
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4523.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154716
  gflops (eval):  5930.99
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154716,5930.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      512.02
  maximum absolute entry in einsum_ir solution: 512.02
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0133528
  time (eval):    0.20398
  gflops (eval):  4498.58
  gflops (total): 4222.19
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0133528,0.20398,4498.58,4222.19

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201419
  gflops (total): 4555.78
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4555.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154402
  gflops (eval):  5943.04
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154402,5943.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.129
  maximum absolute entry in einsum_ir solution: 481.128
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.013282
  time (eval):    0.204055
  gflops (eval):  4496.93
  gflops (total): 4222.11
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.013282,0.204055,4496.93,4222.11

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201973
  gflops (total): 4543.27
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4543.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154681
  gflops (eval):  5932.35
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154681,5932.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.439
  maximum absolute entry in einsum_ir solution: 498.439
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131818
  time (eval):    0.204154
  gflops (eval):  4494.75
  gflops (total): 4222.14
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131818,0.204154,4494.75,4222.14

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202085
  gflops (total): 4540.75
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4540.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154626
  gflops (eval):  5934.43
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154626,5934.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.276
  maximum absolute entry in einsum_ir solution: 508.277
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131991
  time (eval):    0.204017
  gflops (eval):  4497.77
  gflops (total): 4224.46
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131991,0.204017,4497.77,4224.46

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201683
  gflops (total): 4549.82
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4549.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154644
  gflops (eval):  5933.74
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154644,5933.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.13
  maximum absolute entry in einsum_ir solution: 509.13
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0127261
  time (eval):    0.20433
  gflops (eval):  4490.88
  gflops (total): 4227.58
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0127261,0.20433,4490.88,4227.58

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202279
  gflops (total): 4536.4
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4536.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154667
  gflops (eval):  5932.89
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154667,5932.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.5
  maximum absolute entry in einsum_ir solution: 495.5
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130788
  time (eval):    0.203948
  gflops (eval):  4499.29
  gflops (total): 4228.15
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130788,0.203948,4499.29,4228.15

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202086
  gflops (total): 4540.74
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4540.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15506
  gflops (eval):  5917.84
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15506,5917.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      520.164
  maximum absolute entry in einsum_ir solution: 520.163
  maximum element-wise difference:              0.00248718
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131791
  time (eval):    0.203806
  gflops (eval):  4502.41
  gflops (total): 4228.95
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131791,0.203806,4502.41,4228.95

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202067
  gflops (total): 4541.15
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4541.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154865
  gflops (eval):  5925.27
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154865,5925.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.119
  maximum absolute entry in einsum_ir solution: 523.118
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130877
  time (eval):    0.203696
  gflops (eval):  4504.85
  gflops (total): 4232.88
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130877,0.203696,4504.85,4232.88

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203842
  gflops (total): 4501.63
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4501.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155024
  gflops (eval):  5919.21
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155024,5919.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.952
  maximum absolute entry in einsum_ir solution: 515.952
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0133665
  time (eval):    0.203984
  gflops (eval):  4498.5
  gflops (total): 4221.85
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0133665,0.203984,4498.5,4221.85

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202844
  gflops (total): 4523.77
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4523.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15491
  gflops (eval):  5923.56
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15491,5923.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.878
  maximum absolute entry in einsum_ir solution: 508.877
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131047
  time (eval):    0.203789
  gflops (eval):  4502.8
  gflops (total): 4230.74
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131047,0.203789,4502.8,4230.74

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203825
  gflops (total): 4502
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4502

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154971
  gflops (eval):  5921.24
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154971,5921.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.375
  maximum absolute entry in einsum_ir solution: 483.375
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130019
  time (eval):    0.203714
  gflops (eval):  4504.44
  gflops (total): 4234.2
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130019,0.203714,4504.44,4234.2

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201129
  gflops (total): 4562.34
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4562.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154768
  gflops (eval):  5928.99
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154768,5928.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.299
  maximum absolute entry in einsum_ir solution: 507.299
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132597
  time (eval):    0.203673
  gflops (eval):  4505.37
  gflops (total): 4229.98
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132597,0.203673,4505.37,4229.98

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20231
  gflops (total): 4535.72
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4535.72

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154745
  gflops (eval):  5929.89
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154745,5929.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.369
  maximum absolute entry in einsum_ir solution: 526.37
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0129568
  time (eval):    0.203934
  gflops (eval):  4499.59
  gflops (total): 4230.79
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0129568,0.203934,4499.59,4230.79

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200786
  gflops (total): 4570.14
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4570.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.153657
  gflops (eval):  5971.85
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.153657,5971.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.023
  maximum absolute entry in einsum_ir solution: 514.022
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0129118
  time (eval):    0.203824
  gflops (eval):  4502.01
  gflops (total): 4233.81
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0129118,0.203824,4502.01,4233.81

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201948
  gflops (total): 4543.85
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4543.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154761
  gflops (eval):  5929.25
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154761,5929.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.117
  maximum absolute entry in einsum_ir solution: 506.118
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0133598
  time (eval):    0.203881
  gflops (eval):  4500.76
  gflops (total): 4223.98
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0133598,0.203881,4500.76,4223.98

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200858
  gflops (total): 4568.49
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4568.49

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154568
  gflops (eval):  5936.67
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154568,5936.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      546.112
  maximum absolute entry in einsum_ir solution: 546.112
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132106
  time (eval):    0.203977
  gflops (eval):  4498.64
  gflops (total): 4225.01
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132106,0.203977,4498.64,4225.01

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202804
  gflops (total): 4524.65
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4524.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154529
  gflops (eval):  5938.19
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154529,5938.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      547.874
  maximum absolute entry in einsum_ir solution: 547.875
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132412
  time (eval):    0.204159
  gflops (eval):  4494.63
  gflops (total): 4220.87
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132412,0.204159,4494.63,4220.87

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200972
  gflops (total): 4565.9
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4565.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154373
  gflops (eval):  5944.17
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154373,5944.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.361
  maximum absolute entry in einsum_ir solution: 537.362
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130719
  time (eval):    0.203984
  gflops (eval):  4498.49
  gflops (total): 4227.57
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130719,0.203984,4498.49,4227.57

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20169
  gflops (total): 4549.65
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4549.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154508
  gflops (eval):  5938.99
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154508,5938.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      490.818
  maximum absolute entry in einsum_ir solution: 490.819
  maximum element-wise difference:              0.00236511
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131251
  time (eval):    0.204113
  gflops (eval):  4495.64
  gflops (total): 4224.03
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131251,0.204113,4495.64,4224.03

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.2016
  gflops (total): 4551.69
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4551.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154723
  gflops (eval):  5930.72
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154723,5930.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.22
  maximum absolute entry in einsum_ir solution: 540.22
  maximum element-wise difference:              0.00296021
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130082
  time (eval):    0.203743
  gflops (eval):  4503.8
  gflops (total): 4233.51
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130082,0.203743,4503.8,4233.51

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201447
  gflops (total): 4555.15
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4555.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154866
  gflops (eval):  5925.26
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154866,5925.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      511.374
  maximum absolute entry in einsum_ir solution: 511.374
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130772
  time (eval):    0.203866
  gflops (eval):  4501.08
  gflops (total): 4229.76
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130772,0.203866,4501.08,4229.76

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202583
  gflops (total): 4529.59
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4529.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155152
  gflops (eval):  5914.33
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155152,5914.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      530.711
  maximum absolute entry in einsum_ir solution: 530.71
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131137
  time (eval):    0.204125
  gflops (eval):  4495.38
  gflops (total): 4224.01
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131137,0.204125,4495.38,4224.01

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20148
  gflops (total): 4554.4
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4554.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155088
  gflops (eval):  5916.75
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155088,5916.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      513.327
  maximum absolute entry in einsum_ir solution: 513.327
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.013157
  time (eval):    0.204045
  gflops (eval):  4497.14
  gflops (total): 4224.72
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.013157,0.204045,4497.14,4224.72

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201862
  gflops (total): 4545.78
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4545.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154583
  gflops (eval):  5936.1
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154583,5936.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      518.484
  maximum absolute entry in einsum_ir solution: 518.484
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131076
  time (eval):    0.203845
  gflops (eval):  4501.56
  gflops (total): 4229.59
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131076,0.203845,4501.56,4229.59

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200555
  gflops (total): 4575.4
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4575.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154675
  gflops (eval):  5932.55
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154675,5932.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.298
  maximum absolute entry in einsum_ir solution: 487.297
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0129321
  time (eval):    0.20381
  gflops (eval):  4502.32
  gflops (total): 4233.69
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0129321,0.20381,4502.32,4233.69

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20247
  gflops (total): 4532.12
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4532.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154906
  gflops (eval):  5923.7
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154906,5923.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.483
  maximum absolute entry in einsum_ir solution: 504.484
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0134225
  time (eval):    0.204174
  gflops (eval):  4494.3
  gflops (total): 4217.07
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0134225,0.204174,4494.3,4217.07

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203554
  gflops (total): 4508
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4508

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154224
  gflops (eval):  5949.9
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154224,5949.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      516.71
  maximum absolute entry in einsum_ir solution: 516.709
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130619
  time (eval):    0.203739
  gflops (eval):  4503.9
  gflops (total): 4232.55
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130619,0.203739,4503.9,4232.55

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201208
  gflops (total): 4560.54
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4560.54

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154408
  gflops (eval):  5942.83
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154408,5942.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.464
  maximum absolute entry in einsum_ir solution: 499.465
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131178
  time (eval):    0.203721
  gflops (eval):  4504.3
  gflops (total): 4231.81
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131178,0.203721,4504.3,4231.81

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201716
  gflops (total): 4549.06
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4549.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15408
  gflops (eval):  5955.47
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15408,5955.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.978
  maximum absolute entry in einsum_ir solution: 486.978
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0134731
  time (eval):    0.204114
  gflops (eval):  4495.62
  gflops (total): 4217.25
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0134731,0.204114,4495.62,4217.25

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201127
  gflops (total): 4562.39
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4562.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155032
  gflops (eval):  5918.9
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155032,5918.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.912
  maximum absolute entry in einsum_ir solution: 540.911
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131305
  time (eval):    0.203904
  gflops (eval):  4500.25
  gflops (total): 4227.98
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131305,0.203904,4500.25,4227.98

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200375
  gflops (total): 4579.52
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4579.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154382
  gflops (eval):  5943.83
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154382,5943.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.719
  maximum absolute entry in einsum_ir solution: 502.719
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130503
  time (eval):    0.20389
  gflops (eval):  4500.57
  gflops (total): 4229.83
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130503,0.20389,4500.57,4229.83

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202763
  gflops (total): 4525.57
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4525.57

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154689
  gflops (eval):  5932.04
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154689,5932.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      521.011
  maximum absolute entry in einsum_ir solution: 521.011
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130352
  time (eval):    0.204039
  gflops (eval):  4497.28
  gflops (total): 4227.22
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130352,0.204039,4497.28,4227.22

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201414
  gflops (total): 4555.88
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4555.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154983
  gflops (eval):  5920.78
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154983,5920.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.467
  maximum absolute entry in einsum_ir solution: 489.467
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132233
  time (eval):    0.204096
  gflops (eval):  4496.01
  gflops (total): 4222.44
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132233,0.204096,4496.01,4222.44

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200793
  gflops (total): 4569.98
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4569.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15481
  gflops (eval):  5927.39
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15481,5927.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.817
  maximum absolute entry in einsum_ir solution: 515.817
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.012951
  time (eval):    0.203794
  gflops (eval):  4502.69
  gflops (total): 4233.65
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.012951,0.203794,4502.69,4233.65

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202462
  gflops (total): 4532.3
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4532.3

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154143
  gflops (eval):  5953.04
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154143,5953.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.188
  maximum absolute entry in einsum_ir solution: 504.188
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0129094
  time (eval):    0.20401
  gflops (eval):  4497.91
  gflops (total): 4230.23
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0129094,0.20401,4497.91,4230.23

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203527
  gflops (total): 4508.6
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4508.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154024
  gflops (eval):  5957.64
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154024,5957.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      543.058
  maximum absolute entry in einsum_ir solution: 543.058
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132908
  time (eval):    0.203955
  gflops (eval):  4499.13
  gflops (total): 4223.88
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132908,0.203955,4499.13,4223.88

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203983
  gflops (total): 4498.51
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4498.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154825
  gflops (eval):  5926.8
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154825,5926.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.063
  maximum absolute entry in einsum_ir solution: 548.063
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0133677
  time (eval):    0.204058
  gflops (eval):  4496.87
  gflops (total): 4220.39
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0133677,0.204058,4496.87,4220.39

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202475
  gflops (total): 4532.01
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4532.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154495
  gflops (eval):  5939.46
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154495,5939.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.651
  maximum absolute entry in einsum_ir solution: 498.651
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132128
  time (eval):    0.203742
  gflops (eval):  4503.83
  gflops (total): 4229.54
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132128,0.203742,4503.83,4229.54

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201685
  gflops (total): 4549.76
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4549.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154955
  gflops (eval):  5921.83
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154955,5921.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.192
  maximum absolute entry in einsum_ir solution: 500.192
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131524
  time (eval):    0.204224
  gflops (eval):  4493.21
  gflops (total): 4221.34
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131524,0.204224,4493.21,4221.34

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201102
  gflops (total): 4562.96
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4562.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154838
  gflops (eval):  5926.31
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154838,5926.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      490.395
  maximum absolute entry in einsum_ir solution: 490.394
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0132094
  time (eval):    0.203848
  gflops (eval):  4501.49
  gflops (total): 4227.54
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0132094,0.203848,4501.49,4227.54

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200438
  gflops (total): 4578.07
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4578.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154599
  gflops (eval):  5935.48
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154599,5935.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      545.696
  maximum absolute entry in einsum_ir solution: 545.696
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131593
  time (eval):    0.204007
  gflops (eval):  4497.99
  gflops (total): 4225.43
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131593,0.204007,4497.99,4225.43

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202635
  gflops (total): 4528.44
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4528.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.153959
  gflops (eval):  5960.17
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.153959,5960.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.715
  maximum absolute entry in einsum_ir solution: 502.715
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0124108
  time (eval):    0.204077
  gflops (eval):  4496.44
  gflops (total): 4238.66
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0124108,0.204077,4496.44,4238.66

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202419
  gflops (total): 4533.26
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4533.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154819
  gflops (eval):  5927.05
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154819,5927.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.793
  maximum absolute entry in einsum_ir solution: 510.792
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0129395
  time (eval):    0.203812
  gflops (eval):  4502.29
  gflops (total): 4233.52
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0129395,0.203812,4502.29,4233.52

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200941
  gflops (total): 4566.61
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4566.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154567
  gflops (eval):  5936.7
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154567,5936.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      527.043
  maximum absolute entry in einsum_ir solution: 527.044
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0134412
  time (eval):    0.203616
  gflops (eval):  4506.62
  gflops (total): 4227.55
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0134412,0.203616,4506.62,4227.55

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200221
  gflops (total): 4583.03
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4583.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154686
  gflops (eval):  5932.15
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154686,5932.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.476
  maximum absolute entry in einsum_ir solution: 506.475
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0129916
  time (eval):    0.204406
  gflops (eval):  4489.19
  gflops (total): 4220.92
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0129916,0.204406,4489.19,4220.92

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201667
  gflops (total): 4550.18
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4550.18

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154969
  gflops (eval):  5921.3
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154969,5921.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.783
  maximum absolute entry in einsum_ir solution: 495.783
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0133145
  time (eval):    0.203613
  gflops (eval):  4506.68
  gflops (total): 4230.07
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0133145,0.203613,4506.68,4230.07

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20289
  gflops (total): 4522.74
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4522.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155161
  gflops (eval):  5914
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155161,5914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.722
  maximum absolute entry in einsum_ir solution: 529.722
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0129526
  time (eval):    0.203819
  gflops (eval):  4502.12
  gflops (total): 4233.11
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0129526,0.203819,4502.12,4233.11

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201625
  gflops (total): 4551.13
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4551.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154911
  gflops (eval):  5923.54
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154911,5923.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      517.018
  maximum absolute entry in einsum_ir solution: 517.018
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130276
  time (eval):    0.203918
  gflops (eval):  4499.93
  gflops (total): 4229.71
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130276,0.203918,4499.93,4229.71

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201545
  gflops (total): 4552.93
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4552.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154604
  gflops (eval):  5935.29
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154604,5935.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      522.011
  maximum absolute entry in einsum_ir solution: 522.011
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130262
  time (eval):    0.203993
  gflops (eval):  4498.28
  gflops (total): 4228.28
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130262,0.203993,4498.28,4228.28

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202262
  gflops (total): 4536.8
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4536.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154548
  gflops (eval):  5937.45
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154548,5937.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      522.89
  maximum absolute entry in einsum_ir solution: 522.891
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0130202
  time (eval):    0.20411
  gflops (eval):  4495.71
  gflops (total): 4226.12
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0130202,0.20411,4495.71,4226.12

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202697
  gflops (total): 4527.04
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4527.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154312
  gflops (eval):  5946.51
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154312,5946.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      522.254
  maximum absolute entry in einsum_ir solution: 522.254
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0133289
  time (eval):    0.203348
  gflops (eval):  4512.57
  gflops (total): 4234.97
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0133289,0.203348,4512.57,4234.97

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203546
  gflops (total): 4508.16
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4508.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154483
  gflops (eval):  5939.95
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154483,5939.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      517.607
  maximum absolute entry in einsum_ir solution: 517.607
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0131459
  time (eval):    0.204132
  gflops (eval):  4495.23
  gflops (total): 4223.26
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0131459,0.204132,4495.23,4223.26

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201731
  gflops (total): 4548.72
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4548.72

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154899
  gflops (eval):  5923.97
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154899,5923.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.836
  maximum absolute entry in einsum_ir solution: 523.836
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130494
  time (eval):    0.261003
  gflops (eval):  4018.03
  gflops (total): 3826.7
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130494,0.261003,4018.03,3826.7

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226438
  gflops (total): 4631.36
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4631.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.176121
  gflops (eval):  5954.52
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.176121,5954.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.521
  maximum absolute entry in einsum_ir solution: 529.521
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130971
  time (eval):    0.261259
  gflops (eval):  4014.09
  gflops (total): 3822.47
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130971,0.261259,4014.09,3822.47

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226975
  gflops (total): 4620.41
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4620.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177984
  gflops (eval):  5892.19
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177984,5892.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      573.591
  maximum absolute entry in einsum_ir solution: 573.59
  maximum element-wise difference:              0.00271606
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0129818
  time (eval):    0.261045
  gflops (eval):  4017.38
  gflops (total): 3827.06
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0129818,0.261045,4017.38,3827.06

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226622
  gflops (total): 4627.61
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4627.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17861
  gflops (eval):  5871.54
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17861,5871.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      578.102
  maximum absolute entry in einsum_ir solution: 578.101
  maximum element-wise difference:              0.00274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0129525
  time (eval):    0.260904
  gflops (eval):  4019.55
  gflops (total): 3829.44
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0129525,0.260904,4019.55,3829.44

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227489
  gflops (total): 4609.97
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4609.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178093
  gflops (eval):  5888.59
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178093,5888.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      547.075
  maximum absolute entry in einsum_ir solution: 547.076
  maximum element-wise difference:              0.00302124
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0127974
  time (eval):    0.261231
  gflops (eval):  4014.51
  gflops (total): 3827.03
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0127974,0.261231,4014.51,3827.03

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227821
  gflops (total): 4603.24
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4603.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178217
  gflops (eval):  5884.49
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178217,5884.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      527.331
  maximum absolute entry in einsum_ir solution: 527.331
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0129314
  time (eval):    0.261096
  gflops (eval):  4016.6
  gflops (total): 3827.05
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0129314,0.261096,4016.6,3827.05

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228427
  gflops (total): 4591.04
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4591.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177399
  gflops (eval):  5911.64
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177399,5911.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      541.98
  maximum absolute entry in einsum_ir solution: 541.98
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131584
  time (eval):    0.261195
  gflops (eval):  4015.07
  gflops (total): 3822.51
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131584,0.261195,4015.07,3822.51

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.229079
  gflops (total): 4577.96
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4577.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178155
  gflops (eval):  5886.55
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178155,5886.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      597.132
  maximum absolute entry in einsum_ir solution: 597.131
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131792
  time (eval):    0.261179
  gflops (eval):  4015.32
  gflops (total): 3822.43
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131792,0.261179,4015.32,3822.43

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226114
  gflops (total): 4638
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4638

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178031
  gflops (eval):  5890.64
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178031,5890.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.36
  maximum absolute entry in einsum_ir solution: 539.36
  maximum element-wise difference:              0.00274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130583
  time (eval):    0.261041
  gflops (eval):  4017.44
  gflops (total): 3826.05
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130583,0.261041,4017.44,3826.05

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226897
  gflops (total): 4621.99
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4621.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177569
  gflops (eval):  5905.96
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177569,5905.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      580.192
  maximum absolute entry in einsum_ir solution: 580.192
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130107
  time (eval):    0.261175
  gflops (eval):  4015.37
  gflops (total): 3824.84
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130107,0.261175,4015.37,3824.84

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226885
  gflops (total): 4622.23
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4622.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177972
  gflops (eval):  5892.6
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177972,5892.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      560.441
  maximum absolute entry in einsum_ir solution: 560.443
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0129291
  time (eval):    0.26105
  gflops (eval):  4017.29
  gflops (total): 3827.72
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0129291,0.26105,4017.29,3827.72

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.225985
  gflops (total): 4640.65
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4640.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.176206
  gflops (eval):  5951.64
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.176206,5951.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      527.856
  maximum absolute entry in einsum_ir solution: 527.856
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130691
  time (eval):    0.260879
  gflops (eval):  4019.93
  gflops (total): 3828.16
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130691,0.260879,4019.93,3828.16

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.225919
  gflops (total): 4642
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4642

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178212
  gflops (eval):  5884.65
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178212,5884.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      612.359
  maximum absolute entry in einsum_ir solution: 612.36
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131603
  time (eval):    0.261264
  gflops (eval):  4014.02
  gflops (total): 3821.52
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131603,0.261264,4014.02,3821.52

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227899
  gflops (total): 4601.67
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4601.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177839
  gflops (eval):  5896.99
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177839,5896.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      544.797
  maximum absolute entry in einsum_ir solution: 544.796
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0132534
  time (eval):    0.261303
  gflops (eval):  4013.41
  gflops (total): 3819.67
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0132534,0.261303,4013.41,3819.67

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226989
  gflops (total): 4620.11
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4620.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17822
  gflops (eval):  5884.4
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17822,5884.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      525.08
  maximum absolute entry in einsum_ir solution: 525.08
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0128296
  time (eval):    0.261432
  gflops (eval):  4011.44
  gflops (total): 3823.79
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0128296,0.261432,4011.44,3823.79

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227826
  gflops (total): 4603.14
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4603.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178013
  gflops (eval):  5891.23
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178013,5891.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      545.24
  maximum absolute entry in einsum_ir solution: 545.24
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0137063
  time (eval):    0.261144
  gflops (eval):  4015.86
  gflops (total): 3815.6
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0137063,0.261144,4015.86,3815.6

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227087
  gflops (total): 4618.13
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4618.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178363
  gflops (eval):  5879.66
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178363,5879.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      570.175
  maximum absolute entry in einsum_ir solution: 570.176
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130759
  time (eval):    0.261022
  gflops (eval):  4017.74
  gflops (total): 3826.07
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130759,0.261022,4017.74,3826.07

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227778
  gflops (total): 4604.12
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4604.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177912
  gflops (eval):  5894.56
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177912,5894.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      518.627
  maximum absolute entry in einsum_ir solution: 518.626
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0129704
  time (eval):    0.261005
  gflops (eval):  4017.99
  gflops (total): 3827.77
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0129704,0.261005,4017.99,3827.77

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227585
  gflops (total): 4608.01
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4608.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178218
  gflops (eval):  5884.46
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178218,5884.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.123
  maximum absolute entry in einsum_ir solution: 532.124
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0132003
  time (eval):    0.260915
  gflops (eval):  4019.37
  gflops (total): 3825.81
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0132003,0.260915,4019.37,3825.81

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226924
  gflops (total): 4621.44
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4621.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177648
  gflops (eval):  5903.32
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177648,5903.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      568.39
  maximum absolute entry in einsum_ir solution: 568.389
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0133084
  time (eval):    0.260972
  gflops (eval):  4018.5
  gflops (total): 3823.52
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0133084,0.260972,4018.5,3823.52

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228586
  gflops (total): 4587.85
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4587.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178009
  gflops (eval):  5891.36
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178009,5891.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      525.059
  maximum absolute entry in einsum_ir solution: 525.058
  maximum element-wise difference:              0.00288391
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131397
  time (eval):    0.261377
  gflops (eval):  4012.28
  gflops (total): 3820.23
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131397,0.261377,4012.28,3820.23

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227978
  gflops (total): 4600.07
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4600.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177982
  gflops (eval):  5892.26
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177982,5892.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      562.106
  maximum absolute entry in einsum_ir solution: 562.106
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130134
  time (eval):    0.261261
  gflops (eval):  4014.06
  gflops (total): 3823.61
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130134,0.261261,4014.06,3823.61

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227392
  gflops (total): 4611.94
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4611.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17789
  gflops (eval):  5895.31
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17789,5895.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      557.149
  maximum absolute entry in einsum_ir solution: 557.149
  maximum element-wise difference:              0.00274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130277
  time (eval):    0.261478
  gflops (eval):  4010.73
  gflops (total): 3820.38
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130277,0.261478,4010.73,3820.38

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227041
  gflops (total): 4619.06
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4619.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17663
  gflops (eval):  5937.36
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17663,5937.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.737
  maximum absolute entry in einsum_ir solution: 524.737
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131454
  time (eval):    0.261153
  gflops (eval):  4015.71
  gflops (total): 3823.27
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131454,0.261153,4015.71,3823.27

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227337
  gflops (total): 4613.04
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4613.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177756
  gflops (eval):  5899.74
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177756,5899.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.23
  maximum absolute entry in einsum_ir solution: 528.23
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131875
  time (eval):    0.261395
  gflops (eval):  4012
  gflops (total): 3819.32
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131875,0.261395,4012,3819.32

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226595
  gflops (total): 4628.15
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4628.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178049
  gflops (eval):  5890.03
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178049,5890.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.833
  maximum absolute entry in einsum_ir solution: 536.833
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131644
  time (eval):    0.261503
  gflops (eval):  4010.34
  gflops (total): 3818.13
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131644,0.261503,4010.34,3818.13

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227739
  gflops (total): 4604.91
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4604.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177931
  gflops (eval):  5893.96
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177931,5893.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      516.585
  maximum absolute entry in einsum_ir solution: 516.585
  maximum element-wise difference:              0.00296021
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0129729
  time (eval):    0.260807
  gflops (eval):  4021.05
  gflops (total): 3830.51
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0129729,0.260807,4021.05,3830.51

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228525
  gflops (total): 4589.07
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4589.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.1782
  gflops (eval):  5885.05
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.1782,5885.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      558.801
  maximum absolute entry in einsum_ir solution: 558.8
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0129473
  time (eval):    0.261344
  gflops (eval):  4012.78
  gflops (total): 3823.36
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0129473,0.261344,4012.78,3823.36

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228578
  gflops (total): 4587.99
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4587.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177975
  gflops (eval):  5892.49
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177975,5892.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      555.739
  maximum absolute entry in einsum_ir solution: 555.74
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0128089
  time (eval):    0.261253
  gflops (eval):  4014.17
  gflops (total): 3826.56
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0128089,0.261253,4014.17,3826.56

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228583
  gflops (total): 4587.9
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4587.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177659
  gflops (eval):  5902.96
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177659,5902.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      590.174
  maximum absolute entry in einsum_ir solution: 590.173
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0129842
  time (eval):    0.261116
  gflops (eval):  4016.29
  gflops (total): 3826.04
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0129842,0.261116,4016.29,3826.04

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22854
  gflops (total): 4588.76
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4588.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178291
  gflops (eval):  5882.04
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178291,5882.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.331
  maximum absolute entry in einsum_ir solution: 532.331
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131242
  time (eval):    0.260974
  gflops (eval):  4018.47
  gflops (total): 3826.06
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131242,0.260974,4018.47,3826.06

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22887
  gflops (total): 4582.14
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4582.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17797
  gflops (eval):  5892.65
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17797,5892.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      551.925
  maximum absolute entry in einsum_ir solution: 551.926
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131158
  time (eval):    0.261119
  gflops (eval):  4016.24
  gflops (total): 3824.16
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131158,0.261119,4016.24,3824.16

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227264
  gflops (total): 4614.53
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4614.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177641
  gflops (eval):  5903.57
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177641,5903.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      554.696
  maximum absolute entry in einsum_ir solution: 554.695
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130511
  time (eval):    0.261401
  gflops (eval):  4011.91
  gflops (total): 3821.13
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130511,0.261401,4011.91,3821.13

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226539
  gflops (total): 4629.29
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4629.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177933
  gflops (eval):  5893.89
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177933,5893.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.928
  maximum absolute entry in einsum_ir solution: 524.928
  maximum element-wise difference:              0.00271606
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0132781
  time (eval):    0.260833
  gflops (eval):  4020.64
  gflops (total): 3825.88
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0132781,0.260833,4020.64,3825.88

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227282
  gflops (total): 4614.17
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4614.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177619
  gflops (eval):  5904.3
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177619,5904.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.583
  maximum absolute entry in einsum_ir solution: 542.583
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0128863
  time (eval):    0.261322
  gflops (eval):  4013.13
  gflops (total): 3824.53
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0128863,0.261322,4013.13,3824.53

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226313
  gflops (total): 4633.92
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4633.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17745
  gflops (eval):  5909.91
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17745,5909.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      553.499
  maximum absolute entry in einsum_ir solution: 553.498
  maximum element-wise difference:              0.0027771
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.013227
  time (eval):    0.261427
  gflops (eval):  4011.51
  gflops (total): 3818.32
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.013227,0.261427,4011.51,3818.32

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227971
  gflops (total): 4600.22
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4600.22

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177817
  gflops (eval):  5897.72
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177817,5897.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      623.727
  maximum absolute entry in einsum_ir solution: 623.728
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0132338
  time (eval):    0.261331
  gflops (eval):  4012.97
  gflops (total): 3819.55
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0132338,0.261331,4012.97,3819.55

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226721
  gflops (total): 4625.58
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4625.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177783
  gflops (eval):  5898.86
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177783,5898.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      549.839
  maximum absolute entry in einsum_ir solution: 549.838
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.013186
  time (eval):    0.261022
  gflops (eval):  4017.74
  gflops (total): 3824.53
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.013186,0.261022,4017.74,3824.53

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227881
  gflops (total): 4602.04
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4602.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177844
  gflops (eval):  5896.85
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177844,5896.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.614
  maximum absolute entry in einsum_ir solution: 531.613
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130347
  time (eval):    0.260979
  gflops (eval):  4018.4
  gflops (total): 3827.25
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130347,0.260979,4018.4,3827.25

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226681
  gflops (total): 4626.39
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4626.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178229
  gflops (eval):  5884.09
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178229,5884.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      558.49
  maximum absolute entry in einsum_ir solution: 558.492
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0132615
  time (eval):    0.260913
  gflops (eval):  4019.41
  gflops (total): 3824.99
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0132615,0.260913,4019.41,3824.99

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227897
  gflops (total): 4601.71
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4601.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177848
  gflops (eval):  5896.69
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177848,5896.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      574.158
  maximum absolute entry in einsum_ir solution: 574.157
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130943
  time (eval):    0.26176
  gflops (eval):  4006.4
  gflops (total): 3815.53
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130943,0.26176,4006.4,3815.53

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228377
  gflops (total): 4592.03
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4592.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177678
  gflops (eval):  5902.34
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177678,5902.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      568.18
  maximum absolute entry in einsum_ir solution: 568.179
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0132244
  time (eval):    0.260879
  gflops (eval):  4019.94
  gflops (total): 3825.99
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0132244,0.260879,4019.94,3825.99

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228508
  gflops (total): 4589.42
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4589.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177592
  gflops (eval):  5905.21
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177592,5905.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      569.423
  maximum absolute entry in einsum_ir solution: 569.426
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131176
  time (eval):    0.26142
  gflops (eval):  4011.62
  gflops (total): 3819.94
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131176,0.26142,4011.62,3819.94

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226262
  gflops (total): 4634.96
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4634.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177968
  gflops (eval):  5892.72
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177968,5892.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.899
  maximum absolute entry in einsum_ir solution: 532.899
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130401
  time (eval):    0.261532
  gflops (eval):  4009.89
  gflops (total): 3819.45
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130401,0.261532,4009.89,3819.45

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226327
  gflops (total): 4633.64
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4633.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177853
  gflops (eval):  5896.54
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177853,5896.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      550.815
  maximum absolute entry in einsum_ir solution: 550.815
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0129561
  time (eval):    0.261238
  gflops (eval):  4014.4
  gflops (total): 3824.72
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0129561,0.261238,4014.4,3824.72

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226714
  gflops (total): 4625.73
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4625.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178335
  gflops (eval):  5880.61
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178335,5880.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      538.569
  maximum absolute entry in einsum_ir solution: 538.569
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0132607
  time (eval):    0.260991
  gflops (eval):  4018.2
  gflops (total): 3823.91
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0132607,0.260991,4018.2,3823.91

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.225774
  gflops (total): 4644.97
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4644.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178137
  gflops (eval):  5887.15
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178137,5887.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.054
  maximum absolute entry in einsum_ir solution: 524.053
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.013149
  time (eval):    0.26127
  gflops (eval):  4013.92
  gflops (total): 3821.59
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.013149,0.26127,4013.92,3821.59

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227095
  gflops (total): 4617.96
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4617.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.176292
  gflops (eval):  5948.75
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.176292,5948.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      535.359
  maximum absolute entry in einsum_ir solution: 535.358
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131252
  time (eval):    0.261313
  gflops (eval):  4013.25
  gflops (total): 3821.32
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131252,0.261313,4013.25,3821.32

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227304
  gflops (total): 4613.72
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4613.72

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177916
  gflops (eval):  5894.43
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177916,5894.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      551.925
  maximum absolute entry in einsum_ir solution: 551.924
  maximum element-wise difference:              0.00286865
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0132402
  time (eval):    0.261608
  gflops (eval):  4008.73
  gflops (total): 3815.62
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0132402,0.261608,4008.73,3815.62

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227235
  gflops (total): 4615.11
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4615.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177876
  gflops (eval):  5895.76
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177876,5895.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      579.168
  maximum absolute entry in einsum_ir solution: 579.169
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130399
  time (eval):    0.261232
  gflops (eval):  4014.49
  gflops (total): 3823.63
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130399,0.261232,4014.49,3823.63

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.225974
  gflops (total): 4640.87
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4640.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177704
  gflops (eval):  5901.46
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177704,5901.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      541.318
  maximum absolute entry in einsum_ir solution: 541.318
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0129638
  time (eval):    0.261293
  gflops (eval):  4013.56
  gflops (total): 3823.84
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0129638,0.261293,4013.56,3823.84

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228259
  gflops (total): 4594.41
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4594.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178425
  gflops (eval):  5877.64
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178425,5877.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.122
  maximum absolute entry in einsum_ir solution: 536.123
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130131
  time (eval):    0.260982
  gflops (eval):  4018.35
  gflops (total): 3827.5
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130131,0.260982,4018.35,3827.5

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22714
  gflops (total): 4617.05
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4617.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17738
  gflops (eval):  5912.24
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17738,5912.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.968
  maximum absolute entry in einsum_ir solution: 540.968
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0129347
  time (eval):    0.261983
  gflops (eval):  4002.99
  gflops (total): 3814.65
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0129347,0.261983,4002.99,3814.65

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.2266
  gflops (total): 4628.05
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4628.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177983
  gflops (eval):  5892.22
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177983,5892.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      534.853
  maximum absolute entry in einsum_ir solution: 534.853
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130293
  time (eval):    0.261058
  gflops (eval):  4017.18
  gflops (total): 3826.21
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130293,0.261058,4017.18,3826.21

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226973
  gflops (total): 4620.44
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4620.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177798
  gflops (eval):  5898.34
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177798,5898.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      545.746
  maximum absolute entry in einsum_ir solution: 545.746
  maximum element-wise difference:              0.0027771
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131076
  time (eval):    0.261192
  gflops (eval):  4015.11
  gflops (total): 3823.25
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131076,0.261192,4015.11,3823.25

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227068
  gflops (total): 4618.51
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4618.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17824
  gflops (eval):  5883.73
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17824,5883.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.209
  maximum absolute entry in einsum_ir solution: 531.209
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130142
  time (eval):    0.261711
  gflops (eval):  4007.15
  gflops (total): 3817.32
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130142,0.261711,4007.15,3817.32

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228058
  gflops (total): 4598.47
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4598.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177734
  gflops (eval):  5900.49
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177734,5900.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.621
  maximum absolute entry in einsum_ir solution: 526.62
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131747
  time (eval):    0.261269
  gflops (eval):  4013.93
  gflops (total): 3821.24
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131747,0.261269,4013.93,3821.24

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227231
  gflops (total): 4615.2
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4615.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177335
  gflops (eval):  5913.74
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177335,5913.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      545.617
  maximum absolute entry in einsum_ir solution: 545.616
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130087
  time (eval):    0.261237
  gflops (eval):  4014.42
  gflops (total): 3824
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130087,0.261237,4014.42,3824

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227458
  gflops (total): 4610.59
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4610.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178206
  gflops (eval):  5884.87
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178206,5884.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.717
  maximum absolute entry in einsum_ir solution: 526.717
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.013017
  time (eval):    0.261003
  gflops (eval):  4018.02
  gflops (total): 3827.15
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.013017,0.261003,4018.02,3827.15

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226828
  gflops (total): 4623.4
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4623.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177879
  gflops (eval):  5895.66
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177879,5895.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      597.97
  maximum absolute entry in einsum_ir solution: 597.97
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130407
  time (eval):    0.26126
  gflops (eval):  4014.07
  gflops (total): 3823.24
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130407,0.26126,4014.07,3823.24

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227493
  gflops (total): 4609.89
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4609.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.176805
  gflops (eval):  5931.5
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.176805,5931.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.727
  maximum absolute entry in einsum_ir solution: 540.726
  maximum element-wise difference:              0.00271606
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0132875
  time (eval):    0.260912
  gflops (eval):  4019.43
  gflops (total): 3824.65
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0132875,0.260912,4019.43,3824.65

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227116
  gflops (total): 4617.55
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4617.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178184
  gflops (eval):  5885.58
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178184,5885.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.082
  maximum absolute entry in einsum_ir solution: 542.082
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.013067
  time (eval):    0.261055
  gflops (eval):  4017.23
  gflops (total): 3825.73
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.013067,0.261055,4017.23,3825.73

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227478
  gflops (total): 4610.18
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4610.18

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177551
  gflops (eval):  5906.57
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177551,5906.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      609.739
  maximum absolute entry in einsum_ir solution: 609.741
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.013045
  time (eval):    0.261263
  gflops (eval):  4014.03
  gflops (total): 3823.14
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.013045,0.261263,4014.03,3823.14

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226932
  gflops (total): 4621.28
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4621.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17804
  gflops (eval):  5890.35
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17804,5890.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.219
  maximum absolute entry in einsum_ir solution: 548.219
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0128756
  time (eval):    0.260745
  gflops (eval):  4022
  gflops (total): 3832.74
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0128756,0.260745,4022,3832.74

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227149
  gflops (total): 4616.86
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4616.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178185
  gflops (eval):  5885.53
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178185,5885.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      555.404
  maximum absolute entry in einsum_ir solution: 555.405
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.01294
  time (eval):    0.260756
  gflops (eval):  4021.82
  gflops (total): 3831.68
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.01294,0.260756,4021.82,3831.68

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22743
  gflops (total): 4611.17
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4611.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178048
  gflops (eval):  5890.08
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178048,5890.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.004
  maximum absolute entry in einsum_ir solution: 532.004
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131077
  time (eval):    0.260995
  gflops (eval):  4018.14
  gflops (total): 3825.99
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131077,0.260995,4018.14,3825.99

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227564
  gflops (total): 4608.45
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4608.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178171
  gflops (eval):  5886
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178171,5886,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      568.783
  maximum absolute entry in einsum_ir solution: 568.783
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0129234
  time (eval):    0.261287
  gflops (eval):  4013.65
  gflops (total): 3824.49
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0129234,0.261287,4013.65,3824.49

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226755
  gflops (total): 4624.89
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4624.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177945
  gflops (eval):  5893.48
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177945,5893.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      586.126
  maximum absolute entry in einsum_ir solution: 586.126
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131036
  time (eval):    0.261026
  gflops (eval):  4017.67
  gflops (total): 3825.63
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131036,0.261026,4017.67,3825.63

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.225507
  gflops (total): 4650.48
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4650.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177688
  gflops (eval):  5902.02
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177688,5902.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      570.992
  maximum absolute entry in einsum_ir solution: 570.992
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131797
  time (eval):    0.261236
  gflops (eval):  4014.44
  gflops (total): 3821.64
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131797,0.261236,4014.44,3821.64

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228362
  gflops (total): 4592.34
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4592.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17769
  gflops (eval):  5901.95
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17769,5901.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      549.64
  maximum absolute entry in einsum_ir solution: 549.639
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0132184
  time (eval):    0.261536
  gflops (eval):  4009.84
  gflops (total): 3816.93
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0132184,0.261536,4009.84,3816.93

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227196
  gflops (total): 4615.91
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4615.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177956
  gflops (eval):  5893.13
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177956,5893.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      550.798
  maximum absolute entry in einsum_ir solution: 550.798
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130787
  time (eval):    0.261169
  gflops (eval):  4015.46
  gflops (total): 3823.97
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130787,0.261169,4015.46,3823.97

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22808
  gflops (total): 4598.02
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4598.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178095
  gflops (eval):  5888.53
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178095,5888.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      560.761
  maximum absolute entry in einsum_ir solution: 560.761
  maximum element-wise difference:              0.00260925
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131891
  time (eval):    0.261247
  gflops (eval):  4014.28
  gflops (total): 3821.35
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131891,0.261247,4014.28,3821.35

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22598
  gflops (total): 4640.76
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4640.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177033
  gflops (eval):  5923.84
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177033,5923.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      602.087
  maximum absolute entry in einsum_ir solution: 602.087
  maximum element-wise difference:              0.00274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131854
  time (eval):    0.261645
  gflops (eval):  4008.16
  gflops (total): 3815.87
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131854,0.261645,4008.16,3815.87

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227984
  gflops (total): 4599.95
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4599.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.1779
  gflops (eval):  5894.96
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.1779,5894.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      534.8
  maximum absolute entry in einsum_ir solution: 534.8
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131363
  time (eval):    0.260944
  gflops (eval):  4018.93
  gflops (total): 3826.3
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131363,0.260944,4018.93,3826.3

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227451
  gflops (total): 4610.73
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4610.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177849
  gflops (eval):  5896.66
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177849,5896.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.521
  maximum absolute entry in einsum_ir solution: 537.522
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0133964
  time (eval):    0.261035
  gflops (eval):  4017.53
  gflops (total): 3821.42
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0133964,0.261035,4017.53,3821.42

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22702
  gflops (total): 4619.49
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4619.49

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178079
  gflops (eval):  5889.05
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178079,5889.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      560.982
  maximum absolute entry in einsum_ir solution: 560.982
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130801
  time (eval):    0.267762
  gflops (eval):  3916.59
  gflops (total): 3734.18
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130801,0.267762,3916.59,3734.18

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22887
  gflops (total): 4582.15
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4582.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177863
  gflops (eval):  5896.21
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177863,5896.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.234
  maximum absolute entry in einsum_ir solution: 542.235
  maximum element-wise difference:              0.00274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130835
  time (eval):    0.261118
  gflops (eval):  4016.26
  gflops (total): 3824.62
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130835,0.261118,4016.26,3824.62

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22861
  gflops (total): 4587.37
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4587.37

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178263
  gflops (eval):  5882.98
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178263,5882.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      543.755
  maximum absolute entry in einsum_ir solution: 543.755
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0133053
  time (eval):    0.26164
  gflops (eval):  4008.25
  gflops (total): 3814.28
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0133053,0.26164,4008.25,3814.28

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227765
  gflops (total): 4604.38
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4604.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178014
  gflops (eval):  5891.19
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178014,5891.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.365
  maximum absolute entry in einsum_ir solution: 532.366
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131384
  time (eval):    0.261195
  gflops (eval):  4015.07
  gflops (total): 3822.78
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131384,0.261195,4015.07,3822.78

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226953
  gflops (total): 4620.85
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4620.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177734
  gflops (eval):  5900.47
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177734,5900.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      567.93
  maximum absolute entry in einsum_ir solution: 567.932
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130985
  time (eval):    0.260863
  gflops (eval):  4020.17
  gflops (total): 3827.96
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130985,0.260863,4020.17,3827.96

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226696
  gflops (total): 4626.09
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4626.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177815
  gflops (eval):  5897.78
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177815,5897.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.517
  maximum absolute entry in einsum_ir solution: 515.516
  maximum element-wise difference:              0.00257874
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.013252
  time (eval):    0.261518
  gflops (eval):  4010.11
  gflops (total): 3816.7
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.013252,0.261518,4010.11,3816.7

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226751
  gflops (total): 4624.97
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4624.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177949
  gflops (eval):  5893.35
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177949,5893.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.958
  maximum absolute entry in einsum_ir solution: 536.958
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0132666
  time (eval):    0.261052
  gflops (eval):  4017.27
  gflops (total): 3822.98
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0132666,0.261052,4017.27,3822.98

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227752
  gflops (total): 4604.64
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4604.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177723
  gflops (eval):  5900.86
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177723,5900.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      543.394
  maximum absolute entry in einsum_ir solution: 543.394
  maximum element-wise difference:              0.00283813
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131649
  time (eval):    0.261172
  gflops (eval):  4015.42
  gflops (total): 3822.73
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131649,0.261172,4015.42,3822.73

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227863
  gflops (total): 4602.41
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4602.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.176495
  gflops (eval):  5941.89
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.176495,5941.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      550.222
  maximum absolute entry in einsum_ir solution: 550.223
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0134369
  time (eval):    0.261312
  gflops (eval):  4013.28
  gflops (total): 3817
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0134369,0.261312,4013.28,3817

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228119
  gflops (total): 4597.23
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4597.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178341
  gflops (eval):  5880.4
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178341,5880.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      555.836
  maximum absolute entry in einsum_ir solution: 555.836
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131213
  time (eval):    0.261014
  gflops (eval):  4017.86
  gflops (total): 3825.54
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131213,0.261014,4017.86,3825.54

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227235
  gflops (total): 4615.11
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4615.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178321
  gflops (eval):  5881.05
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178321,5881.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      513.478
  maximum absolute entry in einsum_ir solution: 513.479
  maximum element-wise difference:              0.00247192
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131558
  time (eval):    0.261254
  gflops (eval):  4014.17
  gflops (total): 3821.72
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131558,0.261254,4014.17,3821.72

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228299
  gflops (total): 4593.6
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4593.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17766
  gflops (eval):  5902.95
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17766,5902.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      570.48
  maximum absolute entry in einsum_ir solution: 570.48
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130983
  time (eval):    0.261146
  gflops (eval):  4015.82
  gflops (total): 3824.02
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130983,0.261146,4015.82,3824.02

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228228
  gflops (total): 4595.04
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4595.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177942
  gflops (eval):  5893.59
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177942,5893.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      584.355
  maximum absolute entry in einsum_ir solution: 584.357
  maximum element-wise difference:              0.00259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0132058
  time (eval):    0.263169
  gflops (eval):  3984.95
  gflops (total): 3794.54
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0132058,0.263169,3984.95,3794.54

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228829
  gflops (total): 4582.97
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4582.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177468
  gflops (eval):  5909.32
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177468,5909.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      563.526
  maximum absolute entry in einsum_ir solution: 563.527
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0132993
  time (eval):    0.261057
  gflops (eval):  4017.19
  gflops (total): 3822.46
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0132993,0.261057,4017.19,3822.46

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.225885
  gflops (total): 4642.7
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4642.7

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177644
  gflops (eval):  5903.47
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177644,5903.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      572.904
  maximum absolute entry in einsum_ir solution: 572.902
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130473
  time (eval):    0.261231
  gflops (eval):  4014.52
  gflops (total): 3823.55
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130473,0.261231,4014.52,3823.55

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227385
  gflops (total): 4612.07
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4612.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177873
  gflops (eval):  5895.86
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177873,5895.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      586.06
  maximum absolute entry in einsum_ir solution: 586.06
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130128
  time (eval):    0.261226
  gflops (eval):  4014.6
  gflops (total): 3824.1
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130128,0.261226,4014.6,3824.1

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227753
  gflops (total): 4604.62
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4604.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178103
  gflops (eval):  5888.27
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178103,5888.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      558.563
  maximum absolute entry in einsum_ir solution: 558.564
  maximum element-wise difference:              0.00276184
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0132923
  time (eval):    0.261283
  gflops (eval):  4013.72
  gflops (total): 3819.42
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0132923,0.261283,4013.72,3819.42

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228538
  gflops (total): 4588.8
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4588.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177587
  gflops (eval):  5905.37
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177587,5905.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      558.767
  maximum absolute entry in einsum_ir solution: 558.767
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130109
  time (eval):    0.261
  gflops (eval):  4018.07
  gflops (total): 3827.28
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130109,0.261,4018.07,3827.28

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226499
  gflops (total): 4630.11
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4630.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.176344
  gflops (eval):  5946.97
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.176344,5946.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.395
  maximum absolute entry in einsum_ir solution: 515.394
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0131959
  time (eval):    0.261125
  gflops (eval):  4016.14
  gflops (total): 3822.95
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0131959,0.261125,4016.14,3822.95

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227035
  gflops (total): 4619.19
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4619.19

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177961
  gflops (eval):  5892.96
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177961,5892.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      589.667
  maximum absolute entry in einsum_ir solution: 589.665
  maximum element-wise difference:              0.00311279
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130804
  time (eval):    0.261276
  gflops (eval):  4013.83
  gflops (total): 3822.47
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130804,0.261276,4013.83,3822.47

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228143
  gflops (total): 4596.75
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4596.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178011
  gflops (eval):  5891.31
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178011,5891.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      569.476
  maximum absolute entry in einsum_ir solution: 569.476
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0132399
  time (eval):    0.261205
  gflops (eval):  4014.92
  gflops (total): 3821.23
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0132399,0.261205,4014.92,3821.23

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226185
  gflops (total): 4636.55
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4636.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177868
  gflops (eval):  5896.04
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177868,5896.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      565.99
  maximum absolute entry in einsum_ir solution: 565.99
  maximum element-wise difference:              0.00283813
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0130792
  time (eval):    0.2611
  gflops (eval):  4016.52
  gflops (total): 3824.92
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0130792,0.2611,4016.52,3824.92

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226995
  gflops (total): 4619.99
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4619.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177692
  gflops (eval):  5901.86
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177692,5901.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      556.688
  maximum absolute entry in einsum_ir solution: 556.688
  maximum element-wise difference:              0.00265503
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0128984
  time (eval):    0.26303
  gflops (eval):  3987.07
  gflops (total): 3800.69
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0128984,0.26303,3987.07,3800.69

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.229637
  gflops (total): 4566.84
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4566.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178238
  gflops (eval):  5883.8
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178238,5883.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.241
  maximum absolute entry in einsum_ir solution: 528.241
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0134757
  time (eval):    0.261145
  gflops (eval):  4015.84
  gflops (total): 3818.78
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0134757,0.261145,4015.84,3818.78

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228185
  gflops (total): 4595.91
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4595.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177966
  gflops (eval):  5892.78
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177966,5892.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      596.215
  maximum absolute entry in einsum_ir solution: 596.214
  maximum element-wise difference:              0.00241089
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0133424
  time (eval):    0.261203
  gflops (eval):  4014.95
  gflops (total): 3819.83
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0133424,0.261203,4014.95,3819.83

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228391
  gflops (total): 4591.76
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4591.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178045
  gflops (eval):  5890.18
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178045,5890.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      543.613
  maximum absolute entry in einsum_ir solution: 543.612
  maximum element-wise difference:              0.00271606
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132155
  time (eval):    0.179729
  gflops (eval):  5105.54
  gflops (total): 4755.84
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132155,0.179729,5105.54,4755.84

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210916
  gflops (total): 4350.6
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4350.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156502
  gflops (eval):  5863.25
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156502,5863.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.72
  maximum absolute entry in einsum_ir solution: 503.72
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131667
  time (eval):    0.17963
  gflops (eval):  5108.33
  gflops (total): 4759.47
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131667,0.17963,5108.33,4759.47

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210054
  gflops (total): 4368.46
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4368.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.155585
  gflops (eval):  5897.82
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.155585,5897.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      559.094
  maximum absolute entry in einsum_ir solution: 559.093
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.013145
  time (eval):    0.179706
  gflops (eval):  5106.17
  gflops (total): 4758.13
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.013145,0.179706,5106.17,4758.13

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212635
  gflops (total): 4315.43
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4315.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156637
  gflops (eval):  5858.21
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156637,5858.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.521
  maximum absolute entry in einsum_ir solution: 473.522
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132683
  time (eval):    0.179785
  gflops (eval):  5103.94
  gflops (total): 4753.15
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132683,0.179785,5103.94,4753.15

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.2115
  gflops (total): 4338.58
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4338.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157057
  gflops (eval):  5842.53
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157057,5842.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.04
  maximum absolute entry in einsum_ir solution: 466.04
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0114482
  time (eval):    0.179643
  gflops (eval):  5107.97
  gflops (total): 4801.95
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0114482,0.179643,5107.97,4801.95

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211879
  gflops (total): 4330.82
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4330.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157194
  gflops (eval):  5837.45
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157194,5837.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      455.558
  maximum absolute entry in einsum_ir solution: 455.556
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0135
  time (eval):    0.179545
  gflops (eval):  5110.77
  gflops (total): 4753.36
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0135,0.179545,5110.77,4753.36

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211224
  gflops (total): 4344.26
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4344.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157229
  gflops (eval):  5836.16
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157229,5836.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.61
  maximum absolute entry in einsum_ir solution: 470.61
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132934
  time (eval):    0.179541
  gflops (eval):  5110.89
  gflops (total): 4758.56
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132934,0.179541,5110.89,4758.56

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210369
  gflops (total): 4361.9
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4361.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156784
  gflops (eval):  5852.71
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156784,5852.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.688
  maximum absolute entry in einsum_ir solution: 483.688
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130345
  time (eval):    0.179571
  gflops (eval):  5110.01
  gflops (total): 4764.19
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130345,0.179571,5110.01,4764.19

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.21085
  gflops (total): 4351.96
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4351.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157227
  gflops (eval):  5836.22
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157227,5836.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.083
  maximum absolute entry in einsum_ir solution: 475.081
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131987
  time (eval):    0.179517
  gflops (eval):  5111.56
  gflops (total): 4761.48
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131987,0.179517,5111.56,4761.48

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210153
  gflops (total): 4366.4
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4366.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156483
  gflops (eval):  5863.98
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156483,5863.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.643
  maximum absolute entry in einsum_ir solution: 486.643
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0129811
  time (eval):    0.179448
  gflops (eval):  5113.53
  gflops (total): 4768.58
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0129811,0.179448,5113.53,4768.58

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.21099
  gflops (total): 4349.08
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4349.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156459
  gflops (eval):  5864.86
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156459,5864.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.825
  maximum absolute entry in einsum_ir solution: 469.825
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132039
  time (eval):    0.179503
  gflops (eval):  5111.97
  gflops (total): 4761.71
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132039,0.179503,5111.97,4761.71

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212384
  gflops (total): 4320.52
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4320.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156677
  gflops (eval):  5856.7
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156677,5856.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.04
  maximum absolute entry in einsum_ir solution: 474.039
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0129283
  time (eval):    0.179353
  gflops (eval):  5116.23
  gflops (total): 4772.24
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0129283,0.179353,5116.23,4772.24

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211406
  gflops (total): 4340.52
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4340.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157189
  gflops (eval):  5837.63
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157189,5837.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.668
  maximum absolute entry in einsum_ir solution: 506.669
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0129617
  time (eval):    0.179506
  gflops (eval):  5111.86
  gflops (total): 4767.61
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0129617,0.179506,5111.86,4767.61

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211629
  gflops (total): 4335.94
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4335.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156609
  gflops (eval):  5859.25
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156609,5859.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.581
  maximum absolute entry in einsum_ir solution: 508.58
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130714
  time (eval):    0.179454
  gflops (eval):  5113.35
  gflops (total): 4766.19
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130714,0.179454,5113.35,4766.19

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.20987
  gflops (total): 4372.29
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4372.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157207
  gflops (eval):  5836.98
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157207,5836.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.747
  maximum absolute entry in einsum_ir solution: 493.748
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131367
  time (eval):    0.179944
  gflops (eval):  5099.43
  gflops (total): 4752.48
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131367,0.179944,5099.43,4752.48

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210261
  gflops (total): 4364.16
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4364.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156714
  gflops (eval):  5855.34
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156714,5855.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.149
  maximum absolute entry in einsum_ir solution: 484.149
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131656
  time (eval):    0.179471
  gflops (eval):  5112.88
  gflops (total): 4763.44
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131656,0.179471,5112.88,4763.44

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211714
  gflops (total): 4334.21
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4334.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.1565
  gflops (eval):  5863.33
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.1565,5863.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.255
  maximum absolute entry in einsum_ir solution: 481.255
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0128609
  time (eval):    0.179343
  gflops (eval):  5116.52
  gflops (total): 4774.15
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0128609,0.179343,5116.52,4774.15

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.20982
  gflops (total): 4373.33
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4373.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156789
  gflops (eval):  5852.51
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156789,5852.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      558.823
  maximum absolute entry in einsum_ir solution: 558.823
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0129944
  time (eval):    0.179496
  gflops (eval):  5112.14
  gflops (total): 4767.04
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0129944,0.179496,5112.14,4767.04

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210886
  gflops (total): 4351.21
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4351.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15754
  gflops (eval):  5824.64
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15754,5824.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.753
  maximum absolute entry in einsum_ir solution: 478.753
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131463
  time (eval):    0.179924
  gflops (eval):  5100
  gflops (total): 4752.74
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131463,0.179924,5100,4752.74

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.209065
  gflops (total): 4389.12
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4389.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157019
  gflops (eval):  5843.94
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157019,5843.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.626
  maximum absolute entry in einsum_ir solution: 471.626
  maximum element-wise difference:              0.00187683
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132512
  time (eval):    0.179754
  gflops (eval):  5104.81
  gflops (total): 4754.33
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132512,0.179754,5104.81,4754.33

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.209843
  gflops (total): 4372.85
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4372.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15666
  gflops (eval):  5857.35
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15666,5857.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.008
  maximum absolute entry in einsum_ir solution: 467.01
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130905
  time (eval):    0.179621
  gflops (eval):  5108.61
  gflops (total): 4761.59
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130905,0.179621,5108.61,4761.59

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210639
  gflops (total): 4356.33
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4356.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.155766
  gflops (eval):  5890.95
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.155766,5890.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.28
  maximum absolute entry in einsum_ir solution: 464.28
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0129685
  time (eval):    0.179586
  gflops (eval):  5109.59
  gflops (total): 4765.46
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0129685,0.179586,5109.59,4765.46

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211265
  gflops (total): 4343.42
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4343.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15665
  gflops (eval):  5857.73
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15665,5857.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.543
  maximum absolute entry in einsum_ir solution: 494.542
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130505
  time (eval):    0.179149
  gflops (eval):  5122.07
  gflops (total): 4774.28
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130505,0.179149,5122.07,4774.28

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211381
  gflops (total): 4341.03
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4341.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156544
  gflops (eval):  5861.69
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156544,5861.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.162
  maximum absolute entry in einsum_ir solution: 477.162
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131045
  time (eval):    0.17965
  gflops (eval):  5107.77
  gflops (total): 4760.51
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131045,0.17965,5107.77,4760.51

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211427
  gflops (total): 4340.09
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4340.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156947
  gflops (eval):  5846.65
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156947,5846.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.56
  maximum absolute entry in einsum_ir solution: 488.56
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131063
  time (eval):    0.17952
  gflops (eval):  5111.49
  gflops (total): 4763.7
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131063,0.17952,5111.49,4763.7

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211087
  gflops (total): 4347.09
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4347.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156606
  gflops (eval):  5859.37
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156606,5859.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.269
  maximum absolute entry in einsum_ir solution: 509.269
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131452
  time (eval):    0.179471
  gflops (eval):  5112.86
  gflops (total): 4763.93
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131452,0.179471,5112.86,4763.93

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210565
  gflops (total): 4357.85
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4357.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.155394
  gflops (eval):  5905.05
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.155394,5905.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.517
  maximum absolute entry in einsum_ir solution: 514.516
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132089
  time (eval):    0.179912
  gflops (eval):  5100.33
  gflops (total): 4751.48
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132089,0.179912,5100.33,4751.48

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211062
  gflops (total): 4347.6
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4347.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15651
  gflops (eval):  5862.96
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15651,5862.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      527.111
  maximum absolute entry in einsum_ir solution: 527.109
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130786
  time (eval):    0.17958
  gflops (eval):  5109.78
  gflops (total): 4762.9
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130786,0.17958,5109.78,4762.9

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210468
  gflops (total): 4359.86
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4359.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156963
  gflops (eval):  5846.04
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156963,5846.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.54
  maximum absolute entry in einsum_ir solution: 473.539
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0133441
  time (eval):    0.179598
  gflops (eval):  5109.26
  gflops (total): 4755.89
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0133441,0.179598,5109.26,4755.89

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211152
  gflops (total): 4345.75
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4345.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156822
  gflops (eval):  5851.3
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156822,5851.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      463.141
  maximum absolute entry in einsum_ir solution: 463.141
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130195
  time (eval):    0.179792
  gflops (eval):  5103.73
  gflops (total): 4759.1
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130195,0.179792,5103.73,4759.1

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210284
  gflops (total): 4363.67
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4363.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157701
  gflops (eval):  5818.66
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157701,5818.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.535
  maximum absolute entry in einsum_ir solution: 475.534
  maximum element-wise difference:              0.00253296
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130687
  time (eval):    0.179507
  gflops (eval):  5111.84
  gflops (total): 4764.94
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130687,0.179507,5111.84,4764.94

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210696
  gflops (total): 4355.14
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4355.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157225
  gflops (eval):  5836.28
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157225,5836.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      457.437
  maximum absolute entry in einsum_ir solution: 457.436
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132825
  time (eval):    0.179829
  gflops (eval):  5102.68
  gflops (total): 4751.71
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132825,0.179829,5102.68,4751.71

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211531
  gflops (total): 4337.96
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4337.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156875
  gflops (eval):  5849.33
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156875,5849.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.418
  maximum absolute entry in einsum_ir solution: 468.417
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131669
  time (eval):    0.179467
  gflops (eval):  5112.97
  gflops (total): 4763.49
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131669,0.179467,5112.97,4763.49

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.213087
  gflops (total): 4306.28
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4306.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156669
  gflops (eval):  5857.01
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156669,5857.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.049
  maximum absolute entry in einsum_ir solution: 468.05
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132477
  time (eval):    0.179476
  gflops (eval):  5112.74
  gflops (total): 4761.29
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132477,0.179476,5112.74,4761.29

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211016
  gflops (total): 4348.55
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4348.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156719
  gflops (eval):  5855.15
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156719,5855.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.817
  maximum absolute entry in einsum_ir solution: 464.816
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131816
  time (eval):    0.180571
  gflops (eval):  5081.73
  gflops (total): 4736.01
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131816,0.180571,5081.73,4736.01

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212784
  gflops (total): 4312.41
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4312.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156455
  gflops (eval):  5865.03
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156455,5865.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.078
  maximum absolute entry in einsum_ir solution: 493.078
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131043
  time (eval):    0.1794
  gflops (eval):  5114.89
  gflops (total): 4766.7
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131043,0.1794,5114.89,4766.7

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210589
  gflops (total): 4357.35
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4357.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157339
  gflops (eval):  5832.06
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157339,5832.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      505.276
  maximum absolute entry in einsum_ir solution: 505.276
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0133634
  time (eval):    0.179455
  gflops (eval):  5113.33
  gflops (total): 4758.94
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0133634,0.179455,5113.33,4758.94

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.21228
  gflops (total): 4322.65
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4322.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156847
  gflops (eval):  5850.37
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156847,5850.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.076
  maximum absolute entry in einsum_ir solution: 477.076
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130383
  time (eval):    0.179399
  gflops (eval):  5114.91
  gflops (total): 4768.36
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130383,0.179399,5114.91,4768.36

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211038
  gflops (total): 4348.08
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4348.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157174
  gflops (eval):  5838.18
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157174,5838.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.787
  maximum absolute entry in einsum_ir solution: 468.787
  maximum element-wise difference:              0.00274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130045
  time (eval):    0.179549
  gflops (eval):  5110.66
  gflops (total): 4765.5
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130045,0.179549,5110.66,4765.5

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211009
  gflops (total): 4348.69
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4348.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156402
  gflops (eval):  5867
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156402,5867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.951
  maximum absolute entry in einsum_ir solution: 491.951
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.013097
  time (eval):    0.179617
  gflops (eval):  5108.71
  gflops (total): 4761.52
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.013097,0.179617,5108.71,4761.52

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210941
  gflops (total): 4350.09
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4350.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156443
  gflops (eval):  5865.46
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156443,5865.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.761
  maximum absolute entry in einsum_ir solution: 495.761
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131444
  time (eval):    0.179286
  gflops (eval):  5118.14
  gflops (total): 4768.53
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131444,0.179286,5118.14,4768.53

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211322
  gflops (total): 4342.24
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4342.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156892
  gflops (eval):  5848.68
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156892,5848.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.229
  maximum absolute entry in einsum_ir solution: 473.229
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131805
  time (eval):    0.179559
  gflops (eval):  5110.35
  gflops (total): 4760.88
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131805,0.179559,5110.35,4760.88

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210911
  gflops (total): 4350.71
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4350.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157059
  gflops (eval):  5842.46
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157059,5842.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.134
  maximum absolute entry in einsum_ir solution: 467.134
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131297
  time (eval):    0.179905
  gflops (eval):  5100.55
  gflops (total): 4753.62
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131297,0.179905,5100.55,4753.62

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.209883
  gflops (total): 4372.02
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4372.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15685
  gflops (eval):  5850.24
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15685,5850.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.306
  maximum absolute entry in einsum_ir solution: 474.305
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132566
  time (eval):    0.179422
  gflops (eval):  5114.28
  gflops (total): 4762.41
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132566,0.179422,5114.28,4762.41

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210477
  gflops (total): 4359.68
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4359.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156461
  gflops (eval):  5864.81
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156461,5864.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.883
  maximum absolute entry in einsum_ir solution: 466.884
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131924
  time (eval):    0.179522
  gflops (eval):  5111.42
  gflops (total): 4761.51
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131924,0.179522,5111.42,4761.51

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211756
  gflops (total): 4333.34
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4333.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.155762
  gflops (eval):  5891.11
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.155762,5891.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      449.555
  maximum absolute entry in einsum_ir solution: 449.555
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0133167
  time (eval):    0.179536
  gflops (eval):  5111.03
  gflops (total): 4758.1
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0133167,0.179536,5111.03,4758.1

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211172
  gflops (total): 4345.33
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4345.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156925
  gflops (eval):  5847.46
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156925,5847.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      462.967
  maximum absolute entry in einsum_ir solution: 462.967
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.01293
  time (eval):    0.179727
  gflops (eval):  5105.6
  gflops (total): 4762.94
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.01293,0.179727,5105.6,4762.94

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210872
  gflops (total): 4351.51
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4351.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15694
  gflops (eval):  5846.88
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15694,5846.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      458.72
  maximum absolute entry in einsum_ir solution: 458.72
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0129168
  time (eval):    0.179542
  gflops (eval):  5110.84
  gflops (total): 4767.83
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0129168,0.179542,5110.84,4767.83

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.209833
  gflops (total): 4373.05
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4373.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156065
  gflops (eval):  5879.69
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156065,5879.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.216
  maximum absolute entry in einsum_ir solution: 491.216
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131831
  time (eval):    0.179239
  gflops (eval):  5119.49
  gflops (total): 4768.75
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131831,0.179239,5119.49,4768.75

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.209799
  gflops (total): 4373.77
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4373.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156906
  gflops (eval):  5848.15
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156906,5848.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.366
  maximum absolute entry in einsum_ir solution: 488.367
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131958
  time (eval):    0.179944
  gflops (eval):  5099.43
  gflops (total): 4751.03
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131958,0.179944,5099.43,4751.03

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.208937
  gflops (total): 4391.81
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4391.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15747
  gflops (eval):  5827.21
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15747,5827.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.282
  maximum absolute entry in einsum_ir solution: 493.281
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132703
  time (eval):    0.179638
  gflops (eval):  5108.11
  gflops (total): 4756.72
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132703,0.179638,5108.11,4756.72

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210219
  gflops (total): 4365.04
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4365.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15664
  gflops (eval):  5858.08
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15664,5858.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      453.077
  maximum absolute entry in einsum_ir solution: 453.076
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131543
  time (eval):    0.179646
  gflops (eval):  5107.9
  gflops (total): 4759.4
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131543,0.179646,5107.9,4759.4

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212535
  gflops (total): 4317.45
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4317.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156608
  gflops (eval):  5859.3
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156608,5859.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.081
  maximum absolute entry in einsum_ir solution: 484.081
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130084
  time (eval):    0.179631
  gflops (eval):  5108.32
  gflops (total): 4763.37
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130084,0.179631,5108.32,4763.37

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212193
  gflops (total): 4324.43
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4324.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157034
  gflops (eval):  5843.38
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157034,5843.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.383
  maximum absolute entry in einsum_ir solution: 498.384
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132762
  time (eval):    0.179637
  gflops (eval):  5108.14
  gflops (total): 4756.6
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132762,0.179637,5108.14,4756.6

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.20982
  gflops (total): 4373.33
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4373.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156927
  gflops (eval):  5847.39
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156927,5847.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.718
  maximum absolute entry in einsum_ir solution: 494.719
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131189
  time (eval):    0.179744
  gflops (eval):  5105.11
  gflops (total): 4757.85
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131189,0.179744,5105.11,4757.85

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211225
  gflops (total): 4344.24
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4344.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157476
  gflops (eval):  5826.99
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157476,5826.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.602
  maximum absolute entry in einsum_ir solution: 477.602
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131926
  time (eval):    0.180083
  gflops (eval):  5095.5
  gflops (total): 4747.69
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131926,0.180083,5095.5,4747.69

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.208685
  gflops (total): 4397.12
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4397.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157542
  gflops (eval):  5824.54
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157542,5824.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.503
  maximum absolute entry in einsum_ir solution: 476.503
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132504
  time (eval):    0.179564
  gflops (eval):  5110.21
  gflops (total): 4759.04
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132504,0.179564,5110.21,4759.04

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211852
  gflops (total): 4331.39
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4331.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157405
  gflops (eval):  5829.63
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157405,5829.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.42
  maximum absolute entry in einsum_ir solution: 477.42
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131752
  time (eval):    0.179071
  gflops (eval):  5124.29
  gflops (total): 4773.1
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131752,0.179071,5124.29,4773.1

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.21018
  gflops (total): 4365.83
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4365.83

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156531
  gflops (eval):  5862.18
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156531,5862.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.284
  maximum absolute entry in einsum_ir solution: 497.283
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130662
  time (eval):    0.179637
  gflops (eval):  5108.15
  gflops (total): 4761.8
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130662,0.179637,5108.15,4761.8

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211663
  gflops (total): 4335.26
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4335.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.155192
  gflops (eval):  5912.76
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.155192,5912.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      549.309
  maximum absolute entry in einsum_ir solution: 549.309
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130968
  time (eval):    0.179878
  gflops (eval):  5101.3
  gflops (total): 4755.09
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130968,0.179878,5101.3,4755.09

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211281
  gflops (total): 4343.08
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4343.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156923
  gflops (eval):  5847.52
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156923,5847.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.27
  maximum absolute entry in einsum_ir solution: 502.271
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.012985
  time (eval):    0.179345
  gflops (eval):  5116.45
  gflops (total): 4771.02
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.012985,0.179345,5116.45,4771.02

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211822
  gflops (total): 4332
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156739
  gflops (eval):  5854.4
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156739,5854.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.115
  maximum absolute entry in einsum_ir solution: 485.115
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.013117
  time (eval):    0.179325
  gflops (eval):  5117.04
  gflops (total): 4768.26
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.013117,0.179325,5117.04,4768.26

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210618
  gflops (total): 4356.75
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4356.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157462
  gflops (eval):  5827.49
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157462,5827.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.813
  maximum absolute entry in einsum_ir solution: 461.813
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131171
  time (eval):    0.179502
  gflops (eval):  5111.99
  gflops (total): 4763.87
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131171,0.179502,5111.99,4763.87

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210167
  gflops (total): 4366.11
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4366.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157081
  gflops (eval):  5841.65
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157081,5841.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      448.3
  maximum absolute entry in einsum_ir solution: 448.299
  maximum element-wise difference:              0.00234985
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132436
  time (eval):    0.179065
  gflops (eval):  5124.45
  gflops (total): 4771.55
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132436,0.179065,5124.45,4771.55

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211325
  gflops (total): 4342.19
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4342.19

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156716
  gflops (eval):  5855.25
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156716,5855.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.206
  maximum absolute entry in einsum_ir solution: 508.206
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132157
  time (eval):    0.179752
  gflops (eval):  5104.89
  gflops (total): 4755.27
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132157,0.179752,5104.89,4755.27

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212724
  gflops (total): 4313.63
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4313.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156897
  gflops (eval):  5848.48
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156897,5848.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.885
  maximum absolute entry in einsum_ir solution: 479.885
  maximum element-wise difference:              0.00190735
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0129421
  time (eval):    0.179373
  gflops (eval):  5115.66
  gflops (total): 4771.4
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0129421,0.179373,5115.66,4771.4

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211711
  gflops (total): 4334.27
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4334.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156451
  gflops (eval):  5865.18
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156451,5865.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.351
  maximum absolute entry in einsum_ir solution: 475.351
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131497
  time (eval):    0.179648
  gflops (eval):  5107.83
  gflops (total): 4759.45
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131497,0.179648,5107.83,4759.45

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211151
  gflops (total): 4345.75
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4345.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157053
  gflops (eval):  5842.7
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157053,5842.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.798
  maximum absolute entry in einsum_ir solution: 473.798
  maximum element-wise difference:              0.00196838
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132635
  time (eval):    0.17926
  gflops (eval):  5118.9
  gflops (total): 4766.24
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132635,0.17926,5118.9,4766.24

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.213203
  gflops (total): 4303.93
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4303.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156908
  gflops (eval):  5848.09
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156908,5848.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.093
  maximum absolute entry in einsum_ir solution: 465.093
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0133523
  time (eval):    0.179628
  gflops (eval):  5108.4
  gflops (total): 4754.95
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0133523,0.179628,5108.4,4754.95

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212294
  gflops (total): 4322.35
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4322.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156895
  gflops (eval):  5848.58
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156895,5848.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.72
  maximum absolute entry in einsum_ir solution: 503.72
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130396
  time (eval):    0.179664
  gflops (eval):  5107.36
  gflops (total): 4761.77
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130396,0.179664,5107.36,4761.77

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210667
  gflops (total): 4355.73
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4355.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.1571
  gflops (eval):  5840.93
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.1571,5840.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.469
  maximum absolute entry in einsum_ir solution: 481.469
  maximum element-wise difference:              0.0022583
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0133488
  time (eval):    0.179454
  gflops (eval):  5113.35
  gflops (total): 4759.33
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0133488,0.179454,5113.35,4759.33

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210678
  gflops (total): 4355.51
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4355.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157169
  gflops (eval):  5838.36
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157169,5838.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      463.442
  maximum absolute entry in einsum_ir solution: 463.441
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130178
  time (eval):    0.179609
  gflops (eval):  5108.94
  gflops (total): 4763.67
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130178,0.179609,5108.94,4763.67

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.209218
  gflops (total): 4385.9
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4385.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.155976
  gflops (eval):  5883.02
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.155976,5883.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.938
  maximum absolute entry in einsum_ir solution: 502.939
  maximum element-wise difference:              0.00236511
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131274
  time (eval):    0.179618
  gflops (eval):  5108.68
  gflops (total): 4760.75
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131274,0.179618,5108.68,4760.75

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210242
  gflops (total): 4364.55
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4364.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15561
  gflops (eval):  5896.86
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15561,5896.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.703
  maximum absolute entry in einsum_ir solution: 491.702
  maximum element-wise difference:              0.00218201
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.013395
  time (eval):    0.179739
  gflops (eval):  5105.25
  gflops (total): 4751.17
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.013395,0.179739,5105.25,4751.17

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210273
  gflops (total): 4363.9
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4363.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156721
  gflops (eval):  5855.06
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156721,5855.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      522.431
  maximum absolute entry in einsum_ir solution: 522.431
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130934
  time (eval):    0.179489
  gflops (eval):  5112.35
  gflops (total): 4764.77
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130934,0.179489,5112.35,4764.77

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210871
  gflops (total): 4351.54
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4351.54

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156887
  gflops (eval):  5848.88
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156887,5848.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.827
  maximum absolute entry in einsum_ir solution: 502.826
  maximum element-wise difference:              0.00192261
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0133593
  time (eval):    0.179448
  gflops (eval):  5113.53
  gflops (total): 4759.22
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0133593,0.179448,5113.53,4759.22

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210099
  gflops (total): 4367.51
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4367.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157333
  gflops (eval):  5832.29
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157333,5832.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      457.625
  maximum absolute entry in einsum_ir solution: 457.624
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131579
  time (eval):    0.179442
  gflops (eval):  5113.68
  gflops (total): 4764.33
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131579,0.179442,5113.68,4764.33

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210523
  gflops (total): 4358.73
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4358.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156985
  gflops (eval):  5845.23
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156985,5845.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.353
  maximum absolute entry in einsum_ir solution: 491.353
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131001
  time (eval):    0.179706
  gflops (eval):  5106.19
  gflops (total): 4759.25
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131001,0.179706,5106.19,4759.25

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211004
  gflops (total): 4348.79
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4348.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156151
  gflops (eval):  5876.45
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156151,5876.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      460.347
  maximum absolute entry in einsum_ir solution: 460.348
  maximum element-wise difference:              0.00186157
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0133932
  time (eval):    0.179586
  gflops (eval):  5109.59
  gflops (total): 4754.97
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0133932,0.179586,5109.59,4754.97

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211595
  gflops (total): 4336.63
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4336.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157042
  gflops (eval):  5843.11
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157042,5843.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.343
  maximum absolute entry in einsum_ir solution: 481.344
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131216
  time (eval):    0.17957
  gflops (eval):  5110.04
  gflops (total): 4762.07
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131216,0.17957,5110.04,4762.07

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.213565
  gflops (total): 4296.64
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4296.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157332
  gflops (eval):  5832.32
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157332,5832.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.097
  maximum absolute entry in einsum_ir solution: 481.097
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130799
  time (eval):    0.179608
  gflops (eval):  5108.98
  gflops (total): 4762.17
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130799,0.179608,5108.98,4762.17

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.21151
  gflops (total): 4338.38
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4338.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157027
  gflops (eval):  5843.65
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157027,5843.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.267
  maximum absolute entry in einsum_ir solution: 498.269
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130806
  time (eval):    0.179609
  gflops (eval):  5108.93
  gflops (total): 4762.11
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130806,0.179609,5108.93,4762.11

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.21127
  gflops (total): 4343.31
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4343.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157538
  gflops (eval):  5824.7
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157538,5824.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.665
  maximum absolute entry in einsum_ir solution: 496.665
  maximum element-wise difference:              0.00228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132215
  time (eval):    0.179265
  gflops (eval):  5118.73
  gflops (total): 4767.14
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132215,0.179265,5118.73,4767.14

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210612
  gflops (total): 4356.88
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4356.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157242
  gflops (eval):  5835.67
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157242,5835.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.349
  maximum absolute entry in einsum_ir solution: 476.348
  maximum element-wise difference:              0.00210571
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130244
  time (eval):    0.179383
  gflops (eval):  5115.37
  gflops (total): 4769.1
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130244,0.179383,5115.37,4769.1

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210849
  gflops (total): 4351.99
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4351.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157222
  gflops (eval):  5836.42
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157222,5836.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.25
  maximum absolute entry in einsum_ir solution: 464.25
  maximum element-wise difference:              0.00216675
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0134293
  time (eval):    0.17987
  gflops (eval):  5101.54
  gflops (total): 4747.11
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0134293,0.17987,5101.54,4747.11

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210429
  gflops (total): 4360.67
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4360.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157162
  gflops (eval):  5838.65
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157162,5838.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      456.6
  maximum absolute entry in einsum_ir solution: 456.6
  maximum element-wise difference:              0.00198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131149
  time (eval):    0.179463
  gflops (eval):  5113.09
  gflops (total): 4764.88
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131149,0.179463,5113.09,4764.88

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210868
  gflops (total): 4351.59
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4351.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156844
  gflops (eval):  5850.46
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156844,5850.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.824
  maximum absolute entry in einsum_ir solution: 465.825
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131361
  time (eval):    0.179594
  gflops (eval):  5109.37
  gflops (total): 4761.12
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131361,0.179594,5109.37,4761.12

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211845
  gflops (total): 4331.53
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4331.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156169
  gflops (eval):  5875.75
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156169,5875.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.69
  maximum absolute entry in einsum_ir solution: 487.691
  maximum element-wise difference:              0.00222778
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.01316
  time (eval):    0.179786
  gflops (eval):  5103.91
  gflops (total): 4755.79
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.01316,0.179786,5103.91,4755.79

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212016
  gflops (total): 4328.03
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4328.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156936
  gflops (eval):  5847.05
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156936,5847.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.446
  maximum absolute entry in einsum_ir solution: 502.445
  maximum element-wise difference:              0.00196838
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0130686
  time (eval):    0.179529
  gflops (eval):  5111.21
  gflops (total): 4764.39
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0130686,0.179529,5111.21,4764.39

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211421
  gflops (total): 4340.21
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4340.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157075
  gflops (eval):  5841.88
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157075,5841.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.267
  maximum absolute entry in einsum_ir solution: 493.267
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0128891
  time (eval):    0.179346
  gflops (eval):  5116.44
  gflops (total): 4773.39
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0128891,0.179346,5116.44,4773.39

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211477
  gflops (total): 4339.05
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4339.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157211
  gflops (eval):  5836.82
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157211,5836.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.474
  maximum absolute entry in einsum_ir solution: 495.474
  maximum element-wise difference:              0.00204468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131333
  time (eval):    0.179551
  gflops (eval):  5110.6
  gflops (total): 4762.26
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131333,0.179551,5110.6,4762.26

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210754
  gflops (total): 4353.95
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4353.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157029
  gflops (eval):  5843.58
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157029,5843.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      463.29
  maximum absolute entry in einsum_ir solution: 463.291
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132004
  time (eval):    0.179295
  gflops (eval):  5117.89
  gflops (total): 4766.93
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132004,0.179295,5117.89,4766.93

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210391
  gflops (total): 4361.46
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4361.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15536
  gflops (eval):  5906.37
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15536,5906.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.963
  maximum absolute entry in einsum_ir solution: 475.963
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131153
  time (eval):    0.179517
  gflops (eval):  5111.55
  gflops (total): 4763.53
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131153,0.179517,5111.55,4763.53

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211974
  gflops (total): 4328.88
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4328.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156764
  gflops (eval):  5853.44
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156764,5853.44,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      517.548
  maximum absolute entry in einsum_ir solution: 517.547
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.013158
  time (eval):    0.179457
  gflops (eval):  5113.26
  gflops (total): 4763.96
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.013158,0.179457,5113.26,4763.96

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210774
  gflops (total): 4353.53
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4353.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156606
  gflops (eval):  5859.35
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156606,5859.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.98
  maximum absolute entry in einsum_ir solution: 467.98
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131603
  time (eval):    0.179244
  gflops (eval):  5119.35
  gflops (total): 4769.19
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131603,0.179244,5119.35,4769.19

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212855
  gflops (total): 4310.97
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4310.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157007
  gflops (eval):  5844.38
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157007,5844.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.017
  maximum absolute entry in einsum_ir solution: 471.017
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0135187
  time (eval):    0.179678
  gflops (eval):  5106.97
  gflops (total): 4749.62
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0135187,0.179678,5106.97,4749.62

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210548
  gflops (total): 4358.2
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4358.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157584
  gflops (eval):  5823.01
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157584,5823.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.689
  maximum absolute entry in einsum_ir solution: 486.689
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.013056
  time (eval):    0.179525
  gflops (eval):  5111.34
  gflops (total): 4764.82
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.013056,0.179525,5111.34,4764.82

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210468
  gflops (total): 4359.87
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4359.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156812
  gflops (eval):  5851.68
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156812,5851.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.65
  maximum absolute entry in einsum_ir solution: 485.65
  maximum element-wise difference:              0.00201416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0133234
  time (eval):    0.179362
  gflops (eval):  5115.96
  gflops (total): 4762.22
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0133234,0.179362,5115.96,4762.22

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210529
  gflops (total): 4358.59
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4358.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156836
  gflops (eval):  5850.75
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156836,5850.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.918
  maximum absolute entry in einsum_ir solution: 491.917
  maximum element-wise difference:              0.00205994
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0131092
  time (eval):    0.17965
  gflops (eval):  5107.79
  gflops (total): 4760.41
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0131092,0.17965,5107.79,4760.41

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210087
  gflops (total): 4367.78
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4367.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156798
  gflops (eval):  5852.2
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156798,5852.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.614
  maximum absolute entry in einsum_ir solution: 477.614
  maximum element-wise difference:              0.00213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0132107
  time (eval):    0.179647
  gflops (eval):  5107.85
  gflops (total): 4757.97
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0132107,0.179647,5107.85,4757.97

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212827
  gflops (total): 4311.55
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4311.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157251
  gflops (eval):  5835.31
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157251,5835.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.753
  maximum absolute entry in einsum_ir solution: 493.752
  maximum element-wise difference:              0.00189209
warning: einsum_ir solution is not close to at:einsum!
