parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136358
  time (eval):    0.0126993
  gflops (eval):  400.662
  gflops (total): 193.207
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136358,0.0126993,400.662,193.207

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0619026
  gflops (total): 82.1956
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,82.1956

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0277469
  gflops (eval):  183.376
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0277469,183.376,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6498
  maximum absolute entry in einsum_ir solution: 40.6498
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136521
  time (eval):    0.0129214
  gflops (eval):  393.773
  gflops (total): 191.473
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136521,0.0129214,393.773,191.473

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649621
  gflops (total): 78.3244
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.3244

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265118
  gflops (eval):  191.919
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0265118,191.919,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0179
  maximum absolute entry in einsum_ir solution: 41.0179
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136957
  time (eval):    0.0130308
  gflops (eval):  390.468
  gflops (total): 190.377
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136957,0.0130308,390.468,190.377

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655614
  gflops (total): 77.6085
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.6085

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271948
  gflops (eval):  187.099
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271948,187.099,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.4429
  maximum absolute entry in einsum_ir solution: 43.4429
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135817
  time (eval):    0.0127341
  gflops (eval):  399.566
  gflops (total): 193.348
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135817,0.0127341,399.566,193.348

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0654864
  gflops (total): 77.6973
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.6973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267919
  gflops (eval):  189.912
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0267919,189.912,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4077
  maximum absolute entry in einsum_ir solution: 38.4077
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137818
  time (eval):    0.0124505
  gflops (eval):  408.668
  gflops (total): 193.964
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137818,0.0124505,408.668,193.964

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.06557
  gflops (total): 77.5982
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.5982

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0262966
  gflops (eval):  193.49
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0262966,193.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6355
  maximum absolute entry in einsum_ir solution: 38.6355
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134788
  time (eval):    0.0126336
  gflops (eval):  402.746
  gflops (total): 194.855
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134788,0.0126336,402.746,194.855

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0661956
  gflops (total): 76.8649
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.8649

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271418
  gflops (eval):  187.464
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271418,187.464,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4741
  maximum absolute entry in einsum_ir solution: 37.4741
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136451
  time (eval):    0.0131302
  gflops (eval):  387.514
  gflops (total): 190.031
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136451,0.0131302,387.514,190.031

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647221
  gflops (total): 78.6149
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.6149

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270518
  gflops (eval):  188.088
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270518,188.088,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1356
  maximum absolute entry in einsum_ir solution: 39.1356
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135458
  time (eval):    0.0133451
  gflops (eval):  381.271
  gflops (total): 189.213
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135458,0.0133451,381.271,189.213

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649975
  gflops (total): 78.2817
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.2817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0280573
  gflops (eval):  181.347
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0280573,181.347,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0287
  maximum absolute entry in einsum_ir solution: 36.0287
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134838
  time (eval):    0.0127391
  gflops (eval):  399.409
  gflops (total): 194.033
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134838,0.0127391,399.409,194.033

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0639879
  gflops (total): 79.5169
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.5169

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270572
  gflops (eval):  188.05
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270572,188.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9584
  maximum absolute entry in einsum_ir solution: 36.9584
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.014207
  time (eval):    0.0131189
  gflops (eval):  387.847
  gflops (total): 186.202
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.014207,0.0131189,387.847,186.202

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0661649
  gflops (total): 76.9006
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.9006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275614
  gflops (eval):  184.61
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0275614,184.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8316
  maximum absolute entry in einsum_ir solution: 37.8316
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.01364
  time (eval):    0.0129388
  gflops (eval):  393.244
  gflops (total): 191.435
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.01364,0.0129388,393.244,191.435

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652273
  gflops (total): 78.006
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265954
  gflops (eval):  191.316
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0265954,191.316,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.415
  maximum absolute entry in einsum_ir solution: 41.415
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137794
  time (eval):    0.0127471
  gflops (eval):  399.16
  gflops (total): 191.813
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137794,0.0127471,399.16,191.813

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647781
  gflops (total): 78.5468
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.5468

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0276259
  gflops (eval):  184.179
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0276259,184.179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.5424
  maximum absolute entry in einsum_ir solution: 39.5424
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136829
  time (eval):    0.0125556
  gflops (eval):  405.246
  gflops (total): 193.917
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136829,0.0125556,405.246,193.917

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0648407
  gflops (total): 78.4711
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.4711

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274138
  gflops (eval):  185.604
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0274138,185.604,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.556
  maximum absolute entry in einsum_ir solution: 37.556
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0120929
  time (eval):    0.0125732
  gflops (eval):  404.678
  gflops (total): 206.279
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0120929,0.0125732,404.678,206.279

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0669316
  gflops (total): 76.0197
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.0197

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0276564
  gflops (eval):  183.976
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0276564,183.976,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.7731
  maximum absolute entry in einsum_ir solution: 37.7731
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136135
  time (eval):    0.012581
  gflops (eval):  404.427
  gflops (total): 194.243
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136135,0.012581,404.427,194.243

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647868
  gflops (total): 78.5363
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.5363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270491
  gflops (eval):  188.107
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270491,188.107,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.4764
  maximum absolute entry in einsum_ir solution: 41.4764
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136009
  time (eval):    0.0124266
  gflops (eval):  409.452
  gflops (total): 195.49
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136009,0.0124266,409.452,195.49

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0636009
  gflops (total): 80.0007
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,80.0007

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273053
  gflops (eval):  186.342
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0273053,186.342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.9949
  maximum absolute entry in einsum_ir solution: 40.9949
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136197
  time (eval):    0.0125164
  gflops (eval):  406.515
  gflops (total): 194.677
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136197,0.0125164,406.515,194.677

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0659512
  gflops (total): 77.1497
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.1497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270208
  gflops (eval):  188.304
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270208,188.304,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8033
  maximum absolute entry in einsum_ir solution: 38.8033
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136167
  time (eval):    0.0132542
  gflops (eval):  383.888
  gflops (total): 189.354
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136167,0.0132542,383.888,189.354

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0646512
  gflops (total): 78.701
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265227
  gflops (eval):  191.84
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0265227,191.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6314
  maximum absolute entry in einsum_ir solution: 38.6314
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0139079
  time (eval):    0.0132724
  gflops (eval):  383.359
  gflops (total): 187.199
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0139079,0.0132724,383.359,187.199

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655373
  gflops (total): 77.637
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.637

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274677
  gflops (eval):  185.24
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0274677,185.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.3551
  maximum absolute entry in einsum_ir solution: 41.3551
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137868
  time (eval):    0.0131127
  gflops (eval):  388.03
  gflops (total): 189.153
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137868,0.0131127,388.03,189.153

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0650856
  gflops (total): 78.1758
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.1758

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269942
  gflops (eval):  188.49
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0269942,188.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4566
  maximum absolute entry in einsum_ir solution: 39.4566
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135968
  time (eval):    0.0132311
  gflops (eval):  384.556
  gflops (total): 189.658
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135968,0.0132311,384.556,189.658

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0651966
  gflops (total): 78.0426
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.0426

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270233
  gflops (eval):  188.287
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270233,188.287,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.2034
  maximum absolute entry in einsum_ir solution: 40.2034
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137125
  time (eval):    0.0128118
  gflops (eval):  397.142
  gflops (total): 191.828
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137125,0.0128118,397.142,191.828

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0644016
  gflops (total): 79.006
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275721
  gflops (eval):  184.538
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0275721,184.538,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4959
  maximum absolute entry in einsum_ir solution: 35.4959
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134461
  time (eval):    0.0129136
  gflops (eval):  394.011
  gflops (total): 193.026
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134461,0.0129136,394.011,193.026

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657268
  gflops (total): 77.4131
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.4131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275962
  gflops (eval):  184.377
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0275962,184.377,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9804
  maximum absolute entry in einsum_ir solution: 39.9804
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134789
  time (eval):    0.0132914
  gflops (eval):  382.812
  gflops (total): 190.065
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134789,0.0132914,382.812,190.065

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0638694
  gflops (total): 79.6644
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.6644

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270075
  gflops (eval):  188.397
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270075,188.397,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.9857
  maximum absolute entry in einsum_ir solution: 38.9857
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134142
  time (eval):    0.0130233
  gflops (eval):  390.692
  gflops (total): 192.458
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134142,0.0130233,390.692,192.458

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656867
  gflops (total): 77.4603
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.4603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270458
  gflops (eval):  188.13
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270458,188.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8538
  maximum absolute entry in einsum_ir solution: 37.8538
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135691
  time (eval):    0.0133602
  gflops (eval):  380.841
  gflops (total): 188.943
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135691,0.0133602,380.841,188.943

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0648121
  gflops (total): 78.5056
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.5056

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272141
  gflops (eval):  186.966
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272141,186.966,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3425
  maximum absolute entry in einsum_ir solution: 36.3425
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.01344
  time (eval):    0.0128791
  gflops (eval):  395.067
  gflops (total): 193.324
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.01344,0.0128791,395.067,193.324

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657924
  gflops (total): 77.3359
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.3359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0276221
  gflops (eval):  184.204
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0276221,184.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2068
  maximum absolute entry in einsum_ir solution: 38.2068
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135428
  time (eval):    0.0124458
  gflops (eval):  408.821
  gflops (total): 195.783
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135428,0.0124458,408.821,195.783

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0645519
  gflops (total): 78.8221
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.8221

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270482
  gflops (eval):  188.113
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270482,188.113,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3916
  maximum absolute entry in einsum_ir solution: 38.3916
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137724
  time (eval):    0.0132408
  gflops (eval):  384.275
  gflops (total): 188.357
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137724,0.0132408,384.275,188.357

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0662188
  gflops (total): 76.8379
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.8379

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265399
  gflops (eval):  191.716
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0265399,191.716,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.5692
  maximum absolute entry in einsum_ir solution: 43.5692
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134911
  time (eval):    0.0123865
  gflops (eval):  410.778
  gflops (total): 196.622
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134911,0.0123865,410.778,196.622

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657979
  gflops (total): 77.3295
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.3295

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272674
  gflops (eval):  186.601
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272674,186.601,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8304
  maximum absolute entry in einsum_ir solution: 37.8304
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0140585
  time (eval):    0.0126957
  gflops (eval):  400.775
  gflops (total): 190.18
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0140585,0.0126957,400.775,190.18

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.064803
  gflops (total): 78.5167
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.5167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268309
  gflops (eval):  189.636
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0268309,189.636,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.7536
  maximum absolute entry in einsum_ir solution: 37.7536
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136083
  time (eval):    0.0128462
  gflops (eval):  396.08
  gflops (total): 192.335
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136083,0.0128462,396.08,192.335

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.064229
  gflops (total): 79.2183
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.2183

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0263998
  gflops (eval):  192.733
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0263998,192.733,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4456
  maximum absolute entry in einsum_ir solution: 36.4456
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136902
  time (eval):    0.0125272
  gflops (eval):  406.165
  gflops (total): 194.074
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136902,0.0125272,406.165,194.074

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657073
  gflops (total): 77.4361
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.4361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.026606
  gflops (eval):  191.24
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.026606,191.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5452
  maximum absolute entry in einsum_ir solution: 36.5452
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136603
  time (eval):    0.0133669
  gflops (eval):  380.65
  gflops (total): 188.259
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136603,0.0133669,380.65,188.259

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649643
  gflops (total): 78.3217
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.3217

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267497
  gflops (eval):  190.212
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0267497,190.212,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.933
  maximum absolute entry in einsum_ir solution: 37.933
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013678
  time (eval):    0.0132152
  gflops (eval):  385.02
  gflops (total): 189.197
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.013678,0.0132152,385.02,189.197

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065051
  gflops (total): 78.2174
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.2174

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271636
  gflops (eval):  187.314
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271636,187.314,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.724
  maximum absolute entry in einsum_ir solution: 36.724
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0139661
  time (eval):    0.0124475
  gflops (eval):  408.766
  gflops (total): 192.633
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0139661,0.0124475,408.766,192.633

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0648894
  gflops (total): 78.4121
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.4121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269192
  gflops (eval):  189.014
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0269192,189.014,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.3623
  maximum absolute entry in einsum_ir solution: 40.3623
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134615
  time (eval):    0.0132692
  gflops (eval):  383.453
  gflops (total): 190.347
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134615,0.0132692,383.453,190.347

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647781
  gflops (total): 78.5469
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.5469

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0266867
  gflops (eval):  190.661
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0266867,190.661,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.6539
  maximum absolute entry in einsum_ir solution: 43.6539
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133057
  time (eval):    0.0130046
  gflops (eval):  391.255
  gflops (total): 193.389
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0133057,0.0130046,391.255,193.389

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0642447
  gflops (total): 79.199
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.199

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268665
  gflops (eval):  189.385
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0268665,189.385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.369
  maximum absolute entry in einsum_ir solution: 37.369
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133817
  time (eval):    0.0131302
  gflops (eval):  387.511
  gflops (total): 191.918
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0133817,0.0131302,387.511,191.918

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0650638
  gflops (total): 78.202
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.202

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274481
  gflops (eval):  185.372
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0274481,185.372,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.242
  maximum absolute entry in einsum_ir solution: 36.242
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135778
  time (eval):    0.0124829
  gflops (eval):  407.608
  gflops (total): 195.241
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135778,0.0124829,407.608,195.241

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0633991
  gflops (total): 80.2553
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,80.2553

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272061
  gflops (eval):  187.021
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272061,187.021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2715
  maximum absolute entry in einsum_ir solution: 39.2715
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136073
  time (eval):    0.0127772
  gflops (eval):  398.218
  gflops (total): 192.845
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136073,0.0127772,398.218,192.845

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663961
  gflops (total): 76.6327
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.6327

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275088
  gflops (eval):  184.963
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0275088,184.963,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.3059
  maximum absolute entry in einsum_ir solution: 40.3059
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.01359
  time (eval):    0.012537
  gflops (eval):  405.847
  gflops (total): 194.745
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.01359,0.012537,405.847,194.745

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.064504
  gflops (total): 78.8806
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.8806

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267589
  gflops (eval):  190.147
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0267589,190.147,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2922
  maximum absolute entry in einsum_ir solution: 36.2922
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136731
  time (eval):    0.0126921
  gflops (eval):  400.887
  gflops (total): 192.986
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136731,0.0126921,400.887,192.986

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656175
  gflops (total): 77.5421
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.5421

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0266378
  gflops (eval):  191.011
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0266378,191.011,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5257
  maximum absolute entry in einsum_ir solution: 38.5257
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136245
  time (eval):    0.0133005
  gflops (eval):  382.551
  gflops (total): 188.974
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136245,0.0133005,382.551,188.974

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0637048
  gflops (total): 79.8702
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.8702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.026833
  gflops (eval):  189.621
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.026833,189.621,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6215
  maximum absolute entry in einsum_ir solution: 36.6215
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136224
  time (eval):    0.0125579
  gflops (eval):  405.173
  gflops (total): 194.349
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136224,0.0125579,405.173,194.349

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065274
  gflops (total): 77.9501
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.9501

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269991
  gflops (eval):  188.455
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0269991,188.455,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0726
  maximum absolute entry in einsum_ir solution: 40.0726
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137754
  time (eval):    0.0132472
  gflops (eval):  384.091
  gflops (total): 188.291
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137754,0.0132472,384.091,188.291

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653549
  gflops (total): 77.8536
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.8536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027048
  gflops (eval):  188.115
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.027048,188.115,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.197
  maximum absolute entry in einsum_ir solution: 39.197
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137585
  time (eval):    0.0124321
  gflops (eval):  409.272
  gflops (total): 194.272
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137585,0.0124321,409.272,194.272

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0645859
  gflops (total): 78.7806
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.7806

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274083
  gflops (eval):  185.641
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0274083,185.641,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3681
  maximum absolute entry in einsum_ir solution: 37.3681
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136171
  time (eval):    0.0134479
  gflops (eval):  378.358
  gflops (total): 187.996
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136171,0.0134479,378.358,187.996

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647016
  gflops (total): 78.6398
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.6398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274143
  gflops (eval):  185.601
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0274143,185.601,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.482
  maximum absolute entry in einsum_ir solution: 37.482
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134595
  time (eval):    0.012761
  gflops (eval):  398.725
  gflops (total): 194.051
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134595,0.012761,398.725,194.051

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065767
  gflops (total): 77.3658
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.3658

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0276862
  gflops (eval):  183.778
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0276862,183.778,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5276
  maximum absolute entry in einsum_ir solution: 35.5276
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136119
  time (eval):    0.0132723
  gflops (eval):  383.364
  gflops (total): 189.26
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136119,0.0132723,383.364,189.26

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663233
  gflops (total): 76.7169
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.7169

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271546
  gflops (eval):  187.376
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271546,187.376,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.9667
  maximum absolute entry in einsum_ir solution: 38.9667
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133512
  time (eval):    0.0130071
  gflops (eval):  391.18
  gflops (total): 193.036
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0133512,0.0130071,391.18,193.036

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653437
  gflops (total): 77.867
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.867

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273617
  gflops (eval):  185.958
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0273617,185.958,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8908
  maximum absolute entry in einsum_ir solution: 38.8908
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135312
  time (eval):    0.0125581
  gflops (eval):  405.165
  gflops (total): 195.027
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135312,0.0125581,405.165,195.027

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652239
  gflops (total): 78.01
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268895
  gflops (eval):  189.223
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0268895,189.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6293
  maximum absolute entry in einsum_ir solution: 37.6293
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136629
  time (eval):    0.0125613
  gflops (eval):  405.064
  gflops (total): 194.024
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136629,0.0125613,405.064,194.024

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0642139
  gflops (total): 79.237
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.237

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0278551
  gflops (eval):  182.664
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0278551,182.664,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.4177
  maximum absolute entry in einsum_ir solution: 41.4177
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135239
  time (eval):    0.0127365
  gflops (eval):  399.491
  gflops (total): 193.757
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135239,0.0127365,399.491,193.757

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0638114
  gflops (total): 79.7368
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.7368

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274998
  gflops (eval):  185.024
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0274998,185.024,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3983
  maximum absolute entry in einsum_ir solution: 37.3983
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138072
  time (eval):    0.0125163
  gflops (eval):  406.519
  gflops (total): 193.292
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0138072,0.0125163,406.519,193.292

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652244
  gflops (total): 78.0094
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.0094

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268477
  gflops (eval):  189.518
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0268477,189.518,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.845
  maximum absolute entry in einsum_ir solution: 38.845
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136331
  time (eval):    0.0133594
  gflops (eval):  380.864
  gflops (total): 188.501
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136331,0.0133594,380.864,188.501

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655796
  gflops (total): 77.5869
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.5869

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267109
  gflops (eval):  190.488
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0267109,190.488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.448
  maximum absolute entry in einsum_ir solution: 39.448
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135107
  time (eval):    0.0127522
  gflops (eval):  399.001
  gflops (total): 193.738
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135107,0.0127522,399.001,193.738

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0650624
  gflops (total): 78.2036
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.2036

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274286
  gflops (eval):  185.504
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0274286,185.504,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7726
  maximum absolute entry in einsum_ir solution: 38.7726
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134328
  time (eval):    0.012885
  gflops (eval):  394.887
  gflops (total): 193.334
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134328,0.012885,394.887,193.334

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0650241
  gflops (total): 78.2498
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.2498

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275731
  gflops (eval):  184.532
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0275731,184.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0959
  maximum absolute entry in einsum_ir solution: 38.0959
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0140027
  time (eval):    0.0125959
  gflops (eval):  403.951
  gflops (total): 191.293
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0140027,0.0125959,403.951,191.293

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0637624
  gflops (total): 79.7981
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.7981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267328
  gflops (eval):  190.332
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0267328,190.332,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4144
  maximum absolute entry in einsum_ir solution: 36.4144
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135322
  time (eval):    0.01344
  gflops (eval):  378.58
  gflops (total): 188.643
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135322,0.01344,378.58,188.643

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0646479
  gflops (total): 78.705
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.705

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272705
  gflops (eval):  186.58
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272705,186.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.4861
  maximum absolute entry in einsum_ir solution: 41.4861
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013345
  time (eval):    0.0125725
  gflops (eval):  404.702
  gflops (total): 196.32
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.013345,0.0125725,404.702,196.32

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065503
  gflops (total): 77.6776
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.6776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027082
  gflops (eval):  187.878
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.027082,187.878,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0008
  maximum absolute entry in einsum_ir solution: 38.0008
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138462
  time (eval):    0.012593
  gflops (eval):  404.045
  gflops (total): 192.446
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0138462,0.012593,404.045,192.446

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0645364
  gflops (total): 78.8411
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.8411

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270954
  gflops (eval):  187.785
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270954,187.785,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.5277
  maximum absolute entry in einsum_ir solution: 40.5277
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136126
  time (eval):    0.0124638
  gflops (eval):  408.232
  gflops (total): 195.124
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136126,0.0124638,408.232,195.124

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065906
  gflops (total): 77.2026
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.2026

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0278435
  gflops (eval):  182.74
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0278435,182.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2575
  maximum absolute entry in einsum_ir solution: 35.2575
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137767
  time (eval):    0.0132915
  gflops (eval):  382.81
  gflops (total): 187.974
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137767,0.0132915,382.81,187.974

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0648202
  gflops (total): 78.4958
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.4958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269061
  gflops (eval):  189.107
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0269061,189.107,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0719
  maximum absolute entry in einsum_ir solution: 37.0719
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134296
  time (eval):    0.0126811
  gflops (eval):  401.236
  gflops (total): 194.867
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134296,0.0126811,401.236,194.867

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0646699
  gflops (total): 78.6783
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.6783

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0264671
  gflops (eval):  192.243
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0264671,192.243,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2787
  maximum absolute entry in einsum_ir solution: 36.2787
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136192
  time (eval):    0.0127461
  gflops (eval):  399.191
  gflops (total): 192.985
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136192,0.0127461,399.191,192.985

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647139
  gflops (total): 78.6248
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.6248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271817
  gflops (eval):  187.189
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271817,187.189,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1435
  maximum absolute entry in einsum_ir solution: 40.1435
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136039
  time (eval):    0.0130422
  gflops (eval):  390.126
  gflops (total): 190.951
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136039,0.0130422,390.126,190.951

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0659018
  gflops (total): 77.2075
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.2075

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0282462
  gflops (eval):  180.134
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0282462,180.134,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9065
  maximum absolute entry in einsum_ir solution: 39.9065
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013845
  time (eval):    0.0130041
  gflops (eval):  391.271
  gflops (total): 189.508
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.013845,0.0130041,391.271,189.508

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649083
  gflops (total): 78.3894
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.3894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027743
  gflops (eval):  183.402
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.027743,183.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2648
  maximum absolute entry in einsum_ir solution: 37.2648
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136738
  time (eval):    0.0129088
  gflops (eval):  394.158
  gflops (total): 191.407
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136738,0.0129088,394.158,191.407

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0643531
  gflops (total): 79.0656
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.0656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0264543
  gflops (eval):  192.336
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0264543,192.336,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.2657
  maximum absolute entry in einsum_ir solution: 41.2657
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138051
  time (eval):    0.0132475
  gflops (eval):  384.081
  gflops (total): 188.082
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0138051,0.0132475,384.081,188.082

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0654554
  gflops (total): 77.7341
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.7341

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270983
  gflops (eval):  187.765
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270983,187.765,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1921
  maximum absolute entry in einsum_ir solution: 40.1921
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135875
  time (eval):    0.0129657
  gflops (eval):  392.43
  gflops (total): 191.62
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135875,0.0129657,392.43,191.62

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657014
  gflops (total): 77.443
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.443

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275731
  gflops (eval):  184.532
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0275731,184.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.924
  maximum absolute entry in einsum_ir solution: 35.924
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135519
  time (eval):    0.0124323
  gflops (eval):  409.264
  gflops (total): 195.815
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135519,0.0124323,409.264,195.815

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0640116
  gflops (total): 79.4875
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.4875

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273856
  gflops (eval):  185.795
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0273856,185.795,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.555
  maximum absolute entry in einsum_ir solution: 42.555
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136361
  time (eval):    0.0127304
  gflops (eval):  399.681
  gflops (total): 192.976
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136361,0.0127304,399.681,192.976

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0659137
  gflops (total): 77.1936
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.1936

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027427
  gflops (eval):  185.515
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.027427,185.515,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4839
  maximum absolute entry in einsum_ir solution: 40.4839
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013622
  time (eval):    0.0130726
  gflops (eval):  389.221
  gflops (total): 190.605
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.013622,0.0130726,389.221,190.605

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649426
  gflops (total): 78.3479
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.3479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269187
  gflops (eval):  189.018
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0269187,189.018,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2281
  maximum absolute entry in einsum_ir solution: 38.2281
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135421
  time (eval):    0.0134807
  gflops (eval):  377.438
  gflops (total): 188.29
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135421,0.0134807,377.438,188.29

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656781
  gflops (total): 77.4706
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.4706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.026886
  gflops (eval):  189.248
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.026886,189.248,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.1421
  maximum absolute entry in einsum_ir solution: 42.1421
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137
  time (eval):    0.0126212
  gflops (eval):  403.139
  gflops (total): 193.309
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137,0.0126212,403.139,193.309

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649447
  gflops (total): 78.3453
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.3453

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0264538
  gflops (eval):  192.339
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0264538,192.339,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4814
  maximum absolute entry in einsum_ir solution: 38.4814
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133839
  time (eval):    0.0129301
  gflops (eval):  393.511
  gflops (total): 193.362
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0133839,0.0129301,393.511,193.362

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656287
  gflops (total): 77.5289
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.5289

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273637
  gflops (eval):  185.944
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0273637,185.944,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4998
  maximum absolute entry in einsum_ir solution: 38.4998
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0132502
  time (eval):    0.0124587
  gflops (eval):  408.399
  gflops (total): 197.913
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0132502,0.0124587,408.399,197.913

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0645713
  gflops (total): 78.7984
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.7984

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273421
  gflops (eval):  186.091
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0273421,186.091,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.3753
  maximum absolute entry in einsum_ir solution: 44.3753
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136341
  time (eval):    0.0133452
  gflops (eval):  381.269
  gflops (total): 188.593
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136341,0.0133452,381.269,188.593

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655034
  gflops (total): 77.6772
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.6772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.027448
  gflops (eval):  185.373
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.027448,185.373,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.2668
  maximum absolute entry in einsum_ir solution: 40.2668
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0139591
  time (eval):    0.0125495
  gflops (eval):  405.445
  gflops (total): 191.943
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0139591,0.0125495,405.445,191.943

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663677
  gflops (total): 76.6656
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.6656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268738
  gflops (eval):  189.334
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0268738,189.334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0367
  maximum absolute entry in einsum_ir solution: 39.0367
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136322
  time (eval):    0.0132065
  gflops (eval):  385.273
  gflops (total): 189.581
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136322,0.0132065,385.273,189.581

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653896
  gflops (total): 77.8124
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.8124

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271492
  gflops (eval):  187.413
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0271492,187.413,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0257
  maximum absolute entry in einsum_ir solution: 37.0257
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135465
  time (eval):    0.0126654
  gflops (eval):  401.735
  gflops (total): 194.115
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135465,0.0126654,401.735,194.115

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0645384
  gflops (total): 78.8386
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.8386

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272354
  gflops (eval):  186.82
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272354,186.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3056
  maximum absolute entry in einsum_ir solution: 37.3056
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136423
  time (eval):    0.0127061
  gflops (eval):  400.447
  gflops (total): 193.109
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136423,0.0127061,400.447,193.109

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0637034
  gflops (total): 79.872
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.02673
  gflops (eval):  190.352
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.02673,190.352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5741
  maximum absolute entry in einsum_ir solution: 36.5741
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136468
  time (eval):    0.0125611
  gflops (eval):  405.069
  gflops (total): 194.145
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136468,0.0125611,405.069,194.145

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0646565
  gflops (total): 78.6946
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.6946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0281854
  gflops (eval):  180.523
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0281854,180.523,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8168
  maximum absolute entry in einsum_ir solution: 38.8168
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135161
  time (eval):    0.0133236
  gflops (eval):  381.888
  gflops (total): 189.575
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135161,0.0133236,381.888,189.575

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0660913
  gflops (total): 76.9862
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,76.9862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267387
  gflops (eval):  190.291
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0267387,190.291,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5021
  maximum absolute entry in einsum_ir solution: 36.5021
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0140599
  time (eval):    0.0127011
  gflops (eval):  400.603
  gflops (total): 190.132
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0140599,0.0127011,400.603,190.132

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065442
  gflops (total): 77.75
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0277762
  gflops (eval):  183.183
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0277762,183.183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.3758
  maximum absolute entry in einsum_ir solution: 41.3758
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137898
  time (eval):    0.0127667
  gflops (eval):  398.546
  gflops (total): 191.596
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0137898,0.0127667,398.546,191.596

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0650628
  gflops (total): 78.2032
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.2032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272097
  gflops (eval):  186.996
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272097,186.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0365
  maximum absolute entry in einsum_ir solution: 37.0365
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135038
  time (eval):    0.0131853
  gflops (eval):  385.894
  gflops (total): 190.644
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135038,0.0131853,385.894,190.644

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649791
  gflops (total): 78.3039
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.3039

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265715
  gflops (eval):  191.488
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0265715,191.488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3509
  maximum absolute entry in einsum_ir solution: 36.3509
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013803
  time (eval):    0.0124457
  gflops (eval):  408.827
  gflops (total): 193.843
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.013803,0.0124457,408.827,193.843

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649228
  gflops (total): 78.3718
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.3718

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267372
  gflops (eval):  190.301
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0267372,190.301,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.1192
  maximum absolute entry in einsum_ir solution: 43.1192
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0132546
  time (eval):    0.0131345
  gflops (eval):  387.386
  gflops (total): 192.812
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0132546,0.0131345,387.386,192.812

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0650035
  gflops (total): 78.2745
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.2745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.026477
  gflops (eval):  192.171
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.026477,192.171,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4244
  maximum absolute entry in einsum_ir solution: 42.4244
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135938
  time (eval):    0.013373
  gflops (eval):  380.478
  gflops (total): 188.681
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135938,0.013373,380.478,188.681

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0651099
  gflops (total): 78.1466
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.1466

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0263411
  gflops (eval):  193.162
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0263411,193.162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4717
  maximum absolute entry in einsum_ir solution: 38.4717
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135783
  time (eval):    0.0133901
  gflops (eval):  379.99
  gflops (total): 188.67
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135783,0.0133901,379.99,188.67

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0638023
  gflops (total): 79.7482
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,79.7482

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274375
  gflops (eval):  185.444
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0274375,185.444,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4176
  maximum absolute entry in einsum_ir solution: 37.4176
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136454
  time (eval):    0.0128861
  gflops (eval):  394.855
  gflops (total): 191.777
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136454,0.0128861,394.855,191.777

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0648291
  gflops (total): 78.4851
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.4851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272052
  gflops (eval):  187.027
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0272052,187.027,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.8814
  maximum absolute entry in einsum_ir solution: 41.8814
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136641
  time (eval):    0.0131699
  gflops (eval):  386.344
  gflops (total): 189.615
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0136641,0.0131699,386.344,189.615

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0632305
  gflops (total): 80.4694
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,80.4694

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0263677
  gflops (eval):  192.967
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0263677,192.967,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1912
  maximum absolute entry in einsum_ir solution: 38.1912
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135323
  time (eval):    0.0125637
  gflops (eval):  404.987
  gflops (total): 194.977
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135323,0.0125637,404.987,194.977

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655451
  gflops (total): 77.6277
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.6277

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269709
  gflops (eval):  188.652
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0269709,188.652,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6534
  maximum absolute entry in einsum_ir solution: 37.6534
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0139049
  time (eval):    0.0130431
  gflops (eval):  390.101
  gflops (total): 188.812
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0139049,0.0130431,390.101,188.812

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.064915
  gflops (total): 78.3812
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.3812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270058
  gflops (eval):  188.408
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0270058,188.408,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.2938
  maximum absolute entry in einsum_ir solution: 43.2938
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134976
  time (eval):    0.0123868
  gflops (eval):  410.768
  gflops (total): 196.571
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0134976,0.0123868,410.768,196.571

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647646
  gflops (total): 78.5633
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.5633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0277184
  gflops (eval):  183.565
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0277184,183.565,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0768
  maximum absolute entry in einsum_ir solution: 40.0768
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013766
  time (eval):    0.0131818
  gflops (eval):  385.997
  gflops (total): 188.814
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.013766,0.0131818,385.997,188.814

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647279
  gflops (total): 78.6078
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,78.6078

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273974
  gflops (eval):  185.715
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0273974,185.715,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4613
  maximum absolute entry in einsum_ir solution: 36.4613
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135773
  time (eval):    0.012508
  gflops (eval):  406.79
  gflops (total): 195.057
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0135773,0.012508,406.79,195.057

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0658951
  gflops (total): 77.2154
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.2154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267624
  gflops (eval):  190.122
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0267624,190.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0534
  maximum absolute entry in einsum_ir solution: 39.0534
  maximum element-wise difference:              0
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013764
  time (eval):    0.0131907
  gflops (eval):  385.736
  gflops (total): 188.766
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.013764,0.0131907,385.736,188.766

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0658097
  gflops (total): 77.3156
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,77.3156

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0266054
  gflops (eval):  191.243
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0266054,191.243,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2378
  maximum absolute entry in einsum_ir solution: 37.2378
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135002
  time (eval):    0.013186
  gflops (eval):  385.872
  gflops (total): 190.665
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135002,0.013186,385.872,190.665

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065268
  gflops (total): 77.9573
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.9573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274187
  gflops (eval):  185.571
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0274187,185.571,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6889
  maximum absolute entry in einsum_ir solution: 38.6889
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134822
  time (eval):    0.0132876
  gflops (eval):  382.922
  gflops (total): 190.069
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134822,0.0132876,382.922,190.069

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649851
  gflops (total): 78.2967
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.2967

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269196
  gflops (eval):  189.012
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269196,189.012,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.982
  maximum absolute entry in einsum_ir solution: 37.982
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135966
  time (eval):    0.012588
  gflops (eval):  404.204
  gflops (total): 194.317
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135966,0.012588,404.204,194.317

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0651003
  gflops (total): 78.1581
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.1581

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273224
  gflops (eval):  186.225
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0273224,186.225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1257
  maximum absolute entry in einsum_ir solution: 39.1257
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0139784
  time (eval):    0.0125026
  gflops (eval):  406.963
  gflops (total): 192.142
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0139784,0.0125026,406.963,192.142

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652698
  gflops (total): 77.9552
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.9552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274156
  gflops (eval):  185.592
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0274156,185.592,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6742
  maximum absolute entry in einsum_ir solution: 37.6742
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137271
  time (eval):    0.0128881
  gflops (eval):  394.791
  gflops (total): 191.173
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137271,0.0128881,394.791,191.173

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0651443
  gflops (total): 78.1053
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.1053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269489
  gflops (eval):  188.806
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269489,188.806,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1592
  maximum absolute entry in einsum_ir solution: 36.1592
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135841
  time (eval):    0.0131983
  gflops (eval):  385.512
  gflops (total): 189.98
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135841,0.0131983,385.512,189.98

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0644661
  gflops (total): 78.927
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.927

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0266805
  gflops (eval):  190.705
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0266805,190.705,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.6259
  maximum absolute entry in einsum_ir solution: 39.6259
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138607
  time (eval):    0.0132827
  gflops (eval):  383.063
  gflops (total): 187.453
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0138607,0.0132827,383.063,187.453

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0643708
  gflops (total): 79.0439
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.0439

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272571
  gflops (eval):  186.671
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272571,186.671,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.6868
  maximum absolute entry in einsum_ir solution: 39.6868
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013533
  time (eval):    0.013186
  gflops (eval):  385.872
  gflops (total): 190.43
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.013533,0.013186,385.872,190.43

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0658654
  gflops (total): 77.2502
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.2502

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267257
  gflops (eval):  190.383
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0267257,190.383,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9008
  maximum absolute entry in einsum_ir solution: 39.9008
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013457
  time (eval):    0.01341
  gflops (eval):  379.427
  gflops (total): 189.382
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.013457,0.01341,379.427,189.382

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656578
  gflops (total): 77.4944
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.4944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270379
  gflops (eval):  188.185
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270379,188.185,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.2148
  maximum absolute entry in einsum_ir solution: 42.2148
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133938
  time (eval):    0.0134942
  gflops (eval):  377.06
  gflops (total): 189.234
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0133938,0.0134942,377.06,189.234

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653197
  gflops (total): 77.8956
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.8956

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274641
  gflops (eval):  185.264
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0274641,185.264,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.7476
  maximum absolute entry in einsum_ir solution: 39.7476
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136106
  time (eval):    0.0133381
  gflops (eval):  381.472
  gflops (total): 188.807
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136106,0.0133381,381.472,188.807

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0654755
  gflops (total): 77.7102
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.7102

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275752
  gflops (eval):  184.518
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0275752,184.518,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0066
  maximum absolute entry in einsum_ir solution: 39.0066
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136164
  time (eval):    0.0124827
  gflops (eval):  407.612
  gflops (total): 194.954
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136164,0.0124827,407.612,194.954

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0648
  gflops (total): 78.5204
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.5204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.026759
  gflops (eval):  190.146
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.026759,190.146,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0066
  maximum absolute entry in einsum_ir solution: 39.0066
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133195
  time (eval):    0.0133637
  gflops (eval):  380.743
  gflops (total): 190.687
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0133195,0.0133637,380.743,190.687

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657885
  gflops (total): 77.3405
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.3405

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271803
  gflops (eval):  187.198
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0271803,187.198,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1737
  maximum absolute entry in einsum_ir solution: 40.1737
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134889
  time (eval):    0.0132094
  gflops (eval):  385.188
  gflops (total): 190.578
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134889,0.0132094,385.188,190.578

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.066605
  gflops (total): 76.3925
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.3925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269782
  gflops (eval):  188.601
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269782,188.601,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8483
  maximum absolute entry in einsum_ir solution: 36.8483
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.014075
  time (eval):    0.0133492
  gflops (eval):  381.154
  gflops (total): 185.534
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.014075,0.0133492,381.154,185.534

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649894
  gflops (total): 78.2915
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.2915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0263841
  gflops (eval):  192.848
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0263841,192.848,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5814
  maximum absolute entry in einsum_ir solution: 35.5814
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135922
  time (eval):    0.0125495
  gflops (eval):  405.443
  gflops (total): 194.636
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135922,0.0125495,405.443,194.636

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0650142
  gflops (total): 78.2616
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.2616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265858
  gflops (eval):  191.385
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0265858,191.385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.28
  maximum absolute entry in einsum_ir solution: 41.28
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013713
  time (eval):    0.0130964
  gflops (eval):  388.513
  gflops (total): 189.788
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.013713,0.0130964,388.513,189.788

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655945
  gflops (total): 77.5692
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.5692

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273767
  gflops (eval):  185.856
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0273767,185.856,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.1637
  maximum absolute entry in einsum_ir solution: 42.1637
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133856
  time (eval):    0.0126244
  gflops (eval):  403.039
  gflops (total): 195.622
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0133856,0.0126244,403.039,195.622

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0654446
  gflops (total): 77.747
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.747

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274755
  gflops (eval):  185.187
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0274755,185.187,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1753
  maximum absolute entry in einsum_ir solution: 37.1753
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134217
  time (eval):    0.0127184
  gflops (eval):  400.059
  gflops (total): 194.648
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134217,0.0127184,400.059,194.648

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0660952
  gflops (total): 76.9816
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.9816

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267875
  gflops (eval):  189.944
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0267875,189.944,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.8591
  maximum absolute entry in einsum_ir solution: 42.8591
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137549
  time (eval):    0.0125731
  gflops (eval):  404.682
  gflops (total): 193.258
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137549,0.0125731,404.682,193.258

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656427
  gflops (total): 77.5123
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.5123

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269802
  gflops (eval):  188.587
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269802,188.587,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.9889
  maximum absolute entry in einsum_ir solution: 41.9889
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0140001
  time (eval):    0.0125908
  gflops (eval):  404.115
  gflops (total): 191.348
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0140001,0.0125908,404.115,191.348

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652795
  gflops (total): 77.9436
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.9436

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.026723
  gflops (eval):  190.402
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.026723,190.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1238
  maximum absolute entry in einsum_ir solution: 39.1238
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135602
  time (eval):    0.0125336
  gflops (eval):  405.958
  gflops (total): 194.993
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135602,0.0125336,405.958,194.993

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656655
  gflops (total): 77.4854
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.4854

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268682
  gflops (eval):  189.373
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268682,189.373,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.6284
  maximum absolute entry in einsum_ir solution: 41.6284
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135095
  time (eval):    0.0126864
  gflops (eval):  401.07
  gflops (total): 194.233
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135095,0.0126864,401.07,194.233

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0658074
  gflops (total): 77.3183
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.3183

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269578
  gflops (eval):  188.744
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269578,188.744,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8739
  maximum absolute entry in einsum_ir solution: 37.8739
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134788
  time (eval):    0.0130597
  gflops (eval):  389.605
  gflops (total): 191.726
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134788,0.0130597,389.605,191.726

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653214
  gflops (total): 77.8935
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.8935

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0262007
  gflops (eval):  194.198
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0262007,194.198,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5708
  maximum absolute entry in einsum_ir solution: 38.5708
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137188
  time (eval):    0.0127081
  gflops (eval):  400.383
  gflops (total): 192.536
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137188,0.0127081,400.383,192.536

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657693
  gflops (total): 77.3631
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.3631

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268927
  gflops (eval):  189.2
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268927,189.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1568
  maximum absolute entry in einsum_ir solution: 37.1568
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135351
  time (eval):    0.0128797
  gflops (eval):  395.05
  gflops (total): 192.624
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135351,0.0128797,395.05,192.624

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0648236
  gflops (total): 78.4918
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.4918

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275277
  gflops (eval):  184.836
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0275277,184.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7815
  maximum absolute entry in einsum_ir solution: 36.7815
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136249
  time (eval):    0.0133745
  gflops (eval):  380.434
  gflops (total): 188.453
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136249,0.0133745,380.434,188.453

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653509
  gflops (total): 77.8584
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.8584

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271399
  gflops (eval):  187.478
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0271399,187.478,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.6077
  maximum absolute entry in einsum_ir solution: 39.6077
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137109
  time (eval):    0.0127175
  gflops (eval):  400.089
  gflops (total): 192.525
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137109,0.0127175,400.089,192.525

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655392
  gflops (total): 77.6347
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.6347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268652
  gflops (eval):  189.394
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268652,189.394,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.1999
  maximum absolute entry in einsum_ir solution: 51.1999
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134334
  time (eval):    0.0131789
  gflops (eval):  386.079
  gflops (total): 191.194
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134334,0.0131789,386.079,191.194

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0650875
  gflops (total): 78.1734
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.1734

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274583
  gflops (eval):  185.303
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0274583,185.303,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1204
  maximum absolute entry in einsum_ir solution: 36.1204
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137321
  time (eval):    0.0126642
  gflops (eval):  401.773
  gflops (total): 192.759
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137321,0.0126642,401.773,192.759

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065469
  gflops (total): 77.7179
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.7179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268652
  gflops (eval):  189.394
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268652,189.394,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4164
  maximum absolute entry in einsum_ir solution: 37.4164
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0132726
  time (eval):    0.013291
  gflops (eval):  382.823
  gflops (total): 191.545
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0132726,0.013291,382.823,191.545

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0662041
  gflops (total): 76.855
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0267101
  gflops (eval):  190.494
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0267101,190.494,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.3247
  maximum absolute entry in einsum_ir solution: 44.3247
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138531
  time (eval):    0.0132983
  gflops (eval):  382.614
  gflops (total): 187.398
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0138531,0.0132983,382.614,187.398

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0648565
  gflops (total): 78.452
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.452

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270374
  gflops (eval):  188.188
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270374,188.188,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3823
  maximum absolute entry in einsum_ir solution: 35.3823
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136508
  time (eval):    0.0127102
  gflops (eval):  400.316
  gflops (total): 193.017
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136508,0.0127102,400.316,193.017

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0654153
  gflops (total): 77.7817
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.7817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270521
  gflops (eval):  188.085
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270521,188.085,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.168
  maximum absolute entry in einsum_ir solution: 40.168
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134488
  time (eval):    0.0127553
  gflops (eval):  398.901
  gflops (total): 194.172
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134488,0.0127553,398.901,194.172

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0642316
  gflops (total): 79.2152
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.2152

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273703
  gflops (eval):  185.899
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0273703,185.899,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.4008
  maximum absolute entry in einsum_ir solution: 46.4008
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135074
  time (eval):    0.0127631
  gflops (eval):  398.658
  gflops (total): 193.682
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135074,0.0127631,398.658,193.682

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663225
  gflops (total): 76.7179
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.7179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269788
  gflops (eval):  188.597
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269788,188.597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1812
  maximum absolute entry in einsum_ir solution: 37.1812
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133263
  time (eval):    0.0125869
  gflops (eval):  404.24
  gflops (total): 196.353
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0133263,0.0125869,404.24,196.353

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663966
  gflops (total): 76.6322
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.6322

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274382
  gflops (eval):  185.439
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0274382,185.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0532
  maximum absolute entry in einsum_ir solution: 40.0532
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135719
  time (eval):    0.0130959
  gflops (eval):  388.526
  gflops (total): 190.796
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135719,0.0130959,388.526,190.796

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065264
  gflops (total): 77.9621
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.9621

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269925
  gflops (eval):  188.501
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269925,188.501,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4763
  maximum absolute entry in einsum_ir solution: 39.4763
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134753
  time (eval):    0.0133314
  gflops (eval):  381.665
  gflops (total): 189.808
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134753,0.0133314,381.665,189.808

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0661299
  gflops (total): 76.9413
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.9413

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268635
  gflops (eval):  189.406
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268635,189.406,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3666
  maximum absolute entry in einsum_ir solution: 39.3666
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0139505
  time (eval):    0.0126055
  gflops (eval):  403.643
  gflops (total): 191.6
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0139505,0.0126055,403.643,191.6

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0661674
  gflops (total): 76.8976
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.8976

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272584
  gflops (eval):  186.663
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272584,186.663,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.3521
  maximum absolute entry in einsum_ir solution: 41.3521
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136149
  time (eval):    0.0127849
  gflops (eval):  397.98
  gflops (total): 192.733
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136149,0.0127849,397.98,192.733

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652538
  gflops (total): 77.9743
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.9743

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271954
  gflops (eval):  187.095
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0271954,187.095,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0205
  maximum absolute entry in einsum_ir solution: 37.0205
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135196
  time (eval):    0.0134176
  gflops (eval):  379.213
  gflops (total): 188.888
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135196,0.0134176,379.213,188.888

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0658563
  gflops (total): 77.2609
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.2609

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272975
  gflops (eval):  186.395
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272975,186.395,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1414
  maximum absolute entry in einsum_ir solution: 40.1414
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0139811
  time (eval):    0.0131343
  gflops (eval):  387.391
  gflops (total): 187.647
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0139811,0.0131343,387.391,187.647

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.064743
  gflops (total): 78.5894
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.5894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268334
  gflops (eval):  189.619
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268334,189.619,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4922
  maximum absolute entry in einsum_ir solution: 38.4922
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134512
  time (eval):    0.012423
  gflops (eval):  409.572
  gflops (total): 196.648
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134512,0.012423,409.572,196.648

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0659705
  gflops (total): 77.1272
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.1272

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275067
  gflops (eval):  184.978
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0275067,184.978,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.2686
  maximum absolute entry in einsum_ir solution: 41.2686
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013453
  time (eval):    0.012554
  gflops (eval):  405.299
  gflops (total): 195.645
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.013453,0.012554,405.299,195.645

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0641287
  gflops (total): 79.3423
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.3423

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.026682
  gflops (eval):  190.694
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.026682,190.694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.5297
  maximum absolute entry in einsum_ir solution: 37.5297
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135118
  time (eval):    0.0133571
  gflops (eval):  380.929
  gflops (total): 189.368
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135118,0.0133571,380.929,189.368

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0661407
  gflops (total): 76.9286
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.9286

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0276663
  gflops (eval):  183.91
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0276663,183.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6827
  maximum absolute entry in einsum_ir solution: 37.6827
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134106
  time (eval):    0.012526
  gflops (eval):  406.204
  gflops (total): 196.175
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134106,0.012526,406.204,196.175

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0640611
  gflops (total): 79.4261
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.4261

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272148
  gflops (eval):  186.961
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272148,186.961,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.1823
  maximum absolute entry in einsum_ir solution: 42.1823
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137243
  time (eval):    0.0125964
  gflops (eval):  403.934
  gflops (total): 193.313
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137243,0.0125964,403.934,193.313

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653066
  gflops (total): 77.9112
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.9112

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269745
  gflops (eval):  188.627
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269745,188.627,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.94
  maximum absolute entry in einsum_ir solution: 38.94
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135052
  time (eval):    0.0128004
  gflops (eval):  397.496
  gflops (total): 193.423
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135052,0.0128004,397.496,193.423

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.066029
  gflops (total): 77.0589
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.0589

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268702
  gflops (eval):  189.359
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268702,189.359,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2047
  maximum absolute entry in einsum_ir solution: 35.2047
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135043
  time (eval):    0.0132282
  gflops (eval):  384.643
  gflops (total): 190.335
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135043,0.0132282,384.643,190.335

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0643425
  gflops (total): 79.0786
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.0786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271865
  gflops (eval):  187.156
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0271865,187.156,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6737
  maximum absolute entry in einsum_ir solution: 33.6737
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137555
  time (eval):    0.0132803
  gflops (eval):  383.134
  gflops (total): 188.2
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137555,0.0132803,383.134,188.2

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0648693
  gflops (total): 78.4364
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.4364

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271758
  gflops (eval):  187.229
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0271758,187.229,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.894
  maximum absolute entry in einsum_ir solution: 38.894
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138106
  time (eval):    0.0130396
  gflops (eval):  390.206
  gflops (total): 189.5
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0138106,0.0130396,390.206,189.5

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0654784
  gflops (total): 77.7068
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.7068

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272697
  gflops (eval):  186.585
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272697,186.585,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3394
  maximum absolute entry in einsum_ir solution: 39.3394
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135683
  time (eval):    0.0127947
  gflops (eval):  397.673
  gflops (total): 193.002
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135683,0.0127947,397.673,193.002

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0644757
  gflops (total): 78.9153
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.9153

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270978
  gflops (eval):  187.768
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270978,187.768,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1596
  maximum absolute entry in einsum_ir solution: 37.1596
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133902
  time (eval):    0.0131852
  gflops (eval):  385.897
  gflops (total): 191.46
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0133902,0.0131852,385.897,191.46

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065874
  gflops (total): 77.2402
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.2402

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0277364
  gflops (eval):  183.445
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0277364,183.445,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.991
  maximum absolute entry in einsum_ir solution: 36.991
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135437
  time (eval):    0.0133545
  gflops (eval):  381.003
  gflops (total): 189.162
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135437,0.0133545,381.003,189.162

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663395
  gflops (total): 76.6981
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.6981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270645
  gflops (eval):  188
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270645,188,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9176
  maximum absolute entry in einsum_ir solution: 36.9176
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0139608
  time (eval):    0.0126042
  gflops (eval):  403.683
  gflops (total): 191.534
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0139608,0.0126042,403.683,191.534

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0639922
  gflops (total): 79.5115
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.5115

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0276077
  gflops (eval):  184.301
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0276077,184.301,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8477
  maximum absolute entry in einsum_ir solution: 40.8477
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135592
  time (eval):    0.0125766
  gflops (eval):  404.571
  gflops (total): 194.68
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135592,0.0125766,404.571,194.68

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0660186
  gflops (total): 77.0709
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.0709

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0266641
  gflops (eval):  190.823
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0266641,190.823,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2406
  maximum absolute entry in einsum_ir solution: 37.2406
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137659
  time (eval):    0.0134693
  gflops (eval):  377.756
  gflops (total): 186.821
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137659,0.0134693,377.756,186.821

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0641584
  gflops (total): 79.3055
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.3055

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273659
  gflops (eval):  185.929
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0273659,185.929,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.3301
  maximum absolute entry in einsum_ir solution: 42.3301
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135044
  time (eval):    0.0131394
  gflops (eval):  387.24
  gflops (total): 190.968
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135044,0.0131394,387.24,190.968

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647607
  gflops (total): 78.568
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.568

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270625
  gflops (eval):  188.013
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270625,188.013,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.7304
  maximum absolute entry in einsum_ir solution: 45.7304
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0127163
  time (eval):    0.0128449
  gflops (eval):  396.12
  gflops (total): 199.056
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0127163,0.0128449,396.12,199.056

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0646116
  gflops (total): 78.7493
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.7493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268329
  gflops (eval):  189.623
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268329,189.623,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8058
  maximum absolute entry in einsum_ir solution: 37.8058
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135272
  time (eval):    0.0125989
  gflops (eval):  403.855
  gflops (total): 194.752
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135272,0.0125989,403.855,194.752

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653755
  gflops (total): 77.8292
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.8292

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274061
  gflops (eval):  185.656
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0274061,185.656,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.9211
  maximum absolute entry in einsum_ir solution: 40.9211
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0141791
  time (eval):    0.0133959
  gflops (eval):  379.827
  gflops (total): 184.519
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0141791,0.0133959,379.827,184.519

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065903
  gflops (total): 77.2062
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.2062

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268892
  gflops (eval):  189.225
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268892,189.225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3917
  maximum absolute entry in einsum_ir solution: 38.3917
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0139701
  time (eval):    0.0126586
  gflops (eval):  401.95
  gflops (total): 191.077
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0139701,0.0126586,401.95,191.077

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0668245
  gflops (total): 76.1415
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.1415

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274562
  gflops (eval):  185.317
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0274562,185.317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.2157
  maximum absolute entry in einsum_ir solution: 41.2157
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133582
  time (eval):    0.0127292
  gflops (eval):  399.721
  gflops (total): 195.041
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0133582,0.0127292,399.721,195.041

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649972
  gflops (total): 78.2821
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.2821

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268311
  gflops (eval):  189.635
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268311,189.635,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.928
  maximum absolute entry in einsum_ir solution: 43.928
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0140188
  time (eval):    0.0125898
  gflops (eval):  404.147
  gflops (total): 191.221
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0140188,0.0125898,404.147,191.221

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0658733
  gflops (total): 77.241
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.241

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274143
  gflops (eval):  185.601
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0274143,185.601,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2553
  maximum absolute entry in einsum_ir solution: 39.2553
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013518
  time (eval):    0.0125816
  gflops (eval):  404.411
  gflops (total): 194.95
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.013518,0.0125816,404.411,194.95

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657021
  gflops (total): 77.4422
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.4422

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269889
  gflops (eval):  188.527
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269889,188.527,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6106
  maximum absolute entry in einsum_ir solution: 38.6106
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137881
  time (eval):    0.012604
  gflops (eval):  403.69
  gflops (total): 192.789
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137881,0.012604,403.69,192.789

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065237
  gflops (total): 77.9944
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.9944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0264914
  gflops (eval):  192.066
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0264914,192.066,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8836
  maximum absolute entry in einsum_ir solution: 39.8836
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013752
  time (eval):    0.0124483
  gflops (eval):  408.741
  gflops (total): 194.201
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.013752,0.0124483,408.741,194.201

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663018
  gflops (total): 76.7418
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.7418

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274218
  gflops (eval):  185.55
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0274218,185.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.6364
  maximum absolute entry in einsum_ir solution: 41.6364
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134717
  time (eval):    0.0125853
  gflops (eval):  404.289
  gflops (total): 195.268
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134717,0.0125853,404.289,195.268

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0663126
  gflops (total): 76.7293
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.7293

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268349
  gflops (eval):  189.609
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268349,189.609,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6912
  maximum absolute entry in einsum_ir solution: 37.6912
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134152
  time (eval):    0.0125464
  gflops (eval):  405.545
  gflops (total): 195.987
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134152,0.0125464,405.545,195.987

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0668166
  gflops (total): 76.1505
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.1505

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0279156
  gflops (eval):  182.268
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0279156,182.268,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2583
  maximum absolute entry in einsum_ir solution: 35.2583
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135272
  time (eval):    0.0125521
  gflops (eval):  405.361
  gflops (total): 195.102
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135272,0.0125521,405.361,195.102

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647357
  gflops (total): 78.5983
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.5983

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265831
  gflops (eval):  191.404
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0265831,191.404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.7152
  maximum absolute entry in einsum_ir solution: 37.7152
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136501
  time (eval):    0.0132838
  gflops (eval):  383.033
  gflops (total): 188.911
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136501,0.0132838,383.033,188.911

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.065235
  gflops (total): 77.9968
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.9968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0275961
  gflops (eval):  184.378
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0275961,184.378,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6363
  maximum absolute entry in einsum_ir solution: 37.6363
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136096
  time (eval):    0.012662
  gflops (eval):  401.842
  gflops (total): 193.674
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136096,0.012662,401.842,193.674

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0647718
  gflops (total): 78.5545
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.5545

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268547
  gflops (eval):  189.468
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268547,189.468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.2228
  maximum absolute entry in einsum_ir solution: 40.2228
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133526
  time (eval):    0.0133335
  gflops (eval):  381.605
  gflops (total): 190.666
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0133526,0.0133335,381.605,190.666

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652434
  gflops (total): 77.9867
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.9867

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270561
  gflops (eval):  188.058
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270561,188.058,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3156
  maximum absolute entry in einsum_ir solution: 39.3156
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135924
  time (eval):    0.0124385
  gflops (eval):  409.06
  gflops (total): 195.464
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135924,0.0124385,409.06,195.464

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652836
  gflops (total): 77.9386
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.9386

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0282718
  gflops (eval):  179.971
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0282718,179.971,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6589
  maximum absolute entry in einsum_ir solution: 35.6589
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.01332
  time (eval):    0.0133596
  gflops (eval):  380.859
  gflops (total): 190.712
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.01332,0.0133596,380.859,190.712

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656252
  gflops (total): 77.533
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.533

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269949
  gflops (eval):  188.485
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269949,188.485,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.3561
  maximum absolute entry in einsum_ir solution: 41.3561
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134542
  time (eval):    0.0125429
  gflops (eval):  405.658
  gflops (total): 195.719
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134542,0.0125429,405.658,195.719

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0648678
  gflops (total): 78.4382
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.4382

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272751
  gflops (eval):  186.548
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272751,186.548,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1738
  maximum absolute entry in einsum_ir solution: 37.1738
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136065
  time (eval):    0.0130616
  gflops (eval):  389.547
  gflops (total): 190.794
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136065,0.0130616,389.547,190.794

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.064955
  gflops (total): 78.3329
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.3329

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0264634
  gflops (eval):  192.27
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0264634,192.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.5843
  maximum absolute entry in einsum_ir solution: 40.5843
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134907
  time (eval):    0.0125448
  gflops (eval):  405.596
  gflops (total): 195.43
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134907,0.0125448,405.596,195.43

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656212
  gflops (total): 77.5377
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.5377

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0263665
  gflops (eval):  192.976
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0263665,192.976,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6536
  maximum absolute entry in einsum_ir solution: 38.6536
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135012
  time (eval):    0.0126798
  gflops (eval):  401.276
  gflops (total): 194.343
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135012,0.0126798,401.276,194.343

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0654701
  gflops (total): 77.7166
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.7166

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265646
  gflops (eval):  191.538
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0265646,191.538,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4507
  maximum absolute entry in einsum_ir solution: 39.4507
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135601
  time (eval):    0.0131291
  gflops (eval):  387.544
  gflops (total): 190.643
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135601,0.0131291,387.544,190.643

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0642262
  gflops (total): 79.2218
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.2218

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0274253
  gflops (eval):  185.526
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0274253,185.526,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9551
  maximum absolute entry in einsum_ir solution: 34.9551
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136321
  time (eval):    0.0127804
  gflops (eval):  398.119
  gflops (total): 192.641
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136321,0.0127804,398.119,192.641

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0652457
  gflops (total): 77.9839
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.9839

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270178
  gflops (eval):  188.324
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270178,188.324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.6286
  maximum absolute entry in einsum_ir solution: 41.6286
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0141322
  time (eval):    0.0132173
  gflops (eval):  384.958
  gflops (total): 186.041
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0141322,0.0132173,384.958,186.041

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.064799
  gflops (total): 78.5216
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.5216

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0266593
  gflops (eval):  190.857
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0266593,190.857,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4811
  maximum absolute entry in einsum_ir solution: 37.4811
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0133116
  time (eval):    0.0131447
  gflops (eval):  387.086
  gflops (total): 192.322
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0133116,0.0131447,387.086,192.322

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0642157
  gflops (total): 79.2347
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.2347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273931
  gflops (eval):  185.744
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0273931,185.744,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.641
  maximum absolute entry in einsum_ir solution: 41.641
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137704
  time (eval):    0.0125107
  gflops (eval):  406.701
  gflops (total): 193.603
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137704,0.0125107,406.701,193.603

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.064229
  gflops (total): 79.2183
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.2183

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0266427
  gflops (eval):  190.976
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0266427,190.976,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7039
  maximum absolute entry in einsum_ir solution: 36.7039
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0138129
  time (eval):    0.0124288
  gflops (eval):  409.382
  gflops (total): 193.895
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0138129,0.0124288,409.382,193.895

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0664305
  gflops (total): 76.5931
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.5931

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271556
  gflops (eval):  187.369
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0271556,187.369,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0981
  maximum absolute entry in einsum_ir solution: 36.0981
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.013834
  time (eval):    0.012794
  gflops (eval):  397.697
  gflops (total): 191.081
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.013834,0.012794,397.697,191.081

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.064844
  gflops (total): 78.467
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.467

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270382
  gflops (eval):  188.183
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270382,188.183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.867
  maximum absolute entry in einsum_ir solution: 39.867
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136156
  time (eval):    0.0127281
  gflops (eval):  399.756
  gflops (total): 193.144
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136156,0.0127281,399.756,193.144

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0660388
  gflops (total): 77.0474
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.0474

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0263274
  gflops (eval):  193.264
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0263274,193.264,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5012
  maximum absolute entry in einsum_ir solution: 38.5012
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0134104
  time (eval):    0.013317
  gflops (eval):  382.076
  gflops (total): 190.371
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0134104,0.013317,382.076,190.371

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0637263
  gflops (total): 79.8433
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,79.8433

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273971
  gflops (eval):  185.717
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0273971,185.717,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.508
  maximum absolute entry in einsum_ir solution: 38.508
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0140248
  time (eval):    0.0126586
  gflops (eval):  401.949
  gflops (total): 190.685
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0140248,0.0126586,401.949,190.685

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0657803
  gflops (total): 77.3502
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.3502

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0266396
  gflops (eval):  190.998
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0266396,190.998,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.3457
  maximum absolute entry in einsum_ir solution: 40.3457
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135146
  time (eval):    0.0133029
  gflops (eval):  382.481
  gflops (total): 189.731
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135146,0.0133029,382.481,189.731

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0666978
  gflops (total): 76.2862
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.2862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0269954
  gflops (eval):  188.481
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0269954,188.481,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.7598
  maximum absolute entry in einsum_ir solution: 42.7598
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136082
  time (eval):    0.0125843
  gflops (eval):  404.324
  gflops (total): 194.259
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136082,0.0125843,404.324,194.259

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0653467
  gflops (total): 77.8634
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.8634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0276244
  gflops (eval):  184.189
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0276244,184.189,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6236
  maximum absolute entry in einsum_ir solution: 37.6236
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135595
  time (eval):    0.0133558
  gflops (eval):  380.967
  gflops (total): 189.042
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135595,0.0133558,380.967,189.042

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0649398
  gflops (total): 78.3512
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.3512

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272571
  gflops (eval):  186.672
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272571,186.672,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.0331
  maximum absolute entry in einsum_ir solution: 42.0331
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137486
  time (eval):    0.0125621
  gflops (eval):  405.036
  gflops (total): 193.386
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137486,0.0125621,405.036,193.386

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0655399
  gflops (total): 77.6339
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.6339

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0273745
  gflops (eval):  185.871
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0273745,185.871,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6517
  maximum absolute entry in einsum_ir solution: 36.6517
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137245
  time (eval):    0.013083
  gflops (eval):  388.909
  gflops (total): 189.802
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137245,0.013083,388.909,189.802

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0662052
  gflops (total): 76.8537
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.8537

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0271091
  gflops (eval):  187.69
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0271091,187.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.7948
  maximum absolute entry in einsum_ir solution: 42.7948
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0135604
  time (eval):    0.0131267
  gflops (eval):  387.615
  gflops (total): 190.658
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0135604,0.0131267,387.615,190.658

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0645274
  gflops (total): 78.852
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.852

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272966
  gflops (eval):  186.401
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272966,186.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.6305
  maximum absolute entry in einsum_ir solution: 43.6305
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136609
  time (eval):    0.0131911
  gflops (eval):  385.723
  gflops (total): 189.487
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136609,0.0131911,385.723,189.487

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0656472
  gflops (total): 77.507
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.507

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0272115
  gflops (eval):  186.984
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0272115,186.984,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5098
  maximum absolute entry in einsum_ir solution: 36.5098
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137703
  time (eval):    0.0128095
  gflops (eval):  397.214
  gflops (total): 191.428
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137703,0.0128095,397.214,191.428

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.064747
  gflops (total): 78.5846
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,78.5846

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268839
  gflops (eval):  189.263
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268839,189.263,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1949
  maximum absolute entry in einsum_ir solution: 40.1949
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.01365
  time (eval):    0.0132818
  gflops (eval):  383.089
  gflops (total): 188.926
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.01365,0.0132818,383.089,188.926

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0669337
  gflops (total): 76.0172
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.0172

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0265889
  gflops (eval):  191.362
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0265889,191.362,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1871
  maximum absolute entry in einsum_ir solution: 40.1871
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0136479
  time (eval):    0.0126142
  gflops (eval):  403.364
  gflops (total): 193.744
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0136479,0.0126142,403.364,193.744

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0662997
  gflops (total): 76.7442
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,76.7442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0270522
  gflops (eval):  188.085
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0270522,188.085,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6684
  maximum absolute entry in einsum_ir solution: 36.6684
  maximum element-wise difference:              0
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0137166
  time (eval):    0.0133654
  gflops (eval):  380.692
  gflops (total): 187.878
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0137166,0.0133654,380.692,187.878

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.0658874
  gflops (total): 77.2244
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,77.2244

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0268986
  gflops (eval):  189.159
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0268986,189.159,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1638
  maximum absolute entry in einsum_ir solution: 39.1638
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157251
  time (eval):    0.00697049
  gflops (eval):  509.1
  gflops (total): 156.36
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157251,0.00697049,509.1,156.36

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0466742
  gflops (total): 76.0308
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.0308

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0162617
  gflops (eval):  218.223
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0162617,218.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7603
  maximum absolute entry in einsum_ir solution: 54.7603
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156273
  time (eval):    0.00671775
  gflops (eval):  528.253
  gflops (total): 158.813
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156273,0.00671775,528.253,158.813

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0450505
  gflops (total): 78.7711
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.7711

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016514
  gflops (eval):  214.889
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016514,214.889,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.2537
  maximum absolute entry in einsum_ir solution: 54.2537
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156838
  time (eval):    0.00671969
  gflops (eval):  528.101
  gflops (total): 158.398
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156838,0.00671969,528.101,158.398

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461596
  gflops (total): 76.8784
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.8784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163618
  gflops (eval):  216.887
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163618,216.887,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8365
  maximum absolute entry in einsum_ir solution: 58.8365
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0153313
  time (eval):    0.00674171
  gflops (eval):  526.376
  gflops (total): 160.77
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0153313,0.00674171,526.376,160.77

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0476793
  gflops (total): 74.428
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,74.428

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165549
  gflops (eval):  214.358
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165549,214.358,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6589
  maximum absolute entry in einsum_ir solution: 58.6589
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0151713
  time (eval):    0.00669283
  gflops (eval):  530.221
  gflops (total): 162.306
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0151713,0.00669283,530.221,162.306

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461795
  gflops (total): 76.8452
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.8452

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164246
  gflops (eval):  216.059
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164246,216.059,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8273
  maximum absolute entry in einsum_ir solution: 58.8273
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155711
  time (eval):    0.0066593
  gflops (eval):  532.89
  gflops (total): 159.632
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155711,0.0066593,532.89,159.632

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461356
  gflops (total): 76.9183
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.9183

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164612
  gflops (eval):  215.579
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164612,215.579,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8461
  maximum absolute entry in einsum_ir solution: 54.8461
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158406
  time (eval):    0.00672353
  gflops (eval):  527.8
  gflops (total): 157.271
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158406,0.00672353,527.8,157.271

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0499212
  gflops (total): 71.0855
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,71.0855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164749
  gflops (eval):  215.399
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164749,215.399,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.568
  maximum absolute entry in einsum_ir solution: 61.568
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155025
  time (eval):    0.00674588
  gflops (eval):  526.051
  gflops (total): 159.503
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155025,0.00674588,526.051,159.503

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0457623
  gflops (total): 77.5458
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.5458

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163616
  gflops (eval):  216.891
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163616,216.891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3978
  maximum absolute entry in einsum_ir solution: 57.3978
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157589
  time (eval):    0.00667893
  gflops (eval):  531.324
  gflops (total): 158.156
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157589,0.00667893,531.324,158.156

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461725
  gflops (total): 76.857
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.857

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164222
  gflops (eval):  216.09
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164222,216.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6318
  maximum absolute entry in einsum_ir solution: 61.6318
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157579
  time (eval):    0.00672403
  gflops (eval):  527.76
  gflops (total): 157.846
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157579,0.00672403,527.76,157.846

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0517201
  gflops (total): 68.6131
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,68.6131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164227
  gflops (eval):  216.084
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164227,216.084,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8217
  maximum absolute entry in einsum_ir solution: 55.8217
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.015639
  time (eval):    0.00671023
  gflops (eval):  528.846
  gflops (total): 158.783
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.015639,0.00671023,528.846,158.783

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0462567
  gflops (total): 76.7171
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.7171

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0162473
  gflops (eval):  218.416
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0162473,218.416,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.4534
  maximum absolute entry in einsum_ir solution: 52.4534
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0151868
  time (eval):    0.00699214
  gflops (eval):  507.524
  gflops (total): 160.002
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0151868,0.00699214,507.524,160.002

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.051198
  gflops (total): 69.3128
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,69.3128

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016411
  gflops (eval):  216.237
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016411,216.237,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3499
  maximum absolute entry in einsum_ir solution: 60.3499
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0162182
  time (eval):    0.00693864
  gflops (eval):  511.437
  gflops (total): 153.245
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0162182,0.00693864,511.437,153.245

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.045396
  gflops (total): 78.1716
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.1716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016317
  gflops (eval):  217.483
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016317,217.483,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9283
  maximum absolute entry in einsum_ir solution: 55.9283
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157136
  time (eval):    0.00685836
  gflops (eval):  517.423
  gflops (total): 157.216
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157136,0.00685836,517.423,157.216

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0479218
  gflops (total): 74.0514
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,74.0514

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016577
  gflops (eval):  214.072
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016577,214.072,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3893
  maximum absolute entry in einsum_ir solution: 55.3893
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155755
  time (eval):    0.00668543
  gflops (eval):  530.808
  gflops (total): 159.412
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155755,0.00668543,530.808,159.412

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0453965
  gflops (total): 78.1707
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.1707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163786
  gflops (eval):  216.666
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163786,216.666,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7068
  maximum absolute entry in einsum_ir solution: 57.7068
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0162314
  time (eval):    0.00673371
  gflops (eval):  527.001
  gflops (total): 154.525
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0162314,0.00673371,527.001,154.525

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0500625
  gflops (total): 70.8849
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,70.8849

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163709
  gflops (eval):  216.768
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163709,216.768,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6787
  maximum absolute entry in einsum_ir solution: 59.6787
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156857
  time (eval):    0.00676131
  gflops (eval):  524.85
  gflops (total): 158.091
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156857,0.00676131,524.85,158.091

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0497762
  gflops (total): 71.2927
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,71.2927

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164805
  gflops (eval):  215.326
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164805,215.326,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8027
  maximum absolute entry in einsum_ir solution: 57.8027
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156053
  time (eval):    0.00673287
  gflops (eval):  527.067
  gflops (total): 158.861
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156053,0.00673287,527.067,158.861

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0459997
  gflops (total): 77.1456
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.1456

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164191
  gflops (eval):  216.131
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164191,216.131,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0718
  maximum absolute entry in einsum_ir solution: 59.0718
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0151472
  time (eval):    0.00692356
  gflops (eval):  512.551
  gflops (total): 160.786
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0151472,0.00692356,512.551,160.786

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0471318
  gflops (total): 75.2927
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.2927

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163873
  gflops (eval):  216.551
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163873,216.551,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.3424
  maximum absolute entry in einsum_ir solution: 53.3424
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0151303
  time (eval):    0.00691404
  gflops (eval):  513.257
  gflops (total): 160.979
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0151303,0.00691404,513.257,160.979

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0492596
  gflops (total): 72.0403
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,72.0403

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164496
  gflops (eval):  215.73
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164496,215.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9473
  maximum absolute entry in einsum_ir solution: 55.9473
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157007
  time (eval):    0.00669721
  gflops (eval):  529.874
  gflops (total): 158.438
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157007,0.00669721,529.874,158.438

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0480496
  gflops (total): 73.8544
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,73.8544

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163513
  gflops (eval):  217.028
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163513,217.028,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2956
  maximum absolute entry in einsum_ir solution: 59.2956
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158933
  time (eval):    0.00689441
  gflops (eval):  514.718
  gflops (total): 155.728
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158933,0.00689441,514.718,155.728

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0490941
  gflops (total): 72.2831
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,72.2831

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164436
  gflops (eval):  215.809
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164436,215.809,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6802
  maximum absolute entry in einsum_ir solution: 61.6802
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157803
  time (eval):    0.00673758
  gflops (eval):  526.699
  gflops (total): 157.594
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157803,0.00673758,526.699,157.594

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0463445
  gflops (total): 76.5716
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.5716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163735
  gflops (eval):  216.733
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163735,216.733,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7857
  maximum absolute entry in einsum_ir solution: 55.7857
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156541
  time (eval):    0.00669833
  gflops (eval):  529.785
  gflops (total): 158.76
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156541,0.00669833,529.785,158.76

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0467356
  gflops (total): 75.9309
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.9309

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163378
  gflops (eval):  217.206
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163378,217.206,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5826
  maximum absolute entry in einsum_ir solution: 56.5826
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157474
  time (eval):    0.00695387
  gflops (eval):  510.316
  gflops (total): 156.321
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157474,0.00695387,510.316,156.321

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0493451
  gflops (total): 71.9155
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,71.9155

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164905
  gflops (eval):  215.195
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164905,215.195,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5436
  maximum absolute entry in einsum_ir solution: 54.5436
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.015834
  time (eval):    0.00669324
  gflops (eval):  530.188
  gflops (total): 157.529
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.015834,0.00669324,530.188,157.529

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0458301
  gflops (total): 77.4311
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.4311

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164459
  gflops (eval):  215.779
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164459,215.779,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2155
  maximum absolute entry in einsum_ir solution: 58.2155
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0152502
  time (eval):    0.00684661
  gflops (eval):  518.311
  gflops (total): 160.597
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0152502,0.00684661,518.311,160.597

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0499824
  gflops (total): 70.9986
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,70.9986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163257
  gflops (eval):  217.368
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163257,217.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.1346
  maximum absolute entry in einsum_ir solution: 52.1346
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157311
  time (eval):    0.0066902
  gflops (eval):  530.429
  gflops (total): 158.273
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157311,0.0066902,530.429,158.273

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0468397
  gflops (total): 75.7621
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.7621

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164409
  gflops (eval):  215.844
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164409,215.844,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1808
  maximum absolute entry in einsum_ir solution: 57.1808
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158423
  time (eval):    0.00672857
  gflops (eval):  527.404
  gflops (total): 157.224
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158423,0.00672857,527.404,157.224

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0484854
  gflops (total): 73.1906
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,73.1906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016389
  gflops (eval):  216.528
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016389,216.528,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.101
  maximum absolute entry in einsum_ir solution: 54.101
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0149628
  time (eval):    0.00674856
  gflops (eval):  525.842
  gflops (total): 163.448
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0149628,0.00674856,525.842,163.448

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.05071
  gflops (total): 69.9798
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,69.9798

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0162696
  gflops (eval):  218.117
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0162696,218.117,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3083
  maximum absolute entry in einsum_ir solution: 56.3083
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0152383
  time (eval):    0.00672149
  gflops (eval):  527.96
  gflops (total): 161.599
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0152383,0.00672149,527.96,161.599

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0492105
  gflops (total): 72.1122
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,72.1122

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165249
  gflops (eval):  214.747
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165249,214.747,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.4145
  maximum absolute entry in einsum_ir solution: 65.4145
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157566
  time (eval):    0.00671076
  gflops (eval):  528.804
  gflops (total): 157.948
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157566,0.00671076,528.804,157.948

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.04704
  gflops (total): 75.4395
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.4395

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164289
  gflops (eval):  216.002
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164289,216.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0485
  maximum absolute entry in einsum_ir solution: 58.0485
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0151787
  time (eval):    0.00670134
  gflops (eval):  529.547
  gflops (total): 162.188
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0151787,0.00670134,529.547,162.188

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0505315
  gflops (total): 70.2271
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,70.2271

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164518
  gflops (eval):  215.701
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164518,215.701,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8733
  maximum absolute entry in einsum_ir solution: 57.8733
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158509
  time (eval):    0.00670502
  gflops (eval):  529.257
  gflops (total): 157.328
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158509,0.00670502,529.257,157.328

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0495034
  gflops (total): 71.6855
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,71.6855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016607
  gflops (eval):  213.686
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016607,213.686,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3685
  maximum absolute entry in einsum_ir solution: 54.3685
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155632
  time (eval):    0.00672724
  gflops (eval):  527.509
  gflops (total): 159.202
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155632,0.00672724,527.509,159.202

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.049536
  gflops (total): 71.6384
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,71.6384

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163798
  gflops (eval):  216.65
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163798,216.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8175
  maximum absolute entry in einsum_ir solution: 56.8175
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0152222
  time (eval):    0.00690668
  gflops (eval):  513.804
  gflops (total): 160.364
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0152222,0.00690668,513.804,160.364

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0457504
  gflops (total): 77.566
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.566

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164034
  gflops (eval):  216.338
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164034,216.338,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.792
  maximum absolute entry in einsum_ir solution: 56.792
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0164319
  time (eval):    0.00678664
  gflops (eval):  522.891
  gflops (total): 152.838
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0164319,0.00678664,522.891,152.838

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0488937
  gflops (total): 72.5794
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,72.5794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164175
  gflops (eval):  216.152
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164175,216.152,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7354
  maximum absolute entry in einsum_ir solution: 57.7354
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0151998
  time (eval):    0.00668365
  gflops (eval):  530.949
  gflops (total): 162.162
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0151998,0.00668365,530.949,162.162

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0484256
  gflops (total): 73.281
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,73.281

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165452
  gflops (eval):  214.484
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165452,214.484,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.512
  maximum absolute entry in einsum_ir solution: 54.512
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157679
  time (eval):    0.00666762
  gflops (eval):  532.225
  gflops (total): 158.172
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157679,0.00666762,532.225,158.172

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0492334
  gflops (total): 72.0786
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,72.0786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164041
  gflops (eval):  216.328
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164041,216.328,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0396
  maximum absolute entry in einsum_ir solution: 58.0396
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0153018
  time (eval):    0.00670764
  gflops (eval):  529.05
  gflops (total): 161.234
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0153018,0.00670764,529.05,161.234

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.049263
  gflops (total): 72.0354
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,72.0354

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163904
  gflops (eval):  216.51
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163904,216.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3241
  maximum absolute entry in einsum_ir solution: 58.3241
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0145483
  time (eval):    0.00686655
  gflops (eval):  516.806
  gflops (total): 165.711
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0145483,0.00686655,516.806,165.711

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.04645
  gflops (total): 76.3977
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.3977

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163454
  gflops (eval):  217.105
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163454,217.105,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.4629
  maximum absolute entry in einsum_ir solution: 52.4629
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158179
  time (eval):    0.00673151
  gflops (eval):  527.174
  gflops (total): 157.373
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158179,0.00673151,527.174,157.373

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0484519
  gflops (total): 73.2413
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,73.2413

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163104
  gflops (eval):  217.572
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163104,217.572,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4203
  maximum absolute entry in einsum_ir solution: 56.4203
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0149525
  time (eval):    0.0067448
  gflops (eval):  526.135
  gflops (total): 163.554
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0149525,0.0067448,526.135,163.554

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0469723
  gflops (total): 75.5482
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.5482

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016439
  gflops (eval):  215.87
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016439,215.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3126
  maximum absolute entry in einsum_ir solution: 59.3126
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0152624
  time (eval):    0.00690058
  gflops (eval):  514.258
  gflops (total): 160.117
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0152624,0.00690058,514.258,160.117

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0459678
  gflops (total): 77.1991
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.1991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163589
  gflops (eval):  216.927
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163589,216.927,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.6092
  maximum absolute entry in einsum_ir solution: 65.6092
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156504
  time (eval):    0.00700499
  gflops (eval):  506.593
  gflops (total): 156.637
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156504,0.00700499,506.593,156.637

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.045885
  gflops (total): 77.3385
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.3385

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164679
  gflops (eval):  215.491
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164679,215.491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1736
  maximum absolute entry in einsum_ir solution: 57.1736
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158533
  time (eval):    0.00668351
  gflops (eval):  530.96
  gflops (total): 157.461
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158533,0.00668351,530.96,157.461

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0457669
  gflops (total): 77.5381
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.5381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164998
  gflops (eval):  215.074
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164998,215.074,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.6955
  maximum absolute entry in einsum_ir solution: 64.6955
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0152649
  time (eval):    0.00675948
  gflops (eval):  524.993
  gflops (total): 161.125
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0152649,0.00675948,524.993,161.125

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0491372
  gflops (total): 72.2198
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,72.2198

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165038
  gflops (eval):  215.022
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165038,215.022,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9862
  maximum absolute entry in einsum_ir solution: 55.9862
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0159727
  time (eval):    0.00673729
  gflops (eval):  526.722
  gflops (total): 156.261
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0159727,0.00673729,526.722,156.261

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.049774
  gflops (total): 71.2958
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,71.2958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164143
  gflops (eval):  216.194
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164143,216.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.6425
  maximum absolute entry in einsum_ir solution: 52.6425
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156619
  time (eval):    0.00691173
  gflops (eval):  513.428
  gflops (total): 157.204
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156619,0.00691173,513.428,157.204

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0462729
  gflops (total): 76.6902
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.6902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0167171
  gflops (eval):  212.278
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0167171,212.278,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2094
  maximum absolute entry in einsum_ir solution: 59.2094
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0159811
  time (eval):    0.00686846
  gflops (eval):  516.662
  gflops (total): 155.306
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0159811,0.00686846,516.662,155.306

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0466937
  gflops (total): 75.999
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.999

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165294
  gflops (eval):  214.688
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165294,214.688,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3525
  maximum absolute entry in einsum_ir solution: 59.3525
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0161221
  time (eval):    0.00669438
  gflops (eval):  530.098
  gflops (total): 155.531
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0161221,0.00669438,530.098,155.531

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0483316
  gflops (total): 73.4235
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,73.4235

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164588
  gflops (eval):  215.609
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164588,215.609,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.99
  maximum absolute entry in einsum_ir solution: 52.99
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0154756
  time (eval):    0.00687603
  gflops (eval):  516.094
  gflops (total): 158.766
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0154756,0.00687603,516.094,158.766

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0465156
  gflops (total): 76.2899
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.2899

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163458
  gflops (eval):  217.101
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163458,217.101,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0291
  maximum absolute entry in einsum_ir solution: 58.0291
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0162003
  time (eval):    0.00668733
  gflops (eval):  530.657
  gflops (total): 155.048
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0162003,0.00668733,530.657,155.048

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.049857
  gflops (total): 71.1772
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,71.1772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164855
  gflops (eval):  215.26
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164855,215.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3395
  maximum absolute entry in einsum_ir solution: 58.3395
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157716
  time (eval):    0.00676708
  gflops (eval):  524.403
  gflops (total): 157.448
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157716,0.00676708,524.403,157.448

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0460268
  gflops (total): 77.1002
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.1002

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163861
  gflops (eval):  216.566
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163861,216.566,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0697
  maximum absolute entry in einsum_ir solution: 56.0697
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0149956
  time (eval):    0.0067455
  gflops (eval):  526.081
  gflops (total): 163.224
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0149956,0.0067455,526.081,163.224

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0509529
  gflops (total): 69.6463
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,69.6463

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163859
  gflops (eval):  216.569
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163859,216.569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7234
  maximum absolute entry in einsum_ir solution: 58.7234
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0148663
  time (eval):    0.00675114
  gflops (eval):  525.641
  gflops (total): 164.158
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0148663,0.00675114,525.641,164.158

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0497588
  gflops (total): 71.3175
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,71.3175

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164338
  gflops (eval):  215.937
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164338,215.937,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2918
  maximum absolute entry in einsum_ir solution: 59.2918
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156609
  time (eval):    0.00687445
  gflops (eval):  516.212
  gflops (total): 157.471
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156609,0.00687445,516.212,157.471

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0473771
  gflops (total): 74.9028
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,74.9028

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0162738
  gflops (eval):  218.06
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0162738,218.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5006
  maximum absolute entry in einsum_ir solution: 53.5006
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157583
  time (eval):    0.00674422
  gflops (eval):  526.18
  gflops (total): 157.701
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157583,0.00674422,526.18,157.701

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0489253
  gflops (total): 72.5325
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,72.5325

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016518
  gflops (eval):  214.836
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016518,214.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8849
  maximum absolute entry in einsum_ir solution: 57.8849
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0152232
  time (eval):    0.00672218
  gflops (eval):  527.906
  gflops (total): 161.705
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0152232,0.00672218,527.906,161.705

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0485054
  gflops (total): 73.1604
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,73.1604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163944
  gflops (eval):  216.457
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163944,216.457,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.3153
  maximum absolute entry in einsum_ir solution: 66.3153
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156938
  time (eval):    0.00675787
  gflops (eval):  525.118
  gflops (total): 158.058
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156938,0.00675787,525.118,158.058

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0469346
  gflops (total): 75.609
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.609

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165001
  gflops (eval):  215.071
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165001,215.071,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1254
  maximum absolute entry in einsum_ir solution: 57.1254
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0154117
  time (eval):    0.00676415
  gflops (eval):  524.63
  gflops (total): 160.024
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0154117,0.00676415,524.63,160.024

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0465902
  gflops (total): 76.1679
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.1679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163729
  gflops (eval):  216.741
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163729,216.741,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.5026
  maximum absolute entry in einsum_ir solution: 61.5026
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157005
  time (eval):    0.00672602
  gflops (eval):  527.604
  gflops (total): 158.236
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157005,0.00672602,527.604,158.236

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0484121
  gflops (total): 73.3014
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,73.3014

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163889
  gflops (eval):  216.529
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163889,216.529,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0284
  maximum absolute entry in einsum_ir solution: 55.0284
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156039
  time (eval):    0.00688878
  gflops (eval):  515.138
  gflops (total): 157.77
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156039,0.00688878,515.138,157.77

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0484076
  gflops (total): 73.3083
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,73.3083

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164816
  gflops (eval):  215.311
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164816,215.311,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.878
  maximum absolute entry in einsum_ir solution: 52.878
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0151668
  time (eval):    0.00705681
  gflops (eval):  502.872
  gflops (total): 159.68
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0151668,0.00705681,502.872,159.68

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0457177
  gflops (total): 77.6215
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.6215

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164328
  gflops (eval):  215.95
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164328,215.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.4502
  maximum absolute entry in einsum_ir solution: 53.4502
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0151587
  time (eval):    0.00672688
  gflops (eval):  527.537
  gflops (total): 162.147
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0151587,0.00672688,527.537,162.147

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0511443
  gflops (total): 69.3855
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,69.3855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164378
  gflops (eval):  215.886
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164378,215.886,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0164
  maximum absolute entry in einsum_ir solution: 56.0164
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0153938
  time (eval):    0.00674143
  gflops (eval):  526.398
  gflops (total): 160.318
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0153938,0.00674143,526.398,160.318

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461642
  gflops (total): 76.8707
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.8707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164384
  gflops (eval):  215.877
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164384,215.877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0201
  maximum absolute entry in einsum_ir solution: 60.0201
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158509
  time (eval):    0.00674979
  gflops (eval):  525.746
  gflops (total): 157.016
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158509,0.00674979,525.746,157.016

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0462807
  gflops (total): 76.6772
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.6772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163593
  gflops (eval):  216.921
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163593,216.921,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.4741
  maximum absolute entry in einsum_ir solution: 52.4741
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155934
  time (eval):    0.00672111
  gflops (eval):  527.989
  gflops (total): 159.03
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155934,0.00672111,527.989,159.03

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0485509
  gflops (total): 73.0919
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,73.0919

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165363
  gflops (eval):  214.6
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165363,214.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2283
  maximum absolute entry in einsum_ir solution: 60.2283
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0154879
  time (eval):    0.00669276
  gflops (eval):  530.226
  gflops (total): 159.99
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0154879,0.00669276,530.226,159.99

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461431
  gflops (total): 76.9059
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.9059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164237
  gflops (eval):  216.07
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164237,216.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0504
  maximum absolute entry in einsum_ir solution: 60.0504
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0143039
  time (eval):    0.00668032
  gflops (eval):  531.213
  gflops (total): 169.112
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0143039,0.00668032,531.213,169.112

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0492984
  gflops (total): 71.9836
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,71.9836

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164924
  gflops (eval):  215.171
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164924,215.171,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.4858
  maximum absolute entry in einsum_ir solution: 54.4858
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155256
  time (eval):    0.00673056
  gflops (eval):  527.249
  gflops (total): 159.447
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155256,0.00673056,527.249,159.447

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0510794
  gflops (total): 69.4737
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,69.4737

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164338
  gflops (eval):  215.937
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164338,215.937,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4049
  maximum absolute entry in einsum_ir solution: 56.4049
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0153054
  time (eval):    0.00671486
  gflops (eval):  528.481
  gflops (total): 161.155
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0153054,0.00671486,528.481,161.155

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0459948
  gflops (total): 77.1539
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.1539

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163602
  gflops (eval):  216.909
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163602,216.909,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7899
  maximum absolute entry in einsum_ir solution: 58.7899
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0154888
  time (eval):    0.00674519
  gflops (eval):  526.105
  gflops (total): 159.606
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0154888,0.00674519,526.105,159.606

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0459843
  gflops (total): 77.1715
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.1715

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163959
  gflops (eval):  216.437
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163959,216.437,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4472
  maximum absolute entry in einsum_ir solution: 55.4472
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156203
  time (eval):    0.00676448
  gflops (eval):  524.604
  gflops (total): 158.531
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156203,0.00676448,524.604,158.531

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0502785
  gflops (total): 70.5804
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,70.5804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164888
  gflops (eval):  215.217
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164888,215.217,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8841
  maximum absolute entry in einsum_ir solution: 59.8841
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0154977
  time (eval):    0.00669038
  gflops (eval):  530.415
  gflops (total): 159.937
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0154977,0.00669038,530.415,159.937

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0460702
  gflops (total): 77.0276
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.0276

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164406
  gflops (eval):  215.848
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164406,215.848,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5573
  maximum absolute entry in einsum_ir solution: 56.5573
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0149698
  time (eval):    0.00674128
  gflops (eval):  526.41
  gflops (total): 163.45
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0149698,0.00674128,526.41,163.45

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0458588
  gflops (total): 77.3826
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.3826

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163586
  gflops (eval):  216.93
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163586,216.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.8686
  maximum absolute entry in einsum_ir solution: 60.8686
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0153714
  time (eval):    0.00671452
  gflops (eval):  528.508
  gflops (total): 160.676
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0153714,0.00671452,528.508,160.676

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461023
  gflops (total): 76.9739
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.9739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0166877
  gflops (eval):  212.652
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0166877,212.652,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9858
  maximum absolute entry in einsum_ir solution: 55.9858
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0159706
  time (eval):    0.00669197
  gflops (eval):  530.289
  gflops (total): 156.587
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0159706,0.00669197,530.289,156.587

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0458222
  gflops (total): 77.4445
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.4445

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164529
  gflops (eval):  215.687
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164529,215.687,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8299
  maximum absolute entry in einsum_ir solution: 54.8299
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157399
  time (eval):    0.00672991
  gflops (eval):  527.299
  gflops (total): 157.931
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157399,0.00672991,527.299,157.931

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0468122
  gflops (total): 75.8067
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.8067

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164775
  gflops (eval):  215.365
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164775,215.365,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0606
  maximum absolute entry in einsum_ir solution: 59.0606
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0158147
  time (eval):    0.00675799
  gflops (eval):  525.108
  gflops (total): 157.211
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0158147,0.00675799,525.108,157.211

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0453156
  gflops (total): 78.3103
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,78.3103

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163287
  gflops (eval):  217.327
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163287,217.327,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2231
  maximum absolute entry in einsum_ir solution: 56.2231
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0151676
  time (eval):    0.00671266
  gflops (eval):  528.654
  gflops (total): 162.186
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0151676,0.00671266,528.654,162.186

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0495384
  gflops (total): 71.6348
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,71.6348

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016432
  gflops (eval):  215.961
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016432,215.961,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.6306
  maximum absolute entry in einsum_ir solution: 53.6306
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0151241
  time (eval):    0.0066756
  gflops (eval):  531.589
  gflops (total): 162.785
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0151241,0.0066756,531.589,162.785

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461849
  gflops (total): 76.8362
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.8362

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164183
  gflops (eval):  216.142
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164183,216.142,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9314
  maximum absolute entry in einsum_ir solution: 57.9314
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0159708
  time (eval):    0.00669966
  gflops (eval):  529.68
  gflops (total): 156.533
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0159708,0.00669966,529.68,156.533

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0468997
  gflops (total): 75.6652
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.6652

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163013
  gflops (eval):  217.692
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163013,217.692,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7359
  maximum absolute entry in einsum_ir solution: 59.7359
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0154434
  time (eval):    0.00670492
  gflops (eval):  529.265
  gflops (total): 160.223
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0154434,0.00670492,529.265,160.223

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0459195
  gflops (total): 77.2803
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.2803

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163739
  gflops (eval):  216.728
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163739,216.728,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0167
  maximum absolute entry in einsum_ir solution: 58.0167
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155913
  time (eval):    0.0067003
  gflops (eval):  529.629
  gflops (total): 159.193
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155913,0.0067003,529.629,159.193

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0455364
  gflops (total): 77.9306
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.9306

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164119
  gflops (eval):  216.225
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164119,216.225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9361
  maximum absolute entry in einsum_ir solution: 56.9361
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157128
  time (eval):    0.00673
  gflops (eval):  527.292
  gflops (total): 158.121
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157128,0.00673,527.292,158.121

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0462615
  gflops (total): 76.7091
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.7091

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164043
  gflops (eval):  216.326
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164043,216.326,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9127
  maximum absolute entry in einsum_ir solution: 57.9127
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.015675
  time (eval):    0.00671397
  gflops (eval):  528.551
  gflops (total): 158.501
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.015675,0.00671397,528.551,158.501

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0469313
  gflops (total): 75.6142
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.6142

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164656
  gflops (eval):  215.52
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164656,215.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2866
  maximum absolute entry in einsum_ir solution: 61.2866
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0161987
  time (eval):    0.00674396
  gflops (eval):  526.201
  gflops (total): 154.676
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0161987,0.00674396,526.201,154.676

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0465972
  gflops (total): 76.1563
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.1563

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164124
  gflops (eval):  216.22
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164124,216.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2739
  maximum absolute entry in einsum_ir solution: 59.2739
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157914
  time (eval):    0.00672021
  gflops (eval):  528.06
  gflops (total): 157.638
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157914,0.00672021,528.06,157.638

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0499613
  gflops (total): 71.0285
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,71.0285

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164021
  gflops (eval):  216.355
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164021,216.355,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4974
  maximum absolute entry in einsum_ir solution: 55.4974
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.01562
  time (eval):    0.00673899
  gflops (eval):  526.589
  gflops (total): 158.713
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.01562,0.00673899,526.589,158.713

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0503835
  gflops (total): 70.4332
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,70.4332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163901
  gflops (eval):  216.513
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163901,216.513,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6715
  maximum absolute entry in einsum_ir solution: 58.6715
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155143
  time (eval):    0.00670693
  gflops (eval):  529.106
  gflops (total): 159.697
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155143,0.00670693,529.106,159.697

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0494843
  gflops (total): 71.7132
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,71.7132

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164705
  gflops (eval):  215.457
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164705,215.457,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6131
  maximum absolute entry in einsum_ir solution: 58.6131
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155379
  time (eval):    0.00666301
  gflops (eval):  532.593
  gflops (total): 159.844
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155379,0.00666301,532.593,159.844

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0462094
  gflops (total): 76.7956
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.7956

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164739
  gflops (eval):  215.412
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164739,215.412,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5676
  maximum absolute entry in einsum_ir solution: 57.5676
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0154748
  time (eval):    0.0068966
  gflops (eval):  514.555
  gflops (total): 158.626
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0154748,0.0068966,514.555,158.626

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0468532
  gflops (total): 75.7403
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.7403

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016348
  gflops (eval):  217.07
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016348,217.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8018
  maximum absolute entry in einsum_ir solution: 57.8018
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0156531
  time (eval):    0.00691573
  gflops (eval):  513.131
  gflops (total): 157.238
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0156531,0.00691573,513.131,157.238

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0456678
  gflops (total): 77.7063
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.7063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163954
  gflops (eval):  216.444
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163954,216.444,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.2281
  maximum absolute entry in einsum_ir solution: 55.2281
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157622
  time (eval):    0.00670811
  gflops (eval):  529.013
  gflops (total): 157.927
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157622,0.00670811,529.013,157.927

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0467415
  gflops (total): 75.9212
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.9212

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165369
  gflops (eval):  214.591
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165369,214.591,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3714
  maximum absolute entry in einsum_ir solution: 55.3714
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0150282
  time (eval):    0.00693101
  gflops (eval):  512
  gflops (total): 161.603
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0150282,0.00693101,512,161.603

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0459057
  gflops (total): 77.3037
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.3037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164603
  gflops (eval):  215.589
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164603,215.589,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.2023
  maximum absolute entry in einsum_ir solution: 64.2023
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0153774
  time (eval):    0.00696913
  gflops (eval):  509.199
  gflops (total): 158.802
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0153774,0.00696913,509.199,158.802

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0461202
  gflops (total): 76.9441
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,76.9441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0164419
  gflops (eval):  215.831
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0164419,215.831,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1035
  maximum absolute entry in einsum_ir solution: 59.1035
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155423
  time (eval):    0.00662641
  gflops (eval):  535.535
  gflops (total): 160.076
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155423,0.00662641,535.535,160.076

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0457101
  gflops (total): 77.6344
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,77.6344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.016399
  gflops (eval):  216.396
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.016399,216.396,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7434
  maximum absolute entry in einsum_ir solution: 57.7434
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0155002
  time (eval):    0.00667615
  gflops (eval):  531.545
  gflops (total): 160.021
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0155002,0.00667615,531.545,160.021

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0508597
  gflops (total): 69.7739
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,69.7739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0165141
  gflops (eval):  214.887
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0165141,214.887,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9796
  maximum absolute entry in einsum_ir solution: 57.9796
  maximum element-wise difference:              0
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0157904
  time (eval):    0.00696633
  gflops (eval):  509.404
  gflops (total): 155.94
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0157904,0.00696633,509.404,155.94

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.0471549
  gflops (total): 75.2557
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,75.2557

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0163352
  gflops (eval):  217.242
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0163352,217.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1418
  maximum absolute entry in einsum_ir solution: 61.1418
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135577
  time (eval):    0.0161822
  gflops (eval):  420.711
  gflops (total): 228.92
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135577,0.0161822,420.711,228.92

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0955406
  gflops (total): 71.2582
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.2582

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0317577
  gflops (eval):  214.375
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0317577,214.375,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.566
  maximum absolute entry in einsum_ir solution: 49.566
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135326
  time (eval):    0.0155424
  gflops (eval):  438.03
  gflops (total): 234.155
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135326,0.0155424,438.03,234.155

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0930041
  gflops (total): 73.2015
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.2015

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0317086
  gflops (eval):  214.707
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0317086,214.707,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.0945
  maximum absolute entry in einsum_ir solution: 44.0945
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137305
  time (eval):    0.0155841
  gflops (eval):  436.859
  gflops (total): 232.241
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137305,0.0155841,436.859,232.241

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.09382
  gflops (total): 72.5649
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.5649

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0309968
  gflops (eval):  219.637
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0309968,219.637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.1157
  maximum absolute entry in einsum_ir solution: 46.1157
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134817
  time (eval):    0.0157805
  gflops (eval):  431.42
  gflops (total): 232.657
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134817,0.0157805,431.42,232.657

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0938133
  gflops (total): 72.5701
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.5701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310535
  gflops (eval):  219.236
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310535,219.236,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.4481
  maximum absolute entry in einsum_ir solution: 46.4481
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136127
  time (eval):    0.0156177
  gflops (eval):  435.919
  gflops (total): 232.91
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136127,0.0156177,435.919,232.91

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.093295
  gflops (total): 72.9733
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.9733

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0308501
  gflops (eval):  220.682
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0308501,220.682,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.1525
  maximum absolute entry in einsum_ir solution: 46.1525
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136753
  time (eval):    0.0155776
  gflops (eval):  437.041
  gflops (total): 232.731
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136753,0.0155776,437.041,232.731

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0952901
  gflops (total): 71.4455
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.4455

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313752
  gflops (eval):  216.988
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313752,216.988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.2236
  maximum absolute entry in einsum_ir solution: 43.2236
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0139401
  time (eval):    0.0156741
  gflops (eval):  434.349
  gflops (total): 229.891
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0139401,0.0156741,434.349,229.891

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0956335
  gflops (total): 71.1889
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.1889

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0318725
  gflops (eval):  213.602
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0318725,213.602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.1676
  maximum absolute entry in einsum_ir solution: 47.1676
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136248
  time (eval):    0.0155397
  gflops (eval):  438.105
  gflops (total): 233.436
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136248,0.0155397,438.105,233.436

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0958871
  gflops (total): 71.0006
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.0006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310306
  gflops (eval):  219.398
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310306,219.398,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.2983
  maximum absolute entry in einsum_ir solution: 44.2983
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013568
  time (eval):    0.0155848
  gflops (eval):  436.839
  gflops (total): 233.53
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013568,0.0155848,436.839,233.53

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0954468
  gflops (total): 71.3281
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.3281

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0314522
  gflops (eval):  216.457
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0314522,216.457,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.9629
  maximum absolute entry in einsum_ir solution: 43.9629
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0139996
  time (eval):    0.0155966
  gflops (eval):  436.507
  gflops (total): 230.031
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0139996,0.0155966,436.507,230.031

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0931344
  gflops (total): 73.0991
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.0991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0314026
  gflops (eval):  216.799
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0314026,216.799,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.7338
  maximum absolute entry in einsum_ir solution: 43.7338
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136533
  time (eval):    0.0156891
  gflops (eval):  433.936
  gflops (total): 232.021
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136533,0.0156891,433.936,232.021

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0933455
  gflops (total): 72.9338
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.9338

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0318333
  gflops (eval):  213.866
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0318333,213.866,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.1571
  maximum absolute entry in einsum_ir solution: 46.1571
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136965
  time (eval):    0.0162819
  gflops (eval):  418.136
  gflops (total): 227.098
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136965,0.0162819,418.136,227.098

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0940759
  gflops (total): 72.3675
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.3675

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0317223
  gflops (eval):  214.614
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0317223,214.614,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.0677
  maximum absolute entry in einsum_ir solution: 42.0677
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134701
  time (eval):    0.0161843
  gflops (eval):  420.657
  gflops (total): 229.579
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134701,0.0161843,420.657,229.579

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0946099
  gflops (total): 71.9591
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.9591

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315478
  gflops (eval):  215.801
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315478,215.801,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.2704
  maximum absolute entry in einsum_ir solution: 45.2704
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134553
  time (eval):    0.0157983
  gflops (eval):  430.935
  gflops (total): 232.725
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134553,0.0157983,430.935,232.725

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0967209
  gflops (total): 70.3886
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.3886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312739
  gflops (eval):  217.691
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312739,217.691,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0831
  maximum absolute entry in einsum_ir solution: 41.0831
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0140487
  time (eval):    0.0160651
  gflops (eval):  423.778
  gflops (total): 226.077
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0140487,0.0160651,423.778,226.077

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0947171
  gflops (total): 71.8776
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.8776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0319812
  gflops (eval):  212.876
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0319812,212.876,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.5597
  maximum absolute entry in einsum_ir solution: 44.5597
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134006
  time (eval):    0.016159
  gflops (eval):  421.315
  gflops (total): 230.315
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134006,0.016159,421.315,230.315

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0936672
  gflops (total): 72.6833
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.6833

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.030666
  gflops (eval):  222.007
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.030666,222.007,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.4302
  maximum absolute entry in einsum_ir solution: 44.4302
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134529
  time (eval):    0.015755
  gflops (eval):  432.121
  gflops (total): 233.09
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134529,0.015755,432.121,233.09

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0950509
  gflops (total): 71.6252
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.6252

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0307081
  gflops (eval):  221.702
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0307081,221.702,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4211
  maximum absolute entry in einsum_ir solution: 42.4211
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0138683
  time (eval):    0.0156122
  gflops (eval):  436.071
  gflops (total): 230.933
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0138683,0.0156122,436.071,230.933

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.095337
  gflops (total): 71.4103
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.4103

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0309619
  gflops (eval):  219.885
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0309619,219.885,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.0664
  maximum absolute entry in einsum_ir solution: 48.0664
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0138165
  time (eval):    0.0161271
  gflops (eval):  422.148
  gflops (total): 227.362
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0138165,0.0161271,422.148,227.362

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.095187
  gflops (total): 71.5228
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.5228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315777
  gflops (eval):  215.597
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315777,215.597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.6831
  maximum absolute entry in einsum_ir solution: 46.6831
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136509
  time (eval):    0.0168153
  gflops (eval):  404.871
  gflops (total): 223.462
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136509,0.0168153,404.871,223.462

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0952184
  gflops (total): 71.4992
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.4992

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315675
  gflops (eval):  215.666
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315675,215.666,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1745
  maximum absolute entry in einsum_ir solution: 40.1745
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134612
  time (eval):    0.0157104
  gflops (eval):  433.347
  gflops (total): 233.38
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134612,0.0157104,433.347,233.38

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0959532
  gflops (total): 70.9517
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.9517

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0314734
  gflops (eval):  216.311
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0314734,216.311,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4846
  maximum absolute entry in einsum_ir solution: 40.4846
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135416
  time (eval):    0.0155137
  gflops (eval):  438.841
  gflops (total): 234.314
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135416,0.0155137,438.841,234.314

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0948585
  gflops (total): 71.7705
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.7705

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310279
  gflops (eval):  219.417
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310279,219.417,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0788
  maximum absolute entry in einsum_ir solution: 41.0788
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134952
  time (eval):    0.0162484
  gflops (eval):  418.997
  gflops (total): 228.891
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134952,0.0162484,418.997,228.891

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0959741
  gflops (total): 70.9363
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.9363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310563
  gflops (eval):  219.216
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310563,219.216,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1884
  maximum absolute entry in einsum_ir solution: 39.1884
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137039
  time (eval):    0.0162098
  gflops (eval):  419.995
  gflops (total): 227.59
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137039,0.0162098,419.995,227.59

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0952287
  gflops (total): 71.4915
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.4915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315596
  gflops (eval):  215.72
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315596,215.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.4436
  maximum absolute entry in einsum_ir solution: 43.4436
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0140288
  time (eval):    0.0162655
  gflops (eval):  418.557
  gflops (total): 224.73
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0140288,0.0162655,418.557,224.73

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0947729
  gflops (total): 71.8353
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.8353

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0309717
  gflops (eval):  219.815
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0309717,219.815,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1348
  maximum absolute entry in einsum_ir solution: 38.1348
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013595
  time (eval):    0.0156096
  gflops (eval):  436.144
  gflops (total): 233.115
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013595,0.0156096,436.144,233.115

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0963701
  gflops (total): 70.6448
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.6448

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315487
  gflops (eval):  215.795
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315487,215.795,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.0074
  maximum absolute entry in einsum_ir solution: 45.0074
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136726
  time (eval):    0.0154337
  gflops (eval):  441.115
  gflops (total): 233.903
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136726,0.0154337,441.115,233.903

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0959766
  gflops (total): 70.9344
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.9344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312937
  gflops (eval):  217.553
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312937,217.553,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.3523
  maximum absolute entry in einsum_ir solution: 42.3523
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135563
  time (eval):    0.0162577
  gflops (eval):  418.758
  gflops (total): 228.35
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135563,0.0162577,418.758,228.35

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.096163
  gflops (total): 70.7969
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.7969

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0323569
  gflops (eval):  210.404
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0323569,210.404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.7416
  maximum absolute entry in einsum_ir solution: 42.7416
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0133792
  time (eval):    0.0161902
  gflops (eval):  420.505
  gflops (total): 230.24
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0133792,0.0161902,420.505,230.24

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0946913
  gflops (total): 71.8973
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.8973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.031417
  gflops (eval):  216.699
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.031417,216.699,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.8233
  maximum absolute entry in einsum_ir solution: 44.8233
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0131409
  time (eval):    0.0158465
  gflops (eval):  429.626
  gflops (total): 234.863
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0131409,0.0158465,429.626,234.863

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0954484
  gflops (total): 71.327
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.327

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.031379
  gflops (eval):  216.962
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.031379,216.962,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.385
  maximum absolute entry in einsum_ir solution: 42.385
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0138286
  time (eval):    0.0161315
  gflops (eval):  422.034
  gflops (total): 227.237
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0138286,0.0161315,422.034,227.237

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0968466
  gflops (total): 70.2972
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.2972

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.030671
  gflops (eval):  221.97
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.030671,221.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.825
  maximum absolute entry in einsum_ir solution: 47.825
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136205
  time (eval):    0.0161287
  gflops (eval):  422.108
  gflops (total): 228.848
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136205,0.0161287,422.108,228.848

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0957219
  gflops (total): 71.1232
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.1232

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315349
  gflops (eval):  215.889
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315349,215.889,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.714
  maximum absolute entry in einsum_ir solution: 39.714
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.01364
  time (eval):    0.0155266
  gflops (eval):  438.476
  gflops (total): 233.419
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.01364,0.0155266,438.476,233.419

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0945293
  gflops (total): 72.0205
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.0205

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0308432
  gflops (eval):  220.731
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0308432,220.731,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.3994
  maximum absolute entry in einsum_ir solution: 44.3994
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136341
  time (eval):    0.015412
  gflops (eval):  441.737
  gflops (total): 234.387
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136341,0.015412,441.737,234.387

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0955814
  gflops (total): 71.2277
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.2277

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310228
  gflops (eval):  219.453
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310228,219.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.1739
  maximum absolute entry in einsum_ir solution: 44.1739
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.012914
  time (eval):    0.0155012
  gflops (eval):  439.194
  gflops (total): 239.591
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.012914,0.0155012,439.194,239.591

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0944323
  gflops (total): 72.0944
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.0944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0317576
  gflops (eval):  214.375
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0317576,214.375,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.3621
  maximum absolute entry in einsum_ir solution: 46.3621
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134683
  time (eval):    0.0162724
  gflops (eval):  418.379
  gflops (total): 228.913
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134683,0.0162724,418.379,228.913

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0953389
  gflops (total): 71.4088
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.4088

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0323011
  gflops (eval):  210.768
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0323011,210.768,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.2042
  maximum absolute entry in einsum_ir solution: 45.2042
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134836
  time (eval):    0.0162916
  gflops (eval):  417.887
  gflops (total): 228.648
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134836,0.0162916,417.887,228.648

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0967208
  gflops (total): 70.3886
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.3886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315432
  gflops (eval):  215.833
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315432,215.833,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.6004
  maximum absolute entry in einsum_ir solution: 45.6004
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135452
  time (eval):    0.0163197
  gflops (eval):  417.166
  gflops (total): 227.961
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135452,0.0163197,417.166,227.961

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0951483
  gflops (total): 71.5519
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.5519

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0308313
  gflops (eval):  220.816
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0308313,220.816,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.0144
  maximum absolute entry in einsum_ir solution: 46.0144
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137286
  time (eval):    0.0162117
  gflops (eval):  419.947
  gflops (total): 227.388
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137286,0.0162117,419.947,227.388

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0958393
  gflops (total): 71.0361
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.0361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0314243
  gflops (eval):  216.649
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0314243,216.649,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.889
  maximum absolute entry in einsum_ir solution: 42.889
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134658
  time (eval):    0.0162569
  gflops (eval):  418.778
  gflops (total): 229.052
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134658,0.0162569,418.778,229.052

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0929636
  gflops (total): 73.2334
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.2334

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0318671
  gflops (eval):  213.639
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0318671,213.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.3616
  maximum absolute entry in einsum_ir solution: 45.3616
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135282
  time (eval):    0.0161608
  gflops (eval):  421.268
  gflops (total): 229.312
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135282,0.0161608,421.268,229.312

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0944238
  gflops (total): 72.1009
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.1009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0309732
  gflops (eval):  219.804
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0309732,219.804,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.5579
  maximum absolute entry in einsum_ir solution: 44.5579
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136698
  time (eval):    0.0162148
  gflops (eval):  419.865
  gflops (total): 227.811
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136698,0.0162148,419.865,227.811

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0940332
  gflops (total): 72.4004
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.4004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313445
  gflops (eval):  217.201
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313445,217.201,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.021
  maximum absolute entry in einsum_ir solution: 42.021
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0139441
  time (eval):    0.0154682
  gflops (eval):  440.131
  gflops (total): 231.469
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0139441,0.0154682,440.131,231.469

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.094914
  gflops (total): 71.7285
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.7285

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315899
  gflops (eval):  215.513
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315899,215.513,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.5524
  maximum absolute entry in einsum_ir solution: 40.5524
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136222
  time (eval):    0.0155766
  gflops (eval):  437.07
  gflops (total): 233.162
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136222,0.0155766,437.07,233.162

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0955685
  gflops (total): 71.2373
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.2373

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.03138
  gflops (eval):  216.955
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.03138,216.955,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.6898
  maximum absolute entry in einsum_ir solution: 41.6898
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137919
  time (eval):    0.0160757
  gflops (eval):  423.5
  gflops (total): 227.941
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137919,0.0160757,423.5,227.941

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0942729
  gflops (total): 72.2163
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.2163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0307036
  gflops (eval):  221.734
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0307036,221.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.1843
  maximum absolute entry in einsum_ir solution: 43.1843
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134786
  time (eval):    0.0160724
  gflops (eval):  423.586
  gflops (total): 230.383
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134786,0.0160724,423.586,230.383

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0965971
  gflops (total): 70.4788
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.4788

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0308772
  gflops (eval):  220.488
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0308772,220.488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.7928
  maximum absolute entry in einsum_ir solution: 47.7928
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0141775
  time (eval):    0.0156121
  gflops (eval):  436.075
  gflops (total): 228.538
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0141775,0.0156121,436.075,228.538

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0946711
  gflops (total): 71.9126
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.9126

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0316334
  gflops (eval):  215.217
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0316334,215.217,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.0643
  maximum absolute entry in einsum_ir solution: 45.0643
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135858
  time (eval):    0.015669
  gflops (eval):  434.491
  gflops (total): 232.715
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135858,0.015669,434.491,232.715

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.093877
  gflops (total): 72.5209
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.5209

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0317771
  gflops (eval):  214.244
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0317771,214.244,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.3204
  maximum absolute entry in einsum_ir solution: 40.3204
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134223
  time (eval):    0.0155647
  gflops (eval):  437.404
  gflops (total): 234.866
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134223,0.0155647,437.404,234.866

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0948065
  gflops (total): 71.8099
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.8099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0308011
  gflops (eval):  221.033
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0308011,221.033,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.2696
  maximum absolute entry in einsum_ir solution: 40.2696
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013726
  time (eval):    0.0156707
  gflops (eval):  434.444
  gflops (total): 231.592
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013726,0.0156707,434.444,231.592

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0949891
  gflops (total): 71.6718
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.6718

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315186
  gflops (eval):  216.001
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315186,216.001,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.9858
  maximum absolute entry in einsum_ir solution: 45.9858
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135637
  time (eval):    0.0162684
  gflops (eval):  418.482
  gflops (total): 228.212
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135637,0.0162684,418.482,228.212

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0938135
  gflops (total): 72.57
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.57

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0311959
  gflops (eval):  218.236
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0311959,218.236,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6565
  maximum absolute entry in einsum_ir solution: 38.6565
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135473
  time (eval):    0.0156727
  gflops (eval):  434.388
  gflops (total): 232.992
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135473,0.0156727,434.388,232.992

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0943853
  gflops (total): 72.1304
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.1304

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0318713
  gflops (eval):  213.61
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0318713,213.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.9915
  maximum absolute entry in einsum_ir solution: 45.9915
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137033
  time (eval):    0.0156322
  gflops (eval):  435.514
  gflops (total): 232.076
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137033,0.0156322,435.514,232.076

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0930352
  gflops (total): 73.1771
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.1771

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312457
  gflops (eval):  217.887
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312457,217.887,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.4877
  maximum absolute entry in einsum_ir solution: 46.4877
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.014015
  time (eval):    0.0154622
  gflops (eval):  440.302
  gflops (total): 230.96
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.014015,0.0154622,440.302,230.96

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0943303
  gflops (total): 72.1724
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.1724

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0309154
  gflops (eval):  220.215
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0309154,220.215,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.5518
  maximum absolute entry in einsum_ir solution: 45.5518
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134929
  time (eval):    0.015582
  gflops (eval):  436.918
  gflops (total): 234.155
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134929,0.015582,436.918,234.155

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.095595
  gflops (total): 71.2176
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.2176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310334
  gflops (eval):  219.378
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310334,219.378,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.319
  maximum absolute entry in einsum_ir solution: 43.319
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0130325
  time (eval):    0.0161914
  gflops (eval):  420.473
  gflops (total): 232.961
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0130325,0.0161914,420.473,232.961

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.09384
  gflops (total): 72.5495
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.5495

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.031353
  gflops (eval):  217.142
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.031353,217.142,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.9104
  maximum absolute entry in einsum_ir solution: 44.9104
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0138677
  time (eval):    0.0155538
  gflops (eval):  437.711
  gflops (total): 231.397
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0138677,0.0155538,437.711,231.397

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0962905
  gflops (total): 70.7032
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.7032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.032693
  gflops (eval):  208.241
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.032693,208.241,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.3947
  maximum absolute entry in einsum_ir solution: 44.3947
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137658
  time (eval):    0.0155187
  gflops (eval):  438.7
  gflops (total): 232.479
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137658,0.0155187,438.7,232.479

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0944684
  gflops (total): 72.0669
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.0669

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0309323
  gflops (eval):  220.095
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0309323,220.095,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.1689
  maximum absolute entry in einsum_ir solution: 46.1689
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134437
  time (eval):    0.015995
  gflops (eval):  425.636
  gflops (total): 231.262
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134437,0.015995,425.636,231.262

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0950412
  gflops (total): 71.6325
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.6325

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0322681
  gflops (eval):  210.984
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0322681,210.984,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.0579
  maximum absolute entry in einsum_ir solution: 46.0579
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0133216
  time (eval):    0.0156059
  gflops (eval):  436.249
  gflops (total): 235.349
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0133216,0.0156059,436.249,235.349

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0945062
  gflops (total): 72.0381
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.0381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0319309
  gflops (eval):  213.212
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0319309,213.212,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.5136
  maximum absolute entry in einsum_ir solution: 41.5136
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136681
  time (eval):    0.0161678
  gflops (eval):  421.085
  gflops (total): 228.182
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136681,0.0161678,421.085,228.182

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0958748
  gflops (total): 71.0097
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.0097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0317968
  gflops (eval):  214.111
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0317968,214.111,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.0808
  maximum absolute entry in einsum_ir solution: 44.0808
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013365
  time (eval):    0.0160434
  gflops (eval):  424.351
  gflops (total): 231.499
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013365,0.0160434,424.351,231.499

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.095818
  gflops (total): 71.0518
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.0518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313279
  gflops (eval):  217.316
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313279,217.316,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.6268
  maximum absolute entry in einsum_ir solution: 46.6268
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137496
  time (eval):    0.0154978
  gflops (eval):  439.291
  gflops (total): 232.775
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137496,0.0154978,439.291,232.775

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0942847
  gflops (total): 72.2073
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.2073

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.032121
  gflops (eval):  211.95
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.032121,211.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.6849
  maximum absolute entry in einsum_ir solution: 44.6849
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013691
  time (eval):    0.0154763
  gflops (eval):  439.901
  gflops (total): 233.414
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013691,0.0154763,439.901,233.414

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.094793
  gflops (total): 71.8201
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.8201

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.031344
  gflops (eval):  217.204
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.031344,217.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.2551
  maximum absolute entry in einsum_ir solution: 41.2551
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136783
  time (eval):    0.0156364
  gflops (eval):  435.396
  gflops (total): 232.239
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136783,0.0156364,435.396,232.239

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0958975
  gflops (total): 70.9929
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.9929

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315018
  gflops (eval):  216.116
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315018,216.116,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.236
  maximum absolute entry in einsum_ir solution: 42.236
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013664
  time (eval):    0.015601
  gflops (eval):  436.384
  gflops (total): 232.634
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013664,0.015601,436.384,232.634

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0958545
  gflops (total): 71.0248
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.0248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.030858
  gflops (eval):  220.625
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.030858,220.625,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.2043
  maximum absolute entry in einsum_ir solution: 42.2043
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0140688
  time (eval):    0.0164217
  gflops (eval):  414.576
  gflops (total): 223.284
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0140688,0.0164217,414.576,223.284

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0947099
  gflops (total): 71.8831
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.8831

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0319041
  gflops (eval):  213.391
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0319041,213.391,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.4044
  maximum absolute entry in einsum_ir solution: 43.4044
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0139303
  time (eval):    0.0162414
  gflops (eval):  419.179
  gflops (total): 225.643
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0139303,0.0162414,419.179,225.643

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.095487
  gflops (total): 71.2981
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.2981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312156
  gflops (eval):  218.097
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312156,218.097,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.1856
  maximum absolute entry in einsum_ir solution: 42.1856
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136511
  time (eval):    0.0156338
  gflops (eval):  435.47
  gflops (total): 232.476
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136511,0.0156338,435.47,232.476

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0962814
  gflops (total): 70.7099
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.7099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0322052
  gflops (eval):  211.396
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0322052,211.396,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.5424
  maximum absolute entry in einsum_ir solution: 49.5424
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135813
  time (eval):    0.0158895
  gflops (eval):  428.461
  gflops (total): 231.01
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135813,0.0158895,428.461,231.01

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0947256
  gflops (total): 71.8712
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.8712

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.031628
  gflops (eval):  215.254
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.031628,215.254,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.3791
  maximum absolute entry in einsum_ir solution: 42.3791
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135895
  time (eval):    0.0162203
  gflops (eval):  419.723
  gflops (total): 228.382
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135895,0.0162203,419.723,228.382

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0942878
  gflops (total): 72.2049
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.2049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0308285
  gflops (eval):  220.836
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0308285,220.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.5055
  maximum absolute entry in einsum_ir solution: 44.5055
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136841
  time (eval):    0.0161232
  gflops (eval):  422.251
  gflops (total): 228.402
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136841,0.0161232,422.251,228.402

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0950217
  gflops (total): 71.6473
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.6473

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310003
  gflops (eval):  219.613
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310003,219.613,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.6085
  maximum absolute entry in einsum_ir solution: 41.6085
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136005
  time (eval):    0.0158392
  gflops (eval):  429.822
  gflops (total): 231.254
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136005,0.0158392,429.822,231.254

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0925346
  gflops (total): 73.573
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0318657
  gflops (eval):  213.648
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0318657,213.648,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.0249
  maximum absolute entry in einsum_ir solution: 44.0249
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136489
  time (eval):    0.0162712
  gflops (eval):  418.411
  gflops (total): 227.541
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136489,0.0162712,418.411,227.541

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0944018
  gflops (total): 72.1178
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.1178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0314952
  gflops (eval):  216.161
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0314952,216.161,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.477
  maximum absolute entry in einsum_ir solution: 42.477
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136245
  time (eval):    0.0156786
  gflops (eval):  434.225
  gflops (total): 232.332
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136245,0.0156786,434.225,232.332

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0939869
  gflops (total): 72.4361
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.4361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313862
  gflops (eval):  216.912
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313862,216.912,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.6048
  maximum absolute entry in einsum_ir solution: 46.6048
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0141508
  time (eval):    0.0154356
  gflops (eval):  441.06
  gflops (total): 230.107
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0141508,0.0154356,441.06,230.107

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0946319
  gflops (total): 71.9424
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.9424

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0307067
  gflops (eval):  221.712
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0307067,221.712,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.2644
  maximum absolute entry in einsum_ir solution: 43.2644
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137002
  time (eval):    0.0155402
  gflops (eval):  438.093
  gflops (total): 232.83
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137002,0.0155402,438.093,232.83

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0950633
  gflops (total): 71.6159
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.6159

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0307744
  gflops (eval):  221.224
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0307744,221.224,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.2591
  maximum absolute entry in einsum_ir solution: 46.2591
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0139972
  time (eval):    0.0155453
  gflops (eval):  437.949
  gflops (total): 230.449
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0139972,0.0155453,437.949,230.449

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0951514
  gflops (total): 71.5496
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.5496

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315002
  gflops (eval):  216.127
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315002,216.127,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.8716
  maximum absolute entry in einsum_ir solution: 42.8716
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135889
  time (eval):    0.0161606
  gflops (eval):  421.275
  gflops (total): 228.846
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135889,0.0161606,421.275,228.846

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0923601
  gflops (total): 73.7119
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.7119

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0309256
  gflops (eval):  220.142
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0309256,220.142,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.8147
  maximum absolute entry in einsum_ir solution: 43.8147
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136181
  time (eval):    0.01545
  gflops (eval):  440.65
  gflops (total): 234.21
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136181,0.01545,440.65,234.21

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0953378
  gflops (total): 71.4097
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.4097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0309856
  gflops (eval):  219.716
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0309856,219.716,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.3333
  maximum absolute entry in einsum_ir solution: 44.3333
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013615
  time (eval):    0.0162194
  gflops (eval):  419.748
  gflops (total): 228.195
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013615,0.0162194,419.748,228.195

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0934924
  gflops (total): 72.8192
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.8192

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0312916
  gflops (eval):  217.568
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0312916,217.568,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.3086
  maximum absolute entry in einsum_ir solution: 40.3086
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136533
  time (eval):    0.0160264
  gflops (eval):  424.802
  gflops (total): 229.384
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136533,0.0160264,424.802,229.384

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0948404
  gflops (total): 71.7842
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.7842

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0309126
  gflops (eval):  220.235
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0309126,220.235,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.1476
  maximum absolute entry in einsum_ir solution: 43.1476
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137501
  time (eval):    0.0154014
  gflops (eval):  442.04
  gflops (total): 233.54
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137501,0.0154014,442.04,233.54

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0945845
  gflops (total): 71.9784
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.9784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313028
  gflops (eval):  217.49
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313028,217.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.0993
  maximum absolute entry in einsum_ir solution: 46.0993
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137295
  time (eval):    0.0162111
  gflops (eval):  419.961
  gflops (total): 227.384
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137295,0.0162111,419.961,227.384

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0964542
  gflops (total): 70.5832
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.5832

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0326081
  gflops (eval):  208.784
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0326081,208.784,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.1719
  maximum absolute entry in einsum_ir solution: 44.1719
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013567
  time (eval):    0.0155007
  gflops (eval):  439.208
  gflops (total): 234.213
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013567,0.0155007,439.208,234.213

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0953463
  gflops (total): 71.4033
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.4033

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0315531
  gflops (eval):  215.764
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0315531,215.764,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.6703
  maximum absolute entry in einsum_ir solution: 42.6703
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0138014
  time (eval):    0.0156533
  gflops (eval):  434.928
  gflops (total): 231.136
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0138014,0.0156533,434.928,231.136

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0943624
  gflops (total): 72.1478
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.1478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0308585
  gflops (eval):  220.621
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0308585,220.621,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.2133
  maximum absolute entry in einsum_ir solution: 45.2133
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134589
  time (eval):    0.0155343
  gflops (eval):  438.259
  gflops (total): 234.815
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134589,0.0155343,438.259,234.815

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0938058
  gflops (total): 72.5759
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.5759

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313372
  gflops (eval):  217.252
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313372,217.252,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.3429
  maximum absolute entry in einsum_ir solution: 43.3429
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0140587
  time (eval):    0.015667
  gflops (eval):  434.548
  gflops (total): 229.029
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0140587,0.015667,434.548,229.029

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0948988
  gflops (total): 71.74
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310263
  gflops (eval):  219.428
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310263,219.428,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.1358
  maximum absolute entry in einsum_ir solution: 41.1358
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0131962
  time (eval):    0.0162847
  gflops (eval):  418.063
  gflops (total): 230.93
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0131962,0.0162847,418.063,230.93

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.094669
  gflops (total): 71.9142
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.9142

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0319011
  gflops (eval):  213.411
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0319011,213.411,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.8405
  maximum absolute entry in einsum_ir solution: 42.8405
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136947
  time (eval):    0.0162497
  gflops (eval):  418.963
  gflops (total): 227.356
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136947,0.0162497,418.963,227.356

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0958424
  gflops (total): 71.0338
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.0338

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0314416
  gflops (eval):  216.53
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0314416,216.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.2778
  maximum absolute entry in einsum_ir solution: 42.2778
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0134586
  time (eval):    0.0163192
  gflops (eval):  417.181
  gflops (total): 228.629
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0134586,0.0163192,417.181,228.629

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0934435
  gflops (total): 72.8573
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.8573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0316533
  gflops (eval):  215.081
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0316533,215.081,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.0769
  maximum absolute entry in einsum_ir solution: 46.0769
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0141013
  time (eval):    0.0162512
  gflops (eval):  418.926
  gflops (total): 224.3
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0141013,0.0162512,418.926,224.3

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0944367
  gflops (total): 72.0911
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.0911

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.031439
  gflops (eval):  216.547
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.031439,216.547,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4781
  maximum absolute entry in einsum_ir solution: 40.4781
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0136044
  time (eval):    0.0155795
  gflops (eval):  436.987
  gflops (total): 233.281
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0136044,0.0155795,436.987,233.281

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0957598
  gflops (total): 71.095
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.095

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0311216
  gflops (eval):  218.756
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0311216,218.756,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.1375
  maximum absolute entry in einsum_ir solution: 50.1375
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0132099
  time (eval):    0.015463
  gflops (eval):  440.28
  gflops (total): 237.439
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0132099,0.015463,440.28,237.439

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0951017
  gflops (total): 71.5869
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.5869

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0310232
  gflops (eval):  219.45
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0310232,219.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.3805
  maximum absolute entry in einsum_ir solution: 40.3805
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137025
  time (eval):    0.0161851
  gflops (eval):  420.637
  gflops (total): 227.788
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137025,0.0161851,420.637,227.788

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0958872
  gflops (total): 71.0005
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.0005

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.030843
  gflops (eval):  220.732
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.030843,220.732,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.8545
  maximum absolute entry in einsum_ir solution: 44.8545
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135029
  time (eval):    0.0155319
  gflops (eval):  438.326
  gflops (total): 234.479
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135029,0.0155319,438.326,234.479

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0946985
  gflops (total): 71.8918
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.8918

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0309156
  gflops (eval):  220.214
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0309156,220.214,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.1651
  maximum absolute entry in einsum_ir solution: 43.1651
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.013482
  time (eval):    0.0156594
  gflops (eval):  434.759
  gflops (total): 233.621
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.013482,0.0156594,434.759,233.621

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0961226
  gflops (total): 70.8266
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,70.8266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0313082
  gflops (eval):  217.453
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0313082,217.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.5582
  maximum absolute entry in einsum_ir solution: 43.5582
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0135595
  time (eval):    0.0154797
  gflops (eval):  439.804
  gflops (total): 234.443
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0135595,0.0154797,439.804,234.443

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0944493
  gflops (total): 72.0815
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,72.0815

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.031735
  gflops (eval):  214.528
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.031735,214.528,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.8815
  maximum absolute entry in einsum_ir solution: 42.8815
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0137199
  time (eval):    0.0161171
  gflops (eval):  422.412
  gflops (total): 228.175
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0137199,0.0161171,422.412,228.175

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0952038
  gflops (total): 71.5102
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,71.5102

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0309424
  gflops (eval):  220.023
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0309424,220.023,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.695
  maximum absolute entry in einsum_ir solution: 41.695
  maximum element-wise difference:              0
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0133272
  time (eval):    0.0161809
  gflops (eval):  420.747
  gflops (total): 230.718
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0133272,0.0161809,420.747,230.718

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.0925292
  gflops (total): 73.5773
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,73.5773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0316904
  gflops (eval):  214.83
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0316904,214.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.9323
  maximum absolute entry in einsum_ir solution: 42.9323
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152349
  time (eval):    0.00584272
  gflops (eval):  531.049
  gflops (total): 147.207
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152349,0.00584272,531.049,147.207

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0462293
  gflops (total): 67.1169
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,67.1169

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147796
  gflops (eval):  209.936
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147796,209.936,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.1123
  maximum absolute entry in einsum_ir solution: 51.1123
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156465
  time (eval):    0.00586302
  gflops (eval):  529.21
  gflops (total): 144.251
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156465,0.00586302,529.21,144.251

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0471941
  gflops (total): 65.7448
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.7448

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148544
  gflops (eval):  208.879
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148544,208.879,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.1146
  maximum absolute entry in einsum_ir solution: 51.1146
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0151508
  time (eval):    0.00588044
  gflops (eval):  527.642
  gflops (total): 147.532
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0151508,0.00588044,527.642,147.532

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467687
  gflops (total): 66.3428
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.3428

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148312
  gflops (eval):  209.206
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148312,209.206,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.1964
  maximum absolute entry in einsum_ir solution: 52.1964
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0151702
  time (eval):    0.00587178
  gflops (eval):  528.42
  gflops (total): 147.456
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0151702,0.00587178,528.42,147.456

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0462094
  gflops (total): 67.1459
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,67.1459

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148589
  gflops (eval):  208.816
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148589,208.816,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.553
  maximum absolute entry in einsum_ir solution: 49.553
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0162571
  time (eval):    0.00587555
  gflops (eval):  528.082
  gflops (total): 140.19
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0162571,0.00587555,528.082,140.19

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468081
  gflops (total): 66.287
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.287

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148899
  gflops (eval):  208.381
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148899,208.381,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9438
  maximum absolute entry in einsum_ir solution: 53.9438
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154959
  time (eval):    0.00586948
  gflops (eval):  528.627
  gflops (total): 145.224
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154959,0.00586948,528.627,145.224

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469051
  gflops (total): 66.15
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148747
  gflops (eval):  208.594
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148747,208.594,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.4467
  maximum absolute entry in einsum_ir solution: 50.4467
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156115
  time (eval):    0.0058117
  gflops (eval):  533.883
  gflops (total): 144.832
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156115,0.0058117,533.883,144.832

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470144
  gflops (total): 65.9961
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0142943
  gflops (eval):  217.064
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0142943,217.064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.0833
  maximum absolute entry in einsum_ir solution: 54.0833
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0151729
  time (eval):    0.00589036
  gflops (eval):  526.754
  gflops (total): 147.307
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0151729,0.00589036,526.754,147.307

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0464473
  gflops (total): 66.8019
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.8019

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148765
  gflops (eval):  208.568
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148765,208.568,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.8266
  maximum absolute entry in einsum_ir solution: 52.8266
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0160958
  time (eval):    0.0058177
  gflops (eval):  533.333
  gflops (total): 141.592
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0160958,0.0058177,533.333,141.592

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469358
  gflops (total): 66.1067
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.1067

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014749
  gflops (eval):  210.371
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014749,210.371,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.2359
  maximum absolute entry in einsum_ir solution: 50.2359
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0158895
  time (eval):    0.0058518
  gflops (eval):  530.225
  gflops (total): 142.713
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0158895,0.0058518,530.225,142.713

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469776
  gflops (total): 66.0478
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.0478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148112
  gflops (eval):  209.489
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148112,209.489,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.106
  maximum absolute entry in einsum_ir solution: 54.106
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0161569
  time (eval):    0.0058976
  gflops (eval):  526.107
  gflops (total): 140.686
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0161569,0.0058976,526.107,140.686

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468738
  gflops (total): 66.1941
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.1941

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148509
  gflops (eval):  208.927
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148509,208.927,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.1646
  maximum absolute entry in einsum_ir solution: 52.1646
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157635
  time (eval):    0.00586691
  gflops (eval):  528.86
  gflops (total): 143.445
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157635,0.00586691,528.86,143.445

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0472829
  gflops (total): 65.6214
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.6214

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0149207
  gflops (eval):  207.951
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0149207,207.951,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.1892
  maximum absolute entry in einsum_ir solution: 55.1892
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0153957
  time (eval):    0.00583632
  gflops (eval):  531.631
  gflops (total): 146.136
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0153957,0.00583632,531.631,146.136

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.046776
  gflops (total): 66.3324
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.3324

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148671
  gflops (eval):  208.701
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148671,208.701,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.2104
  maximum absolute entry in einsum_ir solution: 51.2104
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0158966
  time (eval):    0.00584452
  gflops (eval):  530.885
  gflops (total): 142.714
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0158966,0.00584452,530.885,142.714

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0462036
  gflops (total): 67.1543
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,67.1543

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0149702
  gflops (eval):  207.263
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0149702,207.263,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.0856
  maximum absolute entry in einsum_ir solution: 50.0856
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156726
  time (eval):    0.00578567
  gflops (eval):  536.285
  gflops (total): 144.595
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156726,0.00578567,536.285,144.595

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469693
  gflops (total): 66.0595
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.0595

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148188
  gflops (eval):  209.38
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148188,209.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.839
  maximum absolute entry in einsum_ir solution: 52.839
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155498
  time (eval):    0.00586451
  gflops (eval):  529.075
  gflops (total): 144.893
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155498,0.00586451,529.075,144.893

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470196
  gflops (total): 65.9888
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9888

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148938
  gflops (eval):  208.327
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148938,208.327,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7218
  maximum absolute entry in einsum_ir solution: 54.7218
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0151228
  time (eval):    0.00584113
  gflops (eval):  531.193
  gflops (total): 148.005
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0151228,0.00584113,531.193,148.005

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0465338
  gflops (total): 66.6777
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.6777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148577
  gflops (eval):  208.832
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148577,208.832,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6798
  maximum absolute entry in einsum_ir solution: 60.6798
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157476
  time (eval):    0.00583547
  gflops (eval):  531.708
  gflops (total): 143.759
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157476,0.00583547,531.708,143.759

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0466082
  gflops (total): 66.5712
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.5712

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148843
  gflops (eval):  208.459
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148843,208.459,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.7539
  maximum absolute entry in einsum_ir solution: 50.7539
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157908
  time (eval):    0.00595843
  gflops (eval):  520.736
  gflops (total): 142.661
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157908,0.00595843,520.736,142.661

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470622
  gflops (total): 65.9291
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9291

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148435
  gflops (eval):  209.033
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148435,209.033,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.8291
  maximum absolute entry in einsum_ir solution: 51.8291
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0150714
  time (eval):    0.00587836
  gflops (eval):  527.829
  gflops (total): 148.105
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0150714,0.00587836,527.829,148.105

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0471046
  gflops (total): 65.8698
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.8698

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148536
  gflops (eval):  208.889
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148536,208.889,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.8428
  maximum absolute entry in einsum_ir solution: 52.8428
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0158197
  time (eval):    0.00578319
  gflops (eval):  536.516
  gflops (total): 143.628
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0158197,0.00578319,536.516,143.628

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0472633
  gflops (total): 65.6486
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.6486

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147941
  gflops (eval):  209.73
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147941,209.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.0154
  maximum absolute entry in einsum_ir solution: 51.0154
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015668
  time (eval):    0.00583755
  gflops (eval):  531.519
  gflops (total): 144.278
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015668,0.00583755,531.519,144.278

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469138
  gflops (total): 66.1377
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.1377

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014763
  gflops (eval):  210.172
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014763,210.172,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.638
  maximum absolute entry in einsum_ir solution: 56.638
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015399
  time (eval):    0.00581854
  gflops (eval):  533.255
  gflops (total): 146.236
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015399,0.00581854,533.255,146.236

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.04796
  gflops (total): 64.695
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,64.695

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147976
  gflops (eval):  209.681
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147976,209.681,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5936
  maximum absolute entry in einsum_ir solution: 53.5936
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015773
  time (eval):    0.00577527
  gflops (eval):  537.251
  gflops (total): 143.991
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015773,0.00577527,537.251,143.991

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470518
  gflops (total): 65.9436
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9436

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148639
  gflops (eval):  208.745
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148639,208.745,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5458
  maximum absolute entry in einsum_ir solution: 53.5458
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154314
  time (eval):    0.00585284
  gflops (eval):  530.131
  gflops (total): 145.778
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154314,0.00585284,530.131,145.778

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0464427
  gflops (total): 66.8086
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.8086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014894
  gflops (eval):  208.324
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014894,208.324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.0974
  maximum absolute entry in einsum_ir solution: 52.0974
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156398
  time (eval):    0.00584647
  gflops (eval):  530.708
  gflops (total): 144.407
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156398,0.00584647,530.708,144.407

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0472003
  gflops (total): 65.7362
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.7362

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148065
  gflops (eval):  209.554
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148065,209.554,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.4295
  maximum absolute entry in einsum_ir solution: 51.4295
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0162665
  time (eval):    0.00585105
  gflops (eval):  530.293
  gflops (total): 140.286
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0162665,0.00585105,530.293,140.286

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0472462
  gflops (total): 65.6723
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.6723

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147248
  gflops (eval):  210.718
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147248,210.718,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.4434
  maximum absolute entry in einsum_ir solution: 50.4434
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0158628
  time (eval):    0.00585792
  gflops (eval):  529.671
  gflops (total): 142.849
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0158628,0.00585792,529.671,142.849

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0473684
  gflops (total): 65.5029
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.5029

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014756
  gflops (eval):  210.272
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014756,210.272,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.8707
  maximum absolute entry in einsum_ir solution: 50.8707
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0151733
  time (eval):    0.0058941
  gflops (eval):  526.419
  gflops (total): 147.278
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0151733,0.0058941,526.419,147.278

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469505
  gflops (total): 66.0859
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.0859

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.015001
  gflops (eval):  206.838
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.015001,206.838,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3536
  maximum absolute entry in einsum_ir solution: 54.3536
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015728
  time (eval):    0.00588567
  gflops (eval):  527.173
  gflops (total): 143.556
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015728,0.00588567,527.173,143.556

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0472629
  gflops (total): 65.6492
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.6492

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148645
  gflops (eval):  208.737
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148645,208.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.6878
  maximum absolute entry in einsum_ir solution: 51.6878
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154397
  time (eval):    0.00583722
  gflops (eval):  531.549
  gflops (total): 145.828
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154397,0.00583722,531.549,145.828

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0463303
  gflops (total): 66.9706
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.9706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148125
  gflops (eval):  209.469
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148125,209.469,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.7005
  maximum absolute entry in einsum_ir solution: 51.7005
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156544
  time (eval):    0.00580479
  gflops (eval):  534.519
  gflops (total): 144.589
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156544,0.00580479,534.519,144.589

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0472745
  gflops (total): 65.6331
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.6331

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148453
  gflops (eval):  209.007
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148453,209.007,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.7717
  maximum absolute entry in einsum_ir solution: 53.7717
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154225
  time (eval):    0.00587524
  gflops (eval):  528.11
  gflops (total): 145.685
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154225,0.00587524,528.11,145.685

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.046839
  gflops (total): 66.2433
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.2433

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014794
  gflops (eval):  209.731
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014794,209.731,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.109
  maximum absolute entry in einsum_ir solution: 57.109
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157607
  time (eval):    0.00589806
  gflops (eval):  526.066
  gflops (total): 143.257
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157607,0.00589806,526.066,143.257

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0474031
  gflops (total): 65.455
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.455

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0146532
  gflops (eval):  211.746
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0146532,211.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.5031
  maximum absolute entry in einsum_ir solution: 52.5031
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154666
  time (eval):    0.00577764
  gflops (eval):  537.03
  gflops (total): 146.052
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154666,0.00577764,537.03,146.052

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0464395
  gflops (total): 66.8132
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.8132

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148205
  gflops (eval):  209.357
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148205,209.357,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.2079
  maximum absolute entry in einsum_ir solution: 53.2079
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154526
  time (eval):    0.00586844
  gflops (eval):  528.722
  gflops (total): 145.526
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154526,0.00586844,528.722,145.526

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.047429
  gflops (total): 65.4192
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.4192

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147613
  gflops (eval):  210.196
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147613,210.196,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.1416
  maximum absolute entry in einsum_ir solution: 52.1416
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156994
  time (eval):    0.00591991
  gflops (eval):  524.124
  gflops (total): 143.518
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156994,0.00591991,524.124,143.518

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467332
  gflops (total): 66.3932
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.3932

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0146884
  gflops (eval):  211.239
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0146884,211.239,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.8087
  maximum absolute entry in einsum_ir solution: 51.8087
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015471
  time (eval):    0.00585182
  gflops (eval):  530.223
  gflops (total): 145.514
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015471,0.00585182,530.223,145.514

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0465749
  gflops (total): 66.6189
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.6189

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.01476
  gflops (eval):  210.214
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.01476,210.214,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.7492
  maximum absolute entry in einsum_ir solution: 49.7492
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0161672
  time (eval):    0.00585445
  gflops (eval):  529.985
  gflops (total): 140.897
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0161672,0.00585445,529.985,140.897

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0462476
  gflops (total): 67.0904
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,67.0904

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014785
  gflops (eval):  209.86
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014785,209.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.7621
  maximum absolute entry in einsum_ir solution: 49.7621
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0158848
  time (eval):    0.00582885
  gflops (eval):  532.312
  gflops (total): 142.895
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0158848,0.00582885,532.312,142.895

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467302
  gflops (total): 66.3975
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.3975

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148109
  gflops (eval):  209.492
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148109,209.492,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.0631
  maximum absolute entry in einsum_ir solution: 53.0631
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0164587
  time (eval):    0.00587813
  gflops (eval):  527.85
  gflops (total): 138.908
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0164587,0.00587813,527.85,138.908

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.046417
  gflops (total): 66.8456
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.8456

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0149186
  gflops (eval):  207.98
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0149186,207.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0875
  maximum absolute entry in einsum_ir solution: 55.0875
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156956
  time (eval):    0.00583539
  gflops (eval):  531.716
  gflops (total): 144.107
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156956,0.00583539,531.716,144.107

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0465314
  gflops (total): 66.6812
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.6812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0146867
  gflops (eval):  211.263
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0146867,211.263,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3207
  maximum absolute entry in einsum_ir solution: 54.3207
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152646
  time (eval):    0.00582697
  gflops (eval):  532.484
  gflops (total): 147.11
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152646,0.00582697,532.484,147.11

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0471295
  gflops (total): 65.835
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.835

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147819
  gflops (eval):  209.904
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147819,209.904,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.5002
  maximum absolute entry in einsum_ir solution: 50.5002
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0158801
  time (eval):    0.00580176
  gflops (eval):  534.798
  gflops (total): 143.105
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0158801,0.00580176,534.798,143.105

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.046142
  gflops (total): 67.244
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,67.244

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148684
  gflops (eval):  208.682
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148684,208.682,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5345
  maximum absolute entry in einsum_ir solution: 56.5345
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152568
  time (eval):    0.00587297
  gflops (eval):  528.313
  gflops (total): 146.844
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152568,0.00587297,528.313,146.844

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470608
  gflops (total): 65.931
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.931

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148491
  gflops (eval):  208.954
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148491,208.954,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.7913
  maximum absolute entry in einsum_ir solution: 52.7913
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015313
  time (eval):    0.00577988
  gflops (eval):  536.822
  gflops (total): 147.1
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015313,0.00577988,536.822,147.1

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469144
  gflops (total): 66.1368
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.1368

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148356
  gflops (eval):  209.144
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148356,209.144,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.7042
  maximum absolute entry in einsum_ir solution: 51.7042
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0151141
  time (eval):    0.00588715
  gflops (eval):  527.041
  gflops (total): 147.742
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0151141,0.00588715,527.041,147.742

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0474291
  gflops (total): 65.4191
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.4191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147729
  gflops (eval):  210.031
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147729,210.031,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.2316
  maximum absolute entry in einsum_ir solution: 55.2316
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155274
  time (eval):    0.00588116
  gflops (eval):  527.578
  gflops (total): 144.931
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155274,0.00588116,527.578,144.931

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468819
  gflops (total): 66.1827
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.1827

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148397
  gflops (eval):  209.086
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148397,209.086,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.4587
  maximum absolute entry in einsum_ir solution: 52.4587
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157607
  time (eval):    0.00581053
  gflops (eval):  533.991
  gflops (total): 143.838
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157607,0.00581053,533.991,143.838

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468957
  gflops (total): 66.1632
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.1632

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148569
  gflops (eval):  208.844
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148569,208.844,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.7691
  maximum absolute entry in einsum_ir solution: 49.7691
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154903
  time (eval):    0.00582406
  gflops (eval):  532.75
  gflops (total): 145.572
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154903,0.00582406,532.75,145.572

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0466966
  gflops (total): 66.4453
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.4453

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0149963
  gflops (eval):  206.903
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0149963,206.903,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5464
  maximum absolute entry in einsum_ir solution: 54.5464
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0158347
  time (eval):    0.00580667
  gflops (eval):  534.346
  gflops (total): 143.372
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0158347,0.00580667,534.346,143.372

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470266
  gflops (total): 65.979
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148487
  gflops (eval):  208.959
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148487,208.959,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7626
  maximum absolute entry in einsum_ir solution: 55.7626
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154506
  time (eval):    0.00582755
  gflops (eval):  532.431
  gflops (total): 145.82
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154506,0.00582755,532.431,145.82

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0464635
  gflops (total): 66.7787
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.7787

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0150142
  gflops (eval):  206.655
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0150142,206.655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.7506
  maximum absolute entry in einsum_ir solution: 51.7506
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152519
  time (eval):    0.00583194
  gflops (eval):  532.031
  gflops (total): 147.164
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152519,0.00583194,532.031,147.164

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470207
  gflops (total): 65.9872
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0146444
  gflops (eval):  211.874
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0146444,211.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1811
  maximum absolute entry in einsum_ir solution: 57.1811
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015865
  time (eval):    0.00582464
  gflops (eval):  532.697
  gflops (total): 143.053
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015865,0.00582464,532.697,143.053

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.046575
  gflops (total): 66.6188
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.6188

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148096
  gflops (eval):  209.51
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148096,209.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.8923
  maximum absolute entry in einsum_ir solution: 52.8923
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157658
  time (eval):    0.00584802
  gflops (eval):  530.567
  gflops (total): 143.555
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157658,0.00584802,530.567,143.555

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0466253
  gflops (total): 66.5469
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.5469

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148273
  gflops (eval):  209.261
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148273,209.261,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.2158
  maximum absolute entry in einsum_ir solution: 53.2158
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152611
  time (eval):    0.00586069
  gflops (eval):  529.421
  gflops (total): 146.899
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152611,0.00586069,529.421,146.899

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468938
  gflops (total): 66.1658
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.1658

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148732
  gflops (eval):  208.615
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148732,208.615,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.4156
  maximum absolute entry in einsum_ir solution: 54.4156
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015638
  time (eval):    0.0058523
  gflops (eval):  530.179
  gflops (total): 144.38
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015638,0.0058523,530.179,144.38

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469659
  gflops (total): 66.0643
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.0643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148158
  gflops (eval):  209.423
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148158,209.423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6884
  maximum absolute entry in einsum_ir solution: 56.6884
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152579
  time (eval):    0.00576791
  gflops (eval):  537.937
  gflops (total): 147.57
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152579,0.00576791,537.937,147.57

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0473019
  gflops (total): 65.595
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.595

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148575
  gflops (eval):  208.835
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148575,208.835,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.9019
  maximum absolute entry in einsum_ir solution: 51.9019
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156446
  time (eval):    0.00588938
  gflops (eval):  526.842
  gflops (total): 144.087
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156446,0.00588938,526.842,144.087

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469814
  gflops (total): 66.0425
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.0425

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148436
  gflops (eval):  209.031
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148436,209.031,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.3464
  maximum absolute entry in einsum_ir solution: 53.3464
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0149032
  time (eval):    0.0058125
  gflops (eval):  533.81
  gflops (total): 149.778
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0149032,0.0058125,533.81,149.778

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.046912
  gflops (total): 66.1403
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.1403

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147654
  gflops (eval):  210.138
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147654,210.138,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0511
  maximum absolute entry in einsum_ir solution: 58.0511
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015714
  time (eval):    0.00587803
  gflops (eval):  527.859
  gflops (total): 143.7
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015714,0.00587803,527.859,143.7

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0471119
  gflops (total): 65.8596
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.8596

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0146586
  gflops (eval):  211.669
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0146586,211.669,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1385
  maximum absolute entry in einsum_ir solution: 56.1385
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0153365
  time (eval):    0.00584901
  gflops (eval):  530.477
  gflops (total): 146.457
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0153365,0.00584901,530.477,146.457

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0474222
  gflops (total): 65.4286
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.4286

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148341
  gflops (eval):  209.165
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148341,209.165,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.7813
  maximum absolute entry in einsum_ir solution: 53.7813
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0159268
  time (eval):    0.0058239
  gflops (eval):  532.764
  gflops (total): 142.652
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0159268,0.0058239,532.764,142.652

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0463512
  gflops (total): 66.9404
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.9404

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0144036
  gflops (eval):  215.416
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0144036,215.416,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.196
  maximum absolute entry in einsum_ir solution: 53.196
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157932
  time (eval):    0.0058333
  gflops (eval):  531.906
  gflops (total): 143.471
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157932,0.0058333,531.906,143.471

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468557
  gflops (total): 66.2197
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.2197

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147856
  gflops (eval):  209.85
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147856,209.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.3044
  maximum absolute entry in einsum_ir solution: 51.3044
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0158279
  time (eval):    0.00582128
  gflops (eval):  533.005
  gflops (total): 143.32
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0158279,0.00582128,533.005,143.32

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0473233
  gflops (total): 65.5654
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.5654

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148093
  gflops (eval):  209.515
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148093,209.515,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.555
  maximum absolute entry in einsum_ir solution: 57.555
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015231
  time (eval):    0.00584685
  gflops (eval):  530.673
  gflops (total): 147.205
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015231,0.00584685,530.673,147.205

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467368
  gflops (total): 66.3881
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.3881

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014841
  gflops (eval):  209.068
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014841,209.068,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7507
  maximum absolute entry in einsum_ir solution: 56.7507
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157769
  time (eval):    0.005834
  gflops (eval):  531.842
  gflops (total): 143.574
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157769,0.005834,531.842,143.574

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0465173
  gflops (total): 66.7014
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.7014

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014741
  gflops (eval):  210.486
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014741,210.486,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1113
  maximum absolute entry in einsum_ir solution: 54.1113
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157943
  time (eval):    0.00585314
  gflops (eval):  530.104
  gflops (total): 143.332
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157943,0.00585314,530.104,143.332

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468951
  gflops (total): 66.164
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.164

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148244
  gflops (eval):  209.302
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148244,209.302,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.503
  maximum absolute entry in einsum_ir solution: 51.503
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015729
  time (eval):    0.00588153
  gflops (eval):  527.545
  gflops (total): 143.576
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015729,0.00588153,527.545,143.576

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0471844
  gflops (total): 65.7584
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.7584

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148331
  gflops (eval):  209.178
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148331,209.178,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.2434
  maximum absolute entry in einsum_ir solution: 55.2434
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155034
  time (eval):    0.00591623
  gflops (eval):  524.45
  gflops (total): 144.856
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155034,0.00591623,524.45,144.856

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470317
  gflops (total): 65.9719
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9719

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147988
  gflops (eval):  209.663
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147988,209.663,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.6266
  maximum absolute entry in einsum_ir solution: 52.6266
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155562
  time (eval):    0.00583987
  gflops (eval):  531.307
  gflops (total): 145.016
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155562,0.00583987,531.307,145.016

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469209
  gflops (total): 66.1276
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.1276

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148121
  gflops (eval):  209.476
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148121,209.476,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3724
  maximum absolute entry in einsum_ir solution: 55.3724
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0153535
  time (eval):    0.00590905
  gflops (eval):  525.087
  gflops (total): 145.926
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0153535,0.00590905,525.087,145.926

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0467104
  gflops (total): 66.4256
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.4256

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147584
  gflops (eval):  210.238
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147584,210.238,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6027
  maximum absolute entry in einsum_ir solution: 59.6027
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0160086
  time (eval):    0.00585796
  gflops (eval):  529.667
  gflops (total): 141.896
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0160086,0.00585796,529.667,141.896

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468896
  gflops (total): 66.1718
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.1718

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148257
  gflops (eval):  209.283
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148257,209.283,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.5759
  maximum absolute entry in einsum_ir solution: 55.5759
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154037
  time (eval):    0.0058215
  gflops (eval):  532.984
  gflops (total): 146.184
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154037,0.0058215,532.984,146.184

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0466278
  gflops (total): 66.5434
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.5434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148572
  gflops (eval):  208.84
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148572,208.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.0342
  maximum absolute entry in einsum_ir solution: 51.0342
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0151878
  time (eval):    0.00585042
  gflops (eval):  530.349
  gflops (total): 147.482
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0151878,0.00585042,530.349,147.482

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0480192
  gflops (total): 64.6151
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,64.6151

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147998
  gflops (eval):  209.649
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147998,209.649,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.7384
  maximum absolute entry in einsum_ir solution: 52.7384
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157831
  time (eval):    0.00584673
  gflops (eval):  530.685
  gflops (total): 143.448
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157831,0.00584673,530.685,143.448

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0465981
  gflops (total): 66.5858
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.5858

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148688
  gflops (eval):  208.677
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148688,208.677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5319
  maximum absolute entry in einsum_ir solution: 58.5319
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0162903
  time (eval):    0.00582803
  gflops (eval):  532.387
  gflops (total): 140.28
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0162903,0.00582803,532.387,140.28

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0473558
  gflops (total): 65.5204
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.5204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147606
  gflops (eval):  210.207
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147606,210.207,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.5565
  maximum absolute entry in einsum_ir solution: 51.5565
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156699
  time (eval):    0.00589972
  gflops (eval):  525.918
  gflops (total): 143.849
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156699,0.00589972,525.918,143.849

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0471918
  gflops (total): 65.748
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.748

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148174
  gflops (eval):  209.401
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148174,209.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.946
  maximum absolute entry in einsum_ir solution: 50.946
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0153466
  time (eval):    0.00585202
  gflops (eval):  530.205
  gflops (total): 146.367
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0153466,0.00585202,530.205,146.367

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470464
  gflops (total): 65.9512
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9512

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148697
  gflops (eval):  208.664
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148697,208.664,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.1898
  maximum absolute entry in einsum_ir solution: 52.1898
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154959
  time (eval):    0.00583842
  gflops (eval):  531.44
  gflops (total): 145.436
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154959,0.00583842,531.44,145.436

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0466272
  gflops (total): 66.5442
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.5442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147844
  gflops (eval):  209.868
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147844,209.868,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.7412
  maximum absolute entry in einsum_ir solution: 49.7412
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015811
  time (eval):    0.00586345
  gflops (eval):  529.171
  gflops (total): 143.153
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015811,0.00586345,529.171,143.153

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0472452
  gflops (total): 65.6738
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.6738

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147614
  gflops (eval):  210.194
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147614,210.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.927
  maximum absolute entry in einsum_ir solution: 55.927
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0152673
  time (eval):    0.00586425
  gflops (eval):  529.099
  gflops (total): 146.831
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0152673,0.00586425,529.099,146.831

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0474598
  gflops (total): 65.3767
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.3767

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148229
  gflops (eval):  209.323
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148229,209.323,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.167
  maximum absolute entry in einsum_ir solution: 54.167
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155153
  time (eval):    0.00585535
  gflops (eval):  529.903
  gflops (total): 145.189
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155153,0.00585535,529.903,145.189

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0474877
  gflops (total): 65.3384
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.3384

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.014723
  gflops (eval):  210.742
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.014723,210.742,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.4723
  maximum absolute entry in einsum_ir solution: 51.4723
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0154664
  time (eval):    0.00587307
  gflops (eval):  528.304
  gflops (total): 145.4
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0154664,0.00587307,528.304,145.4

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0463567
  gflops (total): 66.9324
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.9324

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148429
  gflops (eval):  209.04
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148429,209.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.2752
  maximum absolute entry in einsum_ir solution: 51.2752
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0161311
  time (eval):    0.00592606
  gflops (eval):  523.58
  gflops (total): 140.669
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0161311,0.00592606,523.58,140.669

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0481526
  gflops (total): 64.4362
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,64.4362

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0146652
  gflops (eval):  211.574
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0146652,211.574,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0242
  maximum absolute entry in einsum_ir solution: 57.0242
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0153201
  time (eval):    0.00591312
  gflops (eval):  524.726
  gflops (total): 146.128
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0153201,0.00591312,524.726,146.128

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468368
  gflops (total): 66.2464
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.2464

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148091
  gflops (eval):  209.518
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148091,209.518,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.8415
  maximum absolute entry in einsum_ir solution: 52.8415
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0153168
  time (eval):    0.00584368
  gflops (eval):  530.961
  gflops (total): 146.631
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0153168,0.00584368,530.961,146.631

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0464133
  gflops (total): 66.8509
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.8509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147158
  gflops (eval):  210.847
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147158,210.847,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3274
  maximum absolute entry in einsum_ir solution: 54.3274
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0151636
  time (eval):    0.00579093
  gflops (eval):  535.798
  gflops (total): 148.072
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0151636,0.00579093,535.798,148.072

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0469852
  gflops (total): 66.0372
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.0372

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148189
  gflops (eval):  209.379
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148189,209.379,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.554
  maximum absolute entry in einsum_ir solution: 54.554
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.015416
  time (eval):    0.00583878
  gflops (eval):  531.407
  gflops (total): 145.98
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.015416,0.00583878,531.407,145.98

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0471307
  gflops (total): 65.8333
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.8333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147826
  gflops (eval):  209.893
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147826,209.893,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.0635
  maximum absolute entry in einsum_ir solution: 52.0635
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0159086
  time (eval):    0.00581366
  gflops (eval):  533.703
  gflops (total): 142.838
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0159086,0.00581366,533.703,142.838

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0468864
  gflops (total): 66.1764
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.1764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148478
  gflops (eval):  208.971
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148478,208.971,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.4286
  maximum absolute entry in einsum_ir solution: 51.4286
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157599
  time (eval):    0.00579045
  gflops (eval):  535.843
  gflops (total): 143.977
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157599,0.00579045,535.843,143.977

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0478541
  gflops (total): 64.8382
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,64.8382

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147894
  gflops (eval):  209.796
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147894,209.796,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.5362
  maximum absolute entry in einsum_ir solution: 55.5362
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155117
  time (eval):    0.00586908
  gflops (eval):  528.663
  gflops (total): 145.119
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155117,0.00586908,528.663,145.119

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0465211
  gflops (total): 66.696
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.696

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0145204
  gflops (eval):  213.683
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0145204,213.683,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.5729
  maximum absolute entry in einsum_ir solution: 55.5729
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156071
  time (eval):    0.00584689
  gflops (eval):  530.67
  gflops (total): 144.624
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156071,0.00584689,530.67,144.624

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0471704
  gflops (total): 65.7779
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.7779

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148226
  gflops (eval):  209.326
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148226,209.326,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6134
  maximum absolute entry in einsum_ir solution: 58.6134
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0144332
  time (eval):    0.00588971
  gflops (eval):  526.812
  gflops (total): 152.673
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0144332,0.00588971,526.812,152.673

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0474281
  gflops (total): 65.4205
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.4205

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147422
  gflops (eval):  210.468
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147422,210.468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.937
  maximum absolute entry in einsum_ir solution: 53.937
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.016215
  time (eval):    0.00578355
  gflops (eval):  536.482
  gflops (total): 141.044
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.016215,0.00578355,536.482,141.044

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0471699
  gflops (total): 65.7786
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.7786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147725
  gflops (eval):  210.036
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147725,210.036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.2659
  maximum absolute entry in einsum_ir solution: 52.2659
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157018
  time (eval):    0.0058807
  gflops (eval):  527.619
  gflops (total): 143.763
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157018,0.0058807,527.619,143.763

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.047004
  gflops (total): 66.0107
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.0107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148083
  gflops (eval):  209.529
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148083,209.529,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1942
  maximum absolute entry in einsum_ir solution: 56.1942
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0155069
  time (eval):    0.00589339
  gflops (eval):  526.483
  gflops (total): 144.987
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0155069,0.00589339,526.483,144.987

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0471247
  gflops (total): 65.8416
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.8416

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147764
  gflops (eval):  209.981
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147764,209.981,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7124
  maximum absolute entry in einsum_ir solution: 57.7124
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157507
  time (eval):    0.00582134
  gflops (eval):  532.999
  gflops (total): 143.833
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157507,0.00582134,532.999,143.833

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0466996
  gflops (total): 66.441
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,66.441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147739
  gflops (eval):  210.017
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147739,210.017,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.0579
  maximum absolute entry in einsum_ir solution: 53.0579
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0156065
  time (eval):    0.00587672
  gflops (eval):  527.976
  gflops (total): 144.428
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0156065,0.00587672,527.976,144.428

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.0470699
  gflops (total): 65.9183
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9183

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0148712
  gflops (eval):  208.642
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0148712,208.642,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.1634
  maximum absolute entry in einsum_ir solution: 53.1634
  maximum element-wise difference:              0
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0157848
  time (eval):    0.00585411
  gflops (eval):  530.016
  gflops (total): 143.388
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0157848,0.00585411,530.016,143.388

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.047082
  gflops (total): 65.9014
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,65.9014

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0147684
  gflops (eval):  210.096
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0147684,210.096,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5559
  maximum absolute entry in einsum_ir solution: 54.5559
  maximum element-wise difference:              0
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131318
  time (eval):    0.00479504
  gflops (eval):  566.079
  gflops (total): 151.414
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131318,0.00479504,566.079,151.414

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0407447
  gflops (total): 66.619
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.619

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00249791
  gflops (eval):  1086.65
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00249791,1086.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.828
  maximum absolute entry in einsum_ir solution: 110.828
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131065
  time (eval):    0.0049089
  gflops (eval):  552.949
  gflops (total): 150.669
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131065,0.0049089,552.949,150.669

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0404437
  gflops (total): 67.1148
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.1148

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00177319
  gflops (eval):  1530.78
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00177319,1530.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.048
  maximum absolute entry in einsum_ir solution: 113.048
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130365
  time (eval):    0.00490505
  gflops (eval):  553.382
  gflops (total): 151.29
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130365,0.00490505,553.382,151.29

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0412687
  gflops (total): 65.7731
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.7731

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00230938
  gflops (eval):  1175.37
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00230938,1175.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.785
  maximum absolute entry in einsum_ir solution: 102.785
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.013183
  time (eval):    0.0048473
  gflops (eval):  559.976
  gflops (total): 150.545
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.013183,0.0048473,559.976,150.545

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0397186
  gflops (total): 68.3401
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.3401

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00247575
  gflops (eval):  1096.38
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00247575,1096.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.546
  maximum absolute entry in einsum_ir solution: 105.546
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0128531
  time (eval):    0.00502896
  gflops (eval):  539.748
  gflops (total): 151.793
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0128531,0.00502896,539.748,151.793

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0390925
  gflops (total): 69.4345
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.4345

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00198247
  gflops (eval):  1369.19
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00198247,1369.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.649
  maximum absolute entry in einsum_ir solution: 109.649
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130008
  time (eval):    0.00466613
  gflops (eval):  581.717
  gflops (total): 153.641
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130008,0.00466613,581.717,153.641

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0379427
  gflops (total): 71.5386
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,71.5386

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00193656
  gflops (eval):  1401.64
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00193656,1401.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.349
  maximum absolute entry in einsum_ir solution: 100.349
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129401
  time (eval):    0.00480408
  gflops (eval):  565.013
  gflops (total): 152.972
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129401,0.00480408,565.013,152.972

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0405411
  gflops (total): 66.9536
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.9536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00184989
  gflops (eval):  1467.32
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00184989,1467.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.15
  maximum absolute entry in einsum_ir solution: 106.15
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131215
  time (eval):    0.0049319
  gflops (eval):  550.37
  gflops (total): 150.352
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131215,0.0049319,550.37,150.352

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0389348
  gflops (total): 69.7157
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.7157

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00243094
  gflops (eval):  1116.59
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00243094,1116.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.55
  maximum absolute entry in einsum_ir solution: 102.55
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0128981
  time (eval):    0.00476765
  gflops (eval):  569.331
  gflops (total): 153.652
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0128981,0.00476765,569.331,153.652

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0389256
  gflops (total): 69.7322
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.7322

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00199513
  gflops (eval):  1360.5
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00199513,1360.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.7947
  maximum absolute entry in einsum_ir solution: 99.7948
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131257
  time (eval):    0.00481945
  gflops (eval):  563.211
  gflops (total): 151.259
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131257,0.00481945,563.211,151.259

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0395741
  gflops (total): 68.5896
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.5896

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00246188
  gflops (eval):  1102.56
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00246188,1102.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.7278
  maximum absolute entry in einsum_ir solution: 99.7278
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132205
  time (eval):    0.00472401
  gflops (eval):  574.59
  gflops (total): 151.264
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132205,0.00472401,574.59,151.264

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0395234
  gflops (total): 68.6776
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.6776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00224731
  gflops (eval):  1207.83
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00224731,1207.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.871
  maximum absolute entry in einsum_ir solution: 109.871
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131058
  time (eval):    0.00484691
  gflops (eval):  560.02
  gflops (total): 151.195
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131058,0.00484691,560.02,151.195

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.040602
  gflops (total): 66.8532
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.8532

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00211143
  gflops (eval):  1285.56
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00211143,1285.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.719
  maximum absolute entry in einsum_ir solution: 106.719
  maximum element-wise difference:              8.01086e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132186
  time (eval):    0.004932
  gflops (eval):  550.359
  gflops (total): 149.547
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132186,0.004932,550.359,149.547

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0396947
  gflops (total): 68.3812
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.3812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.002515
  gflops (eval):  1079.27
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.002515,1079.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.339
  maximum absolute entry in einsum_ir solution: 103.339
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132499
  time (eval):    0.00497173
  gflops (eval):  545.961
  gflops (total): 148.964
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132499,0.00497173,545.961,148.964

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0391164
  gflops (total): 69.3921
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.3921

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00172011
  gflops (eval):  1578.02
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00172011,1578.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.794
  maximum absolute entry in einsum_ir solution: 102.794
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132917
  time (eval):    0.00495894
  gflops (eval):  547.369
  gflops (total): 148.727
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132917,0.00495894,547.369,148.727

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0396577
  gflops (total): 68.445
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.445

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00198351
  gflops (eval):  1368.47
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00198351,1368.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.101
  maximum absolute entry in einsum_ir solution: 106.101
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0128793
  time (eval):    0.00472386
  gflops (eval):  574.608
  gflops (total): 154.198
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0128793,0.00472386,574.608,154.198

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0388048
  gflops (total): 69.9494
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.9494

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00182645
  gflops (eval):  1486.14
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00182645,1486.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.8921
  maximum absolute entry in einsum_ir solution: 98.8921
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132443
  time (eval):    0.00484113
  gflops (eval):  560.69
  gflops (total): 150.086
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132443,0.00484113,560.69,150.086

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.039309
  gflops (total): 69.0521
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.0521

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0020522
  gflops (eval):  1322.66
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0020522,1322.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.955
  maximum absolute entry in einsum_ir solution: 110.955
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129294
  time (eval):    0.00489361
  gflops (eval):  554.677
  gflops (total): 152.296
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129294,0.00489361,554.677,152.296

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0398237
  gflops (total): 68.1597
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.1597

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00247717
  gflops (eval):  1095.75
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00247717,1095.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.46
  maximum absolute entry in einsum_ir solution: 113.46
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132139
  time (eval):    0.00497099
  gflops (eval):  546.043
  gflops (total): 149.265
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132139,0.00497099,546.043,149.265

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0393676
  gflops (total): 68.9494
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.9494

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00230807
  gflops (eval):  1176.04
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00230807,1176.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.3267
  maximum absolute entry in einsum_ir solution: 98.3267
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.013166
  time (eval):    0.0048099
  gflops (eval):  564.33
  gflops (total): 151
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.013166,0.0048099,564.33,151

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0389012
  gflops (total): 69.776
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00180862
  gflops (eval):  1500.8
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00180862,1500.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.963
  maximum absolute entry in einsum_ir solution: 102.963
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130234
  time (eval):    0.0049307
  gflops (eval):  550.504
  gflops (total): 151.184
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130234,0.0049307,550.504,151.184

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0393901
  gflops (total): 68.91
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00252483
  gflops (eval):  1075.07
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00252483,1075.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.813
  maximum absolute entry in einsum_ir solution: 106.813
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.013062
  time (eval):    0.00497066
  gflops (eval):  546.078
  gflops (total): 150.525
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.013062,0.00497066,546.078,150.525

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0396026
  gflops (total): 68.5402
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.5402

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00254965
  gflops (eval):  1064.61
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00254965,1064.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.003
  maximum absolute entry in einsum_ir solution: 100.003
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131825
  time (eval):    0.00486077
  gflops (eval):  558.424
  gflops (total): 150.437
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131825,0.00486077,558.424,150.437

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0388774
  gflops (total): 69.8188
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.8188

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00173054
  gflops (eval):  1568.51
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00173054,1568.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.949
  maximum absolute entry in einsum_ir solution: 111.949
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131668
  time (eval):    0.00484491
  gflops (eval):  560.252
  gflops (total): 150.7
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131668,0.00484491,560.252,150.7

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0389221
  gflops (total): 69.7386
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.7386

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00252597
  gflops (eval):  1074.59
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00252597,1074.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.513
  maximum absolute entry in einsum_ir solution: 99.513
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130974
  time (eval):    0.00502873
  gflops (eval):  539.772
  gflops (total): 149.749
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130974,0.00502873,539.772,149.749

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0384407
  gflops (total): 70.6118
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,70.6118

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00179469
  gflops (eval):  1512.45
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00179469,1512.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.387
  maximum absolute entry in einsum_ir solution: 120.387
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132907
  time (eval):    0.00484232
  gflops (eval):  560.551
  gflops (total): 149.692
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132907,0.00484232,560.551,149.692

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0392222
  gflops (total): 69.205
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.205

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00206076
  gflops (eval):  1317.17
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00206076,1317.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      126.279
  maximum absolute entry in einsum_ir solution: 126.278
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131533
  time (eval):    0.0048981
  gflops (eval):  554.167
  gflops (total): 150.369
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131533,0.0048981,554.167,150.369

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0392074
  gflops (total): 69.231
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.231

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00177153
  gflops (eval):  1532.22
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00177153,1532.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.361
  maximum absolute entry in einsum_ir solution: 104.361
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131933
  time (eval):    0.00475906
  gflops (eval):  570.359
  gflops (total): 151.198
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131933,0.00475906,570.359,151.198

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0394911
  gflops (total): 68.7338
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.7338

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00206994
  gflops (eval):  1311.33
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00206994,1311.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.4277
  maximum absolute entry in einsum_ir solution: 99.4277
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131799
  time (eval):    0.00496541
  gflops (eval):  546.656
  gflops (total): 149.591
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131799,0.00496541,546.656,149.591

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0390378
  gflops (total): 69.5318
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.5318

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00173938
  gflops (eval):  1560.54
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00173938,1560.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.758
  maximum absolute entry in einsum_ir solution: 99.758
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130472
  time (eval):    0.00495656
  gflops (eval):  547.632
  gflops (total): 150.767
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130472,0.00495656,547.632,150.767

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0402735
  gflops (total): 67.3984
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.3984

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00208517
  gflops (eval):  1301.75
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00208517,1301.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.542
  maximum absolute entry in einsum_ir solution: 104.542
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.013031
  time (eval):    0.00497826
  gflops (eval):  545.245
  gflops (total): 150.721
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.013031,0.00497826,545.245,150.721

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0415527
  gflops (total): 65.3235
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.3235

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00172481
  gflops (eval):  1573.72
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00172481,1573.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.562
  maximum absolute entry in einsum_ir solution: 106.562
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130686
  time (eval):    0.00486299
  gflops (eval):  558.169
  gflops (total): 151.373
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130686,0.00486299,558.169,151.373

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0398575
  gflops (total): 68.1019
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.1019

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00215938
  gflops (eval):  1257.02
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00215938,1257.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.924
  maximum absolute entry in einsum_ir solution: 110.924
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130713
  time (eval):    0.00494964
  gflops (eval):  548.398
  gflops (total): 150.623
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130713,0.00494964,548.398,150.623

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0397079
  gflops (total): 68.3584
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.3584

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00195287
  gflops (eval):  1389.94
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00195287,1389.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.614
  maximum absolute entry in einsum_ir solution: 107.614
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0128982
  time (eval):    0.00486991
  gflops (eval):  557.376
  gflops (total): 152.766
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0128982,0.00486991,557.376,152.766

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0420622
  gflops (total): 64.5323
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.5323

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00216943
  gflops (eval):  1251.19
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00216943,1251.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.68
  maximum absolute entry in einsum_ir solution: 102.68
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131412
  time (eval):    0.00483534
  gflops (eval):  561.361
  gflops (total): 150.995
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131412,0.00483534,561.361,150.995

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0386837
  gflops (total): 70.1684
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,70.1684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0027217
  gflops (eval):  997.307
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0027217,997.307,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.488
  maximum absolute entry in einsum_ir solution: 103.488
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131235
  time (eval):    0.00496499
  gflops (eval):  546.702
  gflops (total): 150.06
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131235,0.00496499,546.702,150.06

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0389687
  gflops (total): 69.6551
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.6551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00193138
  gflops (eval):  1405.4
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00193138,1405.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.922
  maximum absolute entry in einsum_ir solution: 102.922
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0133438
  time (eval):    0.00481699
  gflops (eval):  563.499
  gflops (total): 149.463
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0133438,0.00481699,563.499,149.463

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0404656
  gflops (total): 67.0784
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.0784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00232551
  gflops (eval):  1167.21
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00232551,1167.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.666
  maximum absolute entry in einsum_ir solution: 96.666
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0133326
  time (eval):    0.00492577
  gflops (eval):  551.055
  gflops (total): 148.664
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0133326,0.00492577,551.055,148.664

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0389397
  gflops (total): 69.7071
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.7071

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00171027
  gflops (eval):  1587.1
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00171027,1587.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.655
  maximum absolute entry in einsum_ir solution: 100.655
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131145
  time (eval):    0.00480123
  gflops (eval):  565.349
  gflops (total): 151.508
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131145,0.00480123,565.349,151.508

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0393779
  gflops (total): 68.9313
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.9313

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00244622
  gflops (eval):  1109.62
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00244622,1109.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.5782
  maximum absolute entry in einsum_ir solution: 99.5782
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131206
  time (eval):    0.00501739
  gflops (eval):  540.992
  gflops (total): 149.651
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131206,0.00501739,540.992,149.651

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0391433
  gflops (total): 69.3444
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.3444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0020932
  gflops (eval):  1296.76
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0020932,1296.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.412
  maximum absolute entry in einsum_ir solution: 107.412
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131629
  time (eval):    0.00494383
  gflops (eval):  549.042
  gflops (total): 149.91
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131629,0.00494383,549.042,149.91

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.039155
  gflops (total): 69.3238
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.3238

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00182222
  gflops (eval):  1489.59
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00182222,1489.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.639
  maximum absolute entry in einsum_ir solution: 102.639
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130907
  time (eval):    0.00484331
  gflops (eval):  560.436
  gflops (total): 151.353
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130907,0.00484331,560.436,151.353

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0406802
  gflops (total): 66.7245
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.7245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00183961
  gflops (eval):  1475.52
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00183961,1475.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.11
  maximum absolute entry in einsum_ir solution: 114.11
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0107217
  time (eval):    0.00495631
  gflops (eval):  547.659
  gflops (total): 173.133
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0107217,0.00495631,547.659,173.133

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.039429
  gflops (total): 68.842
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.842

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00185854
  gflops (eval):  1460.49
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00185854,1460.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.985
  maximum absolute entry in einsum_ir solution: 100.985
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131149
  time (eval):    0.00490277
  gflops (eval):  553.64
  gflops (total): 150.651
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131149,0.00490277,553.64,150.651

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0421078
  gflops (total): 64.4624
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,64.4624

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0020437
  gflops (eval):  1328.16
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0020437,1328.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.223
  maximum absolute entry in einsum_ir solution: 105.223
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131286
  time (eval):    0.00484731
  gflops (eval):  559.974
  gflops (total): 151
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131286,0.00484731,559.974,151

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0406133
  gflops (total): 66.8344
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.8344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00234842
  gflops (eval):  1155.83
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00234842,1155.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.1527
  maximum absolute entry in einsum_ir solution: 99.1527
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129806
  time (eval):    0.00485691
  gflops (eval):  558.867
  gflops (total): 152.172
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129806,0.00485691,558.867,152.172

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0395133
  gflops (total): 68.6952
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.6952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00230339
  gflops (eval):  1178.42
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00230339,1178.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.923
  maximum absolute entry in einsum_ir solution: 101.923
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130675
  time (eval):    0.00487551
  gflops (eval):  556.736
  gflops (total): 151.277
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130675,0.00487551,556.736,151.277

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0403138
  gflops (total): 67.331
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.331

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00209086
  gflops (eval):  1298.21
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00209086,1298.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.83
  maximum absolute entry in einsum_ir solution: 111.83
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132485
  time (eval):    0.00499231
  gflops (eval):  543.711
  gflops (total): 148.808
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132485,0.00499231,543.711,148.808

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.041289
  gflops (total): 65.7408
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.7408

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0016959
  gflops (eval):  1600.55
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0016959,1600.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.592
  maximum absolute entry in einsum_ir solution: 102.592
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131279
  time (eval):    0.00496067
  gflops (eval):  547.178
  gflops (total): 150.06
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131279,0.00496067,547.178,150.06

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0389075
  gflops (total): 69.7646
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.7646

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00213232
  gflops (eval):  1272.97
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00213232,1272.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.48
  maximum absolute entry in einsum_ir solution: 105.48
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0133625
  time (eval):    0.00478445
  gflops (eval):  567.332
  gflops (total): 149.577
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0133625,0.00478445,567.332,149.577

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0389601
  gflops (total): 69.6706
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.6706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00197123
  gflops (eval):  1376.99
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00197123,1376.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.459
  maximum absolute entry in einsum_ir solution: 117.46
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0128819
  time (eval):    0.00496628
  gflops (eval):  546.56
  gflops (total): 152.081
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0128819,0.00496628,546.56,152.081

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.041585
  gflops (total): 65.2728
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.2728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00252016
  gflops (eval):  1077.06
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00252016,1077.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.111
  maximum absolute entry in einsum_ir solution: 111.111
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0127933
  time (eval):    0.00492976
  gflops (eval):  550.609
  gflops (total): 153.155
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0127933,0.00492976,550.609,153.155

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0377734
  gflops (total): 71.8592
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,71.8592

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00249695
  gflops (eval):  1087.07
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00249695,1087.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.309
  maximum absolute entry in einsum_ir solution: 110.309
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131428
  time (eval):    0.00493645
  gflops (eval):  549.863
  gflops (total): 150.137
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131428,0.00493645,549.863,150.137

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0380587
  gflops (total): 71.3207
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,71.3207

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00210006
  gflops (eval):  1292.52
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00210006,1292.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.811
  maximum absolute entry in einsum_ir solution: 105.811
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130647
  time (eval):    0.00483847
  gflops (eval):  560.998
  gflops (total): 151.614
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130647,0.00483847,560.998,151.614

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0388009
  gflops (total): 69.9563
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.9563

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00173353
  gflops (eval):  1565.8
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00173353,1565.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.254
  maximum absolute entry in einsum_ir solution: 101.254
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130875
  time (eval):    0.00494127
  gflops (eval):  549.327
  gflops (total): 150.557
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130875,0.00494127,549.327,150.557

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0396896
  gflops (total): 68.3899
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.3899

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00203468
  gflops (eval):  1334.05
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00203468,1334.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.897
  maximum absolute entry in einsum_ir solution: 113.897
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130458
  time (eval):    0.0048536
  gflops (eval):  559.249
  gflops (total): 151.646
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130458,0.0048536,559.249,151.646

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0384901
  gflops (total): 70.5213
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,70.5213

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00240172
  gflops (eval):  1130.18
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00240172,1130.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.4036
  maximum absolute entry in einsum_ir solution: 98.4036
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132159
  time (eval):    0.00491298
  gflops (eval):  552.489
  gflops (total): 149.727
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132159,0.00491298,552.489,149.727

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.042574
  gflops (total): 63.7564
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,63.7564

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00180268
  gflops (eval):  1505.74
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00180268,1505.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.541
  maximum absolute entry in einsum_ir solution: 102.541
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129684
  time (eval):    0.00495487
  gflops (eval):  547.818
  gflops (total): 151.444
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129684,0.00495487,547.818,151.444

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0411868
  gflops (total): 65.9039
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.9039

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00253688
  gflops (eval):  1069.96
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00253688,1069.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      95.1834
  maximum absolute entry in einsum_ir solution: 95.1834
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130692
  time (eval):    0.00482639
  gflops (eval):  562.401
  gflops (total): 151.678
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130692,0.00482639,562.401,151.678

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0394214
  gflops (total): 68.8552
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.8552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00190252
  gflops (eval):  1426.72
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00190252,1426.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.824
  maximum absolute entry in einsum_ir solution: 104.824
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130476
  time (eval):    0.00526578
  gflops (eval):  515.474
  gflops (total): 148.218
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130476,0.00526578,515.474,148.218

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0380865
  gflops (total): 71.2686
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,71.2686

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00191092
  gflops (eval):  1420.45
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00191092,1420.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.086
  maximum absolute entry in einsum_ir solution: 103.086
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131965
  time (eval):    0.00483484
  gflops (eval):  561.418
  gflops (total): 150.537
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131965,0.00483484,561.418,150.537

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0398182
  gflops (total): 68.169
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.169

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00234519
  gflops (eval):  1157.42
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00234519,1157.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.304
  maximum absolute entry in einsum_ir solution: 117.304
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130651
  time (eval):    0.00493439
  gflops (eval):  550.092
  gflops (total): 150.803
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130651,0.00493439,550.092,150.803

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0396298
  gflops (total): 68.4931
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.4931

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00238115
  gflops (eval):  1139.94
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00238115,1139.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.9
  maximum absolute entry in einsum_ir solution: 107.9
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.013066
  time (eval):    0.00486123
  gflops (eval):  558.371
  gflops (total): 151.41
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.013066,0.00486123,558.371,151.41

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0386643
  gflops (total): 70.2036
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,70.2036

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00173277
  gflops (eval):  1566.49
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00173277,1566.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.4591
  maximum absolute entry in einsum_ir solution: 98.4592
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131903
  time (eval):    0.00496049
  gflops (eval):  547.198
  gflops (total): 149.546
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131903,0.00496049,547.198,149.546

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0396088
  gflops (total): 68.5294
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.5294

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00169833
  gflops (eval):  1598.26
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00169833,1598.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.223
  maximum absolute entry in einsum_ir solution: 112.223
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131387
  time (eval):    0.00497142
  gflops (eval):  545.995
  gflops (total): 149.881
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131387,0.00497142,545.995,149.881

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0392588
  gflops (total): 69.1405
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.1405

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00231256
  gflops (eval):  1173.75
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00231256,1173.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.446
  maximum absolute entry in einsum_ir solution: 105.446
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.012896
  time (eval):    0.00481926
  gflops (eval):  563.234
  gflops (total): 153.222
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.012896,0.00481926,563.234,153.222

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.039205
  gflops (total): 69.2353
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.2353

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00177449
  gflops (eval):  1529.66
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00177449,1529.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.616
  maximum absolute entry in einsum_ir solution: 101.616
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130901
  time (eval):    0.00472408
  gflops (eval):  574.582
  gflops (total): 152.371
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130901,0.00472408,574.582,152.371

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0416801
  gflops (total): 65.1238
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.1238

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00199292
  gflops (eval):  1362.01
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00199292,1362.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.055
  maximum absolute entry in einsum_ir solution: 101.055
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129596
  time (eval):    0.0048177
  gflops (eval):  563.417
  gflops (total): 152.687
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129596,0.0048177,563.417,152.687

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0384838
  gflops (total): 70.5328
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,70.5328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00247092
  gflops (eval):  1098.53
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00247092,1098.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.432
  maximum absolute entry in einsum_ir solution: 104.432
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130313
  time (eval):    0.00494904
  gflops (eval):  548.464
  gflops (total): 150.963
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130313,0.00494904,548.464,150.963

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0397023
  gflops (total): 68.3681
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.3681

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00234619
  gflops (eval):  1156.93
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00234619,1156.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.867
  maximum absolute entry in einsum_ir solution: 117.867
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131592
  time (eval):    0.00493136
  gflops (eval):  550.431
  gflops (total): 150.043
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131592,0.00493136,550.431,150.043

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0395375
  gflops (total): 68.653
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.653

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0020993
  gflops (eval):  1292.99
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0020993,1292.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.128
  maximum absolute entry in einsum_ir solution: 114.128
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131158
  time (eval):    0.00488546
  gflops (eval):  555.602
  gflops (total): 150.788
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131158,0.00488546,555.602,150.788

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0402041
  gflops (total): 67.5148
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.5148

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00182183
  gflops (eval):  1489.91
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00182183,1489.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.155
  maximum absolute entry in einsum_ir solution: 105.154
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131878
  time (eval):    0.00493955
  gflops (eval):  549.518
  gflops (total): 149.739
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131878,0.00493955,549.518,149.739

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0403744
  gflops (total): 67.2299
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.2299

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00170832
  gflops (eval):  1588.91
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00170832,1588.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.476
  maximum absolute entry in einsum_ir solution: 98.476
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132178
  time (eval):    0.00484049
  gflops (eval):  560.763
  gflops (total): 150.312
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132178,0.00484049,560.763,150.312

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0399079
  gflops (total): 68.0158
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.0158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00200829
  gflops (eval):  1351.58
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00200829,1351.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.443
  maximum absolute entry in einsum_ir solution: 104.443
  maximum element-wise difference:              9.53674e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0132508
  time (eval):    0.00487905
  gflops (eval):  556.331
  gflops (total): 149.718
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0132508,0.00487905,556.331,149.718

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0403896
  gflops (total): 67.2047
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.2047

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00211816
  gflops (eval):  1281.47
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00211816,1281.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.7145
  maximum absolute entry in einsum_ir solution: 99.7145
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0128008
  time (eval):    0.00489475
  gflops (eval):  554.547
  gflops (total): 153.393
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0128008,0.00489475,554.547,153.393

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0390027
  gflops (total): 69.5945
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.5945

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00230289
  gflops (eval):  1178.68
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00230289,1178.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.3491
  maximum absolute entry in einsum_ir solution: 99.3491
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.013125
  time (eval):    0.00492827
  gflops (eval):  550.776
  gflops (total): 150.354
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.013125,0.00492827,550.776,150.354

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0394058
  gflops (total): 68.8825
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.8825

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00234502
  gflops (eval):  1157.5
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00234502,1157.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.254
  maximum absolute entry in einsum_ir solution: 104.254
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.01321
  time (eval):    0.00481081
  gflops (eval):  564.223
  gflops (total): 150.624
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.01321,0.00481081,564.223,150.624

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0396962
  gflops (total): 68.3786
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.3786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00249502
  gflops (eval):  1087.91
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00249502,1087.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.168
  maximum absolute entry in einsum_ir solution: 105.168
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.012831
  time (eval):    0.00472722
  gflops (eval):  574.2
  gflops (total): 154.593
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.012831,0.00472722,574.2,154.593

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0387815
  gflops (total): 69.9914
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.9914

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00213445
  gflops (eval):  1271.69
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00213445,1271.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.035
  maximum absolute entry in einsum_ir solution: 107.035
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130556
  time (eval):    0.00466537
  gflops (eval):  581.813
  gflops (total): 153.172
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130556,0.00466537,581.813,153.172

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0389307
  gflops (total): 69.7231
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.7231

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00191377
  gflops (eval):  1418.34
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00191377,1418.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.1072
  maximum absolute entry in einsum_ir solution: 99.1072
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.01303
  time (eval):    0.00485721
  gflops (eval):  558.834
  gflops (total): 151.749
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.01303,0.00485721,558.834,151.749

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0391233
  gflops (total): 69.3799
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.3799

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0022484
  gflops (eval):  1207.25
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0022484,1207.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.633
  maximum absolute entry in einsum_ir solution: 102.633
  maximum element-wise difference:              8.01086e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129023
  time (eval):    0.004834
  gflops (eval):  561.516
  gflops (total): 153.04
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129023,0.004834,561.516,153.04

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0406371
  gflops (total): 66.7954
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.7954

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0026518
  gflops (eval):  1023.6
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0026518,1023.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.934
  maximum absolute entry in einsum_ir solution: 100.934
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131591
  time (eval):    0.00497376
  gflops (eval):  545.738
  gflops (total): 149.694
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131591,0.00497376,545.738,149.694

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0393927
  gflops (total): 68.9053
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.9053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00216196
  gflops (eval):  1255.51
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00216196,1255.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.592
  maximum absolute entry in einsum_ir solution: 111.593
  maximum element-wise difference:              9.53674e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129733
  time (eval):    0.00477153
  gflops (eval):  568.867
  gflops (total): 152.967
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129733,0.00477153,568.867,152.967

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0393335
  gflops (total): 69.0092
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.0092

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00213589
  gflops (eval):  1270.84
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00213589,1270.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.933
  maximum absolute entry in einsum_ir solution: 104.933
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130328
  time (eval):    0.0049169
  gflops (eval):  552.05
  gflops (total): 151.221
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130328,0.0049169,552.05,151.221

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0385877
  gflops (total): 70.3428
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,70.3428

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0017791
  gflops (eval):  1525.7
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0017791,1525.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.6937
  maximum absolute entry in einsum_ir solution: 97.6937
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131707
  time (eval):    0.00488621
  gflops (eval):  555.517
  gflops (total): 150.323
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131707,0.00488621,555.517,150.323

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.038724
  gflops (total): 70.0952
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,70.0952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00207291
  gflops (eval):  1309.45
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00207291,1309.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.33
  maximum absolute entry in einsum_ir solution: 105.33
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.012943
  time (eval):    0.00481154
  gflops (eval):  564.137
  gflops (total): 152.883
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.012943,0.00481154,564.137,152.883

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0389799
  gflops (total): 69.6352
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.6352

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00210139
  gflops (eval):  1291.7
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00210139,1291.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.14
  maximum absolute entry in einsum_ir solution: 103.14
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130634
  time (eval):    0.00483031
  gflops (eval):  561.945
  gflops (total): 151.694
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130634,0.00483031,561.945,151.694

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0396179
  gflops (total): 68.5138
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.5138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00215216
  gflops (eval):  1261.23
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00215216,1261.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.7952
  maximum absolute entry in einsum_ir solution: 99.7953
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131236
  time (eval):    0.00481825
  gflops (eval):  563.352
  gflops (total): 151.287
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131236,0.00481825,563.352,151.287

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0400317
  gflops (total): 67.8054
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.8054

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00235953
  gflops (eval):  1150.39
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00235953,1150.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.351
  maximum absolute entry in einsum_ir solution: 110.351
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130542
  time (eval):    0.00493684
  gflops (eval):  549.82
  gflops (total): 150.874
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130542,0.00493684,549.82,150.874

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0394753
  gflops (total): 68.7612
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.7612

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00225677
  gflops (eval):  1202.77
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00225677,1202.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.415
  maximum absolute entry in einsum_ir solution: 102.415
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0129537
  time (eval):    0.00479579
  gflops (eval):  565.991
  gflops (total): 152.927
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0129537,0.00479579,565.991,152.927

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0416573
  gflops (total): 65.1595
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,65.1595

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00227185
  gflops (eval):  1194.79
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00227185,1194.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.087
  maximum absolute entry in einsum_ir solution: 107.087
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131088
  time (eval):    0.00500226
  gflops (eval):  542.628
  gflops (total): 149.873
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131088,0.00500226,542.628,149.873

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0391569
  gflops (total): 69.3204
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.3204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00221222
  gflops (eval):  1226.99
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00221222,1226.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.118
  maximum absolute entry in einsum_ir solution: 106.118
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131766
  time (eval):    0.00484465
  gflops (eval):  560.282
  gflops (total): 150.62
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131766,0.00484465,560.282,150.62

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0383548
  gflops (total): 70.7701
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,70.7701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0019964
  gflops (eval):  1359.63
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0019964,1359.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.6122
  maximum absolute entry in einsum_ir solution: 96.6122
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130331
  time (eval):    0.00490645
  gflops (eval):  553.225
  gflops (total): 151.306
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130331,0.00490645,553.225,151.306

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0389488
  gflops (total): 69.6908
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.6908

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00197206
  gflops (eval):  1376.42
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00197206,1376.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.921
  maximum absolute entry in einsum_ir solution: 104.921
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131166
  time (eval):    0.00476206
  gflops (eval):  569.999
  gflops (total): 151.822
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131166,0.00476206,569.999,151.822

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0399914
  gflops (total): 67.8738
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.8738

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00207959
  gflops (eval):  1305.24
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00207959,1305.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.419
  maximum absolute entry in einsum_ir solution: 101.419
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131415
  time (eval):    0.0048195
  gflops (eval):  563.206
  gflops (total): 151.126
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131415,0.0048195,563.206,151.126

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0401637
  gflops (total): 67.5826
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,67.5826

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00170512
  gflops (eval):  1591.89
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00170512,1591.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.9415
  maximum absolute entry in einsum_ir solution: 99.9415
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0128768
  time (eval):    0.00493936
  gflops (eval):  549.539
  gflops (total): 152.355
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0128768,0.00493936,549.539,152.355

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0407607
  gflops (total): 66.5928
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,66.5928

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00200117
  gflops (eval):  1356.39
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00200117,1356.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.9953
  maximum absolute entry in einsum_ir solution: 99.9953
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131802
  time (eval):    0.00494657
  gflops (eval):  548.737
  gflops (total): 149.743
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131802,0.00494657,548.737,149.743

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0391181
  gflops (total): 69.3892
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.3892

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0018426
  gflops (eval):  1473.12
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0018426,1473.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.431
  maximum absolute entry in einsum_ir solution: 102.431
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130659
  time (eval):    0.00477723
  gflops (eval):  568.189
  gflops (total): 152.124
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130659,0.00477723,568.189,152.124

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0395272
  gflops (total): 68.671
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,68.671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00211129
  gflops (eval):  1285.65
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00211129,1285.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.747
  maximum absolute entry in einsum_ir solution: 103.747
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0131232
  time (eval):    0.00485545
  gflops (eval):  559.036
  gflops (total): 150.978
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0131232,0.00485545,559.036,150.978

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.039081
  gflops (total): 69.4549
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.4549

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00193448
  gflops (eval):  1403.15
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00193448,1403.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.271
  maximum absolute entry in einsum_ir solution: 115.271
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0130085
  time (eval):    0.00502886
  gflops (eval):  539.758
  gflops (total): 150.486
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0130085,0.00502886,539.758,150.486

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0387808
  gflops (total): 69.9925
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,69.9925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.00202497
  gflops (eval):  1340.45
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.00202497,1340.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.756
  maximum absolute entry in einsum_ir solution: 109.756
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154938
  time (eval):    0.00572014
  gflops (eval):  542.835
  gflops (total): 146.37
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154938,0.00572014,542.835,146.37

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0365246
  gflops (total): 85.0136
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,85.0136

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142327
  gflops (eval):  218.166
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142327,218.166,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7676
  maximum absolute entry in einsum_ir solution: 55.7676
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156941
  time (eval):    0.0056929
  gflops (eval):  545.432
  gflops (total): 145.186
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156941,0.0056929,545.432,145.186

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0337639
  gflops (total): 91.9649
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.9649

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142391
  gflops (eval):  218.067
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142391,218.067,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.573
  maximum absolute entry in einsum_ir solution: 53.573
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0155578
  time (eval):    0.00567276
  gflops (eval):  547.369
  gflops (total): 146.256
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0155578,0.00567276,547.369,146.256

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0333451
  gflops (total): 93.12
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143005
  gflops (eval):  217.132
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143005,217.132,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.5523
  maximum absolute entry in einsum_ir solution: 64.5523
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158348
  time (eval):    0.00566554
  gflops (eval):  548.066
  gflops (total): 144.42
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158348,0.00566554,548.066,144.42

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0344261
  gflops (total): 90.1959
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.1959

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141801
  gflops (eval):  218.975
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141801,218.975,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6363
  maximum absolute entry in einsum_ir solution: 56.6363
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.015569
  time (eval):    0.00566429
  gflops (eval):  548.187
  gflops (total): 146.237
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.015569,0.00566429,548.187,146.237

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0349561
  gflops (total): 88.8283
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,88.8283

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142309
  gflops (eval):  218.194
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142309,218.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0995
  maximum absolute entry in einsum_ir solution: 59.0995
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0150425
  time (eval):    0.00567361
  gflops (eval):  547.287
  gflops (total): 149.888
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0150425,0.00567361,547.287,149.888

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0358997
  gflops (total): 86.4935
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,86.4935

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142224
  gflops (eval):  218.324
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142224,218.324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4582
  maximum absolute entry in einsum_ir solution: 55.4582
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157289
  time (eval):    0.00569758
  gflops (eval):  544.984
  gflops (total): 144.918
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157289,0.00569758,544.984,144.918

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0343861
  gflops (total): 90.3007
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.3007

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142614
  gflops (eval):  217.727
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142614,217.727,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5211
  maximum absolute entry in einsum_ir solution: 56.5211
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0152222
  time (eval):    0.00571302
  gflops (eval):  543.511
  gflops (total): 148.319
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0152222,0.00571302,543.511,148.319

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0351178
  gflops (total): 88.4192
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,88.4192

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142813
  gflops (eval):  217.423
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142813,217.423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5041
  maximum absolute entry in einsum_ir solution: 56.5041
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157835
  time (eval):    0.00566302
  gflops (eval):  548.31
  gflops (total): 144.783
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157835,0.00566302,548.31,144.783

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.034397
  gflops (total): 90.2722
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.2722

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142414
  gflops (eval):  218.033
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142414,218.033,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7048
  maximum absolute entry in einsum_ir solution: 56.7048
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157257
  time (eval):    0.00573648
  gflops (eval):  541.289
  gflops (total): 144.677
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157257,0.00573648,541.289,144.677

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0344357
  gflops (total): 90.1706
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.1706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142224
  gflops (eval):  218.323
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142224,218.323,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9791
  maximum absolute entry in einsum_ir solution: 58.9791
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.015685
  time (eval):    0.00593783
  gflops (eval):  522.933
  gflops (total): 143.603
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.015685,0.00593783,522.933,143.603

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.034456
  gflops (total): 90.1176
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.1176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142209
  gflops (eval):  218.347
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142209,218.347,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4637
  maximum absolute entry in einsum_ir solution: 60.4637
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.016013
  time (eval):    0.00566487
  gflops (eval):  548.131
  gflops (total): 143.238
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.016013,0.00566487,548.131,143.238

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.034331
  gflops (total): 90.4456
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.4456

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0144004
  gflops (eval):  215.626
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0144004,215.626,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.3563
  maximum absolute entry in einsum_ir solution: 62.3563
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156092
  time (eval):    0.00570534
  gflops (eval):  544.243
  gflops (total): 145.679
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156092,0.00570534,544.243,145.679

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0342679
  gflops (total): 90.6123
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.6123

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0144122
  gflops (eval):  215.449
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0144122,215.449,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.9521
  maximum absolute entry in einsum_ir solution: 65.9521
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157932
  time (eval):    0.00570598
  gflops (eval):  544.182
  gflops (total): 144.428
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157932,0.00570598,544.182,144.428

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0335273
  gflops (total): 92.6138
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.6138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143316
  gflops (eval):  216.66
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143316,216.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1849
  maximum absolute entry in einsum_ir solution: 58.1849
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0152531
  time (eval):    0.00568912
  gflops (eval):  545.794
  gflops (total): 148.269
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0152531,0.00568912,545.794,148.269

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.035086
  gflops (total): 88.4995
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,88.4995

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142599
  gflops (eval):  217.749
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142599,217.749,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7999
  maximum absolute entry in einsum_ir solution: 55.7999
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156047
  time (eval):    0.00568909
  gflops (eval):  545.797
  gflops (total): 145.821
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156047,0.00568909,545.797,145.821

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0351033
  gflops (total): 88.4559
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,88.4559

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142064
  gflops (eval):  218.57
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142064,218.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7221
  maximum absolute entry in einsum_ir solution: 56.7221
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.015852
  time (eval):    0.00567443
  gflops (eval):  547.207
  gflops (total): 144.245
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.015852,0.00567443,547.207,144.245

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0340916
  gflops (total): 91.0809
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.0809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142154
  gflops (eval):  218.431
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142154,218.431,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3799
  maximum absolute entry in einsum_ir solution: 59.3799
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.01605
  time (eval):    0.00569118
  gflops (eval):  545.597
  gflops (total): 142.821
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.01605,0.00569118,545.597,142.821

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0336504
  gflops (total): 92.2749
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.2749

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141978
  gflops (eval):  218.702
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141978,218.702,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1292
  maximum absolute entry in einsum_ir solution: 57.1292
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157588
  time (eval):    0.00568539
  gflops (eval):  546.153
  gflops (total): 144.799
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157588,0.00568539,546.153,144.799

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0341229
  gflops (total): 90.9973
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.9973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142406
  gflops (eval):  218.045
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142406,218.045,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4913
  maximum absolute entry in einsum_ir solution: 58.4913
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156764
  time (eval):    0.00571121
  gflops (eval):  543.683
  gflops (total): 145.182
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156764,0.00571121,543.683,145.182

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0336693
  gflops (total): 92.2233
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.2233

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142858
  gflops (eval):  217.355
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142858,217.355,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3922
  maximum absolute entry in einsum_ir solution: 56.3922
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158252
  time (eval):    0.00569994
  gflops (eval):  544.758
  gflops (total): 144.254
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158252,0.00569994,544.758,144.254

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.034013
  gflops (total): 91.2913
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.2913

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142333
  gflops (eval):  218.157
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142333,218.157,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.4403
  maximum absolute entry in einsum_ir solution: 54.4403
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0148328
  time (eval):    0.00567566
  gflops (eval):  547.089
  gflops (total): 151.405
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0148328,0.00567566,547.089,151.405

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0346989
  gflops (total): 89.4868
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.4868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141701
  gflops (eval):  219.131
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141701,219.131,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.5727
  maximum absolute entry in einsum_ir solution: 55.5727
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0153248
  time (eval):    0.00566664
  gflops (eval):  547.96
  gflops (total): 147.922
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0153248,0.00566664,547.96,147.922

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0346607
  gflops (total): 89.5855
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.5855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142648
  gflops (eval):  217.675
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142648,217.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5962
  maximum absolute entry in einsum_ir solution: 54.5962
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0153285
  time (eval):    0.0056665
  gflops (eval):  547.974
  gflops (total): 147.897
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0153285,0.0056665,547.974,147.897

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0337883
  gflops (total): 91.8985
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.8985

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141764
  gflops (eval):  219.033
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141764,219.033,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2765
  maximum absolute entry in einsum_ir solution: 59.2765
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0144499
  time (eval):    0.00600293
  gflops (eval):  517.263
  gflops (total): 151.817
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0144499,0.00600293,517.263,151.817

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0343351
  gflops (total): 90.4348
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.4348

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141882
  gflops (eval):  218.85
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141882,218.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.695
  maximum absolute entry in einsum_ir solution: 55.695
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156561
  time (eval):    0.00572803
  gflops (eval):  542.088
  gflops (total): 145.206
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156561,0.00572803,542.088,145.206

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.033827
  gflops (total): 91.7932
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.7932

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142047
  gflops (eval):  218.597
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142047,218.597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3704
  maximum absolute entry in einsum_ir solution: 59.3704
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156177
  time (eval):    0.00571729
  gflops (eval):  543.106
  gflops (total): 145.54
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156177,0.00571729,543.106,145.54

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0336135
  gflops (total): 92.3764
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.3764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141622
  gflops (eval):  219.252
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141622,219.252,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.2808
  maximum absolute entry in einsum_ir solution: 63.2808
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0151327
  time (eval):    0.00567113
  gflops (eval):  547.526
  gflops (total): 149.256
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0151327,0.00567113,547.526,149.256

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0338546
  gflops (total): 91.7185
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.7185

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142034
  gflops (eval):  218.615
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142034,218.615,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7432
  maximum absolute entry in einsum_ir solution: 54.7432
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157267
  time (eval):    0.00571722
  gflops (eval):  543.112
  gflops (total): 144.8
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157267,0.00571722,543.112,144.8

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.034738
  gflops (total): 89.3859
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.3859

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142866
  gflops (eval):  217.342
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142866,217.342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.385
  maximum absolute entry in einsum_ir solution: 57.385
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.015644
  time (eval):    0.00571396
  gflops (eval):  543.422
  gflops (total): 145.383
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.015644,0.00571396,543.422,145.383

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0345575
  gflops (total): 89.8529
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.8529

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142121
  gflops (eval):  218.482
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142121,218.482,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1836
  maximum absolute entry in einsum_ir solution: 56.1836
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157628
  time (eval):    0.00571651
  gflops (eval):  543.179
  gflops (total): 144.562
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157628,0.00571651,543.179,144.562

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0339305
  gflops (total): 91.5132
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.5132

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142191
  gflops (eval):  218.375
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142191,218.375,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2391
  maximum absolute entry in einsum_ir solution: 56.2391
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.015117
  time (eval):    0.00573792
  gflops (eval):  541.152
  gflops (total): 148.89
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.015117,0.00573792,541.152,148.89

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0333996
  gflops (total): 92.9678
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.9678

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142333
  gflops (eval):  218.157
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142333,218.157,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6538
  maximum absolute entry in einsum_ir solution: 57.6538
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157454
  time (eval):    0.00569055
  gflops (eval):  545.658
  gflops (total): 144.854
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157454,0.00569055,545.658,144.854

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0342021
  gflops (total): 90.7867
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.7867

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014173
  gflops (eval):  219.085
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014173,219.085,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.3986
  maximum absolute entry in einsum_ir solution: 63.3986
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156035
  time (eval):    0.00568546
  gflops (eval):  546.146
  gflops (total): 145.855
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156035,0.00568546,546.146,145.855

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0337128
  gflops (total): 92.1041
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.1041

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142954
  gflops (eval):  217.209
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142954,217.209,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6372
  maximum absolute entry in einsum_ir solution: 56.6372
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154956
  time (eval):    0.00568905
  gflops (eval):  545.802
  gflops (total): 146.573
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154956,0.00568905,545.802,146.573

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0345926
  gflops (total): 89.7617
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.7617

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142279
  gflops (eval):  218.239
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142279,218.239,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5658
  maximum absolute entry in einsum_ir solution: 58.5658
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0150427
  time (eval):    0.00567299
  gflops (eval):  547.347
  gflops (total): 149.891
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0150427,0.00567299,547.347,149.891

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0333678
  gflops (total): 93.0566
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.0566

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143545
  gflops (eval):  216.315
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143545,216.315,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7658
  maximum absolute entry in einsum_ir solution: 55.7658
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154045
  time (eval):    0.00565936
  gflops (eval):  548.664
  gflops (total): 147.413
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154045,0.00565936,548.664,147.413

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0343322
  gflops (total): 90.4427
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.4427

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141615
  gflops (eval):  219.263
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141615,219.263,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2231
  maximum absolute entry in einsum_ir solution: 58.2231
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0152929
  time (eval):    0.005699
  gflops (eval):  544.849
  gflops (total): 147.918
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0152929,0.005699,544.849,147.918

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.034165
  gflops (total): 90.885
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141859
  gflops (eval):  218.885
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141859,218.885,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.6267
  maximum absolute entry in einsum_ir solution: 53.6267
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0151525
  time (eval):    0.00569041
  gflops (eval):  545.671
  gflops (total): 148.976
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0151525,0.00569041,545.671,148.976

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0348437
  gflops (total): 89.1148
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.1148

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0144707
  gflops (eval):  214.577
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0144707,214.577,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8701
  maximum absolute entry in einsum_ir solution: 58.8701
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0155936
  time (eval):    0.00569478
  gflops (eval):  545.252
  gflops (total): 145.858
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0155936,0.00569478,545.252,145.858

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0334214
  gflops (total): 92.9072
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.9072

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141486
  gflops (eval):  219.463
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141486,219.463,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1577
  maximum absolute entry in einsum_ir solution: 56.1577
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0163993
  time (eval):    0.00570888
  gflops (eval):  543.905
  gflops (total): 140.45
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0163993,0.00570888,543.905,140.45

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0338247
  gflops (total): 91.7995
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.7995

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141893
  gflops (eval):  218.833
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141893,218.833,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1987
  maximum absolute entry in einsum_ir solution: 59.1987
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156863
  time (eval):    0.00569412
  gflops (eval):  545.315
  gflops (total): 145.231
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156863,0.00569412,545.315,145.231

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0349678
  gflops (total): 88.7986
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,88.7986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141336
  gflops (eval):  219.695
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141336,219.695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.849
  maximum absolute entry in einsum_ir solution: 52.849
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0147987
  time (eval):    0.00570152
  gflops (eval):  544.607
  gflops (total): 151.466
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0147987,0.00570152,544.607,151.466

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0357343
  gflops (total): 86.8939
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,86.8939

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142183
  gflops (eval):  218.387
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142183,218.387,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7703
  maximum absolute entry in einsum_ir solution: 58.7703
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0159762
  time (eval):    0.0056726
  gflops (eval):  547.384
  gflops (total): 143.43
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0159762,0.0056726,547.384,143.43

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.033372
  gflops (total): 93.0447
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.0447

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142953
  gflops (eval):  217.211
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142953,217.211,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3381
  maximum absolute entry in einsum_ir solution: 58.3381
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157008
  time (eval):    0.00568749
  gflops (eval):  545.952
  gflops (total): 145.177
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157008,0.00568749,545.952,145.177

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0339236
  gflops (total): 91.532
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.532

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142572
  gflops (eval):  217.79
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142572,217.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.5975
  maximum absolute entry in einsum_ir solution: 62.5975
  maximum element-wise difference:              2.86102e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0151411
  time (eval):    0.00571494
  gflops (eval):  543.328
  gflops (total): 148.882
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0151411,0.00571494,543.328,148.882

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0334516
  gflops (total): 92.8235
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.8235

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143997
  gflops (eval):  215.635
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143997,215.635,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1393
  maximum absolute entry in einsum_ir solution: 58.1393
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157062
  time (eval):    0.00568205
  gflops (eval):  546.474
  gflops (total): 145.177
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157062,0.00568205,546.474,145.177

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0347982
  gflops (total): 89.2314
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.2314

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142277
  gflops (eval):  218.242
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142277,218.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2062
  maximum absolute entry in einsum_ir solution: 58.2062
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156419
  time (eval):    0.00569852
  gflops (eval):  544.895
  gflops (total): 145.503
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156419,0.00569852,544.895,145.503

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0351839
  gflops (total): 88.2531
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,88.2531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142735
  gflops (eval):  217.542
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142735,217.542,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.891
  maximum absolute entry in einsum_ir solution: 59.891
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156648
  time (eval):    0.00569963
  gflops (eval):  544.788
  gflops (total): 145.339
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156648,0.00569963,544.788,145.339

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0342949
  gflops (total): 90.5409
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.5409

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014373
  gflops (eval):  216.036
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014373,216.036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.9154
  maximum absolute entry in einsum_ir solution: 63.9154
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156795
  time (eval):    0.00573629
  gflops (eval):  541.307
  gflops (total): 144.99
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156795,0.00573629,541.307,144.99

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0339885
  gflops (total): 91.3572
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.3572

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141337
  gflops (eval):  219.694
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141337,219.694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5434
  maximum absolute entry in einsum_ir solution: 56.5434
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0151284
  time (eval):    0.00573017
  gflops (eval):  541.885
  gflops (total): 148.864
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0151284,0.00573017,541.885,148.864

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0347086
  gflops (total): 89.4617
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.4617

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142906
  gflops (eval):  217.282
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142906,217.282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.2823
  maximum absolute entry in einsum_ir solution: 53.2823
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0152495
  time (eval):    0.00570258
  gflops (eval):  544.506
  gflops (total): 148.199
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0152495,0.00570258,544.506,148.199

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0332097
  gflops (total): 93.4996
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.4996

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143519
  gflops (eval):  216.354
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143519,216.354,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.9081
  maximum absolute entry in einsum_ir solution: 52.9081
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.016095
  time (eval):    0.00571085
  gflops (eval):  543.718
  gflops (total): 142.397
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.016095,0.00571085,543.718,142.397

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.033717
  gflops (total): 92.0927
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.0927

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141917
  gflops (eval):  218.797
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141917,218.797,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7015
  maximum absolute entry in einsum_ir solution: 54.7015
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157892
  time (eval):    0.00569965
  gflops (eval):  544.787
  gflops (total): 144.498
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157892,0.00569965,544.787,144.498

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.03523
  gflops (total): 88.1378
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,88.1378

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142438
  gflops (eval):  217.996
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142438,217.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.6226
  maximum absolute entry in einsum_ir solution: 54.6226
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156322
  time (eval):    0.00566143
  gflops (eval):  548.464
  gflops (total): 145.823
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156322,0.00566143,548.464,145.823

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0342175
  gflops (total): 90.7457
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.7457

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141868
  gflops (eval):  218.871
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141868,218.871,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6838
  maximum absolute entry in einsum_ir solution: 55.6838
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0159534
  time (eval):    0.00567927
  gflops (eval):  546.742
  gflops (total): 143.537
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0159534,0.00567927,546.742,143.537

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0340942
  gflops (total): 91.0739
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.0739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143221
  gflops (eval):  216.805
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143221,216.805,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7668
  maximum absolute entry in einsum_ir solution: 59.7668
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0152251
  time (eval):    0.0056961
  gflops (eval):  545.126
  gflops (total): 148.418
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0152251,0.0056961,545.126,148.418

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.033906
  gflops (total): 91.5794
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.5794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141988
  gflops (eval):  218.686
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141988,218.686,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6203
  maximum absolute entry in einsum_ir solution: 58.6203
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157379
  time (eval):    0.00571389
  gflops (eval):  543.429
  gflops (total): 144.748
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157379,0.00571389,543.429,144.748

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.034018
  gflops (total): 91.2778
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.2778

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014307
  gflops (eval):  217.032
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014307,217.032,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3596
  maximum absolute entry in einsum_ir solution: 54.3596
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0155505
  time (eval):    0.00571608
  gflops (eval):  543.22
  gflops (total): 146.008
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0155505,0.00571608,543.22,146.008

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0339398
  gflops (total): 91.4883
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.4883

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142341
  gflops (eval):  218.144
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142341,218.144,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8085
  maximum absolute entry in einsum_ir solution: 56.8085
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158543
  time (eval):    0.00566167
  gflops (eval):  548.441
  gflops (total): 144.316
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158543,0.00566167,548.441,144.316

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0329001
  gflops (total): 94.3794
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,94.3794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142517
  gflops (eval):  217.875
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142517,217.875,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5013
  maximum absolute entry in einsum_ir solution: 54.5013
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0151517
  time (eval):    0.00569728
  gflops (eval):  545.013
  gflops (total): 148.932
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0151517,0.00569728,545.013,148.932

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0345144
  gflops (total): 89.9651
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.9651

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142834
  gflops (eval):  217.391
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142834,217.391,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6577
  maximum absolute entry in einsum_ir solution: 56.6577
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.01584
  time (eval):    0.00568352
  gflops (eval):  546.332
  gflops (total): 144.265
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.01584,0.00568352,546.332,144.265

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0337631
  gflops (total): 91.9671
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.9671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142636
  gflops (eval):  217.693
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142636,217.693,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3465
  maximum absolute entry in einsum_ir solution: 56.3465
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157409
  time (eval):    0.00571002
  gflops (eval):  543.797
  gflops (total): 144.754
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157409,0.00571002,543.797,144.754

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0344257
  gflops (total): 90.1969
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.1969

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142142
  gflops (eval):  218.45
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142142,218.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.225
  maximum absolute entry in einsum_ir solution: 58.225
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.01479
  time (eval):    0.00570453
  gflops (eval):  544.32
  gflops (total): 151.508
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.01479,0.00570453,544.32,151.508

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0344253
  gflops (total): 90.1981
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.1981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141643
  gflops (eval):  219.22
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141643,219.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9561
  maximum absolute entry in einsum_ir solution: 56.9561
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156094
  time (eval):    0.00569847
  gflops (eval):  544.899
  gflops (total): 145.725
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156094,0.00569847,544.899,145.725

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0352707
  gflops (total): 88.036
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,88.036

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142284
  gflops (eval):  218.232
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142284,218.232,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.324
  maximum absolute entry in einsum_ir solution: 57.324
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0146115
  time (eval):    0.0057185
  gflops (eval):  542.991
  gflops (total): 152.734
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0146115,0.0057185,542.991,152.734

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0335819
  gflops (total): 92.4632
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.4632

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141837
  gflops (eval):  218.92
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141837,218.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.3025
  maximum absolute entry in einsum_ir solution: 64.3025
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158198
  time (eval):    0.00570587
  gflops (eval):  544.192
  gflops (total): 144.251
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158198,0.00570587,544.192,144.251

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0343997
  gflops (total): 90.2651
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.2651

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141886
  gflops (eval):  218.845
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141886,218.845,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5028
  maximum absolute entry in einsum_ir solution: 54.5028
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0149165
  time (eval):    0.00570081
  gflops (eval):  544.676
  gflops (total): 150.606
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0149165,0.00570081,544.676,150.606

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0344659
  gflops (total): 90.0916
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.0916

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141998
  gflops (eval):  218.671
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141998,218.671,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9053
  maximum absolute entry in einsum_ir solution: 56.9053
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0159134
  time (eval):    0.00569184
  gflops (eval):  545.534
  gflops (total): 143.719
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0159134,0.00569184,545.534,143.719

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0338625
  gflops (total): 91.6969
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.6969

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142254
  gflops (eval):  218.278
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142254,218.278,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5631
  maximum absolute entry in einsum_ir solution: 54.5631
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0158543
  time (eval):    0.00573451
  gflops (eval):  541.474
  gflops (total): 143.829
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0158543,0.00573451,541.474,143.829

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0348014
  gflops (total): 89.2233
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.2233

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142455
  gflops (eval):  217.97
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142455,217.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0294
  maximum absolute entry in einsum_ir solution: 57.0294
  maximum element-wise difference:              2.00272e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156426
  time (eval):    0.00569456
  gflops (eval):  545.273
  gflops (total): 145.525
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156426,0.00569456,545.273,145.525

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0358952
  gflops (total): 86.5043
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,86.5043

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014265
  gflops (eval):  217.672
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014265,217.672,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4711
  maximum absolute entry in einsum_ir solution: 56.4711
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0151439
  time (eval):    0.00568273
  gflops (eval):  546.408
  gflops (total): 149.092
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0151439,0.00568273,546.408,149.092

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0348971
  gflops (total): 88.9786
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,88.9786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.01423
  gflops (eval):  218.208
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.01423,218.208,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3604
  maximum absolute entry in einsum_ir solution: 56.3604
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0159468
  time (eval):    0.005677
  gflops (eval):  546.96
  gflops (total): 143.596
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0159468,0.005677,546.96,143.596

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0348213
  gflops (total): 89.1721
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.1721

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142205
  gflops (eval):  218.353
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142205,218.353,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.7571
  maximum absolute entry in einsum_ir solution: 64.7571
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0152574
  time (eval):    0.00568663
  gflops (eval):  546.034
  gflops (total): 148.257
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0152574,0.00568663,546.034,148.257

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0338311
  gflops (total): 91.7823
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.7823

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142187
  gflops (eval):  218.382
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142187,218.382,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5316
  maximum absolute entry in einsum_ir solution: 59.5316
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0150462
  time (eval):    0.00572634
  gflops (eval):  542.247
  gflops (total): 149.481
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0150462,0.00572634,542.247,149.481

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0336506
  gflops (total): 92.2745
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,92.2745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142089
  gflops (eval):  218.531
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142089,218.531,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.3303
  maximum absolute entry in einsum_ir solution: 52.3303
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157194
  time (eval):    0.00566822
  gflops (eval):  547.807
  gflops (total): 145.182
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157194,0.00566822,547.807,145.182

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0338368
  gflops (total): 91.7667
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.7667

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142511
  gflops (eval):  217.884
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142511,217.884,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.6065
  maximum absolute entry in einsum_ir solution: 54.6065
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0153923
  time (eval):    0.00570269
  gflops (eval):  544.496
  gflops (total): 147.196
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0153923,0.00570269,544.496,147.196

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0341523
  gflops (total): 90.9189
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.9189

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143127
  gflops (eval):  216.947
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143127,216.947,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8712
  maximum absolute entry in einsum_ir solution: 57.8712
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0153924
  time (eval):    0.0056969
  gflops (eval):  545.05
  gflops (total): 147.235
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0153924,0.0056969,545.05,147.235

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0342055
  gflops (total): 90.7774
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.7774

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142378
  gflops (eval):  218.089
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142378,218.089,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.8752
  maximum absolute entry in einsum_ir solution: 60.8752
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154874
  time (eval):    0.0057631
  gflops (eval):  538.788
  gflops (total): 146.118
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154874,0.0057631,538.788,146.118

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.033817
  gflops (total): 91.8204
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.8204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142329
  gflops (eval):  218.163
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142329,218.163,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5524
  maximum absolute entry in einsum_ir solution: 54.5524
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0159773
  time (eval):    0.00574262
  gflops (eval):  540.71
  gflops (total): 142.961
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0159773,0.00574262,540.71,142.961

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0346198
  gflops (total): 89.6912
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.6912

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141987
  gflops (eval):  218.689
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141987,218.689,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.4852
  maximum absolute entry in einsum_ir solution: 52.4852
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0154928
  time (eval):    0.00566148
  gflops (eval):  548.46
  gflops (total): 146.783
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0154928,0.00566148,548.46,146.783

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0343515
  gflops (total): 90.3917
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.3917

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142507
  gflops (eval):  217.891
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142507,217.891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7236
  maximum absolute entry in einsum_ir solution: 59.7236
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0152973
  time (eval):    0.00565767
  gflops (eval):  548.829
  gflops (total): 148.179
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0152973,0.00565767,548.829,148.179

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.033994
  gflops (total): 91.3423
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.3423

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142116
  gflops (eval):  218.49
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142116,218.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3642
  maximum absolute entry in einsum_ir solution: 58.3642
  maximum element-wise difference:              2.86102e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156897
  time (eval):    0.00568028
  gflops (eval):  546.644
  gflops (total): 145.301
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156897,0.00568028,546.644,145.301

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0351678
  gflops (total): 88.2935
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,88.2935

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141829
  gflops (eval):  218.932
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141829,218.932,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.415
  maximum absolute entry in einsum_ir solution: 53.415
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0155487
  time (eval):    0.00566525
  gflops (eval):  548.095
  gflops (total): 146.37
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0155487,0.00566525,548.095,146.37

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0347323
  gflops (total): 89.4006
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.4006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142915
  gflops (eval):  217.269
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142915,217.269,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1335
  maximum absolute entry in einsum_ir solution: 59.1335
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157796
  time (eval):    0.00567298
  gflops (eval):  547.347
  gflops (total): 144.742
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157796,0.00567298,547.347,144.742

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0338335
  gflops (total): 91.7757
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.7757

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142423
  gflops (eval):  218.019
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142423,218.019,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.592
  maximum absolute entry in einsum_ir solution: 53.592
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0152221
  time (eval):    0.00570954
  gflops (eval):  543.843
  gflops (total): 148.344
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0152221,0.00570954,543.843,148.344

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0348137
  gflops (total): 89.1916
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.1916

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143201
  gflops (eval):  216.834
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143201,216.834,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9243
  maximum absolute entry in einsum_ir solution: 59.9243
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0153384
  time (eval):    0.00567994
  gflops (eval):  546.677
  gflops (total): 147.732
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0153384,0.00567994,546.677,147.732

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0331127
  gflops (total): 93.7735
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,93.7735

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143015
  gflops (eval):  217.116
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143015,217.116,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9278
  maximum absolute entry in einsum_ir solution: 59.9278
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.015064
  time (eval):    0.00570759
  gflops (eval):  544.028
  gflops (total): 149.487
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.015064,0.00570759,544.028,149.487

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0338343
  gflops (total): 91.7736
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.7736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143102
  gflops (eval):  216.985
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143102,216.985,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5176
  maximum absolute entry in einsum_ir solution: 56.5176
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.015811
  time (eval):    0.00574011
  gflops (eval):  540.946
  gflops (total): 144.081
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.015811,0.00574011,540.946,144.081

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0351609
  gflops (total): 88.3108
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,88.3108

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141772
  gflops (eval):  219.02
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141772,219.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.726
  maximum absolute entry in einsum_ir solution: 60.726
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0155551
  time (eval):    0.00565958
  gflops (eval):  548.644
  gflops (total): 146.365
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0155551,0.00565958,548.644,146.365

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0347474
  gflops (total): 89.3617
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.3617

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142226
  gflops (eval):  218.32
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142226,218.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3512
  maximum absolute entry in einsum_ir solution: 57.3512
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.015864
  time (eval):    0.00567114
  gflops (eval):  547.525
  gflops (total): 144.187
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.015864,0.00567114,547.525,144.187

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0338705
  gflops (total): 91.6754
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.6754

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.01425
  gflops (eval):  217.901
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.01425,217.901,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8171
  maximum absolute entry in einsum_ir solution: 54.8171
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0153111
  time (eval):    0.00567747
  gflops (eval):  546.915
  gflops (total): 147.942
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0153111,0.00567747,546.915,147.942

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0343598
  gflops (total): 90.3699
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.3699

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0141969
  gflops (eval):  218.717
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0141969,218.717,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4412
  maximum absolute entry in einsum_ir solution: 57.4412
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0151903
  time (eval):    0.00567588
  gflops (eval):  547.068
  gflops (total): 148.81
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0151903,0.00567588,547.068,148.81

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0341904
  gflops (total): 90.8177
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.8177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143078
  gflops (eval):  217.021
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143078,217.021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9183
  maximum absolute entry in einsum_ir solution: 58.9183
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0159254
  time (eval):    0.00570648
  gflops (eval):  544.134
  gflops (total): 143.542
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0159254,0.00570648,544.134,143.542

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0344561
  gflops (total): 90.1174
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,90.1174

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142289
  gflops (eval):  218.225
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142289,218.225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1056
  maximum absolute entry in einsum_ir solution: 57.1056
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0157981
  time (eval):    0.00570299
  gflops (eval):  544.468
  gflops (total): 144.415
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0157981,0.00570299,544.468,144.415

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0353289
  gflops (total): 87.8909
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,87.8909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014246
  gflops (eval):  217.962
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014246,217.962,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0031
  maximum absolute entry in einsum_ir solution: 57.0031
  maximum element-wise difference:              1.71661e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0156886
  time (eval):    0.00572021
  gflops (eval):  542.829
  gflops (total): 145.038
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0156886,0.00572021,542.829,145.038

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0340692
  gflops (total): 91.1406
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.1406

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0143144
  gflops (eval):  216.92
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0143144,216.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9086
  maximum absolute entry in einsum_ir solution: 55.9086
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0155855
  time (eval):    0.00569492
  gflops (eval):  545.239
  gflops (total): 145.913
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0155855,0.00569492,545.239,145.913

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0350275
  gflops (total): 88.6473
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,88.6473

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142102
  gflops (eval):  218.512
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142102,218.512,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7856
  maximum absolute entry in einsum_ir solution: 58.7856
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.015569
  time (eval):    0.00570742
  gflops (eval):  544.045
  gflops (total): 145.94
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.015569,0.00570742,544.045,145.94

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0330166
  gflops (total): 94.0463
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,94.0463

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142384
  gflops (eval):  218.078
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142384,218.078,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.4817
  maximum absolute entry in einsum_ir solution: 52.4817
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0153254
  time (eval):    0.00570318
  gflops (eval):  544.45
  gflops (total): 147.661
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0153254,0.00570318,544.45,147.661

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0339039
  gflops (total): 91.585
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,91.585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.014244
  gflops (eval):  217.993
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.014244,217.993,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0661
  maximum absolute entry in einsum_ir solution: 55.0661
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0153623
  time (eval):    0.0057165
  gflops (eval):  543.18
  gflops (total): 147.308
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0153623,0.0057165,543.18,147.308

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0347717
  gflops (total): 89.2994
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,89.2994

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0142603
  gflops (eval):  217.744
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0142603,217.744,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3537
  maximum absolute entry in einsum_ir solution: 56.3537
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013047
  time (eval):    0.00402417
  gflops (eval):  1076.38
  gflops (total): 253.732
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013047,0.00402417,1076.38,253.732

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0368044
  gflops (total): 117.69
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,117.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0339176
  gflops (eval):  127.707
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0339176,127.707,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3836
  maximum absolute entry in einsum_ir solution: 34.3836
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131138
  time (eval):    0.0040882
  gflops (eval):  1059.52
  gflops (total): 251.803
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131138,0.0040882,1059.52,251.803

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0356402
  gflops (total): 121.535
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,121.535

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0339657
  gflops (eval):  127.526
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0339657,127.526,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9417
  maximum absolute entry in einsum_ir solution: 34.9417
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129723
  time (eval):    0.00415016
  gflops (eval):  1043.7
  gflops (total): 252.973
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129723,0.00415016,1043.7,252.973

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0351969
  gflops (total): 123.065
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,123.065

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0333771
  gflops (eval):  129.775
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0333771,129.775,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3213
  maximum absolute entry in einsum_ir solution: 34.3213
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129
  time (eval):    0.00411162
  gflops (eval):  1053.48
  gflops (total): 254.622
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129,0.00411162,1053.48,254.622

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.035069
  gflops (total): 123.514
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,123.514

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327088
  gflops (eval):  132.427
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327088,132.427,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.183
  maximum absolute entry in einsum_ir solution: 36.183
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131477
  time (eval):    0.0037974
  gflops (eval):  1140.65
  gflops (total): 255.621
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131477,0.0037974,1140.65,255.621

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336487
  gflops (total): 128.728
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0326724
  gflops (eval):  132.574
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326724,132.574,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1932
  maximum absolute entry in einsum_ir solution: 33.1932
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130535
  time (eval):    0.00403151
  gflops (eval):  1074.42
  gflops (total): 253.527
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130535,0.00403151,1074.42,253.527

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334255
  gflops (total): 129.587
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325101
  gflops (eval):  133.236
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325101,133.236,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.213
  maximum absolute entry in einsum_ir solution: 39.213
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128733
  time (eval):    0.00389353
  gflops (eval):  1112.49
  gflops (total): 258.339
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128733,0.00389353,1112.49,258.339

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334259
  gflops (total): 129.586
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.586

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325794
  gflops (eval):  132.953
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325794,132.953,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6796
  maximum absolute entry in einsum_ir solution: 33.6796
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0127994
  time (eval):    0.00396865
  gflops (eval):  1091.43
  gflops (total): 258.319
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0127994,0.00396865,1091.43,258.319

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338014
  gflops (total): 128.146
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0322954
  gflops (eval):  134.122
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322954,134.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3095
  maximum absolute entry in einsum_ir solution: 34.3095
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013227
  time (eval):    0.00389607
  gflops (eval):  1111.77
  gflops (total): 252.964
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013227,0.00389607,1111.77,252.964

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.03419
  gflops (total): 126.69
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323729
  gflops (eval):  133.801
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323729,133.801,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.196
  maximum absolute entry in einsum_ir solution: 35.196
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131169
  time (eval):    0.00390396
  gflops (eval):  1109.52
  gflops (total): 254.482
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131169,0.00390396,1109.52,254.482

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340549
  gflops (total): 127.192
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.192

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0326258
  gflops (eval):  132.764
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326258,132.764,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3975
  maximum absolute entry in einsum_ir solution: 35.3975
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131855
  time (eval):    0.00391004
  gflops (eval):  1107.79
  gflops (total): 253.372
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131855,0.00391004,1107.79,253.372

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339408
  gflops (total): 127.62
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323239
  gflops (eval):  134.004
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323239,134.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5121
  maximum absolute entry in einsum_ir solution: 35.5121
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131291
  time (eval):    0.003944
  gflops (eval):  1098.26
  gflops (total): 253.705
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131291,0.003944,1098.26,253.705

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336075
  gflops (total): 128.886
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327567
  gflops (eval):  132.233
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327567,132.233,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8381
  maximum absolute entry in einsum_ir solution: 36.8381
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130272
  time (eval):    0.00409813
  gflops (eval):  1056.95
  gflops (total): 252.93
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130272,0.00409813,1056.95,252.93

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336178
  gflops (total): 128.846
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.846

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0324529
  gflops (eval):  133.471
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324529,133.471,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8442
  maximum absolute entry in einsum_ir solution: 34.8442
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130819
  time (eval):    0.00416924
  gflops (eval):  1038.92
  gflops (total): 251.086
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130819,0.00416924,1038.92,251.086

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342884
  gflops (total): 126.326
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327557
  gflops (eval):  132.237
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327557,132.237,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1763
  maximum absolute entry in einsum_ir solution: 35.1763
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131634
  time (eval):    0.00388942
  gflops (eval):  1113.67
  gflops (total): 254.006
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131634,0.00388942,1113.67,254.006

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332393
  gflops (total): 130.313
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.313

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0326126
  gflops (eval):  132.818
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326126,132.818,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1405
  maximum absolute entry in einsum_ir solution: 34.1405
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132427
  time (eval):    0.00404096
  gflops (eval):  1071.9
  gflops (total): 250.613
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132427,0.00404096,1071.9,250.613

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334106
  gflops (total): 129.645
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.645

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0324751
  gflops (eval):  133.38
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324751,133.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0983
  maximum absolute entry in einsum_ir solution: 35.0983
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129838
  time (eval):    0.00398049
  gflops (eval):  1088.19
  gflops (total): 255.331
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129838,0.00398049,1088.19,255.331

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341834
  gflops (total): 126.714
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0322967
  gflops (eval):  134.116
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322967,134.116,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4916
  maximum absolute entry in einsum_ir solution: 36.4916
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131935
  time (eval):    0.00408147
  gflops (eval):  1061.26
  gflops (total): 250.739
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131935,0.00408147,1061.26,250.739

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336135
  gflops (total): 128.862
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0330471
  gflops (eval):  131.071
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0330471,131.071,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6491
  maximum absolute entry in einsum_ir solution: 36.6491
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013007
  time (eval):    0.00396883
  gflops (eval):  1091.39
  gflops (total): 255.158
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013007,0.00396883,1091.39,255.158

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331702
  gflops (total): 130.585
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0321447
  gflops (eval):  134.751
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321447,134.751,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1146
  maximum absolute entry in einsum_ir solution: 35.1146
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133148
  time (eval):    0.00401214
  gflops (eval):  1079.6
  gflops (total): 249.987
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133148,0.00401214,1079.6,249.987

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334928
  gflops (total): 129.327
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.327

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0326684
  gflops (eval):  132.59
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326684,132.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3937
  maximum absolute entry in einsum_ir solution: 38.3937
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131891
  time (eval):    0.00396284
  gflops (eval):  1093.04
  gflops (total): 252.539
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131891,0.00396284,1093.04,252.539

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335461
  gflops (total): 129.121
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.032292
  gflops (eval):  134.136
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032292,134.136,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3911
  maximum absolute entry in einsum_ir solution: 33.3911
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133505
  time (eval):    0.00397389
  gflops (eval):  1089.99
  gflops (total): 250.024
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133505,0.00397389,1089.99,250.024

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341155
  gflops (total): 126.966
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0330927
  gflops (eval):  130.89
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0330927,130.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.9686
  maximum absolute entry in einsum_ir solution: 31.9686
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131453
  time (eval):    0.00402956
  gflops (eval):  1074.94
  gflops (total): 252.202
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131453,0.00402956,1074.94,252.202

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0329411
  gflops (total): 131.493
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.032517
  gflops (eval):  133.208
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032517,133.208,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.543
  maximum absolute entry in einsum_ir solution: 35.543
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131349
  time (eval):    0.00400835
  gflops (eval):  1080.62
  gflops (total): 252.666
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131349,0.00400835,1080.62,252.666

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0328741
  gflops (total): 131.761
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.761

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325896
  gflops (eval):  132.911
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325896,132.911,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.1678
  maximum absolute entry in einsum_ir solution: 32.1678
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130037
  time (eval):    0.0040262
  gflops (eval):  1075.83
  gflops (total): 254.347
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130037,0.0040262,1075.83,254.347

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337822
  gflops (total): 128.219
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325568
  gflops (eval):  133.045
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325568,133.045,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7287
  maximum absolute entry in einsum_ir solution: 34.7287
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129621
  time (eval):    0.00394453
  gflops (eval):  1098.11
  gflops (total): 256.203
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129621,0.00394453,1098.11,256.203

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334849
  gflops (total): 129.357
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.357

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0326809
  gflops (eval):  132.54
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326809,132.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4413
  maximum absolute entry in einsum_ir solution: 33.4413
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131731
  time (eval):    0.00408616
  gflops (eval):  1060.05
  gflops (total): 250.968
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131731,0.00408616,1060.05,250.968

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338054
  gflops (total): 128.131
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0326533
  gflops (eval):  132.652
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326533,132.652,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.2844
  maximum absolute entry in einsum_ir solution: 40.2844
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132404
  time (eval):    0.00404849
  gflops (eval):  1069.91
  gflops (total): 250.538
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132404,0.00404849,1069.91,250.538

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336744
  gflops (total): 128.629
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.629

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0320656
  gflops (eval):  135.083
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320656,135.083,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0582
  maximum absolute entry in einsum_ir solution: 40.0582
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131193
  time (eval):    0.00392796
  gflops (eval):  1102.74
  gflops (total): 254.089
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131193,0.00392796,1102.74,254.089

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337253
  gflops (total): 128.435
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.435

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0322962
  gflops (eval):  134.119
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322962,134.119,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3406
  maximum absolute entry in einsum_ir solution: 34.3406
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131167
  time (eval):    0.00393106
  gflops (eval):  1101.87
  gflops (total): 254.082
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131167,0.00393106,1101.87,254.082

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334699
  gflops (total): 129.415
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.415

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0324619
  gflops (eval):  133.434
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324619,133.434,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7305
  maximum absolute entry in einsum_ir solution: 32.7305
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130831
  time (eval):    0.00392524
  gflops (eval):  1103.5
  gflops (total): 254.67
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130831,0.00392524,1103.5,254.67

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0325469
  gflops (total): 133.085
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.085

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325877
  gflops (eval):  132.919
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325877,132.919,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.944
  maximum absolute entry in einsum_ir solution: 35.944
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131394
  time (eval):    0.00409131
  gflops (eval):  1058.71
  gflops (total): 251.383
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131394,0.00409131,1058.71,251.383

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342005
  gflops (total): 126.651
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.651

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327343
  gflops (eval):  132.324
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327343,132.324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3625
  maximum absolute entry in einsum_ir solution: 34.3625
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130977
  time (eval):    0.00404353
  gflops (eval):  1071.22
  gflops (total): 252.696
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130977,0.00404353,1071.22,252.696

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340128
  gflops (total): 127.35
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0328317
  gflops (eval):  131.931
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328317,131.931,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3447
  maximum absolute entry in einsum_ir solution: 37.3447
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130591
  time (eval):    0.00402758
  gflops (eval):  1075.46
  gflops (total): 253.502
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130591,0.00402758,1075.46,253.502

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334026
  gflops (total): 129.676
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.676

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0329116
  gflops (eval):  131.611
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0329116,131.611,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9494
  maximum absolute entry in einsum_ir solution: 36.9494
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130801
  time (eval):    0.00386596
  gflops (eval):  1120.43
  gflops (total): 255.607
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130801,0.00386596,1120.43,255.607

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331429
  gflops (total): 130.692
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.692

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323277
  gflops (eval):  133.988
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323277,133.988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5374
  maximum absolute entry in einsum_ir solution: 33.5374
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130428
  time (eval):    0.00396004
  gflops (eval):  1093.81
  gflops (total): 254.753
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130428,0.00396004,1093.81,254.753

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336546
  gflops (total): 128.705
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.705

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323879
  gflops (eval):  133.739
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323879,133.739,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2409
  maximum absolute entry in einsum_ir solution: 35.2409
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130091
  time (eval):    0.00406825
  gflops (eval):  1064.71
  gflops (total): 253.641
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130091,0.00406825,1064.71,253.641

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336365
  gflops (total): 128.774
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.774

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327072
  gflops (eval):  132.433
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327072,132.433,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9277
  maximum absolute entry in einsum_ir solution: 32.9277
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130737
  time (eval):    0.00399922
  gflops (eval):  1083.09
  gflops (total): 253.708
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130737,0.00399922,1083.09,253.708

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033426
  gflops (total): 129.586
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.586

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327148
  gflops (eval):  132.403
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327148,132.403,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3409
  maximum absolute entry in einsum_ir solution: 35.3409
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133157
  time (eval):    0.00407511
  gflops (eval):  1062.92
  gflops (total): 249.069
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133157,0.00407511,1062.92,249.069

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337161
  gflops (total): 128.47
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325324
  gflops (eval):  133.145
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325324,133.145,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5937
  maximum absolute entry in einsum_ir solution: 34.5937
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132424
  time (eval):    0.00392139
  gflops (eval):  1104.59
  gflops (total): 252.364
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132424,0.00392139,1104.59,252.364

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338938
  gflops (total): 127.797
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.797

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0328431
  gflops (eval):  131.885
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328431,131.885,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4124
  maximum absolute entry in einsum_ir solution: 33.4124
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013342
  time (eval):    0.00390531
  gflops (eval):  1109.14
  gflops (total): 251.142
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013342,0.00390531,1109.14,251.142

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339038
  gflops (total): 127.759
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.759

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327247
  gflops (eval):  132.362
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327247,132.362,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.6525
  maximum absolute entry in einsum_ir solution: 39.6525
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130998
  time (eval):    0.00396275
  gflops (eval):  1093.06
  gflops (total): 253.862
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130998,0.00396275,1093.06,253.862

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342167
  gflops (total): 126.591
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.591

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327252
  gflops (eval):  132.361
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327252,132.361,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0824
  maximum absolute entry in einsum_ir solution: 34.0824
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132
  time (eval):    0.00406441
  gflops (eval):  1065.72
  gflops (total): 250.893
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132,0.00406441,1065.72,250.893

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340938
  gflops (total): 127.047
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.047

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0317397
  gflops (eval):  136.47
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317397,136.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3365
  maximum absolute entry in einsum_ir solution: 35.3365
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130102
  time (eval):    0.00394016
  gflops (eval):  1099.33
  gflops (total): 255.541
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130102,0.00394016,1099.33,255.541

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0321724
  gflops (total): 134.635
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,134.635

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325885
  gflops (eval):  132.916
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325885,132.916,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4081
  maximum absolute entry in einsum_ir solution: 33.4081
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131672
  time (eval):    0.00404357
  gflops (eval):  1071.21
  gflops (total): 251.674
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131672,0.00404357,1071.21,251.674

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033174
  gflops (total): 130.57
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.57

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0328413
  gflops (eval):  131.893
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328413,131.893,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5236
  maximum absolute entry in einsum_ir solution: 34.5236
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132797
  time (eval):    0.00393252
  gflops (eval):  1101.46
  gflops (total): 251.653
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132797,0.00393252,1101.46,251.653

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342261
  gflops (total): 126.556
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.556

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0329493
  gflops (eval):  131.46
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0329493,131.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4937
  maximum absolute entry in einsum_ir solution: 33.4937
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131871
  time (eval):    0.00401887
  gflops (eval):  1077.79
  gflops (total): 251.745
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131871,0.00401887,1077.79,251.745

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337457
  gflops (total): 128.358
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.358

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323576
  gflops (eval):  133.864
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323576,133.864,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4167
  maximum absolute entry in einsum_ir solution: 33.4167
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131242
  time (eval):    0.00397502
  gflops (eval):  1089.68
  gflops (total): 253.317
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131242,0.00397502,1089.68,253.317

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335705
  gflops (total): 129.028
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.028

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0333839
  gflops (eval):  129.749
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0333839,129.749,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1082
  maximum absolute entry in einsum_ir solution: 35.1082
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131924
  time (eval):    0.00379598
  gflops (eval):  1141.08
  gflops (total): 254.969
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131924,0.00379598,1141.08,254.969

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340559
  gflops (total): 127.189
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.189

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0326382
  gflops (eval):  132.713
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326382,132.713,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4342
  maximum absolute entry in einsum_ir solution: 33.4342
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132442
  time (eval):    0.0039664
  gflops (eval):  1092.05
  gflops (total): 251.677
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132442,0.0039664,1092.05,251.677

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335849
  gflops (total): 128.972
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.972

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0319592
  gflops (eval):  135.533
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319592,135.533,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4688
  maximum absolute entry in einsum_ir solution: 34.4688
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129302
  time (eval):    0.00385454
  gflops (eval):  1123.74
  gflops (total): 258.064
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129302,0.00385454,1123.74,258.064

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334769
  gflops (total): 129.388
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.388

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325653
  gflops (eval):  133.01
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325653,133.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3632
  maximum absolute entry in einsum_ir solution: 33.3632
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132766
  time (eval):    0.0038465
  gflops (eval):  1126.09
  gflops (total): 252.964
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132766,0.0038465,1126.09,252.964

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337598
  gflops (total): 128.304
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.304

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0314967
  gflops (eval):  137.523
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0314967,137.523,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8178
  maximum absolute entry in einsum_ir solution: 32.8178
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131288
  time (eval):    0.00383851
  gflops (eval):  1128.44
  gflops (total): 255.287
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131288,0.00383851,1128.44,255.287

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330698
  gflops (total): 130.981
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0321802
  gflops (eval):  134.602
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321802,134.602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8207
  maximum absolute entry in einsum_ir solution: 33.8207
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132264
  time (eval):    0.00400627
  gflops (eval):  1081.18
  gflops (total): 251.355
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132264,0.00400627,1081.18,251.355

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340949
  gflops (total): 127.043
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.043

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323833
  gflops (eval):  133.758
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323833,133.758,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4565
  maximum absolute entry in einsum_ir solution: 37.4565
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131973
  time (eval):    0.00404413
  gflops (eval):  1071.06
  gflops (total): 251.228
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131973,0.00404413,1071.06,251.228

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330796
  gflops (total): 130.942
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.942

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323402
  gflops (eval):  133.936
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323402,133.936,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.789
  maximum absolute entry in einsum_ir solution: 37.789
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013054
  time (eval):    0.0040377
  gflops (eval):  1072.77
  gflops (total): 253.428
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013054,0.0040377,1072.77,253.428

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333175
  gflops (total): 130.008
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.008

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0329401
  gflops (eval):  131.497
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0329401,131.497,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8174
  maximum absolute entry in einsum_ir solution: 32.8174
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131862
  time (eval):    0.0039614
  gflops (eval):  1093.43
  gflops (total): 252.602
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131862,0.0039614,1093.43,252.602

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335929
  gflops (total): 128.942
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.942

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327835
  gflops (eval):  132.125
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327835,132.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3495
  maximum absolute entry in einsum_ir solution: 33.3495
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013366
  time (eval):    0.00395721
  gflops (eval):  1094.59
  gflops (total): 250.041
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013366,0.00395721,1094.59,250.041

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0323923
  gflops (total): 133.721
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.721

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0322475
  gflops (eval):  134.321
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322475,134.321,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4849
  maximum absolute entry in einsum_ir solution: 37.4849
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132848
  time (eval):    0.00395975
  gflops (eval):  1093.89
  gflops (total): 251.182
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132848,0.00395975,1093.89,251.182

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339625
  gflops (total): 127.538
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.538

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0322602
  gflops (eval):  134.268
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322602,134.268,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4213
  maximum absolute entry in einsum_ir solution: 37.4213
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132158
  time (eval):    0.00402917
  gflops (eval):  1075.04
  gflops (total): 251.176
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132158,0.00402917,1075.04,251.176

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340448
  gflops (total): 127.23
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325682
  gflops (eval):  132.998
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325682,132.998,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6352
  maximum absolute entry in einsum_ir solution: 33.6352
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130746
  time (eval):    0.00399231
  gflops (eval):  1084.97
  gflops (total): 253.797
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130746,0.00399231,1084.97,253.797

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0324327
  gflops (total): 133.554
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.554

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325563
  gflops (eval):  133.047
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325563,133.047,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3568
  maximum absolute entry in einsum_ir solution: 35.3568
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131026
  time (eval):    0.00407489
  gflops (eval):  1062.98
  gflops (total): 252.163
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131026,0.00407489,1062.98,252.163

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033434
  gflops (total): 129.554
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.554

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327869
  gflops (eval):  132.111
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327869,132.111,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3807
  maximum absolute entry in einsum_ir solution: 35.3807
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128492
  time (eval):    0.0040552
  gflops (eval):  1068.14
  gflops (total): 256.237
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128492,0.0040552,1068.14,256.237

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333337
  gflops (total): 129.944
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323284
  gflops (eval):  133.985
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323284,133.985,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4748
  maximum absolute entry in einsum_ir solution: 38.4748
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132342
  time (eval):    0.0039959
  gflops (eval):  1083.99
  gflops (total): 251.392
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132342,0.0039959,1083.99,251.392

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337185
  gflops (total): 128.461
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325689
  gflops (eval):  132.996
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325689,132.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7151
  maximum absolute entry in einsum_ir solution: 36.7151
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131338
  time (eval):    0.00383172
  gflops (eval):  1130.44
  gflops (total): 255.313
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131338,0.00383172,1130.44,255.313

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338101
  gflops (total): 128.113
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.113

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0311011
  gflops (eval):  139.272
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0311011,139.272,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4503
  maximum absolute entry in einsum_ir solution: 34.4503
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131236
  time (eval):    0.00397807
  gflops (eval):  1088.85
  gflops (total): 253.28
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131236,0.00397807,1088.85,253.28

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033232
  gflops (total): 130.342
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.342

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327965
  gflops (eval):  132.073
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327965,132.073,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4402
  maximum absolute entry in einsum_ir solution: 33.4402
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133372
  time (eval):    0.00381922
  gflops (eval):  1134.14
  gflops (total): 252.473
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133372,0.00381922,1134.14,252.473

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334519
  gflops (total): 129.485
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.485

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0324607
  gflops (eval):  133.439
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324607,133.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.634
  maximum absolute entry in einsum_ir solution: 32.634
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131871
  time (eval):    0.00392503
  gflops (eval):  1103.56
  gflops (total): 253.125
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131871,0.00392503,1103.56,253.125

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335773
  gflops (total): 129.002
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.002

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0327244
  gflops (eval):  132.364
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327244,132.364,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0841
  maximum absolute entry in einsum_ir solution: 33.0841
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131071
  time (eval):    0.00382557
  gflops (eval):  1132.26
  gflops (total): 255.809
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131071,0.00382557,1132.26,255.809

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.034004
  gflops (total): 127.383
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0314169
  gflops (eval):  137.872
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0314169,137.872,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9566
  maximum absolute entry in einsum_ir solution: 34.9566
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132138
  time (eval):    0.00378742
  gflops (eval):  1143.66
  gflops (total): 254.777
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132138,0.00378742,1143.66,254.777

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033607
  gflops (total): 128.887
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325056
  gflops (eval):  133.255
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325056,133.255,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0068
  maximum absolute entry in einsum_ir solution: 33.0068
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132362
  time (eval):    0.0040551
  gflops (eval):  1068.17
  gflops (total): 250.503
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132362,0.0040551,1068.17,250.503

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333242
  gflops (total): 129.981
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0324186
  gflops (eval):  133.612
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324186,133.612,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9427
  maximum absolute entry in einsum_ir solution: 36.9427
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130506
  time (eval):    0.00395551
  gflops (eval):  1095.06
  gflops (total): 254.704
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130506,0.00395551,1095.06,254.704

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335002
  gflops (total): 129.298
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.298

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0329064
  gflops (eval):  131.632
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0329064,131.632,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9489
  maximum absolute entry in einsum_ir solution: 35.9489
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133094
  time (eval):    0.00390811
  gflops (eval):  1108.34
  gflops (total): 251.576
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133094,0.00390811,1108.34,251.576

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336882
  gflops (total): 128.577
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0322511
  gflops (eval):  134.306
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322511,134.306,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3277
  maximum absolute entry in einsum_ir solution: 36.3277
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132614
  time (eval):    0.00396189
  gflops (eval):  1093.3
  gflops (total): 251.492
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132614,0.00396189,1093.3,251.492

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333465
  gflops (total): 129.894
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0328822
  gflops (eval):  131.728
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328822,131.728,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3118
  maximum absolute entry in einsum_ir solution: 34.3118
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0124984
  time (eval):    0.00394191
  gflops (eval):  1098.84
  gflops (total): 263.47
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0124984,0.00394191,1098.84,263.47

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331676
  gflops (total): 130.595
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.595

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.031948
  gflops (eval):  135.58
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031948,135.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9728
  maximum absolute entry in einsum_ir solution: 32.9728
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130229
  time (eval):    0.00404234
  gflops (eval):  1071.54
  gflops (total): 253.821
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130229,0.00404234,1071.54,253.821

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336989
  gflops (total): 128.536
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0324935
  gflops (eval):  133.304
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324935,133.304,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2088
  maximum absolute entry in einsum_ir solution: 36.2088
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133649
  time (eval):    0.00403179
  gflops (eval):  1074.34
  gflops (total): 248.986
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133649,0.00403179,1074.34,248.986

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0324551
  gflops (total): 133.462
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.462

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0329042
  gflops (eval):  131.64
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0329042,131.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6263
  maximum absolute entry in einsum_ir solution: 35.6263
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133047
  time (eval):    0.00401754
  gflops (eval):  1078.15
  gflops (total): 250.055
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133047,0.00401754,1078.15,250.055

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338318
  gflops (total): 128.031
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.031

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0322695
  gflops (eval):  134.23
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322695,134.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.147
  maximum absolute entry in einsum_ir solution: 33.147
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132707
  time (eval):    0.004032
  gflops (eval):  1074.29
  gflops (total): 250.338
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132707,0.004032,1074.29,250.338

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334176
  gflops (total): 129.618
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323657
  gflops (eval):  133.831
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323657,133.831,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7611
  maximum absolute entry in einsum_ir solution: 34.7611
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013051
  time (eval):    0.00388402
  gflops (eval):  1115.21
  gflops (total): 255.773
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013051,0.00388402,1115.21,255.773

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330196
  gflops (total): 131.18
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.18

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0314539
  gflops (eval):  137.71
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0314539,137.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0295
  maximum absolute entry in einsum_ir solution: 34.0295
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131236
  time (eval):    0.00400084
  gflops (eval):  1082.65
  gflops (total): 252.944
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131236,0.00400084,1082.65,252.944

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342127
  gflops (total): 126.606
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323196
  gflops (eval):  134.022
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323196,134.022,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6295
  maximum absolute entry in einsum_ir solution: 33.6295
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131048
  time (eval):    0.0039605
  gflops (eval):  1093.68
  gflops (total): 253.82
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131048,0.0039605,1093.68,253.82

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330502
  gflops (total): 131.059
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0322791
  gflops (eval):  134.189
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322791,134.189,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1835
  maximum absolute entry in einsum_ir solution: 34.1835
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130168
  time (eval):    0.00412358
  gflops (eval):  1050.43
  gflops (total): 252.709
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130168,0.00412358,1050.43,252.709

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336419
  gflops (total): 128.754
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.754

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0322967
  gflops (eval):  134.116
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322967,134.116,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6998
  maximum absolute entry in einsum_ir solution: 33.6998
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130216
  time (eval):    0.00390871
  gflops (eval):  1108.17
  gflops (total): 255.844
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130216,0.00390871,1108.17,255.844

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334228
  gflops (total): 129.598
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0328552
  gflops (eval):  131.837
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328552,131.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2382
  maximum absolute entry in einsum_ir solution: 38.2382
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130485
  time (eval):    0.00409602
  gflops (eval):  1057.49
  gflops (total): 252.647
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130485,0.00409602,1057.49,252.647

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330957
  gflops (total): 130.879
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323065
  gflops (eval):  134.076
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323065,134.076,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3673
  maximum absolute entry in einsum_ir solution: 35.3673
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131188
  time (eval):    0.00398305
  gflops (eval):  1087.49
  gflops (total): 253.278
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131188,0.00398305,1087.49,253.278

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333166
  gflops (total): 130.011
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323986
  gflops (eval):  133.695
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323986,133.695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.2194
  maximum absolute entry in einsum_ir solution: 32.2194
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013007
  time (eval):    0.00413007
  gflops (eval):  1048.78
  gflops (total): 252.758
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013007,0.00413007,1048.78,252.758

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334959
  gflops (total): 129.315
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.315

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0316515
  gflops (eval):  136.85
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0316515,136.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1466
  maximum absolute entry in einsum_ir solution: 34.1466
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132258
  time (eval):    0.00423196
  gflops (eval):  1023.53
  gflops (total): 248.115
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132258,0.00423196,1023.53,248.115

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336561
  gflops (total): 128.699
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.699

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.031626
  gflops (eval):  136.961
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031626,136.961,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2952
  maximum absolute entry in einsum_ir solution: 35.2952
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131935
  time (eval):    0.00391361
  gflops (eval):  1106.78
  gflops (total): 253.2
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131935,0.00391361,1106.78,253.2

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337949
  gflops (total): 128.171
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.171

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0314446
  gflops (eval):  137.751
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0314446,137.751,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4334
  maximum absolute entry in einsum_ir solution: 34.4334
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132434
  time (eval):    0.00389647
  gflops (eval):  1111.65
  gflops (total): 252.716
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132434,0.00389647,1111.65,252.716

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0328667
  gflops (total): 131.79
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325663
  gflops (eval):  133.006
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325663,133.006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5598
  maximum absolute entry in einsum_ir solution: 34.5598
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131481
  time (eval):    0.00398664
  gflops (eval):  1086.51
  gflops (total): 252.792
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131481,0.00398664,1086.51,252.792

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033927
  gflops (total): 127.672
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.672

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0326881
  gflops (eval):  132.511
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326881,132.511,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2683
  maximum absolute entry in einsum_ir solution: 37.2683
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131394
  time (eval):    0.00391683
  gflops (eval):  1105.87
  gflops (total): 253.955
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131394,0.00391683,1105.87,253.955

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336062
  gflops (total): 128.89
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.033023
  gflops (eval):  131.167
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.033023,131.167,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2157
  maximum absolute entry in einsum_ir solution: 38.2157
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128511
  time (eval):    0.00401283
  gflops (eval):  1079.42
  gflops (total): 256.852
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128511,0.00401283,1079.42,256.852

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342864
  gflops (total): 126.333
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325201
  gflops (eval):  133.195
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325201,133.195,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8454
  maximum absolute entry in einsum_ir solution: 34.8454
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131267
  time (eval):    0.00392251
  gflops (eval):  1104.27
  gflops (total): 254.061
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131267,0.00392251,1104.27,254.061

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332269
  gflops (total): 130.362
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.362

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0324697
  gflops (eval):  133.402
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324697,133.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9004
  maximum absolute entry in einsum_ir solution: 35.9004
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131401
  time (eval):    0.00378937
  gflops (eval):  1143.07
  gflops (total): 255.856
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131401,0.00378937,1143.07,255.856

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336737
  gflops (total): 128.632
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.632

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0313872
  gflops (eval):  138.003
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0313872,138.003,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4766
  maximum absolute entry in einsum_ir solution: 34.4766
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132009
  time (eval):    0.00397678
  gflops (eval):  1089.2
  gflops (total): 252.159
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132009,0.00397678,1089.2,252.159

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339032
  gflops (total): 127.762
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.762

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0323967
  gflops (eval):  133.703
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323967,133.703,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.002
  maximum absolute entry in einsum_ir solution: 38.002
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131039
  time (eval):    0.00407931
  gflops (eval):  1061.83
  gflops (total): 252.079
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131039,0.00407931,1061.83,252.079

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337541
  gflops (total): 128.326
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.032626
  gflops (eval):  132.763
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032626,132.763,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1562
  maximum absolute entry in einsum_ir solution: 35.1562
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013033
  time (eval):    0.00395797
  gflops (eval):  1094.38
  gflops (total): 254.931
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013033,0.00395797,1094.38,254.931

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336926
  gflops (total): 128.56
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0330125
  gflops (eval):  131.208
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0330125,131.208,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3443
  maximum absolute entry in einsum_ir solution: 33.3443
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130472
  time (eval):    0.00408209
  gflops (eval):  1061.1
  gflops (total): 252.872
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130472,0.00408209,1061.1,252.872

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334782
  gflops (total): 129.383
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0328526
  gflops (eval):  131.847
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328526,131.847,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1913
  maximum absolute entry in einsum_ir solution: 35.1913
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133235
  time (eval):    0.00395515
  gflops (eval):  1095.16
  gflops (total): 250.687
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133235,0.00395515,1095.16,250.687

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337976
  gflops (total): 128.16
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0325326
  gflops (eval):  133.144
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325326,133.144,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8352
  maximum absolute entry in einsum_ir solution: 34.8352
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131131
  time (eval):    0.0039585
  gflops (eval):  1094.23
  gflops (total): 253.727
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131131,0.0039585,1094.23,253.727

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326199
  gflops (total): 132.787
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.787

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325087
  gflops (eval):  133.242
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325087,133.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7047
  maximum absolute entry in einsum_ir solution: 33.7047
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131745
  time (eval):    0.00401332
  gflops (eval):  1079.29
  gflops (total): 252.01
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131745,0.00401332,1079.29,252.01

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339632
  gflops (total): 127.536
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0314072
  gflops (eval):  137.915
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0314072,137.915,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1638
  maximum absolute entry in einsum_ir solution: 34.1638
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013263
  time (eval):    0.00392716
  gflops (eval):  1102.97
  gflops (total): 251.977
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013263,0.00392716,1102.97,251.977

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337502
  gflops (total): 128.34
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321173
  gflops (eval):  134.866
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321173,134.866,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5474
  maximum absolute entry in einsum_ir solution: 35.5474
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131859
  time (eval):    0.00394751
  gflops (eval):  1097.28
  gflops (total): 252.812
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131859,0.00394751,1097.28,252.812

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333295
  gflops (total): 129.961
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322395
  gflops (eval):  134.354
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322395,134.354,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8807
  maximum absolute entry in einsum_ir solution: 36.8807
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130946
  time (eval):    0.00396802
  gflops (eval):  1091.61
  gflops (total): 253.86
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130946,0.00396802,1091.61,253.86

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326571
  gflops (total): 132.636
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.636

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322875
  gflops (eval):  134.155
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322875,134.155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6112
  maximum absolute entry in einsum_ir solution: 33.6112
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013253
  time (eval):    0.00388973
  gflops (eval):  1113.58
  gflops (total): 252.673
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013253,0.00388973,1113.58,252.673

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.032213
  gflops (total): 134.465
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,134.465

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326238
  gflops (eval):  132.772
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326238,132.772,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3578
  maximum absolute entry in einsum_ir solution: 34.3578
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132718
  time (eval):    0.00391551
  gflops (eval):  1106.25
  gflops (total): 252.018
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132718,0.00391551,1106.25,252.018

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0343225
  gflops (total): 126.201
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.201

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323483
  gflops (eval):  133.903
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323483,133.903,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5574
  maximum absolute entry in einsum_ir solution: 33.5574
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131984
  time (eval):    0.00394948
  gflops (eval):  1096.73
  gflops (total): 252.598
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131984,0.00394948,1096.73,252.598

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334268
  gflops (total): 129.582
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.582

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322122
  gflops (eval):  134.468
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322122,134.468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6009
  maximum absolute entry in einsum_ir solution: 32.6009
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131051
  time (eval):    0.00389551
  gflops (eval):  1111.93
  gflops (total): 254.786
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131051,0.00389551,1111.93,254.786

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335659
  gflops (total): 129.045
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321903
  gflops (eval):  134.56
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321903,134.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9883
  maximum absolute entry in einsum_ir solution: 33.9883
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132167
  time (eval):    0.00397908
  gflops (eval):  1088.57
  gflops (total): 251.894
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132167,0.00397908,1088.57,251.894

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338842
  gflops (total): 127.833
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.833

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322501
  gflops (eval):  134.31
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322501,134.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.481
  maximum absolute entry in einsum_ir solution: 36.481
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128928
  time (eval):    0.00403332
  gflops (eval):  1073.94
  gflops (total): 255.908
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128928,0.00403332,1073.94,255.908

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340173
  gflops (total): 127.333
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318035
  gflops (eval):  136.196
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318035,136.196,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.945
  maximum absolute entry in einsum_ir solution: 36.945
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132744
  time (eval):    0.00391931
  gflops (eval):  1105.18
  gflops (total): 251.925
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132744,0.00391931,1105.18,251.925

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339092
  gflops (total): 127.739
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0311454
  gflops (eval):  139.074
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0311454,139.074,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2914
  maximum absolute entry in einsum_ir solution: 33.2914
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130879
  time (eval):    0.00402752
  gflops (eval):  1075.48
  gflops (total): 253.077
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130879,0.00402752,1075.48,253.077

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0325384
  gflops (total): 133.12
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0317929
  gflops (eval):  136.242
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317929,136.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4016
  maximum absolute entry in einsum_ir solution: 35.4016
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133065
  time (eval):    0.00394964
  gflops (eval):  1096.69
  gflops (total): 251.013
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133065,0.00394964,1096.69,251.013

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336752
  gflops (total): 128.627
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.627

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326332
  gflops (eval):  132.733
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326332,132.733,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8826
  maximum absolute entry in einsum_ir solution: 36.8826
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132795
  time (eval):    0.00387994
  gflops (eval):  1116.39
  gflops (total): 252.428
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132795,0.00387994,1116.39,252.428

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0325836
  gflops (total): 132.935
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.935

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0311606
  gflops (eval):  139.006
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0311606,139.006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.7502
  maximum absolute entry in einsum_ir solution: 39.7502
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130641
  time (eval):    0.00393624
  gflops (eval):  1100.42
  gflops (total): 254.79
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130641,0.00393624,1100.42,254.79

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338479
  gflops (total): 127.97
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318049
  gflops (eval):  136.19
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318049,136.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3064
  maximum absolute entry in einsum_ir solution: 33.3064
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133389
  time (eval):    0.00392952
  gflops (eval):  1102.3
  gflops (total): 250.835
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133389,0.00392952,1102.3,250.835

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337113
  gflops (total): 128.489
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.489

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323778
  gflops (eval):  133.781
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323778,133.781,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2422
  maximum absolute entry in einsum_ir solution: 35.2422
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132896
  time (eval):    0.00395204
  gflops (eval):  1096.02
  gflops (total): 251.224
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132896,0.00395204,1096.02,251.224

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338436
  gflops (total): 127.986
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0317267
  gflops (eval):  136.526
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317267,136.526,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9437
  maximum absolute entry in einsum_ir solution: 34.9437
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131265
  time (eval):    0.00395909
  gflops (eval):  1094.07
  gflops (total): 253.519
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131265,0.00395909,1094.07,253.519

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0344185
  gflops (total): 125.849
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,125.849

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318354
  gflops (eval):  136.06
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318354,136.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.815
  maximum absolute entry in einsum_ir solution: 34.815
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013271
  time (eval):    0.00395035
  gflops (eval):  1096.49
  gflops (total): 251.52
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013271,0.00395035,1096.49,251.52

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330607
  gflops (total): 131.017
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325406
  gflops (eval):  133.111
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325406,133.111,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1458
  maximum absolute entry in einsum_ir solution: 34.1458
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0140863
  time (eval):    0.00389676
  gflops (eval):  1111.57
  gflops (total): 240.866
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0140863,0.00389676,1111.57,240.866

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338546
  gflops (total): 127.945
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.945

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.031778
  gflops (eval):  136.305
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031778,136.305,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8393
  maximum absolute entry in einsum_ir solution: 33.8393
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130373
  time (eval):    0.0039284
  gflops (eval):  1102.62
  gflops (total): 255.31
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130373,0.0039284,1102.62,255.31

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341412
  gflops (total): 126.871
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.871

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0328452
  gflops (eval):  131.877
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328452,131.877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9648
  maximum absolute entry in einsum_ir solution: 34.9648
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131326
  time (eval):    0.00400209
  gflops (eval):  1082.32
  gflops (total): 252.793
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131326,0.00400209,1082.32,252.793

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340961
  gflops (total): 127.039
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.039

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325134
  gflops (eval):  133.223
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325134,133.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7644
  maximum absolute entry in einsum_ir solution: 33.7644
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132167
  time (eval):    0.00402101
  gflops (eval):  1077.22
  gflops (total): 251.282
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132167,0.00402101,1077.22,251.282

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0325516
  gflops (total): 133.066
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.066

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322919
  gflops (eval):  134.136
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322919,134.136,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2215
  maximum absolute entry in einsum_ir solution: 34.2215
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132942
  time (eval):    0.00398585
  gflops (eval):  1086.72
  gflops (total): 250.666
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132942,0.00398585,1086.72,250.666

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033296
  gflops (total): 130.091
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.091

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321797
  gflops (eval):  134.604
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321797,134.604,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3969
  maximum absolute entry in einsum_ir solution: 39.3969
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130768
  time (eval):    0.00398068
  gflops (eval):  1088.13
  gflops (total): 253.937
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130768,0.00398068,1088.13,253.937

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331573
  gflops (total): 130.635
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.635

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325786
  gflops (eval):  132.956
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325786,132.956,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2277
  maximum absolute entry in einsum_ir solution: 34.2277
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130033
  time (eval):    0.00393185
  gflops (eval):  1101.65
  gflops (total): 255.772
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130033,0.00393185,1101.65,255.772

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339523
  gflops (total): 127.577
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327122
  gflops (eval):  132.413
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327122,132.413,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0296
  maximum absolute entry in einsum_ir solution: 34.0296
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132633
  time (eval):    0.00397248
  gflops (eval):  1090.38
  gflops (total): 251.31
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132633,0.00397248,1090.38,251.31

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0323838
  gflops (total): 133.756
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.756

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320661
  gflops (eval):  135.081
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320661,135.081,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3747
  maximum absolute entry in einsum_ir solution: 33.3747
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013265
  time (eval):    0.00396978
  gflops (eval):  1091.12
  gflops (total): 251.325
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013265,0.00396978,1091.12,251.325

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.034295
  gflops (total): 126.302
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.302

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0307321
  gflops (eval):  140.945
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0307321,140.945,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8299
  maximum absolute entry in einsum_ir solution: 36.8299
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129284
  time (eval):    0.00403597
  gflops (eval):  1073.23
  gflops (total): 255.33
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129284,0.00403597,1073.23,255.33

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339253
  gflops (total): 127.678
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.678

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318055
  gflops (eval):  136.188
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318055,136.188,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7855
  maximum absolute entry in einsum_ir solution: 33.7855
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130903
  time (eval):    0.00397395
  gflops (eval):  1089.98
  gflops (total): 253.836
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130903,0.00397395,1089.98,253.836

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0324451
  gflops (total): 133.503
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.503

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0317305
  gflops (eval):  136.51
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317305,136.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2919
  maximum absolute entry in einsum_ir solution: 33.2919
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133407
  time (eval):    0.00393485
  gflops (eval):  1100.81
  gflops (total): 250.732
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133407,0.00393485,1100.81,250.732

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331993
  gflops (total): 130.47
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321177
  gflops (eval):  134.864
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321177,134.864,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1309
  maximum absolute entry in einsum_ir solution: 34.1309
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132175
  time (eval):    0.00398018
  gflops (eval):  1088.27
  gflops (total): 251.867
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132175,0.00398018,1088.27,251.867

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326277
  gflops (total): 132.756
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.756

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320069
  gflops (eval):  135.331
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320069,135.331,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7547
  maximum absolute entry in einsum_ir solution: 33.7547
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130995
  time (eval):    0.00394923
  gflops (eval):  1096.8
  gflops (total): 254.067
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130995,0.00394923,1096.8,254.067

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033288
  gflops (total): 130.122
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.122

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0310144
  gflops (eval):  139.662
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0310144,139.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.7903
  maximum absolute entry in einsum_ir solution: 37.7903
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013231
  time (eval):    0.00397536
  gflops (eval):  1089.59
  gflops (total): 251.74
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013231,0.00397536,1089.59,251.74

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338826
  gflops (total): 127.839
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.839

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319595
  gflops (eval):  135.531
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319595,135.531,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7917
  maximum absolute entry in einsum_ir solution: 33.7917
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132716
  time (eval):    0.003951
  gflops (eval):  1096.31
  gflops (total): 251.501
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132716,0.003951,1096.31,251.501

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331523
  gflops (total): 130.655
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.655

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319386
  gflops (eval):  135.62
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319386,135.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.455
  maximum absolute entry in einsum_ir solution: 33.455
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129609
  time (eval):    0.00397009
  gflops (eval):  1091.04
  gflops (total): 255.834
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129609,0.00397009,1091.04,255.834

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339906
  gflops (total): 127.433
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.433

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0316686
  gflops (eval):  136.777
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0316686,136.777,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7785
  maximum absolute entry in einsum_ir solution: 33.7785
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131372
  time (eval):    0.00394193
  gflops (eval):  1098.83
  gflops (total): 253.614
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131372,0.00394193,1098.83,253.614

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339943
  gflops (total): 127.419
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.419

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321676
  gflops (eval):  134.655
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321676,134.655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6502
  maximum absolute entry in einsum_ir solution: 35.6502
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130382
  time (eval):    0.00402896
  gflops (eval):  1075.1
  gflops (total): 253.793
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130382,0.00402896,1075.1,253.793

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338114
  gflops (total): 128.108
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.108

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0330901
  gflops (eval):  130.901
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0330901,130.901,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7988
  maximum absolute entry in einsum_ir solution: 35.7988
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129646
  time (eval):    0.00394156
  gflops (eval):  1098.94
  gflops (total): 256.21
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129646,0.00394156,1098.94,256.21

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333465
  gflops (total): 129.894
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320575
  gflops (eval):  135.117
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320575,135.117,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3435
  maximum absolute entry in einsum_ir solution: 34.3435
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132109
  time (eval):    0.00402882
  gflops (eval):  1075.13
  gflops (total): 251.253
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132109,0.00402882,1075.13,251.253

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342978
  gflops (total): 126.292
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.292

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032679
  gflops (eval):  132.547
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032679,132.547,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0623
  maximum absolute entry in einsum_ir solution: 34.0623
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131524
  time (eval):    0.0039371
  gflops (eval):  1100.18
  gflops (total): 253.462
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131524,0.0039371,1100.18,253.462

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338449
  gflops (total): 127.981
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321103
  gflops (eval):  134.895
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321103,134.895,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6195
  maximum absolute entry in einsum_ir solution: 33.6195
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133365
  time (eval):    0.00401051
  gflops (eval):  1080.04
  gflops (total): 249.699
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133365,0.00401051,1080.04,249.699

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335865
  gflops (total): 128.966
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324162
  gflops (eval):  133.622
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324162,133.622,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0165
  maximum absolute entry in einsum_ir solution: 38.0165
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132174
  time (eval):    0.00392652
  gflops (eval):  1103.14
  gflops (total): 252.656
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132174,0.00392652,1103.14,252.656

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336237
  gflops (total): 128.823
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.823

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320743
  gflops (eval):  135.047
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320743,135.047,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.682
  maximum absolute entry in einsum_ir solution: 33.682
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132133
  time (eval):    0.00397448
  gflops (eval):  1089.83
  gflops (total): 252.012
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132133,0.00397448,1089.83,252.012

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333942
  gflops (total): 129.709
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.709

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326471
  gflops (eval):  132.677
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326471,132.677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0641
  maximum absolute entry in einsum_ir solution: 35.0641
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013201
  time (eval):    0.00395917
  gflops (eval):  1094.05
  gflops (total): 252.417
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013201,0.00395917,1094.05,252.417

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0345364
  gflops (total): 125.419
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,125.419

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327081
  gflops (eval):  132.43
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327081,132.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9636
  maximum absolute entry in einsum_ir solution: 35.9636
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130254
  time (eval):    0.00394626
  gflops (eval):  1097.63
  gflops (total): 255.221
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130254,0.00394626,1097.63,255.221

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341842
  gflops (total): 126.711
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.711

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320761
  gflops (eval):  135.039
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320761,135.039,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.799
  maximum absolute entry in einsum_ir solution: 36.799
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130864
  time (eval):    0.00398413
  gflops (eval):  1087.19
  gflops (total): 253.743
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130864,0.00398413,1087.19,253.743

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340945
  gflops (total): 127.045
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327004
  gflops (eval):  132.461
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327004,132.461,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9755
  maximum absolute entry in einsum_ir solution: 34.9755
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013107
  time (eval):    0.00421314
  gflops (eval):  1028.1
  gflops (total): 250.085
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013107,0.00421314,1028.1,250.085

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341877
  gflops (total): 126.698
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.698

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324533
  gflops (eval):  133.469
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324533,133.469,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6457
  maximum absolute entry in einsum_ir solution: 34.6457
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.01316
  time (eval):    0.00402289
  gflops (eval):  1076.72
  gflops (total): 252.084
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.01316,0.00402289,1076.72,252.084

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335052
  gflops (total): 129.279
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.279

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321795
  gflops (eval):  134.605
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321795,134.605,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.274
  maximum absolute entry in einsum_ir solution: 32.274
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131127
  time (eval):    0.00394922
  gflops (eval):  1096.8
  gflops (total): 253.871
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131127,0.00394922,1096.8,253.871

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332635
  gflops (total): 130.218
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.218

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032471
  gflops (eval):  133.396
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032471,133.396,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.447
  maximum absolute entry in einsum_ir solution: 32.447
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132528
  time (eval):    0.00406902
  gflops (eval):  1064.51
  gflops (total): 250.062
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132528,0.00406902,1064.51,250.062

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0343954
  gflops (total): 125.933
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,125.933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0316327
  gflops (eval):  136.932
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0316327,136.932,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6758
  maximum absolute entry in einsum_ir solution: 33.6758
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128433
  time (eval):    0.00394437
  gflops (eval):  1098.15
  gflops (total): 258.018
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128433,0.00394437,1098.15,258.018

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0323516
  gflops (total): 133.889
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.889

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032423
  gflops (eval):  133.594
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032423,133.594,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7696
  maximum absolute entry in einsum_ir solution: 36.7696
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131648
  time (eval):    0.00393875
  gflops (eval):  1099.72
  gflops (total): 253.253
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131648,0.00393875,1099.72,253.253

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332047
  gflops (total): 130.449
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.449

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326955
  gflops (eval):  132.48
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326955,132.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6912
  maximum absolute entry in einsum_ir solution: 34.6912
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132135
  time (eval):    0.00394359
  gflops (eval):  1098.37
  gflops (total): 252.462
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132135,0.00394359,1098.37,252.462

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332158
  gflops (total): 130.405
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.405

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032167
  gflops (eval):  134.657
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032167,134.657,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.142
  maximum absolute entry in einsum_ir solution: 38.142
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0108583
  time (eval):    0.00397449
  gflops (eval):  1089.83
  gflops (total): 292.023
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0108583,0.00397449,1089.83,292.023

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336426
  gflops (total): 128.751
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0311986
  gflops (eval):  138.837
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0311986,138.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8169
  maximum absolute entry in einsum_ir solution: 33.8169
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130399
  time (eval):    0.0039005
  gflops (eval):  1110.5
  gflops (total): 255.691
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130399,0.0039005,1110.5,255.691

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341239
  gflops (total): 126.935
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.935

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323115
  gflops (eval):  134.055
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323115,134.055,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0433
  maximum absolute entry in einsum_ir solution: 36.0433
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133287
  time (eval):    0.00399305
  gflops (eval):  1084.77
  gflops (total): 250.062
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133287,0.00399305,1084.77,250.062

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334852
  gflops (total): 129.356
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.356

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0328614
  gflops (eval):  131.812
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0328614,131.812,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9409
  maximum absolute entry in einsum_ir solution: 35.9409
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0127761
  time (eval):    0.00399657
  gflops (eval):  1083.81
  gflops (total): 258.249
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0127761,0.00399657,1083.81,258.249

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342358
  gflops (total): 126.52
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322425
  gflops (eval):  134.342
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322425,134.342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5026
  maximum absolute entry in einsum_ir solution: 35.5026
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130568
  time (eval):    0.00387686
  gflops (eval):  1117.28
  gflops (total): 255.793
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130568,0.00387686,1117.28,255.793

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334909
  gflops (total): 129.334
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.334

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321554
  gflops (eval):  134.706
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321554,134.706,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.6954
  maximum absolute entry in einsum_ir solution: 39.6954
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132333
  time (eval):    0.00393454
  gflops (eval):  1100.9
  gflops (total): 252.305
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132333,0.00393454,1100.9,252.305

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336986
  gflops (total): 128.537
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.537

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.03241
  gflops (eval):  133.647
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.03241,133.647,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6906
  maximum absolute entry in einsum_ir solution: 33.6906
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130626
  time (eval):    0.00393779
  gflops (eval):  1099.99
  gflops (total): 254.79
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130626,0.00393779,1099.99,254.79

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338037
  gflops (total): 128.137
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.137

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321714
  gflops (eval):  134.639
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321714,134.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.459
  maximum absolute entry in einsum_ir solution: 37.459
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131552
  time (eval):    0.0039663
  gflops (eval):  1092.08
  gflops (total): 252.988
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131552,0.0039663,1092.08,252.988

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336141
  gflops (total): 128.86
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321847
  gflops (eval):  134.583
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321847,134.583,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6872
  maximum absolute entry in einsum_ir solution: 34.6872
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013294
  time (eval):    0.00397362
  gflops (eval):  1090.07
  gflops (total): 250.846
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013294,0.00397362,1090.07,250.846

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336007
  gflops (total): 128.911
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.911

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320086
  gflops (eval):  135.324
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320086,135.324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7264
  maximum absolute entry in einsum_ir solution: 36.7264
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0118141
  time (eval):    0.00396396
  gflops (eval):  1092.73
  gflops (total): 274.528
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0118141,0.00396396,1092.73,274.528

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338735
  gflops (total): 127.873
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.873

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322355
  gflops (eval):  134.371
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322355,134.371,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8496
  maximum absolute entry in einsum_ir solution: 34.8496
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131272
  time (eval):    0.00401215
  gflops (eval):  1079.6
  gflops (total): 252.723
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131272,0.00401215,1079.6,252.723

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326887
  gflops (total): 132.508
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.508

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0316341
  gflops (eval):  136.926
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0316341,136.926,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7608
  maximum absolute entry in einsum_ir solution: 34.7608
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132634
  time (eval):    0.00396732
  gflops (eval):  1091.8
  gflops (total): 251.383
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132634,0.00396732,1091.8,251.383

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033286
  gflops (total): 130.13
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325448
  gflops (eval):  133.094
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325448,133.094,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8573
  maximum absolute entry in einsum_ir solution: 32.8573
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132207
  time (eval):    0.00392802
  gflops (eval):  1102.72
  gflops (total): 252.586
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132207,0.00392802,1102.72,252.586

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333979
  gflops (total): 129.694
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.694

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.030975
  gflops (eval):  139.839
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.030975,139.839,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6237
  maximum absolute entry in einsum_ir solution: 35.6237
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0134237
  time (eval):    0.00397179
  gflops (eval):  1090.57
  gflops (total): 249.002
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0134237,0.00397179,1090.57,249.002

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033689
  gflops (total): 128.574
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321932
  gflops (eval):  134.548
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321932,134.548,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.86
  maximum absolute entry in einsum_ir solution: 35.86
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131967
  time (eval):    0.00395639
  gflops (eval):  1094.82
  gflops (total): 252.521
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131967,0.00395639,1094.82,252.521

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0328278
  gflops (total): 131.947
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.947

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322023
  gflops (eval):  134.51
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322023,134.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.298
  maximum absolute entry in einsum_ir solution: 33.298
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013156
  time (eval):    0.0039754
  gflops (eval):  1089.58
  gflops (total): 252.841
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013156,0.0039754,1089.58,252.841

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338327
  gflops (total): 128.028
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.028

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.031564
  gflops (eval):  137.23
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031564,137.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0291
  maximum absolute entry in einsum_ir solution: 35.0291
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013288
  time (eval):    0.00390944
  gflops (eval):  1107.96
  gflops (total): 251.87
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013288,0.00390944,1107.96,251.87

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0325216
  gflops (total): 133.189
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.189

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0331708
  gflops (eval):  130.583
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0331708,130.583,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7376
  maximum absolute entry in einsum_ir solution: 32.7376
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130588
  time (eval):    0.00395675
  gflops (eval):  1094.72
  gflops (total): 254.563
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130588,0.00395675,1094.72,254.563

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334714
  gflops (total): 129.41
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325563
  gflops (eval):  133.047
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325563,133.047,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7494
  maximum absolute entry in einsum_ir solution: 35.7494
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130838
  time (eval):    0.0039785
  gflops (eval):  1088.73
  gflops (total): 253.865
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130838,0.0039785,1088.73,253.865

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335208
  gflops (total): 129.219
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0313856
  gflops (eval):  138.01
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0313856,138.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8783
  maximum absolute entry in einsum_ir solution: 32.8783
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130886
  time (eval):    0.00394274
  gflops (eval):  1098.61
  gflops (total): 254.327
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130886,0.00394274,1098.61,254.327

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333401
  gflops (total): 129.919
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.919

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321413
  gflops (eval):  134.765
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321413,134.765,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6323
  maximum absolute entry in einsum_ir solution: 33.6323
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013218
  time (eval):    0.00390856
  gflops (eval):  1108.21
  gflops (total): 252.913
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013218,0.00390856,1108.21,252.913

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336701
  gflops (total): 128.646
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.646

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032238
  gflops (eval):  134.361
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032238,134.361,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0639
  maximum absolute entry in einsum_ir solution: 33.0639
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130058
  time (eval):    0.00393268
  gflops (eval):  1101.42
  gflops (total): 255.72
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130058,0.00393268,1101.42,255.72

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342689
  gflops (total): 126.398
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.03153
  gflops (eval):  137.378
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.03153,137.378,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9956
  maximum absolute entry in einsum_ir solution: 33.9956
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0137257
  time (eval):    0.00399527
  gflops (eval):  1084.16
  gflops (total): 244.429
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0137257,0.00399527,1084.16,244.429

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338289
  gflops (total): 128.042
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.042

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322349
  gflops (eval):  134.374
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322349,134.374,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5239
  maximum absolute entry in einsum_ir solution: 33.5239
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132442
  time (eval):    0.00395949
  gflops (eval):  1093.96
  gflops (total): 251.778
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132442,0.00395949,1093.96,251.778

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335173
  gflops (total): 129.232
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.232

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319173
  gflops (eval):  135.711
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319173,135.711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8309
  maximum absolute entry in einsum_ir solution: 35.8309
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131953
  time (eval):    0.00391349
  gflops (eval):  1106.82
  gflops (total): 253.175
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131953,0.00391349,1106.82,253.175

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335831
  gflops (total): 128.979
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.03183
  gflops (eval):  136.083
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.03183,136.083,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4639
  maximum absolute entry in einsum_ir solution: 33.4639
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130333
  time (eval):    0.00396688
  gflops (eval):  1091.92
  gflops (total): 254.792
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130333,0.00396688,1091.92,254.792

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337604
  gflops (total): 128.302
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.302

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0316956
  gflops (eval):  136.66
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0316956,136.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0371
  maximum absolute entry in einsum_ir solution: 36.0371
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133282
  time (eval):    0.00393891
  gflops (eval):  1099.67
  gflops (total): 250.854
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133282,0.00393891,1099.67,250.854

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336163
  gflops (total): 128.852
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.852

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324936
  gflops (eval):  133.304
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324936,133.304,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7425
  maximum absolute entry in einsum_ir solution: 34.7425
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131
  time (eval):    0.00395585
  gflops (eval):  1094.97
  gflops (total): 253.961
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131,0.00395585,1094.97,253.961

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336663
  gflops (total): 128.661
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.661

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321909
  gflops (eval):  134.557
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321909,134.557,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6431
  maximum absolute entry in einsum_ir solution: 35.6431
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130311
  time (eval):    0.00394256
  gflops (eval):  1098.66
  gflops (total): 255.191
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130311,0.00394256,1098.66,255.191

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033402
  gflops (total): 129.678
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.678

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320503
  gflops (eval):  135.147
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320503,135.147,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3886
  maximum absolute entry in einsum_ir solution: 37.3886
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132336
  time (eval):    0.00388933
  gflops (eval):  1113.69
  gflops (total): 252.966
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132336,0.00388933,1113.69,252.966

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331528
  gflops (total): 130.653
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.653

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321221
  gflops (eval):  134.845
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321221,134.845,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.004
  maximum absolute entry in einsum_ir solution: 34.004
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131255
  time (eval):    0.00395133
  gflops (eval):  1096.22
  gflops (total): 253.648
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131255,0.00395133,1096.22,253.648

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339695
  gflops (total): 127.512
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.512

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321684
  gflops (eval):  134.651
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321684,134.651,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7833
  maximum absolute entry in einsum_ir solution: 34.7833
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131384
  time (eval):    0.00389639
  gflops (eval):  1111.68
  gflops (total): 254.275
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131384,0.00389639,1111.68,254.275

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342886
  gflops (total): 126.325
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.325

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325153
  gflops (eval):  133.215
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325153,133.215,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4201
  maximum absolute entry in einsum_ir solution: 34.4201
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133239
  time (eval):    0.00387507
  gflops (eval):  1117.79
  gflops (total): 251.848
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133239,0.00387507,1117.79,251.848

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335812
  gflops (total): 128.986
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321779
  gflops (eval):  134.612
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321779,134.612,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9349
  maximum absolute entry in einsum_ir solution: 33.9349
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129055
  time (eval):    0.00395115
  gflops (eval):  1096.27
  gflops (total): 256.962
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129055,0.00395115,1096.27,256.962

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334173
  gflops (total): 129.619
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.619

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320887
  gflops (eval):  134.986
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320887,134.986,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5679
  maximum absolute entry in einsum_ir solution: 33.5679
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131022
  time (eval):    0.00386491
  gflops (eval):  1120.73
  gflops (total): 255.289
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131022,0.00386491,1120.73,255.289

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033846
  gflops (total): 127.977
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.977

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321867
  gflops (eval):  134.575
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321867,134.575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8301
  maximum absolute entry in einsum_ir solution: 33.8301
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131171
  time (eval):    0.00390308
  gflops (eval):  1109.77
  gflops (total): 254.493
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131171,0.00390308,1109.77,254.493

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338826
  gflops (total): 127.839
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.839

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325743
  gflops (eval):  132.974
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325743,132.974,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1932
  maximum absolute entry in einsum_ir solution: 34.1932
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129019
  time (eval):    0.00396762
  gflops (eval):  1091.72
  gflops (total): 256.766
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129019,0.00396762,1091.72,256.766

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332676
  gflops (total): 130.202
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.202

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324312
  gflops (eval):  133.56
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324312,133.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4614
  maximum absolute entry in einsum_ir solution: 33.4614
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132308
  time (eval):    0.00396959
  gflops (eval):  1091.18
  gflops (total): 251.828
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132308,0.00396959,1091.18,251.828

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336633
  gflops (total): 128.672
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.672

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326855
  gflops (eval):  132.521
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326855,132.521,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3968
  maximum absolute entry in einsum_ir solution: 34.3968
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132997
  time (eval):    0.00397436
  gflops (eval):  1089.87
  gflops (total): 250.752
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132997,0.00397436,1089.87,250.752

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332359
  gflops (total): 130.327
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.327

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324492
  gflops (eval):  133.486
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324492,133.486,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0075
  maximum absolute entry in einsum_ir solution: 35.0075
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128964
  time (eval):    0.0039731
  gflops (eval):  1090.21
  gflops (total): 256.766
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128964,0.0039731,1090.21,256.766

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334427
  gflops (total): 129.521
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.521

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0314137
  gflops (eval):  137.886
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0314137,137.886,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8701
  maximum absolute entry in einsum_ir solution: 34.8701
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131661
  time (eval):    0.00392762
  gflops (eval):  1102.83
  gflops (total): 253.398
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131661,0.00392762,1102.83,253.398

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333635
  gflops (total): 129.828
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.828

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321309
  gflops (eval):  134.809
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321309,134.809,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6534
  maximum absolute entry in einsum_ir solution: 34.6534
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130931
  time (eval):    0.00390262
  gflops (eval):  1109.9
  gflops (total): 254.86
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130931,0.00390262,1109.9,254.86

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334349
  gflops (total): 129.551
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324626
  gflops (eval):  133.431
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324626,133.431,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8555
  maximum absolute entry in einsum_ir solution: 35.8555
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131827
  time (eval):    0.00390356
  gflops (eval):  1109.63
  gflops (total): 253.509
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131827,0.00390356,1109.63,253.509

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338951
  gflops (total): 127.792
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.792

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321744
  gflops (eval):  134.626
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321744,134.626,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7949
  maximum absolute entry in einsum_ir solution: 38.7949
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131709
  time (eval):    0.00392004
  gflops (eval):  1104.97
  gflops (total): 253.439
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131709,0.00392004,1104.97,253.439

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326102
  gflops (total): 132.827
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.827

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320436
  gflops (eval):  135.176
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320436,135.176,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5546
  maximum absolute entry in einsum_ir solution: 34.5546
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131992
  time (eval):    0.00396506
  gflops (eval):  1092.42
  gflops (total): 252.357
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131992,0.00396506,1092.42,252.357

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338524
  gflops (total): 127.953
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324785
  gflops (eval):  133.366
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324785,133.366,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1587
  maximum absolute entry in einsum_ir solution: 36.1587
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0126854
  time (eval):    0.00392872
  gflops (eval):  1102.53
  gflops (total): 260.714
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0126854,0.00392872,1102.53,260.714

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333443
  gflops (total): 129.903
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.903

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322947
  gflops (eval):  134.125
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322947,134.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6205
  maximum absolute entry in einsum_ir solution: 37.6205
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013327
  time (eval):    0.00386357
  gflops (eval):  1121.12
  gflops (total): 251.971
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013327,0.00386357,1121.12,251.971

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333871
  gflops (total): 129.736
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325882
  gflops (eval):  132.917
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325882,132.917,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2912
  maximum absolute entry in einsum_ir solution: 34.2912
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129196
  time (eval):    0.0041133
  gflops (eval):  1053.05
  gflops (total): 254.303
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129196,0.0041133,1053.05,254.303

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338834
  gflops (total): 127.836
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.836

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319373
  gflops (eval):  135.626
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319373,135.626,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0027
  maximum absolute entry in einsum_ir solution: 33.0027
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132302
  time (eval):    0.00399975
  gflops (eval):  1082.95
  gflops (total): 251.394
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132302,0.00399975,1082.95,251.394

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0325534
  gflops (total): 133.059
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0317571
  gflops (eval):  136.395
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317571,136.395,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5832
  maximum absolute entry in einsum_ir solution: 34.5832
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131312
  time (eval):    0.00394545
  gflops (eval):  1097.85
  gflops (total): 253.652
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131312,0.00394545,1097.85,253.652

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332344
  gflops (total): 130.332
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319843
  gflops (eval):  135.426
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319843,135.426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8517
  maximum absolute entry in einsum_ir solution: 34.8517
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130279
  time (eval):    0.00397065
  gflops (eval):  1090.88
  gflops (total): 254.816
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130279,0.00397065,1090.88,254.816

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0343467
  gflops (total): 126.112
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.112

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322961
  gflops (eval):  134.119
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322961,134.119,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0627
  maximum absolute entry in einsum_ir solution: 33.0627
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129577
  time (eval):    0.00393689
  gflops (eval):  1100.24
  gflops (total): 256.384
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129577,0.00393689,1100.24,256.384

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333193
  gflops (total): 130
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0312773
  gflops (eval):  138.488
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0312773,138.488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4428
  maximum absolute entry in einsum_ir solution: 35.4428
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130032
  time (eval):    0.00389948
  gflops (eval):  1110.79
  gflops (total): 256.262
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130032,0.00389948,1110.79,256.262

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0325266
  gflops (total): 133.168
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.168

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322521
  gflops (eval):  134.302
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322521,134.302,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5567
  maximum absolute entry in einsum_ir solution: 33.5567
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132688
  time (eval):    0.00406096
  gflops (eval):  1066.63
  gflops (total): 249.947
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132688,0.00406096,1066.63,249.947

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336292
  gflops (total): 128.802
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.802

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324479
  gflops (eval):  133.491
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324479,133.491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9834
  maximum absolute entry in einsum_ir solution: 36.9834
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128973
  time (eval):    0.00402731
  gflops (eval):  1075.54
  gflops (total): 255.931
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128973,0.00402731,1075.54,255.931

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0345162
  gflops (total): 125.492
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,125.492

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0317566
  gflops (eval):  136.398
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317566,136.398,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7261
  maximum absolute entry in einsum_ir solution: 35.7261
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131801
  time (eval):    0.00398927
  gflops (eval):  1085.79
  gflops (total): 252.282
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131801,0.00398927,1085.79,252.282

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336879
  gflops (total): 128.578
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.578

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322345
  gflops (eval):  134.375
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322345,134.375,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8991
  maximum absolute entry in einsum_ir solution: 32.8991
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131257
  time (eval):    0.00392436
  gflops (eval):  1103.75
  gflops (total): 254.047
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131257,0.00392436,1103.75,254.047

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339067
  gflops (total): 127.748
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.748

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322668
  gflops (eval):  134.241
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322668,134.241,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3751
  maximum absolute entry in einsum_ir solution: 38.3751
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128977
  time (eval):    0.00399944
  gflops (eval):  1083.03
  gflops (total): 256.346
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128977,0.00399944,1083.03,256.346

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0327825
  gflops (total): 132.129
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.129

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032036
  gflops (eval):  135.208
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032036,135.208,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9889
  maximum absolute entry in einsum_ir solution: 33.9889
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133022
  time (eval):    0.00384739
  gflops (eval):  1125.83
  gflops (total): 252.574
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133022,0.00384739,1125.83,252.574

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339599
  gflops (total): 127.548
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.548

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320431
  gflops (eval):  135.178
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320431,135.178,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.542
  maximum absolute entry in einsum_ir solution: 35.542
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013177
  time (eval):    0.00401789
  gflops (eval):  1078.06
  gflops (total): 251.907
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013177,0.00401789,1078.06,251.907

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335998
  gflops (total): 128.915
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0315813
  gflops (eval):  137.154
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0315813,137.154,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3778
  maximum absolute entry in einsum_ir solution: 35.3778
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129545
  time (eval):    0.00391148
  gflops (eval):  1107.39
  gflops (total): 256.82
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129545,0.00391148,1107.39,256.82

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033339
  gflops (total): 129.924
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.924

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322243
  gflops (eval):  134.418
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322243,134.418,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7997
  maximum absolute entry in einsum_ir solution: 35.7997
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131943
  time (eval):    0.00399013
  gflops (eval):  1085.56
  gflops (total): 252.061
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131943,0.00399013,1085.56,252.061

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0323526
  gflops (total): 133.885
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324868
  gflops (eval):  133.332
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324868,133.332,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9795
  maximum absolute entry in einsum_ir solution: 33.9795
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129509
  time (eval):    0.00385567
  gflops (eval):  1123.42
  gflops (total): 257.728
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129509,0.00385567,1123.42,257.728

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330614
  gflops (total): 131.014
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.014

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321612
  gflops (eval):  134.682
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321612,134.682,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1482
  maximum absolute entry in einsum_ir solution: 34.1482
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0127844
  time (eval):    0.00406502
  gflops (eval):  1065.56
  gflops (total): 257.072
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0127844,0.00406502,1065.56,257.072

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334511
  gflops (total): 129.488
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.488

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320136
  gflops (eval):  135.303
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320136,135.303,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1643
  maximum absolute entry in einsum_ir solution: 34.1643
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132459
  time (eval):    0.00401414
  gflops (eval):  1079.07
  gflops (total): 250.956
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132459,0.00401414,1079.07,250.956

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337213
  gflops (total): 128.45
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319955
  gflops (eval):  135.379
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319955,135.379,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3886
  maximum absolute entry in einsum_ir solution: 33.3886
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133071
  time (eval):    0.00387116
  gflops (eval):  1118.92
  gflops (total): 252.152
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133071,0.00387116,1118.92,252.152

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336743
  gflops (total): 128.63
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323577
  gflops (eval):  133.864
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323577,133.864,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0689
  maximum absolute entry in einsum_ir solution: 35.0689
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128723
  time (eval):    0.00401931
  gflops (eval):  1077.68
  gflops (total): 256.43
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128723,0.00401931,1077.68,256.43

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0327048
  gflops (total): 132.443
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.443

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0317889
  gflops (eval):  136.259
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317889,136.259,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8248
  maximum absolute entry in einsum_ir solution: 38.8248
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130718
  time (eval):    0.0038777
  gflops (eval):  1117.03
  gflops (total): 255.554
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130718,0.0038777,1117.03,255.554

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335247
  gflops (total): 129.204
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321122
  gflops (eval):  134.887
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321122,134.887,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8933
  maximum absolute entry in einsum_ir solution: 33.8933
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013121
  time (eval):    0.00422763
  gflops (eval):  1024.57
  gflops (total): 249.675
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013121,0.00422763,1024.57,249.675

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033326
  gflops (total): 129.974
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.974

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0315705
  gflops (eval):  137.201
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0315705,137.201,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1808
  maximum absolute entry in einsum_ir solution: 35.1808
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131227
  time (eval):    0.0039962
  gflops (eval):  1083.91
  gflops (total): 253.026
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131227,0.0039962,1083.91,253.026

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333419
  gflops (total): 129.912
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.912

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319425
  gflops (eval):  135.604
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319425,135.604,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5192
  maximum absolute entry in einsum_ir solution: 34.5192
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132481
  time (eval):    0.00402766
  gflops (eval):  1075.44
  gflops (total): 250.729
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132481,0.00402766,1075.44,250.729

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337947
  gflops (total): 128.172
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.172

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323395
  gflops (eval):  133.939
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323395,133.939,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1779
  maximum absolute entry in einsum_ir solution: 33.1779
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130956
  time (eval):    0.00394541
  gflops (eval):  1097.86
  gflops (total): 254.182
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130956,0.00394541,1097.86,254.182

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033181
  gflops (total): 130.542
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.542

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322573
  gflops (eval):  134.28
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322573,134.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2344
  maximum absolute entry in einsum_ir solution: 33.2344
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128875
  time (eval):    0.00414573
  gflops (eval):  1044.82
  gflops (total): 254.299
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128875,0.00414573,1044.82,254.299

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033739
  gflops (total): 128.383
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327327
  gflops (eval):  132.33
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327327,132.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.769
  maximum absolute entry in einsum_ir solution: 34.769
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132168
  time (eval):    0.00396899
  gflops (eval):  1091.34
  gflops (total): 252.041
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132168,0.00396899,1091.34,252.041

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.032772
  gflops (total): 132.171
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.171

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321015
  gflops (eval):  134.932
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321015,134.932,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6789
  maximum absolute entry in einsum_ir solution: 33.6789
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131603
  time (eval):    0.00390467
  gflops (eval):  1109.32
  gflops (total): 253.825
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131603,0.00390467,1109.32,253.825

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334373
  gflops (total): 129.541
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.541

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320304
  gflops (eval):  135.231
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320304,135.231,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6715
  maximum absolute entry in einsum_ir solution: 34.6715
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0127758
  time (eval):    0.00396198
  gflops (eval):  1093.27
  gflops (total): 258.788
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0127758,0.00396198,1093.27,258.788

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336192
  gflops (total): 128.841
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.841

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319185
  gflops (eval):  135.706
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319185,135.706,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2342
  maximum absolute entry in einsum_ir solution: 34.2342
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133166
  time (eval):    0.00393718
  gflops (eval):  1100.16
  gflops (total): 251.048
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133166,0.00393718,1100.16,251.048

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333769
  gflops (total): 129.776
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319257
  gflops (eval):  135.675
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319257,135.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6182
  maximum absolute entry in einsum_ir solution: 36.6182
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131522
  time (eval):    0.00395649
  gflops (eval):  1094.79
  gflops (total): 253.176
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131522,0.00395649,1094.79,253.176

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342082
  gflops (total): 126.622
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.622

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319622
  gflops (eval):  135.52
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319622,135.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3001
  maximum absolute entry in einsum_ir solution: 39.3001
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129456
  time (eval):    0.00404919
  gflops (eval):  1069.73
  gflops (total): 254.873
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129456,0.00404919,1069.73,254.873

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341358
  gflops (total): 126.891
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.891

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0312357
  gflops (eval):  138.672
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0312357,138.672,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4347
  maximum absolute entry in einsum_ir solution: 35.4347
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132223
  time (eval):    0.00395482
  gflops (eval):  1095.25
  gflops (total): 252.169
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132223,0.00395482,1095.25,252.169

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333354
  gflops (total): 129.937
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.937

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323404
  gflops (eval):  133.935
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323404,133.935,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0136
  maximum absolute entry in einsum_ir solution: 35.0136
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130342
  time (eval):    0.00399387
  gflops (eval):  1084.54
  gflops (total): 254.375
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130342,0.00399387,1084.54,254.375

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336344
  gflops (total): 128.782
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.031976
  gflops (eval):  135.462
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031976,135.462,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4487
  maximum absolute entry in einsum_ir solution: 36.4487
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130289
  time (eval):    0.00395155
  gflops (eval):  1096.16
  gflops (total): 255.089
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130289,0.00395155,1096.16,255.089

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.03344
  gflops (total): 129.531
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0317982
  gflops (eval):  136.219
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317982,136.219,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4021
  maximum absolute entry in einsum_ir solution: 34.4021
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133457
  time (eval):    0.00408555
  gflops (eval):  1060.2
  gflops (total): 248.491
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133457,0.00408555,1060.2,248.491

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033798
  gflops (total): 128.159
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.159

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322015
  gflops (eval):  134.513
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322015,134.513,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0005
  maximum absolute entry in einsum_ir solution: 34.0005
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131792
  time (eval):    0.00407729
  gflops (eval):  1062.35
  gflops (total): 251.008
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131792,0.00407729,1062.35,251.008

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335357
  gflops (total): 129.161
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.161

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319877
  gflops (eval):  135.412
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319877,135.412,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7406
  maximum absolute entry in einsum_ir solution: 35.7406
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129763
  time (eval):    0.00404339
  gflops (eval):  1071.26
  gflops (total): 254.501
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129763,0.00404339,1071.26,254.501

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335345
  gflops (total): 129.166
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.166

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323029
  gflops (eval):  134.091
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323029,134.091,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0722
  maximum absolute entry in einsum_ir solution: 35.0722
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131555
  time (eval):    0.00407866
  gflops (eval):  1062
  gflops (total): 251.334
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131555,0.00407866,1062,251.334

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336283
  gflops (total): 128.806
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.806

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322375
  gflops (eval):  134.363
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322375,134.363,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6361
  maximum absolute entry in einsum_ir solution: 36.6361
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130022
  time (eval):    0.00400087
  gflops (eval):  1082.64
  gflops (total): 254.75
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130022,0.00400087,1082.64,254.75

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332726
  gflops (total): 130.183
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.183

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320334
  gflops (eval):  135.219
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320334,135.219,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4536
  maximum absolute entry in einsum_ir solution: 35.4536
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129636
  time (eval):    0.00406291
  gflops (eval):  1066.11
  gflops (total): 254.398
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129636,0.00406291,1066.11,254.398

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334592
  gflops (total): 129.457
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.457

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318669
  gflops (eval):  135.925
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318669,135.925,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.065
  maximum absolute entry in einsum_ir solution: 37.065
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130857
  time (eval):    0.00399295
  gflops (eval):  1084.79
  gflops (total): 253.622
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130857,0.00399295,1084.79,253.622

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033473
  gflops (total): 129.403
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.403

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0313252
  gflops (eval):  138.276
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0313252,138.276,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1106
  maximum absolute entry in einsum_ir solution: 35.1106
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131203
  time (eval):    0.00401855
  gflops (eval):  1077.88
  gflops (total): 252.731
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131203,0.00401855,1077.88,252.731

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334446
  gflops (total): 129.513
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.513

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325765
  gflops (eval):  132.965
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325765,132.965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1403
  maximum absolute entry in einsum_ir solution: 35.1403
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132686
  time (eval):    0.0041225
  gflops (eval):  1050.7
  gflops (total): 249.065
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132686,0.0041225,1050.7,249.065

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338476
  gflops (total): 127.971
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.971

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0316754
  gflops (eval):  136.747
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0316754,136.747,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4739
  maximum absolute entry in einsum_ir solution: 36.4739
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132234
  time (eval):    0.00400663
  gflops (eval):  1081.09
  gflops (total): 251.394
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132234,0.00400663,1081.09,251.394

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033575
  gflops (total): 129.01
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032688
  gflops (eval):  132.511
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032688,132.511,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3571
  maximum absolute entry in einsum_ir solution: 36.3571
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131559
  time (eval):    0.00396445
  gflops (eval):  1092.59
  gflops (total): 253.005
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131559,0.00396445,1092.59,253.005

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335122
  gflops (total): 129.252
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.252

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318083
  gflops (eval):  136.176
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318083,136.176,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3707
  maximum absolute entry in einsum_ir solution: 33.3707
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130675
  time (eval):    0.00390713
  gflops (eval):  1108.62
  gflops (total): 255.176
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130675,0.00390713,1108.62,255.176

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0327181
  gflops (total): 132.389
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.389

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318334
  gflops (eval):  136.068
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318334,136.068,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3495
  maximum absolute entry in einsum_ir solution: 34.3495
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132479
  time (eval):    0.00391648
  gflops (eval):  1105.97
  gflops (total): 252.355
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132479,0.00391648,1105.97,252.355

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340326
  gflops (total): 127.276
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.276

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325386
  gflops (eval):  133.119
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325386,133.119,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1953
  maximum absolute entry in einsum_ir solution: 35.1953
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131301
  time (eval):    0.00409516
  gflops (eval):  1057.72
  gflops (total): 251.463
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131301,0.00409516,1057.72,251.463

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336163
  gflops (total): 128.852
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.852

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032263
  gflops (eval):  134.256
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032263,134.256,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8134
  maximum absolute entry in einsum_ir solution: 32.8134
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128767
  time (eval):    0.00403026
  gflops (eval):  1074.75
  gflops (total): 256.197
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128767,0.00403026,1074.75,256.197

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336525
  gflops (total): 128.713
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.713

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324122
  gflops (eval):  133.639
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324122,133.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8283
  maximum absolute entry in einsum_ir solution: 34.8283
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133727
  time (eval):    0.00385777
  gflops (eval):  1122.8
  gflops (total): 251.387
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133727,0.00385777,1122.8,251.387

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333236
  gflops (total): 129.984
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.984

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0309507
  gflops (eval):  139.949
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0309507,139.949,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1076
  maximum absolute entry in einsum_ir solution: 34.1076
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130124
  time (eval):    0.00399625
  gflops (eval):  1083.9
  gflops (total): 254.665
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130124,0.00399625,1083.9,254.665

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332717
  gflops (total): 130.186
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.186

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0314134
  gflops (eval):  137.888
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0314134,137.888,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6827
  maximum absolute entry in einsum_ir solution: 35.6827
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129902
  time (eval):    0.00404251
  gflops (eval):  1071.49
  gflops (total): 254.305
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129902,0.00404251,1071.49,254.305

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0325218
  gflops (total): 133.188
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.188

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323249
  gflops (eval):  134
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323249,134,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5191
  maximum absolute entry in einsum_ir solution: 33.5191
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131286
  time (eval):    0.00385019
  gflops (eval):  1125.01
  gflops (total): 255.113
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131286,0.00385019,1125.01,255.113

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335981
  gflops (total): 128.922
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.922

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325147
  gflops (eval):  133.217
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325147,133.217,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.529
  maximum absolute entry in einsum_ir solution: 32.529
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131505
  time (eval):    0.00399596
  gflops (eval):  1083.97
  gflops (total): 252.619
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131505,0.00399596,1083.97,252.619

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334926
  gflops (total): 129.328
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0315722
  gflops (eval):  137.194
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0315722,137.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6134
  maximum absolute entry in einsum_ir solution: 34.6134
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130213
  time (eval):    0.00407986
  gflops (eval):  1061.68
  gflops (total): 253.288
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130213,0.00407986,1061.68,253.288

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333781
  gflops (total): 129.771
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.771

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0331559
  gflops (eval):  130.641
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0331559,130.641,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7337
  maximum absolute entry in einsum_ir solution: 35.7337
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013242
  time (eval):    0.00391279
  gflops (eval):  1107.02
  gflops (total): 252.496
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013242,0.00391279,1107.02,252.496

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332153
  gflops (total): 130.407
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.407

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321235
  gflops (eval):  134.84
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321235,134.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8937
  maximum absolute entry in einsum_ir solution: 34.8937
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131779
  time (eval):    0.00395579
  gflops (eval):  1094.98
  gflops (total): 252.807
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131779,0.00395579,1094.98,252.807

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338724
  gflops (total): 127.877
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0312571
  gflops (eval):  138.577
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0312571,138.577,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.228
  maximum absolute entry in einsum_ir solution: 38.228
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129634
  time (eval):    0.00404822
  gflops (eval):  1069.98
  gflops (total): 254.622
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129634,0.00404822,1069.98,254.622

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330699
  gflops (total): 130.981
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032239
  gflops (eval):  134.356
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032239,134.356,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0068
  maximum absolute entry in einsum_ir solution: 35.0068
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0144269
  time (eval):    0.00410636
  gflops (eval):  1054.83
  gflops (total): 233.716
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0144269,0.00410636,1054.83,233.716

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337529
  gflops (total): 128.33
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323689
  gflops (eval):  133.817
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323689,133.817,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5278
  maximum absolute entry in einsum_ir solution: 33.5278
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130036
  time (eval):    0.00414166
  gflops (eval):  1045.84
  gflops (total): 252.637
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130036,0.00414166,1045.84,252.637

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033572
  gflops (total): 129.022
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320167
  gflops (eval):  135.289
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320167,135.289,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4566
  maximum absolute entry in einsum_ir solution: 33.4566
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130389
  time (eval):    0.00402938
  gflops (eval):  1074.98
  gflops (total): 253.777
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130389,0.00402938,1074.98,253.777

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335707
  gflops (total): 129.027
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.027

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323085
  gflops (eval):  134.068
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323085,134.068,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1919
  maximum absolute entry in einsum_ir solution: 35.1919
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132286
  time (eval):    0.00389301
  gflops (eval):  1112.64
  gflops (total): 252.986
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132286,0.00389301,1112.64,252.986

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330472
  gflops (total): 131.071
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.071

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320309
  gflops (eval):  135.229
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320309,135.229,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7749
  maximum absolute entry in einsum_ir solution: 32.7749
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130903
  time (eval):    0.00391295
  gflops (eval):  1106.97
  gflops (total): 254.747
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130903,0.00391295,1106.97,254.747

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334285
  gflops (total): 129.576
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.576

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319496
  gflops (eval):  135.574
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319496,135.574,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5034
  maximum absolute entry in einsum_ir solution: 33.5034
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129367
  time (eval):    0.00411699
  gflops (eval):  1052.11
  gflops (total): 253.992
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129367,0.00411699,1052.11,253.992

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337606
  gflops (total): 128.301
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322353
  gflops (eval):  134.372
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322353,134.372,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9509
  maximum absolute entry in einsum_ir solution: 35.9509
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132288
  time (eval):    0.00405308
  gflops (eval):  1068.7
  gflops (total): 250.639
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132288,0.00405308,1068.7,250.639

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0323706
  gflops (total): 133.81
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032106
  gflops (eval):  134.913
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032106,134.913,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2265
  maximum absolute entry in einsum_ir solution: 36.2265
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132467
  time (eval):    0.00398513
  gflops (eval):  1086.92
  gflops (total): 251.368
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132467,0.00398513,1086.92,251.368

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033869
  gflops (total): 127.89
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320035
  gflops (eval):  135.345
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320035,135.345,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4523
  maximum absolute entry in einsum_ir solution: 33.4523
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129633
  time (eval):    0.00404175
  gflops (eval):  1071.69
  gflops (total): 254.719
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129633,0.00404175,1071.69,254.719

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326762
  gflops (total): 132.559
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.559

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321529
  gflops (eval):  134.716
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321529,134.716,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.001
  maximum absolute entry in einsum_ir solution: 34.001
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130366
  time (eval):    0.00399453
  gflops (eval):  1084.36
  gflops (total): 254.329
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130366,0.00399453,1084.36,254.329

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338703
  gflops (total): 127.885
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321174
  gflops (eval):  134.865
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321174,134.865,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9114
  maximum absolute entry in einsum_ir solution: 35.9114
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130533
  time (eval):    0.00397946
  gflops (eval):  1088.47
  gflops (total): 254.306
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130533,0.00397946,1088.47,254.306

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337299
  gflops (total): 128.418
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.418

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324822
  gflops (eval):  133.351
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324822,133.351,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1189
  maximum absolute entry in einsum_ir solution: 35.1189
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.012909
  time (eval):    0.00410935
  gflops (eval):  1054.06
  gflops (total): 254.521
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.012909,0.00410935,1054.06,254.521

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0344255
  gflops (total): 125.823
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,125.823

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032547
  gflops (eval):  133.085
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032547,133.085,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3427
  maximum absolute entry in einsum_ir solution: 33.3427
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132571
  time (eval):    0.00402892
  gflops (eval):  1075.11
  gflops (total): 250.579
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132571,0.00402892,1075.11,250.579

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331883
  gflops (total): 130.513
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.513

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0315619
  gflops (eval):  137.239
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0315619,137.239,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1116
  maximum absolute entry in einsum_ir solution: 34.1116
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129426
  time (eval):    0.00409635
  gflops (eval):  1057.41
  gflops (total): 254.213
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129426,0.00409635,1057.41,254.213

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.03352
  gflops (total): 129.222
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.222

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321936
  gflops (eval):  134.546
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321936,134.546,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2532
  maximum absolute entry in einsum_ir solution: 34.2532
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013074
  time (eval):    0.00400656
  gflops (eval):  1081.11
  gflops (total): 253.594
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013074,0.00400656,1081.11,253.594

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336078
  gflops (total): 128.885
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327309
  gflops (eval):  132.337
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327309,132.337,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1096
  maximum absolute entry in einsum_ir solution: 33.1096
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.012966
  time (eval):    0.00397065
  gflops (eval):  1090.89
  gflops (total): 255.748
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.012966,0.00397065,1090.89,255.748

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339592
  gflops (total): 127.551
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322246
  gflops (eval):  134.417
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322246,134.417,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6546
  maximum absolute entry in einsum_ir solution: 36.6546
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131081
  time (eval):    0.00409896
  gflops (eval):  1056.74
  gflops (total): 251.729
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131081,0.00409896,1056.74,251.729

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336291
  gflops (total): 128.803
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.803

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325828
  gflops (eval):  132.939
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325828,132.939,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7617
  maximum absolute entry in einsum_ir solution: 33.7617
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131806
  time (eval):    0.00401012
  gflops (eval):  1080.15
  gflops (total): 251.969
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131806,0.00401012,1080.15,251.969

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336076
  gflops (total): 128.885
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322282
  gflops (eval):  134.401
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322282,134.401,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.351
  maximum absolute entry in einsum_ir solution: 33.351
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131471
  time (eval):    0.00397532
  gflops (eval):  1089.6
  gflops (total): 252.974
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131471,0.00397532,1089.6,252.974

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332583
  gflops (total): 130.239
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.239

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326669
  gflops (eval):  132.597
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326669,132.597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9024
  maximum absolute entry in einsum_ir solution: 33.9024
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130959
  time (eval):    0.00393179
  gflops (eval):  1101.67
  gflops (total): 254.38
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130959,0.00393179,1101.67,254.38

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033345
  gflops (total): 129.9
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326009
  gflops (eval):  132.865
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326009,132.865,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.079
  maximum absolute entry in einsum_ir solution: 34.079
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131358
  time (eval):    0.00389693
  gflops (eval):  1111.52
  gflops (total): 254.305
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131358,0.00389693,1111.52,254.305

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337845
  gflops (total): 128.21
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323174
  gflops (eval):  134.03
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323174,134.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3898
  maximum absolute entry in einsum_ir solution: 34.3898
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0134073
  time (eval):    0.00387035
  gflops (eval):  1119.15
  gflops (total): 250.7
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0134073,0.00387035,1119.15,250.7

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0322606
  gflops (total): 134.267
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,134.267

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0313629
  gflops (eval):  138.11
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0313629,138.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0994
  maximum absolute entry in einsum_ir solution: 34.0994
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133634
  time (eval):    0.00394816
  gflops (eval):  1097.1
  gflops (total): 250.21
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133634,0.00394816,1097.1,250.21

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333609
  gflops (total): 129.838
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.838

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032916
  gflops (eval):  131.593
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032916,131.593,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6033
  maximum absolute entry in einsum_ir solution: 33.6033
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130929
  time (eval):    0.00401115
  gflops (eval):  1079.87
  gflops (total): 253.245
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130929,0.00401115,1079.87,253.245

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335487
  gflops (total): 129.111
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.111

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321874
  gflops (eval):  134.572
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321874,134.572,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2217
  maximum absolute entry in einsum_ir solution: 34.2217
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132065
  time (eval):    0.00407017
  gflops (eval):  1064.21
  gflops (total): 250.715
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132065,0.00407017,1064.21,250.715

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330386
  gflops (total): 131.105
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.105

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.03251
  gflops (eval):  133.237
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.03251,133.237,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5231
  maximum absolute entry in einsum_ir solution: 35.5231
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129119
  time (eval):    0.00390966
  gflops (eval):  1107.9
  gflops (total): 257.497
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129119,0.00390966,1107.9,257.497

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335587
  gflops (total): 129.073
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.073

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318449
  gflops (eval):  136.019
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318449,136.019,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6123
  maximum absolute entry in einsum_ir solution: 34.6123
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131752
  time (eval):    0.00400793
  gflops (eval):  1080.74
  gflops (total): 252.08
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131752,0.00400793,1080.74,252.08

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333194
  gflops (total): 130
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322781
  gflops (eval):  134.194
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322781,134.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7105
  maximum absolute entry in einsum_ir solution: 33.7105
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130869
  time (eval):    0.00420411
  gflops (eval):  1030.31
  gflops (total): 250.507
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130869,0.00420411,1030.31,250.507

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339869
  gflops (total): 127.447
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.447

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0313405
  gflops (eval):  138.208
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0313405,138.208,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1746
  maximum absolute entry in einsum_ir solution: 33.1746
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130432
  time (eval):    0.0039554
  gflops (eval):  1095.09
  gflops (total): 254.817
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130432,0.0039554,1095.09,254.817

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0327822
  gflops (total): 132.13
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032752
  gflops (eval):  132.252
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032752,132.252,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6783
  maximum absolute entry in einsum_ir solution: 34.6783
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131904
  time (eval):    0.00413135
  gflops (eval):  1048.45
  gflops (total): 250.062
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131904,0.00413135,1048.45,250.062

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0323206
  gflops (total): 134.017
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,134.017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0313886
  gflops (eval):  137.997
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0313886,137.997,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4907
  maximum absolute entry in einsum_ir solution: 34.4907
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130039
  time (eval):    0.00398224
  gflops (eval):  1087.71
  gflops (total): 255.004
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130039,0.00398224,1087.71,255.004

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0324564
  gflops (total): 133.457
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.457

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318214
  gflops (eval):  136.12
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318214,136.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6541
  maximum absolute entry in einsum_ir solution: 35.6541
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131206
  time (eval):    0.00406377
  gflops (eval):  1065.89
  gflops (total): 252.062
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131206,0.00406377,1065.89,252.062

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339488
  gflops (total): 127.59
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323256
  gflops (eval):  133.996
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323256,133.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4302
  maximum absolute entry in einsum_ir solution: 35.4302
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130972
  time (eval):    0.00401283
  gflops (eval):  1079.42
  gflops (total): 253.157
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130972,0.00401283,1079.42,253.157

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332676
  gflops (total): 130.202
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.202

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319751
  gflops (eval):  135.465
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319751,135.465,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2787
  maximum absolute entry in einsum_ir solution: 33.2787
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130695
  time (eval):    0.0041182
  gflops (eval):  1051.8
  gflops (total): 252.012
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130695,0.0041182,1051.8,252.012

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334181
  gflops (total): 129.616
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323594
  gflops (eval):  133.857
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323594,133.857,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7293
  maximum absolute entry in einsum_ir solution: 34.7293
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133568
  time (eval):    0.00407284
  gflops (eval):  1063.51
  gflops (total): 248.514
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133568,0.00407284,1063.51,248.514

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339898
  gflops (total): 127.436
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.436

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319919
  gflops (eval):  135.394
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319919,135.394,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.864
  maximum absolute entry in einsum_ir solution: 33.864
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130207
  time (eval):    0.00404884
  gflops (eval):  1069.82
  gflops (total): 253.758
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130207,0.00404884,1069.82,253.758

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331108
  gflops (total): 130.819
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032217
  gflops (eval):  134.448
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032217,134.448,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1796
  maximum absolute entry in einsum_ir solution: 35.1796
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131697
  time (eval):    0.00403416
  gflops (eval):  1073.71
  gflops (total): 251.777
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131697,0.00403416,1073.71,251.777

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.032943
  gflops (total): 131.485
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.485

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.031219
  gflops (eval):  138.746
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031219,138.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1932
  maximum absolute entry in einsum_ir solution: 33.1932
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131438
  time (eval):    0.00401143
  gflops (eval):  1079.8
  gflops (total): 252.49
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131438,0.00401143,1079.8,252.49

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337284
  gflops (total): 128.424
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.424

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0317774
  gflops (eval):  136.308
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317774,136.308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8464
  maximum absolute entry in einsum_ir solution: 33.8464
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131704
  time (eval):    0.00418201
  gflops (eval):  1035.75
  gflops (total): 249.621
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131704,0.00418201,1035.75,249.621

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340686
  gflops (total): 127.141
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.141

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321419
  gflops (eval):  134.762
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321419,134.762,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1466
  maximum absolute entry in einsum_ir solution: 33.1466
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132474
  time (eval):    0.00420472
  gflops (eval):  1030.16
  gflops (total): 248.194
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132474,0.00420472,1030.16,248.194

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.034237
  gflops (total): 126.516
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.516

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322317
  gflops (eval):  134.387
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322317,134.387,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9723
  maximum absolute entry in einsum_ir solution: 34.9723
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132776
  time (eval):    0.00401487
  gflops (eval):  1078.87
  gflops (total): 250.486
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132776,0.00401487,1078.87,250.486

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339927
  gflops (total): 127.425
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.425

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322984
  gflops (eval):  134.109
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322984,134.109,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1404
  maximum absolute entry in einsum_ir solution: 35.1404
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131351
  time (eval):    0.00411553
  gflops (eval):  1052.48
  gflops (total): 251.093
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131351,0.00411553,1052.48,251.093

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336697
  gflops (total): 128.647
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.647

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323276
  gflops (eval):  133.988
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323276,133.988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2778
  maximum absolute entry in einsum_ir solution: 33.2778
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130835
  time (eval):    0.00417075
  gflops (eval):  1038.55
  gflops (total): 251.041
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130835,0.00417075,1038.55,251.041

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338991
  gflops (total): 127.777
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318472
  gflops (eval):  136.009
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318472,136.009,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6479
  maximum absolute entry in einsum_ir solution: 33.6479
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133449
  time (eval):    0.00412078
  gflops (eval):  1051.14
  gflops (total): 248.003
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133449,0.00412078,1051.14,248.003

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0329716
  gflops (total): 131.371
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.371

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327059
  gflops (eval):  132.439
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327059,132.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9721
  maximum absolute entry in einsum_ir solution: 34.9721
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130498
  time (eval):    0.00412882
  gflops (eval):  1049.09
  gflops (total): 252.146
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130498,0.00412882,1049.09,252.146

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336645
  gflops (total): 128.667
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.667

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321541
  gflops (eval):  134.711
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321541,134.711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7468
  maximum absolute entry in einsum_ir solution: 33.7468
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130729
  time (eval):    0.00405709
  gflops (eval):  1067.64
  gflops (total): 252.862
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130729,0.00405709,1067.64,252.862

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332633
  gflops (total): 130.219
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0317806
  gflops (eval):  136.294
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317806,136.294,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.088
  maximum absolute entry in einsum_ir solution: 35.088
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132707
  time (eval):    0.00411976
  gflops (eval):  1051.4
  gflops (total): 249.075
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132707,0.00411976,1051.4,249.075

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333869
  gflops (total): 129.737
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.737

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325952
  gflops (eval):  132.888
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325952,132.888,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.673
  maximum absolute entry in einsum_ir solution: 34.673
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130061
  time (eval):    0.00411536
  gflops (eval):  1052.52
  gflops (total): 252.988
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130061,0.00411536,1052.52,252.988

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033463
  gflops (total): 129.442
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321316
  gflops (eval):  134.805
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321316,134.805,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3395
  maximum absolute entry in einsum_ir solution: 34.3395
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0124436
  time (eval):    0.00406785
  gflops (eval):  1064.82
  gflops (total): 262.335
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0124436,0.00406785,1064.82,262.335

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336352
  gflops (total): 128.78
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319996
  gflops (eval):  135.362
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319996,135.362,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7328
  maximum absolute entry in einsum_ir solution: 32.7328
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132835
  time (eval):    0.00402477
  gflops (eval):  1076.22
  gflops (total): 250.257
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132835,0.00402477,1076.22,250.257

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033198
  gflops (total): 130.475
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.475

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0307756
  gflops (eval):  140.745
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0307756,140.745,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7742
  maximum absolute entry in einsum_ir solution: 33.7742
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129477
  time (eval):    0.00401407
  gflops (eval):  1079.08
  gflops (total): 255.37
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129477,0.00401407,1079.08,255.37

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338384
  gflops (total): 128.006
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320374
  gflops (eval):  135.202
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320374,135.202,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3672
  maximum absolute entry in einsum_ir solution: 36.3672
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132545
  time (eval):    0.00388716
  gflops (eval):  1114.32
  gflops (total): 252.69
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132545,0.00388716,1114.32,252.69

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337171
  gflops (total): 128.467
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.467

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0315724
  gflops (eval):  137.193
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0315724,137.193,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1873
  maximum absolute entry in einsum_ir solution: 34.1873
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132412
  time (eval):    0.00410869
  gflops (eval):  1054.23
  gflops (total): 249.656
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132412,0.00410869,1054.23,249.656

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333067
  gflops (total): 130.05
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326567
  gflops (eval):  132.638
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326567,132.638,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5784
  maximum absolute entry in einsum_ir solution: 35.5784
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013048
  time (eval):    0.00406224
  gflops (eval):  1066.29
  gflops (total): 253.154
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013048,0.00406224,1066.29,253.154

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332628
  gflops (total): 130.221
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.221

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322556
  gflops (eval):  134.287
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322556,134.287,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3741
  maximum absolute entry in einsum_ir solution: 34.3741
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131404
  time (eval):    0.00415493
  gflops (eval):  1042.5
  gflops (total): 250.444
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131404,0.00415493,1042.5,250.444

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340154
  gflops (total): 127.34
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325776
  gflops (eval):  132.96
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325776,132.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8049
  maximum absolute entry in einsum_ir solution: 40.8049
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131971
  time (eval):    0.00413324
  gflops (eval):  1047.97
  gflops (total): 249.939
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131971,0.00413324,1047.97,249.939

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033339
  gflops (total): 129.923
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.923

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.031934
  gflops (eval):  135.64
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031934,135.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8599
  maximum absolute entry in einsum_ir solution: 34.8599
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130124
  time (eval):    0.00401475
  gflops (eval):  1078.9
  gflops (total): 254.389
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130124,0.00401475,1078.9,254.389

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335352
  gflops (total): 129.163
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325867
  gflops (eval):  132.923
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325867,132.923,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1009
  maximum absolute entry in einsum_ir solution: 34.1009
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131774
  time (eval):    0.00403845
  gflops (eval):  1072.57
  gflops (total): 251.601
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131774,0.00403845,1072.57,251.601

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326914
  gflops (total): 132.497
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0313709
  gflops (eval):  138.074
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0313709,138.074,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9225
  maximum absolute entry in einsum_ir solution: 39.9225
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0134304
  time (eval):    0.00404407
  gflops (eval):  1071.08
  gflops (total): 247.877
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0134304,0.00404407,1071.08,247.877

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336787
  gflops (total): 128.613
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.613

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327223
  gflops (eval):  132.372
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327223,132.372,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7319
  maximum absolute entry in einsum_ir solution: 34.7319
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132319
  time (eval):    0.00415842
  gflops (eval):  1041.63
  gflops (total): 249.077
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132319,0.00415842,1041.63,249.077

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033883
  gflops (total): 127.838
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.838

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321989
  gflops (eval):  134.524
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321989,134.524,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.373
  maximum absolute entry in einsum_ir solution: 37.373
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133683
  time (eval):    0.00402267
  gflops (eval):  1076.78
  gflops (total): 249.068
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133683,0.00402267,1076.78,249.068

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335288
  gflops (total): 129.188
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.188

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320949
  gflops (eval):  134.96
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320949,134.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0321
  maximum absolute entry in einsum_ir solution: 33.0321
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130096
  time (eval):    0.00410447
  gflops (eval):  1055.32
  gflops (total): 253.097
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130096,0.00410447,1055.32,253.097

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.032536
  gflops (total): 133.13
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032522
  gflops (eval):  133.187
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032522,133.187,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0972
  maximum absolute entry in einsum_ir solution: 36.0972
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130454
  time (eval):    0.00398737
  gflops (eval):  1086.31
  gflops (total): 254.306
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130454,0.00398737,1086.31,254.306

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340258
  gflops (total): 127.301
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322162
  gflops (eval):  134.452
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322162,134.452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2835
  maximum absolute entry in einsum_ir solution: 35.2835
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129275
  time (eval):    0.0040412
  gflops (eval):  1071.84
  gflops (total): 255.265
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129275,0.0040412,1071.84,255.265

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033621
  gflops (total): 128.834
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.834

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322041
  gflops (eval):  134.502
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322041,134.502,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2046
  maximum absolute entry in einsum_ir solution: 33.2046
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131903
  time (eval):    0.0040624
  gflops (eval):  1066.25
  gflops (total): 251.064
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131903,0.0040624,1066.25,251.064

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335972
  gflops (total): 128.925
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325919
  gflops (eval):  132.902
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325919,132.902,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7392
  maximum absolute entry in einsum_ir solution: 33.7392
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129709
  time (eval):    0.0040235
  gflops (eval):  1076.56
  gflops (total): 254.879
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129709,0.0040235,1076.56,254.879

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335674
  gflops (total): 129.039
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.039

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320261
  gflops (eval):  135.25
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320261,135.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4769
  maximum absolute entry in einsum_ir solution: 36.4769
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132289
  time (eval):    0.00398072
  gflops (eval):  1088.12
  gflops (total): 251.692
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132289,0.00398072,1088.12,251.692

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341061
  gflops (total): 127.001
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320404
  gflops (eval):  135.189
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320404,135.189,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7544
  maximum absolute entry in einsum_ir solution: 32.7544
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131196
  time (eval):    0.0039971
  gflops (eval):  1083.67
  gflops (total): 253.058
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131196,0.0039971,1083.67,253.058

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033225
  gflops (total): 130.369
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327544
  gflops (eval):  132.242
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327544,132.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7159
  maximum absolute entry in einsum_ir solution: 33.7159
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130024
  time (eval):    0.00414866
  gflops (eval):  1044.08
  gflops (total): 252.551
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130024,0.00414866,1044.08,252.551

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033847
  gflops (total): 127.974
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.974

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320871
  gflops (eval):  134.992
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320871,134.992,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1029
  maximum absolute entry in einsum_ir solution: 38.1029
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132275
  time (eval):    0.00401503
  gflops (eval):  1078.83
  gflops (total): 251.212
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132275,0.00401503,1078.83,251.212

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336207
  gflops (total): 128.835
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.835

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319611
  gflops (eval):  135.525
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319611,135.525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9167
  maximum absolute entry in einsum_ir solution: 33.9167
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130634
  time (eval):    0.00399237
  gflops (eval):  1084.95
  gflops (total): 253.962
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130634,0.00399237,1084.95,253.962

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339478
  gflops (total): 127.594
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.594

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319418
  gflops (eval):  135.606
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319418,135.606,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.7861
  maximum absolute entry in einsum_ir solution: 39.7861
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130406
  time (eval):    0.00410553
  gflops (eval):  1055.04
  gflops (total): 252.624
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130406,0.00410553,1055.04,252.624

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335652
  gflops (total): 129.048
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.048

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319041
  gflops (eval):  135.767
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319041,135.767,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0535
  maximum absolute entry in einsum_ir solution: 34.0535
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129789
  time (eval):    0.00412369
  gflops (eval):  1050.4
  gflops (total): 253.267
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129789,0.00412369,1050.4,253.267

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331044
  gflops (total): 130.844
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.844

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324176
  gflops (eval):  133.616
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324176,133.616,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6285
  maximum absolute entry in einsum_ir solution: 34.6285
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132689
  time (eval):    0.00410195
  gflops (eval):  1055.97
  gflops (total): 249.356
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132689,0.00410195,1055.97,249.356

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338788
  gflops (total): 127.853
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.853

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325684
  gflops (eval):  132.998
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325684,132.998,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6938
  maximum absolute entry in einsum_ir solution: 35.6938
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129484
  time (eval):    0.00418135
  gflops (eval):  1035.91
  gflops (total): 252.865
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129484,0.00418135,1035.91,252.865

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335065
  gflops (total): 129.274
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.274

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.03253
  gflops (eval):  133.155
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.03253,133.155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.2481
  maximum absolute entry in einsum_ir solution: 32.2481
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130527
  time (eval):    0.00410012
  gflops (eval):  1056.44
  gflops (total): 252.525
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130527,0.00410012,1056.44,252.525

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337796
  gflops (total): 128.229
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.229

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0314807
  gflops (eval):  137.593
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0314807,137.593,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9548
  maximum absolute entry in einsum_ir solution: 35.9548
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131859
  time (eval):    0.00414802
  gflops (eval):  1044.24
  gflops (total): 249.887
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131859,0.00414802,1044.24,249.887

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339158
  gflops (total): 127.714
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323036
  gflops (eval):  134.088
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323036,134.088,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6171
  maximum absolute entry in einsum_ir solution: 34.6171
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132039
  time (eval):    0.00413673
  gflops (eval):  1047.09
  gflops (total): 249.79
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132039,0.00413673,1047.09,249.79

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0324239
  gflops (total): 133.59
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325209
  gflops (eval):  133.192
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325209,133.192,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3302
  maximum absolute entry in einsum_ir solution: 39.3302
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013097
  time (eval):    0.00414167
  gflops (eval):  1045.84
  gflops (total): 251.268
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013097,0.00414167,1045.84,251.268

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336867
  gflops (total): 128.582
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.582

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325839
  gflops (eval):  132.935
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325839,132.935,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8864
  maximum absolute entry in einsum_ir solution: 34.8864
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129974
  time (eval):    0.00408775
  gflops (eval):  1059.63
  gflops (total): 253.526
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129974,0.00408775,1059.63,253.526

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337251
  gflops (total): 128.436
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.436

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318931
  gflops (eval):  135.814
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318931,135.814,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9478
  maximum absolute entry in einsum_ir solution: 35.9478
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.01318
  time (eval):    0.00404796
  gflops (eval):  1070.05
  gflops (total): 251.424
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.01318,0.00404796,1070.05,251.424

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0321833
  gflops (total): 134.589
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,134.589

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321688
  gflops (eval):  134.65
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321688,134.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4015
  maximum absolute entry in einsum_ir solution: 35.4015
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132224
  time (eval):    0.00405703
  gflops (eval):  1067.66
  gflops (total): 250.675
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132224,0.00405703,1067.66,250.675

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337798
  gflops (total): 128.228
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0308848
  gflops (eval):  140.248
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0308848,140.248,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2923
  maximum absolute entry in einsum_ir solution: 39.2923
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132251
  time (eval):    0.00409505
  gflops (eval):  1057.75
  gflops (total): 250.085
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132251,0.00409505,1057.75,250.085

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333524
  gflops (total): 129.871
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.871

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0314249
  gflops (eval):  137.837
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0314249,137.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4788
  maximum absolute entry in einsum_ir solution: 38.4788
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013095
  time (eval):    0.00414589
  gflops (eval):  1044.77
  gflops (total): 251.235
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013095,0.00414589,1044.77,251.235

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336563
  gflops (total): 128.699
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.699

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322082
  gflops (eval):  134.485
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322082,134.485,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2814
  maximum absolute entry in einsum_ir solution: 35.2814
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132535
  time (eval):    0.00406553
  gflops (eval):  1065.42
  gflops (total): 250.101
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132535,0.00406553,1065.42,250.101

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0329802
  gflops (total): 131.337
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.337

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323019
  gflops (eval):  134.095
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323019,134.095,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6374
  maximum absolute entry in einsum_ir solution: 37.6374
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131355
  time (eval):    0.00409431
  gflops (eval):  1057.94
  gflops (total): 251.397
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131355,0.00409431,1057.94,251.397

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340929
  gflops (total): 127.05
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0314122
  gflops (eval):  137.893
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0314122,137.893,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4764
  maximum absolute entry in einsum_ir solution: 42.4764
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131146
  time (eval):    0.00409266
  gflops (eval):  1058.36
  gflops (total): 251.726
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131146,0.00409266,1058.36,251.726

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0341615
  gflops (total): 126.795
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322044
  gflops (eval):  134.501
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322044,134.501,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0223
  maximum absolute entry in einsum_ir solution: 37.0223
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0128191
  time (eval):    0.00400101
  gflops (eval):  1082.61
  gflops (total): 257.52
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0128191,0.00400101,1082.61,257.52

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336061
  gflops (total): 128.891
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.891

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323245
  gflops (eval):  134.001
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323245,134.001,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.4983
  maximum absolute entry in einsum_ir solution: 32.4983
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131179
  time (eval):    0.00396271
  gflops (eval):  1093.07
  gflops (total): 253.593
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131179,0.00396271,1093.07,253.593

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335454
  gflops (total): 129.124
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.124

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0308746
  gflops (eval):  140.294
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0308746,140.294,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9677
  maximum absolute entry in einsum_ir solution: 36.9677
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132888
  time (eval):    0.0041077
  gflops (eval):  1054.49
  gflops (total): 248.988
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132888,0.0041077,1054.49,248.988

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0327983
  gflops (total): 132.065
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.065

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320858
  gflops (eval):  134.998
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320858,134.998,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8588
  maximum absolute entry in einsum_ir solution: 34.8588
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130668
  time (eval):    0.00409562
  gflops (eval):  1057.6
  gflops (total): 252.383
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130668,0.00409562,1057.6,252.383

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336024
  gflops (total): 128.905
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.905

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325451
  gflops (eval):  133.093
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325451,133.093,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.347
  maximum absolute entry in einsum_ir solution: 35.347
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131798
  time (eval):    0.00406965
  gflops (eval):  1064.35
  gflops (total): 251.11
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131798,0.00406965,1064.35,251.11

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033278
  gflops (total): 130.162
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321878
  gflops (eval):  134.57
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321878,134.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4488
  maximum absolute entry in einsum_ir solution: 40.4488
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130974
  time (eval):    0.00397635
  gflops (eval):  1089.32
  gflops (total): 253.695
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130974,0.00397635,1089.32,253.695

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336708
  gflops (total): 128.643
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327851
  gflops (eval):  132.118
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327851,132.118,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.3954
  maximum absolute entry in einsum_ir solution: 32.3954
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130283
  time (eval):    0.00413656
  gflops (eval):  1047.13
  gflops (total): 252.348
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130283,0.00413656,1047.13,252.348

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340684
  gflops (total): 127.142
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.142

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0310015
  gflops (eval):  139.72
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0310015,139.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3423
  maximum absolute entry in einsum_ir solution: 36.3423
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130656
  time (eval):    0.00407649
  gflops (eval):  1062.56
  gflops (total): 252.683
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130656,0.00407649,1062.56,252.683

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335499
  gflops (total): 129.107
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323278
  gflops (eval):  133.987
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323278,133.987,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1487
  maximum absolute entry in einsum_ir solution: 34.1487
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131273
  time (eval):    0.00405508
  gflops (eval):  1068.17
  gflops (total): 252.091
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131273,0.00405508,1068.17,252.091

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0347616
  gflops (total): 124.606
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,124.606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323194
  gflops (eval):  134.022
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323194,134.022,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9591
  maximum absolute entry in einsum_ir solution: 35.9591
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130744
  time (eval):    0.0041507
  gflops (eval):  1043.56
  gflops (total): 251.465
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130744,0.0041507,1043.56,251.465

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335153
  gflops (total): 129.24
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318144
  gflops (eval):  136.15
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318144,136.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6839
  maximum absolute entry in einsum_ir solution: 34.6839
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131086
  time (eval):    0.0041417
  gflops (eval):  1045.83
  gflops (total): 251.098
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131086,0.0041417,1045.83,251.098

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335627
  gflops (total): 129.058
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.058

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324533
  gflops (eval):  133.469
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324533,133.469,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.5392
  maximum absolute entry in einsum_ir solution: 37.5392
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131326
  time (eval):    0.00400094
  gflops (eval):  1082.63
  gflops (total): 252.809
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131326,0.00400094,1082.63,252.809

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033733
  gflops (total): 128.406
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.406

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0315816
  gflops (eval):  137.153
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0315816,137.153,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2474
  maximum absolute entry in einsum_ir solution: 34.2474
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131399
  time (eval):    0.00417181
  gflops (eval):  1038.28
  gflops (total): 250.208
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131399,0.00417181,1038.28,250.208

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.032783
  gflops (total): 132.127
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.127

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0311982
  gflops (eval):  138.839
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0311982,138.839,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3265
  maximum absolute entry in einsum_ir solution: 35.3265
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131431
  time (eval):    0.00399846
  gflops (eval):  1083.3
  gflops (total): 252.692
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131431,0.00399846,1083.3,252.692

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339347
  gflops (total): 127.643
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321914
  gflops (eval):  134.555
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321914,134.555,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9781
  maximum absolute entry in einsum_ir solution: 32.9781
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131017
  time (eval):    0.00400894
  gflops (eval):  1080.47
  gflops (total): 253.148
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131017,0.00400894,1080.47,253.148

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340953
  gflops (total): 127.041
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.041

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322925
  gflops (eval):  134.134
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322925,134.134,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.3199
  maximum absolute entry in einsum_ir solution: 40.3199
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131469
  time (eval):    0.00403115
  gflops (eval):  1074.51
  gflops (total): 252.155
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131469,0.00403115,1074.51,252.155

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336023
  gflops (total): 128.906
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.03198
  gflops (eval):  135.445
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.03198,135.445,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7312
  maximum absolute entry in einsum_ir solution: 34.7312
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0133304
  time (eval):    0.00406365
  gflops (eval):  1065.92
  gflops (total): 249.023
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0133304,0.00406365,1065.92,249.023

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0327567
  gflops (total): 132.233
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.233

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323233
  gflops (eval):  134.006
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323233,134.006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2003
  maximum absolute entry in einsum_ir solution: 37.2003
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131565
  time (eval):    0.00407559
  gflops (eval):  1062.8
  gflops (total): 251.363
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131565,0.00407559,1062.8,251.363

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338866
  gflops (total): 127.824
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.824

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320632
  gflops (eval):  135.093
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320632,135.093,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1025
  maximum absolute entry in einsum_ir solution: 35.1025
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130979
  time (eval):    0.0040794
  gflops (eval):  1061.8
  gflops (total): 252.165
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130979,0.0040794,1061.8,252.165

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0326647
  gflops (total): 132.605
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,132.605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322954
  gflops (eval):  134.122
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322954,134.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.511
  maximum absolute entry in einsum_ir solution: 33.511
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131115
  time (eval):    0.0041556
  gflops (eval):  1042.33
  gflops (total): 250.854
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131115,0.0041556,1042.33,250.854

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333051
  gflops (total): 130.056
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.056

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324092
  gflops (eval):  133.651
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324092,133.651,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3552
  maximum absolute entry in einsum_ir solution: 35.3552
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131794
  time (eval):    0.004012
  gflops (eval):  1079.64
  gflops (total): 251.959
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131794,0.004012,1079.64,251.959

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.03282
  gflops (total): 131.978
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,131.978

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319014
  gflops (eval):  135.778
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319014,135.778,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.895
  maximum absolute entry in einsum_ir solution: 35.895
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131399
  time (eval):    0.00411618
  gflops (eval):  1052.32
  gflops (total): 251.014
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131399,0.00411618,1052.32,251.014

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335153
  gflops (total): 129.24
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324386
  gflops (eval):  133.53
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324386,133.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9437
  maximum absolute entry in einsum_ir solution: 32.9437
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130192
  time (eval):    0.00417558
  gflops (eval):  1037.35
  gflops (total): 251.909
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130192,0.00417558,1037.35,251.909

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340246
  gflops (total): 127.306
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.306

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319655
  gflops (eval):  135.506
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319655,135.506,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2548
  maximum absolute entry in einsum_ir solution: 36.2548
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132588
  time (eval):    0.00410838
  gflops (eval):  1054.31
  gflops (total): 249.408
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132588,0.00410838,1054.31,249.408

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0339835
  gflops (total): 127.46
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321098
  gflops (eval):  134.897
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321098,134.897,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6403
  maximum absolute entry in einsum_ir solution: 33.6403
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132142
  time (eval):    0.00408622
  gflops (eval):  1060.03
  gflops (total): 250.37
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132142,0.00408622,1060.03,250.37

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340983
  gflops (total): 127.031
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.031

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0329652
  gflops (eval):  131.397
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0329652,131.397,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.892
  maximum absolute entry in einsum_ir solution: 34.892
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132817
  time (eval):    0.00406074
  gflops (eval):  1066.68
  gflops (total): 249.765
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132817,0.00406074,1066.68,249.765

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0330716
  gflops (total): 130.974
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.974

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322181
  gflops (eval):  134.444
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322181,134.444,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4394
  maximum absolute entry in einsum_ir solution: 34.4394
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0129289
  time (eval):    0.00414408
  gflops (eval):  1045.23
  gflops (total): 253.705
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0129289,0.00414408,1045.23,253.705

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0342943
  gflops (total): 126.304
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,126.304

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0327007
  gflops (eval):  132.459
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0327007,132.459,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1895
  maximum absolute entry in einsum_ir solution: 34.1895
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131431
  time (eval):    0.0041748
  gflops (eval):  1037.54
  gflops (total): 250.118
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131431,0.0041748,1037.54,250.118

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331638
  gflops (total): 130.61
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319352
  gflops (eval):  135.635
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319352,135.635,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9213
  maximum absolute entry in einsum_ir solution: 34.9213
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130649
  time (eval):    0.00410476
  gflops (eval):  1055.24
  gflops (total): 252.278
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130649,0.00410476,1055.24,252.278

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.032067
  gflops (total): 135.077
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,135.077

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325303
  gflops (eval):  133.153
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325303,133.153,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9147
  maximum absolute entry in einsum_ir solution: 39.9147
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131249
  time (eval):    0.00402294
  gflops (eval):  1076.71
  gflops (total): 252.599
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131249,0.00402294,1076.71,252.599

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333621
  gflops (total): 129.834
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.834

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320062
  gflops (eval):  135.334
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320062,135.334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1575
  maximum absolute entry in einsum_ir solution: 35.1575
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.013126
  time (eval):    0.00418193
  gflops (eval):  1035.77
  gflops (total): 250.262
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.013126,0.00418193,1035.77,250.262

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0343903
  gflops (total): 125.952
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,125.952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322722
  gflops (eval):  134.218
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322722,134.218,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8908
  maximum absolute entry in einsum_ir solution: 33.8908
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0108446
  time (eval):    0.00406834
  gflops (eval):  1064.69
  gflops (total): 290.455
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0108446,0.00406834,1064.69,290.455

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336185
  gflops (total): 128.843
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.843

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0324345
  gflops (eval):  133.547
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0324345,133.547,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.859
  maximum absolute entry in einsum_ir solution: 33.859
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130665
  time (eval):    0.00416148
  gflops (eval):  1040.86
  gflops (total): 251.424
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130665,0.00416148,1040.86,251.424

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338463
  gflops (total): 127.976
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.976

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0310832
  gflops (eval):  139.352
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0310832,139.352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4918
  maximum absolute entry in einsum_ir solution: 35.4918
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131912
  time (eval):    0.00402497
  gflops (eval):  1076.16
  gflops (total): 251.596
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131912,0.00402497,1076.16,251.596

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336278
  gflops (total): 128.808
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.808

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0322503
  gflops (eval):  134.309
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0322503,134.309,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8332
  maximum absolute entry in einsum_ir solution: 35.8332
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0109619
  time (eval):    0.00414694
  gflops (eval):  1044.51
  gflops (total): 286.688
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0109619,0.00414694,1044.51,286.688

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332361
  gflops (total): 130.326
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320607
  gflops (eval):  135.104
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320607,135.104,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5435
  maximum absolute entry in einsum_ir solution: 34.5435
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132924
  time (eval):    0.00413294
  gflops (eval):  1048.05
  gflops (total): 248.576
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132924,0.00413294,1048.05,248.576

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033712
  gflops (total): 128.486
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.486

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0311858
  gflops (eval):  138.894
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0311858,138.894,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9247
  maximum absolute entry in einsum_ir solution: 35.9247
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131387
  time (eval):    0.00418971
  gflops (eval):  1033.85
  gflops (total): 249.967
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131387,0.00418971,1033.85,249.967

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033761
  gflops (total): 128.3
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.3

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323613
  gflops (eval):  133.849
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323613,133.849,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.4692
  maximum absolute entry in einsum_ir solution: 32.4692
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.012729
  time (eval):    0.00416744
  gflops (eval):  1039.37
  gflops (total): 256.358
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.012729,0.00416744,1039.37,256.358

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334835
  gflops (total): 129.363
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323364
  gflops (eval):  133.952
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323364,133.952,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0868
  maximum absolute entry in einsum_ir solution: 35.0868
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.01316
  time (eval):    0.004016
  gflops (eval):  1078.56
  gflops (total): 252.185
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.01316,0.004016,1078.56,252.185

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338468
  gflops (total): 127.974
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.974

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.031908
  gflops (eval):  135.75
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.031908,135.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6391
  maximum absolute entry in einsum_ir solution: 34.6391
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132364
  time (eval):    0.00413942
  gflops (eval):  1046.41
  gflops (total): 249.284
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132364,0.00413942,1046.41,249.284

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332653
  gflops (total): 130.211
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.211

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325328
  gflops (eval):  133.143
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325328,133.143,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0231
  maximum absolute entry in einsum_ir solution: 35.0231
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131877
  time (eval):    0.00405835
  gflops (eval):  1067.31
  gflops (total): 251.16
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131877,0.00405835,1067.31,251.16

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0340331
  gflops (total): 127.274
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.274

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318869
  gflops (eval):  135.84
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318869,135.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.472
  maximum absolute entry in einsum_ir solution: 35.472
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130415
  time (eval):    0.00419182
  gflops (eval):  1033.33
  gflops (total): 251.345
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130415,0.00419182,1033.33,251.345

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0338552
  gflops (total): 127.943
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,127.943

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0320763
  gflops (eval):  135.038
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0320763,135.038,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6897
  maximum absolute entry in einsum_ir solution: 36.6897
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130924
  time (eval):    0.00405737
  gflops (eval):  1067.57
  gflops (total): 252.571
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130924,0.00405737,1067.57,252.571

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0334107
  gflops (total): 129.645
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.645

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325583
  gflops (eval):  133.039
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325583,133.039,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4021
  maximum absolute entry in einsum_ir solution: 42.4021
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131077
  time (eval):    0.00409744
  gflops (eval):  1057.13
  gflops (total): 251.757
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131077,0.00409744,1057.13,251.757

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0332638
  gflops (total): 130.217
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.217

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0323952
  gflops (eval):  133.709
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0323952,133.709,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2271
  maximum absolute entry in einsum_ir solution: 33.2271
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130153
  time (eval):    0.00415687
  gflops (eval):  1042.01
  gflops (total): 252.241
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130153,0.00415687,1042.01,252.241

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0335358
  gflops (total): 129.161
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.161

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0325359
  gflops (eval):  133.13
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0325359,133.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1713
  maximum absolute entry in einsum_ir solution: 35.1713
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0134024
  time (eval):    0.00408537
  gflops (eval):  1060.25
  gflops (total): 247.689
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0134024,0.00408537,1060.25,247.689

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0323688
  gflops (total): 133.818
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,133.818

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.032469
  gflops (eval):  133.405
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.032469,133.405,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2732
  maximum absolute entry in einsum_ir solution: 37.2732
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132624
  time (eval):    0.00414406
  gflops (eval):  1045.24
  gflops (total): 248.845
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132624,0.00414406,1045.24,248.845

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331197
  gflops (total): 130.784
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0319394
  gflops (eval):  135.617
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0319394,135.617,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6723
  maximum absolute entry in einsum_ir solution: 32.6723
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0130842
  time (eval):    0.00413637
  gflops (eval):  1047.18
  gflops (total): 251.531
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0130842,0.00413637,1047.18,251.531

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0336057
  gflops (total): 128.892
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.892

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0317585
  gflops (eval):  136.389
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0317585,136.389,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.7864
  maximum absolute entry in einsum_ir solution: 40.7864
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131632
  time (eval):    0.00433495
  gflops (eval):  999.209
  gflops (total): 247.541
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131632,0.00433495,999.209,247.541

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0333513
  gflops (total): 129.876
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,129.876

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321804
  gflops (eval):  134.601
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321804,134.601,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.666
  maximum absolute entry in einsum_ir solution: 38.666
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132348
  time (eval):    0.00417728
  gflops (eval):  1036.92
  gflops (total): 248.765
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132348,0.00417728,1036.92,248.765

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.033102
  gflops (total): 130.854
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.854

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0318211
  gflops (eval):  136.121
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0318211,136.121,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4708
  maximum absolute entry in einsum_ir solution: 34.4708
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0131151
  time (eval):    0.00411243
  gflops (eval):  1053.28
  gflops (total): 251.431
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0131151,0.00411243,1053.28,251.431

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0331741
  gflops (total): 130.569
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,130.569

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0321164
  gflops (eval):  134.87
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0321164,134.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6204
  maximum absolute entry in einsum_ir solution: 32.6204
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0132078
  time (eval):    0.00406166
  gflops (eval):  1066.44
  gflops (total): 250.82
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0132078,0.00406166,1066.44,250.82

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0337547
  gflops (total): 128.324
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,128.324

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0326654
  gflops (eval):  132.603
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0326654,132.603,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1412
  maximum absolute entry in einsum_ir solution: 33.1412
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132341
  time (eval):    0.00509752
  gflops (eval):  521.395
  gflops (total): 144.985
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132341,0.00509752,521.395,144.985

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0380159
  gflops (total): 69.9134
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,69.9134

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00201886
  gflops (eval):  1316.49
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00201886,1316.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.028
  maximum absolute entry in einsum_ir solution: 108.028
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0133176
  time (eval):    0.00508328
  gflops (eval):  522.856
  gflops (total): 144.44
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0133176,0.00508328,522.856,144.44

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0417164
  gflops (total): 63.7116
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,63.7116

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00188598
  gflops (eval):  1409.25
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00188598,1409.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.11
  maximum absolute entry in einsum_ir solution: 101.111
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0133316
  time (eval):    0.00473135
  gflops (eval):  561.747
  gflops (total): 147.142
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0133316,0.00473135,561.747,147.142

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393126
  gflops (total): 67.6074
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.6074

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00218921
  gflops (eval):  1214.06
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00218921,1214.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.288
  maximum absolute entry in einsum_ir solution: 108.288
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.013348
  time (eval):    0.00510539
  gflops (eval):  520.591
  gflops (total): 144.028
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.013348,0.00510539,520.591,144.028

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0402294
  gflops (total): 66.0667
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.0667

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00213595
  gflops (eval):  1244.33
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00213595,1244.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.048
  maximum absolute entry in einsum_ir solution: 101.048
  maximum element-wise difference:              0.000110626
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132865
  time (eval):    0.00508725
  gflops (eval):  522.447
  gflops (total): 144.653
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132865,0.00508725,522.447,144.653

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0400251
  gflops (total): 66.4038
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.4038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00250703
  gflops (eval):  1060.15
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00250703,1060.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.609
  maximum absolute entry in einsum_ir solution: 100.609
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130958
  time (eval):    0.00509896
  gflops (eval):  521.247
  gflops (total): 146.076
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130958,0.00509896,521.247,146.076

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0399741
  gflops (total): 66.4886
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.4886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00234585
  gflops (eval):  1132.99
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00234585,1132.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.2242
  maximum absolute entry in einsum_ir solution: 98.2242
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131878
  time (eval):    0.00481745
  gflops (eval):  551.707
  gflops (total): 147.614
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131878,0.00481745,551.707,147.614

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0409625
  gflops (total): 64.8843
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.8843

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00198228
  gflops (eval):  1340.79
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00198228,1340.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.881
  maximum absolute entry in einsum_ir solution: 106.881
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130239
  time (eval):    0.00514811
  gflops (eval):  516.271
  gflops (total): 146.259
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130239,0.00514811,516.271,146.259

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393723
  gflops (total): 67.5049
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.5049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00202977
  gflops (eval):  1309.42
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00202977,1309.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.0382
  maximum absolute entry in einsum_ir solution: 99.0381
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129783
  time (eval):    0.00483639
  gflops (eval):  549.546
  gflops (total): 149.192
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129783,0.00483639,549.546,149.192

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0390651
  gflops (total): 68.0357
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.0357

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00209122
  gflops (eval):  1270.94
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00209122,1270.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.099
  maximum absolute entry in einsum_ir solution: 101.099
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132956
  time (eval):    0.0048785
  gflops (eval):  544.803
  gflops (total): 146.242
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132956,0.0048785,544.803,146.242

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0396701
  gflops (total): 66.9981
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.9981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00201391
  gflops (eval):  1319.73
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00201391,1319.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.833
  maximum absolute entry in einsum_ir solution: 101.833
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129533
  time (eval):    0.00481993
  gflops (eval):  551.423
  gflops (total): 149.54
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129533,0.00481993,551.423,149.54

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0401162
  gflops (total): 66.253
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.253

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0020577
  gflops (eval):  1291.64
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0020577,1291.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.978
  maximum absolute entry in einsum_ir solution: 100.978
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131819
  time (eval):    0.00509061
  gflops (eval):  522.103
  gflops (total): 145.455
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131819,0.00509061,522.103,145.455

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0395115
  gflops (total): 67.2669
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.2669

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00210743
  gflops (eval):  1261.17
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00210743,1261.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.86
  maximum absolute entry in einsum_ir solution: 105.86
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129785
  time (eval):    0.0050184
  gflops (eval):  529.615
  gflops (total): 147.682
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129785,0.0050184,529.615,147.682

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393342
  gflops (total): 67.5702
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.5702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00315152
  gflops (eval):  843.345
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00315152,843.345,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.999
  maximum absolute entry in einsum_ir solution: 101.999
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132564
  time (eval):    0.00495479
  gflops (eval):  536.414
  gflops (total): 145.944
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132564,0.00495479,536.414,145.944

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0387941
  gflops (total): 68.511
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00251252
  gflops (eval):  1057.83
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00251252,1057.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.084
  maximum absolute entry in einsum_ir solution: 105.084
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131157
  time (eval):    0.00505474
  gflops (eval):  525.808
  gflops (total): 146.272
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131157,0.00505474,525.808,146.272

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0394169
  gflops (total): 67.4284
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.4284

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00208918
  gflops (eval):  1272.18
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00208918,1272.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.312
  maximum absolute entry in einsum_ir solution: 100.312
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131302
  time (eval):    0.00511328
  gflops (eval):  519.788
  gflops (total): 145.686
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131302,0.00511328,519.788,145.686

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.039594
  gflops (total): 67.1268
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.1268

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00203536
  gflops (eval):  1305.82
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00203536,1305.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.042
  maximum absolute entry in einsum_ir solution: 104.042
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131391
  time (eval):    0.00508902
  gflops (eval):  522.265
  gflops (total): 145.809
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131391,0.00508902,522.265,145.809

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0401224
  gflops (total): 66.2428
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.2428

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00210486
  gflops (eval):  1262.71
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00210486,1262.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.821
  maximum absolute entry in einsum_ir solution: 107.821
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131004
  time (eval):    0.00522693
  gflops (eval):  508.486
  gflops (total): 145.019
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131004,0.00522693,508.486,145.019

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0397122
  gflops (total): 66.9271
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.9271

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00204391
  gflops (eval):  1300.36
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00204391,1300.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.743
  maximum absolute entry in einsum_ir solution: 103.743
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.012989
  time (eval):    0.00515158
  gflops (eval):  515.924
  gflops (total): 146.513
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.012989,0.00515158,515.924,146.513

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0392101
  gflops (total): 67.7842
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.7842

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00194372
  gflops (eval):  1367.39
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00194372,1367.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.136
  maximum absolute entry in einsum_ir solution: 103.136
  maximum element-wise difference:              8.01086e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131373
  time (eval):    0.00501831
  gflops (eval):  529.624
  gflops (total): 146.391
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131373,0.00501831,529.624,146.391

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0396195
  gflops (total): 67.0837
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.0837

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00209761
  gflops (eval):  1267.07
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00209761,1267.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.906
  maximum absolute entry in einsum_ir solution: 101.906
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131006
  time (eval):    0.00504108
  gflops (eval):  527.233
  gflops (total): 146.504
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131006,0.00504108,527.233,146.504

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0385891
  gflops (total): 68.8749
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.8749

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00210104
  gflops (eval):  1265
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00210104,1265,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.276
  maximum absolute entry in einsum_ir solution: 103.276
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130092
  time (eval):    0.00513431
  gflops (eval):  517.659
  gflops (total): 146.489
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130092,0.00513431,517.659,146.489

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0388279
  gflops (total): 68.4514
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.4514

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00214175
  gflops (eval):  1240.96
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00214175,1240.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.68
  maximum absolute entry in einsum_ir solution: 116.68
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131186
  time (eval):    0.00512257
  gflops (eval):  518.845
  gflops (total): 145.705
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131186,0.00512257,518.845,145.705

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393381
  gflops (total): 67.5636
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.5636

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00298442
  gflops (eval):  890.564
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00298442,890.564,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.19
  maximum absolute entry in einsum_ir solution: 105.19
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.013177
  time (eval):    0.00510004
  gflops (eval):  521.137
  gflops (total): 145.419
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.013177,0.00510004,521.137,145.419

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0388944
  gflops (total): 68.3343
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.3343

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00218131
  gflops (eval):  1218.45
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00218131,1218.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.3312
  maximum absolute entry in einsum_ir solution: 99.3311
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132073
  time (eval):    0.00507483
  gflops (eval):  523.726
  gflops (total): 145.378
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132073,0.00507483,523.726,145.378

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393746
  gflops (total): 67.5009
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.5009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00196605
  gflops (eval):  1351.86
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00196605,1351.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.518
  maximum absolute entry in einsum_ir solution: 107.518
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131452
  time (eval):    0.00484533
  gflops (eval):  548.532
  gflops (total): 147.735
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131452,0.00484533,548.532,147.735

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0394728
  gflops (total): 67.333
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00232338
  gflops (eval):  1143.95
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00232338,1143.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.1213
  maximum absolute entry in einsum_ir solution: 99.1214
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132527
  time (eval):    0.00514433
  gflops (eval):  516.65
  gflops (total): 144.47
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132527,0.00514433,516.65,144.47

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0396753
  gflops (total): 66.9894
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.9894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00209134
  gflops (eval):  1270.87
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00209134,1270.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.788
  maximum absolute entry in einsum_ir solution: 105.788
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129841
  time (eval):    0.00512542
  gflops (eval):  518.556
  gflops (total): 146.763
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129841,0.00512542,518.556,146.763

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393184
  gflops (total): 67.5974
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.5974

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00206759
  gflops (eval):  1285.47
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00206759,1285.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.673
  maximum absolute entry in einsum_ir solution: 100.673
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130566
  time (eval):    0.00514697
  gflops (eval):  516.386
  gflops (total): 146.005
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130566,0.00514697,516.386,146.005

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0390346
  gflops (total): 68.0888
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.0888

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00239304
  gflops (eval):  1110.65
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00239304,1110.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.5737
  maximum absolute entry in einsum_ir solution: 98.5736
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131599
  time (eval):    0.00485117
  gflops (eval):  547.872
  gflops (total): 147.566
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131599,0.00485117,547.872,147.566

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0397466
  gflops (total): 66.8691
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.8691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0022057
  gflops (eval):  1204.98
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0022057,1204.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.568
  maximum absolute entry in einsum_ir solution: 104.568
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130909
  time (eval):    0.00510753
  gflops (eval):  520.373
  gflops (total): 146.047
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130909,0.00510753,520.373,146.047

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0396014
  gflops (total): 67.1144
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.1144

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00227332
  gflops (eval):  1169.14
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00227332,1169.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.35
  maximum absolute entry in einsum_ir solution: 113.35
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131268
  time (eval):    0.00514445
  gflops (eval):  516.638
  gflops (total): 145.465
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131268,0.00514445,516.638,145.465

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0395479
  gflops (total): 67.2051
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.2051

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00209492
  gflops (eval):  1268.7
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00209492,1268.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.641
  maximum absolute entry in einsum_ir solution: 109.641
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132043
  time (eval):    0.00485167
  gflops (eval):  547.815
  gflops (total): 147.199
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132043,0.00485167,547.815,147.199

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0399318
  gflops (total): 66.559
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.559

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00219167
  gflops (eval):  1212.69
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00219167,1212.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.526
  maximum absolute entry in einsum_ir solution: 108.526
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130332
  time (eval):    0.005036
  gflops (eval):  527.764
  gflops (total): 147.091
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130332,0.005036,527.764,147.091

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0397351
  gflops (total): 66.8884
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.8884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00210958
  gflops (eval):  1259.88
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00210958,1259.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.4771
  maximum absolute entry in einsum_ir solution: 99.4771
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132092
  time (eval):    0.00508266
  gflops (eval):  522.919
  gflops (total): 145.3
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132092,0.00508266,522.919,145.3

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0396458
  gflops (total): 67.0391
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.0391

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00197469
  gflops (eval):  1345.94
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00197469,1345.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.899
  maximum absolute entry in einsum_ir solution: 104.899
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132238
  time (eval):    0.00485458
  gflops (eval):  547.487
  gflops (total): 147.017
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132238,0.00485458,547.487,147.017

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0412259
  gflops (total): 64.4697
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,64.4697

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00238216
  gflops (eval):  1115.72
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00238216,1115.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.396
  maximum absolute entry in einsum_ir solution: 108.396
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130187
  time (eval):    0.00505213
  gflops (eval):  526.079
  gflops (total): 147.078
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130187,0.00505213,526.079,147.078

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0395033
  gflops (total): 67.281
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.281

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00223742
  gflops (eval):  1187.9
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00223742,1187.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.958
  maximum absolute entry in einsum_ir solution: 101.958
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.013417
  time (eval):    0.00508162
  gflops (eval):  523.027
  gflops (total): 143.676
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.013417,0.00508162,523.027,143.676

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0399298
  gflops (total): 66.5623
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.5623

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0020813
  gflops (eval):  1277
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0020813,1277,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.414
  maximum absolute entry in einsum_ir solution: 104.413
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0125819
  time (eval):    0.00509433
  gflops (eval):  521.722
  gflops (total): 150.361
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0125819,0.00509433,521.722,150.361

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0394713
  gflops (total): 67.3355
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.3355

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00242867
  gflops (eval):  1094.35
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00242867,1094.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.5259
  maximum absolute entry in einsum_ir solution: 99.5259
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132539
  time (eval):    0.00510352
  gflops (eval):  520.782
  gflops (total): 144.781
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132539,0.00510352,520.782,144.781

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0403635
  gflops (total): 65.8471
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.8471

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00197446
  gflops (eval):  1346.1
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00197446,1346.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.027
  maximum absolute entry in einsum_ir solution: 109.027
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132503
  time (eval):    0.00506782
  gflops (eval):  524.45
  gflops (total): 145.092
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132503,0.00506782,524.45,145.092

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0395421
  gflops (total): 67.2149
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.2149

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00201446
  gflops (eval):  1319.37
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00201446,1319.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.082
  maximum absolute entry in einsum_ir solution: 103.082
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129678
  time (eval):    0.00509402
  gflops (eval):  521.753
  gflops (total): 147.151
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129678,0.00509402,521.753,147.151

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.039089
  gflops (total): 67.994
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.994

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00205358
  gflops (eval):  1294.24
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00205358,1294.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.6062
  maximum absolute entry in einsum_ir solution: 97.6062
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129299
  time (eval):    0.00517878
  gflops (eval):  513.213
  gflops (total): 146.77
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129299,0.00517878,513.213,146.77

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0386295
  gflops (total): 68.8028
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.8028

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00257766
  gflops (eval):  1031.1
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00257766,1031.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.921
  maximum absolute entry in einsum_ir solution: 101.921
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131823
  time (eval):    0.0051418
  gflops (eval):  516.905
  gflops (total): 145.045
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131823,0.0051418,516.905,145.045

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0389206
  gflops (total): 68.2883
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.2883

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0020456
  gflops (eval):  1299.29
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0020456,1299.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      95.9936
  maximum absolute entry in einsum_ir solution: 95.9936
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131811
  time (eval):    0.00514281
  gflops (eval):  516.803
  gflops (total): 145.047
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131811,0.00514281,516.803,145.047

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0398596
  gflops (total): 66.6796
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.6796

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00236431
  gflops (eval):  1124.14
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00236431,1124.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.985
  maximum absolute entry in einsum_ir solution: 112.985
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130655
  time (eval):    0.00493395
  gflops (eval):  538.68
  gflops (total): 147.661
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130655,0.00493395,538.68,147.661

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0392684
  gflops (total): 67.6834
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.6834

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00204092
  gflops (eval):  1302.26
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00204092,1302.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.494
  maximum absolute entry in einsum_ir solution: 101.494
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130774
  time (eval):    0.00512495
  gflops (eval):  518.605
  gflops (total): 146.015
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130774,0.00512495,518.605,146.015

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0391738
  gflops (total): 67.8469
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.8469

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00211707
  gflops (eval):  1255.42
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00211707,1255.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.767
  maximum absolute entry in einsum_ir solution: 106.767
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131103
  time (eval):    0.00507447
  gflops (eval):  523.763
  gflops (total): 146.156
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131103,0.00507447,523.763,146.156

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0389094
  gflops (total): 68.3078
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.3078

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00256136
  gflops (eval):  1037.66
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00256136,1037.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      95.7105
  maximum absolute entry in einsum_ir solution: 95.7105
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.013268
  time (eval):    0.00510827
  gflops (eval):  520.297
  gflops (total): 144.633
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.013268,0.00510827,520.297,144.633

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393085
  gflops (total): 67.6144
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.6144

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00206059
  gflops (eval):  1289.84
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00206059,1289.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.0521
  maximum absolute entry in einsum_ir solution: 98.0521
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131048
  time (eval):    0.00513098
  gflops (eval):  517.995
  gflops (total): 145.748
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131048,0.00513098,517.995,145.748

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0391572
  gflops (total): 67.8757
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.8757

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00233443
  gflops (eval):  1138.53
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00233443,1138.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.533
  maximum absolute entry in einsum_ir solution: 104.533
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130346
  time (eval):    0.00508642
  gflops (eval):  522.532
  gflops (total): 146.671
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130346,0.00508642,522.532,146.671

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0402117
  gflops (total): 66.0956
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.0956

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00207643
  gflops (eval):  1280
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00207643,1280,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.287
  maximum absolute entry in einsum_ir solution: 102.287
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132563
  time (eval):    0.0049747
  gflops (eval):  534.268
  gflops (total): 145.786
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132563,0.0049747,534.268,145.786

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0391572
  gflops (total): 67.8757
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.8757

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00207246
  gflops (eval):  1282.45
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00207246,1282.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.714
  maximum absolute entry in einsum_ir solution: 104.714
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132585
  time (eval):    0.00509927
  gflops (eval):  521.216
  gflops (total): 144.779
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132585,0.00509927,521.216,144.779

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0389895
  gflops (total): 68.1676
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.1676

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00210105
  gflops (eval):  1265
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00210105,1265,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.039
  maximum absolute entry in einsum_ir solution: 100.039
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.013168
  time (eval):    0.00511363
  gflops (eval):  519.752
  gflops (total): 145.382
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.013168,0.00511363,519.752,145.382

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.039729
  gflops (total): 66.8988
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.8988

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00242179
  gflops (eval):  1097.46
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00242179,1097.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.144
  maximum absolute entry in einsum_ir solution: 113.144
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130151
  time (eval):    0.00485213
  gflops (eval):  547.764
  gflops (total): 148.754
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130151,0.00485213,547.764,148.754

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393079
  gflops (total): 67.6154
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.6154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00217953
  gflops (eval):  1219.45
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00217953,1219.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.601
  maximum absolute entry in einsum_ir solution: 118.601
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132396
  time (eval):    0.00514631
  gflops (eval):  516.451
  gflops (total): 144.558
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132396,0.00514631,516.451,144.558

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0390944
  gflops (total): 67.9848
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.9848

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0023659
  gflops (eval):  1123.39
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0023659,1123.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.751
  maximum absolute entry in einsum_ir solution: 102.751
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132148
  time (eval):    0.00511457
  gflops (eval):  519.656
  gflops (total): 145.003
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132148,0.00511457,519.656,145.003

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0392569
  gflops (total): 67.7032
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.7032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00210087
  gflops (eval):  1265.1
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00210087,1265.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.129
  maximum absolute entry in einsum_ir solution: 103.129
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132843
  time (eval):    0.00485887
  gflops (eval):  547.004
  gflops (total): 146.492
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132843,0.00485887,547.004,146.492

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0397819
  gflops (total): 66.8099
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.8099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00214981
  gflops (eval):  1236.3
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00214981,1236.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.601
  maximum absolute entry in einsum_ir solution: 105.601
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132209
  time (eval):    0.00506766
  gflops (eval):  524.467
  gflops (total): 145.327
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132209,0.00506766,524.467,145.327

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0396178
  gflops (total): 67.0865
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.0865

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00226489
  gflops (eval):  1173.49
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00226489,1173.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.069
  maximum absolute entry in einsum_ir solution: 102.069
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0133015
  time (eval):    0.00503708
  gflops (eval):  527.651
  gflops (total): 144.931
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0133015,0.00503708,527.651,144.931

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.039356
  gflops (total): 67.5328
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.5328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00256222
  gflops (eval):  1037.31
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00256222,1037.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.311
  maximum absolute entry in einsum_ir solution: 105.311
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130782
  time (eval):    0.0050098
  gflops (eval):  530.524
  gflops (total): 146.938
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130782,0.0050098,530.524,146.938

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0396999
  gflops (total): 66.9477
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.9477

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0021038
  gflops (eval):  1263.34
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0021038,1263.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.903
  maximum absolute entry in einsum_ir solution: 106.903
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130901
  time (eval):    0.00512708
  gflops (eval):  518.388
  gflops (total): 145.897
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130901,0.00512708,518.388,145.897

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0391609
  gflops (total): 67.8692
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.8692

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00209812
  gflops (eval):  1266.76
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00209812,1266.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.6037
  maximum absolute entry in einsum_ir solution: 99.6037
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.013123
  time (eval):    0.00506902
  gflops (eval):  524.326
  gflops (total): 146.098
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.013123,0.00506902,524.326,146.098

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393302
  gflops (total): 67.577
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00203625
  gflops (eval):  1305.25
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00203625,1305.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.064
  maximum absolute entry in einsum_ir solution: 105.064
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.013252
  time (eval):    0.005098
  gflops (eval):  521.345
  gflops (total): 144.84
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.013252,0.005098,521.345,144.84

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0398797
  gflops (total): 66.6459
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.6459

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.002464
  gflops (eval):  1078.66
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.002464,1078.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.153
  maximum absolute entry in einsum_ir solution: 100.153
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132097
  time (eval):    0.00487974
  gflops (eval):  544.665
  gflops (total): 146.926
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132097,0.00487974,544.665,146.926

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393478
  gflops (total): 67.5469
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.5469

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0020769
  gflops (eval):  1279.71
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0020769,1279.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.926
  maximum absolute entry in einsum_ir solution: 98.9261
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130195
  time (eval):    0.00510013
  gflops (eval):  521.128
  gflops (total): 146.682
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130195,0.00510013,521.128,146.682

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0390745
  gflops (total): 68.0193
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.0193

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00208778
  gflops (eval):  1273.04
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00208778,1273.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.9203
  maximum absolute entry in einsum_ir solution: 97.9203
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131787
  time (eval):    0.00511504
  gflops (eval):  519.609
  gflops (total): 145.286
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131787,0.00511504,519.609,145.286

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0392592
  gflops (total): 67.6993
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.6993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00273281
  gflops (eval):  972.561
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00273281,972.561,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.158
  maximum absolute entry in einsum_ir solution: 110.158
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129827
  time (eval):    0.00507086
  gflops (eval):  524.136
  gflops (total): 147.218
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129827,0.00507086,524.136,147.218

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0396205
  gflops (total): 67.082
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.082

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.001956
  gflops (eval):  1358.8
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.001956,1358.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.604
  maximum absolute entry in einsum_ir solution: 107.605
  maximum element-wise difference:              0.000102997
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.012969
  time (eval):    0.00485155
  gflops (eval):  547.83
  gflops (total): 149.143
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.012969,0.00485155,547.83,149.143

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.03841
  gflops (total): 69.1961
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,69.1961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00250963
  gflops (eval):  1059.05
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00250963,1059.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.6062
  maximum absolute entry in einsum_ir solution: 99.6062
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130935
  time (eval):    0.00513229
  gflops (eval):  517.863
  gflops (total): 145.828
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130935,0.00513229,517.863,145.828

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0389975
  gflops (total): 68.1536
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.1536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00250433
  gflops (eval):  1061.29
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00250433,1061.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.68
  maximum absolute entry in einsum_ir solution: 102.68
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129999
  time (eval):    0.00512735
  gflops (eval):  518.361
  gflops (total): 146.62
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129999,0.00512735,518.361,146.62

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0396014
  gflops (total): 67.1143
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.1143

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00200476
  gflops (eval):  1325.76
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00200476,1325.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.8798
  maximum absolute entry in einsum_ir solution: 99.8798
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131068
  time (eval):    0.00513114
  gflops (eval):  517.978
  gflops (total): 145.73
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131068,0.00513114,517.978,145.73

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0395798
  gflops (total): 67.151
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.151

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00295686
  gflops (eval):  898.867
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00295686,898.867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.919
  maximum absolute entry in einsum_ir solution: 100.919
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131924
  time (eval):    0.00487727
  gflops (eval):  544.94
  gflops (total): 147.087
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131924,0.00487727,544.94,147.087

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0392206
  gflops (total): 67.766
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0022705
  gflops (eval):  1170.59
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0022705,1170.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.764
  maximum absolute entry in einsum_ir solution: 111.764
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131706
  time (eval):    0.00503101
  gflops (eval):  528.287
  gflops (total): 146.021
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131706,0.00503101,528.287,146.021

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0396919
  gflops (total): 66.9613
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.9613

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00212809
  gflops (eval):  1248.93
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00212809,1248.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.8811
  maximum absolute entry in einsum_ir solution: 99.8811
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131074
  time (eval):    0.0051481
  gflops (eval):  516.272
  gflops (total): 145.59
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131074,0.0051481,516.272,145.59

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0400241
  gflops (total): 66.4055
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.4055

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00195006
  gflops (eval):  1362.94
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00195006,1362.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.893
  maximum absolute entry in einsum_ir solution: 104.893
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131454
  time (eval):    0.00520311
  gflops (eval):  510.814
  gflops (total): 144.852
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131454,0.00520311,510.814,144.852

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393863
  gflops (total): 67.4809
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.4809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00205358
  gflops (eval):  1294.24
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00205358,1294.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.285
  maximum absolute entry in einsum_ir solution: 114.285
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131744
  time (eval):    0.00512357
  gflops (eval):  518.744
  gflops (total): 145.253
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131744,0.00512357,518.744,145.253

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0399937
  gflops (total): 66.456
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.456

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00221991
  gflops (eval):  1197.27
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00221991,1197.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.902
  maximum absolute entry in einsum_ir solution: 102.902
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0133936
  time (eval):    0.00484565
  gflops (eval):  548.496
  gflops (total): 145.72
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0133936,0.00484565,548.496,145.72

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0397025
  gflops (total): 66.9434
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.9434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00231331
  gflops (eval):  1148.92
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00231331,1148.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.282
  maximum absolute entry in einsum_ir solution: 107.282
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132097
  time (eval):    0.00484078
  gflops (eval):  549.048
  gflops (total): 147.244
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132097,0.00484078,549.048,147.244

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0390597
  gflops (total): 68.0451
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.0451

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00238326
  gflops (eval):  1115.2
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00238326,1115.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.561
  maximum absolute entry in einsum_ir solution: 102.561
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130862
  time (eval):    0.00481391
  gflops (eval):  552.112
  gflops (total): 148.481
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130862,0.00481391,552.112,148.481

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0392384
  gflops (total): 67.7351
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.7351

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00207753
  gflops (eval):  1279.32
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00207753,1279.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.647
  maximum absolute entry in einsum_ir solution: 109.647
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132845
  time (eval):    0.00483936
  gflops (eval):  549.209
  gflops (total): 146.647
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132845,0.00483936,549.209,146.647

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0390566
  gflops (total): 68.0506
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.0506

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00195358
  gflops (eval):  1360.49
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00195358,1360.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.411
  maximum absolute entry in einsum_ir solution: 100.411
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131549
  time (eval):    0.00489032
  gflops (eval):  543.486
  gflops (total): 147.287
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131549,0.00489032,543.486,147.287

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0392167
  gflops (total): 67.7728
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.7728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00206826
  gflops (eval):  1285.05
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00206826,1285.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.581
  maximum absolute entry in einsum_ir solution: 105.581
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130646
  time (eval):    0.00484758
  gflops (eval):  548.278
  gflops (total): 148.38
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130646,0.00484758,548.278,148.38

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0396178
  gflops (total): 67.0865
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.0865

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00270571
  gflops (eval):  982.302
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00270571,982.302,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.9361
  maximum absolute entry in einsum_ir solution: 99.9362
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0128627
  time (eval):    0.00513788
  gflops (eval):  517.299
  gflops (total): 147.652
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0128627,0.00513788,517.299,147.652

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393829
  gflops (total): 67.4866
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.4866

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00207003
  gflops (eval):  1283.96
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00207003,1283.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.085
  maximum absolute entry in einsum_ir solution: 102.085
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132049
  time (eval):    0.0051058
  gflops (eval):  520.549
  gflops (total): 145.151
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132049,0.0051058,520.549,145.151

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0417212
  gflops (total): 63.7043
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,63.7043

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00309996
  gflops (eval):  857.372
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00309996,857.372,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.2206
  maximum absolute entry in einsum_ir solution: 96.2206
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0132121
  time (eval):    0.00513622
  gflops (eval):  517.466
  gflops (total): 144.854
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0132121,0.00513622,517.466,144.854

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0392189
  gflops (total): 67.7689
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.7689

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00257931
  gflops (eval):  1030.44
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00257931,1030.44,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.916
  maximum absolute entry in einsum_ir solution: 105.916
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.013106
  time (eval):    0.00514997
  gflops (eval):  516.085
  gflops (total): 145.587
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.013106,0.00514997,516.085,145.587

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0388774
  gflops (total): 68.3642
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.3642

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00212091
  gflops (eval):  1253.15
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00212091,1253.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.557
  maximum absolute entry in einsum_ir solution: 103.557
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0133735
  time (eval):    0.00511062
  gflops (eval):  520.058
  gflops (total): 143.789
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0133735,0.00511062,520.058,143.789

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0401006
  gflops (total): 66.2789
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.2789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00215422
  gflops (eval):  1233.77
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00215422,1233.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.3591
  maximum absolute entry in einsum_ir solution: 99.3591
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0129502
  time (eval):    0.00514381
  gflops (eval):  516.702
  gflops (total): 146.89
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0129502,0.00514381,516.702,146.89

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0406981
  gflops (total): 65.3057
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.3057

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00215635
  gflops (eval):  1232.55
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00215635,1232.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.802
  maximum absolute entry in einsum_ir solution: 100.802
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130004
  time (eval):    0.00514975
  gflops (eval):  516.107
  gflops (total): 146.435
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130004,0.00514975,516.107,146.435

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0401396
  gflops (total): 66.2144
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.2144

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00199901
  gflops (eval):  1329.57
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00199901,1329.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.7674
  maximum absolute entry in einsum_ir solution: 96.7674
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130793
  time (eval):    0.00501303
  gflops (eval):  530.182
  gflops (total): 146.903
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130793,0.00501303,530.182,146.903

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393613
  gflops (total): 67.5238
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.5238

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00212818
  gflops (eval):  1248.87
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00212818,1248.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.743
  maximum absolute entry in einsum_ir solution: 115.743
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131234
  time (eval):    0.00500048
  gflops (eval):  531.513
  gflops (total): 146.648
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131234,0.00500048,531.513,146.648

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0398622
  gflops (total): 66.6752
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.6752

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00215378
  gflops (eval):  1234.03
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00215378,1234.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      93.7152
  maximum absolute entry in einsum_ir solution: 93.7152
  maximum element-wise difference:              9.53674e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131056
  time (eval):    0.0048493
  gflops (eval):  548.083
  gflops (total): 148.027
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131056,0.0048493,548.083,148.027

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0403861
  gflops (total): 65.8102
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,65.8102

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00270255
  gflops (eval):  983.451
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00270255,983.451,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.618
  maximum absolute entry in einsum_ir solution: 102.618
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0133365
  time (eval):    0.00507278
  gflops (eval):  523.938
  gflops (total): 144.374
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0133365,0.00507278,523.938,144.374

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.039544
  gflops (total): 67.2117
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.2117

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00195994
  gflops (eval):  1356.07
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00195994,1356.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.206
  maximum absolute entry in einsum_ir solution: 109.206
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131119
  time (eval):    0.00506762
  gflops (eval):  524.471
  gflops (total): 146.199
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131119,0.00506762,524.471,146.199

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0393507
  gflops (total): 67.542
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.542

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00194067
  gflops (eval):  1369.54
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00194067,1369.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.32
  maximum absolute entry in einsum_ir solution: 105.32
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130358
  time (eval):    0.00509179
  gflops (eval):  521.982
  gflops (total): 146.618
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130358,0.00509179,521.982,146.618

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0398343
  gflops (total): 66.7219
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,66.7219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00204202
  gflops (eval):  1301.57
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00204202,1301.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.4762
  maximum absolute entry in einsum_ir solution: 99.4762
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131877
  time (eval):    0.00482269
  gflops (eval):  551.107
  gflops (total): 147.571
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131877,0.00482269,551.107,147.571

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.03908
  gflops (total): 68.0097
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.0097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00204283
  gflops (eval):  1301.05
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00204283,1301.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.101
  maximum absolute entry in einsum_ir solution: 113.101
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.013033
  time (eval):    0.00513485
  gflops (eval):  517.604
  gflops (total): 146.293
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.013033,0.00513485,517.604,146.293

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.03909
  gflops (total): 67.9923
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.9923

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00230316
  gflops (eval):  1153.99
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00230316,1153.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.709
  maximum absolute entry in einsum_ir solution: 108.709
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0131568
  time (eval):    0.00511365
  gflops (eval):  519.75
  gflops (total): 145.471
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0131568,0.00511365,519.75,145.471

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0390155
  gflops (total): 68.1221
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,68.1221

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00202724
  gflops (eval):  1311.06
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00202724,1311.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.321
  maximum absolute entry in einsum_ir solution: 111.321
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0130347
  time (eval):    0.00482867
  gflops (eval):  550.425
  gflops (total): 148.786
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0130347,0.00482867,550.425,148.786

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.0394937
  gflops (total): 67.2973
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,67.2973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.00225254
  gflops (eval):  1179.92
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.00225254,1179.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.4876
  maximum absolute entry in einsum_ir solution: 99.4876
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015192
  time (eval):    0.0076047
  gflops (eval):  1429.09
  gflops (total): 476.727
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015192,0.0076047,1429.09,476.727

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0243608
  gflops (total): 446.12
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,446.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017472
  gflops (eval):  622.012
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017472,622.012,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.8028
  maximum absolute entry in einsum_ir solution: 61.8028
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151585
  time (eval):    0.00758093
  gflops (eval):  1433.57
  gflops (total): 477.928
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151585,0.00758093,1433.57,477.928

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0247578
  gflops (total): 438.966
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,438.966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173141
  gflops (eval):  627.687
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173141,627.687,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.959
  maximum absolute entry in einsum_ir solution: 59.959
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152542
  time (eval):    0.00760196
  gflops (eval):  1429.61
  gflops (total): 475.487
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152542,0.00760196,1429.61,475.487

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0238083
  gflops (total): 456.472
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,456.472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0172237
  gflops (eval):  630.982
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0172237,630.982,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.9692
  maximum absolute entry in einsum_ir solution: 62.9692
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157564
  time (eval):    0.00765
  gflops (eval):  1420.63
  gflops (total): 464.311
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157564,0.00765,1420.63,464.311

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0232264
  gflops (total): 467.908
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,467.908

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173433
  gflops (eval):  626.629
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173433,626.629,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.7447
  maximum absolute entry in einsum_ir solution: 61.7447
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152269
  time (eval):    0.00761887
  gflops (eval):  1426.43
  gflops (total): 475.704
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152269,0.00761887,1426.43,475.704

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0244144
  gflops (total): 445.139
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,445.139

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0165577
  gflops (eval):  656.359
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0165577,656.359,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.584
  maximum absolute entry in einsum_ir solution: 59.584
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152009
  time (eval):    0.00760438
  gflops (eval):  1429.15
  gflops (total): 476.549
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152009,0.00760438,1429.15,476.549

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0238942
  gflops (total): 454.832
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,454.832

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0179258
  gflops (eval):  606.267
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0179258,606.267,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0289
  maximum absolute entry in einsum_ir solution: 58.0289
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149767
  time (eval):    0.0077625
  gflops (eval):  1400.04
  gflops (total): 477.934
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149767,0.0077625,1400.04,477.934

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0247765
  gflops (total): 438.634
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,438.634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174643
  gflops (eval):  622.289
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174643,622.289,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3942
  maximum absolute entry in einsum_ir solution: 60.3942
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154505
  time (eval):    0.00757631
  gflops (eval):  1434.45
  gflops (total): 471.964
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154505,0.00757631,1434.45,471.964

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0232403
  gflops (total): 467.629
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,467.629

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.016642
  gflops (eval):  653.037
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.016642,653.037,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6535
  maximum absolute entry in einsum_ir solution: 59.6535
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0147622
  time (eval):    0.00762351
  gflops (eval):  1425.57
  gflops (total): 485.48
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0147622,0.00762351,1425.57,485.48

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0250865
  gflops (total): 433.214
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,433.214

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0180108
  gflops (eval):  603.405
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0180108,603.405,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9254
  maximum absolute entry in einsum_ir solution: 57.9254
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152714
  time (eval):    0.00764327
  gflops (eval):  1421.88
  gflops (total): 474.273
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152714,0.00764327,1421.88,474.273

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0237708
  gflops (total): 457.192
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,457.192

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.01757
  gflops (eval):  618.544
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.01757,618.544,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3674
  maximum absolute entry in einsum_ir solution: 59.3674
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015087
  time (eval):    0.00818297
  gflops (eval):  1328.1
  gflops (total): 467.031
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015087,0.00818297,1328.1,467.031

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0240455
  gflops (total): 451.969
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,451.969

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0178687
  gflops (eval):  608.204
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0178687,608.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2552
  maximum absolute entry in einsum_ir solution: 59.2552
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151878
  time (eval):    0.00760962
  gflops (eval):  1428.17
  gflops (total): 476.712
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151878,0.00760962,1428.17,476.712

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0243485
  gflops (total): 446.344
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,446.344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177565
  gflops (eval):  612.047
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177565,612.047,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3359
  maximum absolute entry in einsum_ir solution: 60.3359
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152618
  time (eval):    0.00758076
  gflops (eval):  1433.61
  gflops (total): 475.77
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152618,0.00758076,1433.61,475.77

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0239857
  gflops (total): 453.096
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,453.096

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017901
  gflops (eval):  607.107
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017901,607.107,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9651
  maximum absolute entry in einsum_ir solution: 56.9651
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015122
  time (eval):    0.00755953
  gflops (eval):  1437.63
  gflops (total): 479.148
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015122,0.00755953,1437.63,479.148

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0239762
  gflops (total): 453.276
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,453.276

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0165276
  gflops (eval):  657.555
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0165276,657.555,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0177
  maximum absolute entry in einsum_ir solution: 59.0177
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153434
  time (eval):    0.00756203
  gflops (eval):  1437.16
  gflops (total): 474.464
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153434,0.00756203,1437.16,474.464

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0237359
  gflops (total): 457.863
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,457.863

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0168265
  gflops (eval):  645.874
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0168265,645.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.3939
  maximum absolute entry in einsum_ir solution: 63.3939
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152179
  time (eval):    0.00762685
  gflops (eval):  1424.94
  gflops (total): 475.725
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152179,0.00762685,1424.94,475.725

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0240977
  gflops (total): 450.99
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,450.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177146
  gflops (eval):  613.495
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177146,613.495,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3911
  maximum absolute entry in einsum_ir solution: 59.3911
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150624
  time (eval):    0.00761113
  gflops (eval):  1427.89
  gflops (total): 479.317
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150624,0.00761113,1427.89,479.317

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0238502
  gflops (total): 455.67
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,455.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174683
  gflops (eval):  622.146
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174683,622.146,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2903
  maximum absolute entry in einsum_ir solution: 60.2903
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154162
  time (eval):    0.00764136
  gflops (eval):  1422.24
  gflops (total): 471.335
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154162,0.00764136,1422.24,471.335

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0240063
  gflops (total): 452.707
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,452.707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0180855
  gflops (eval):  600.914
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0180855,600.914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.859
  maximum absolute entry in einsum_ir solution: 60.859
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152822
  time (eval):    0.00757811
  gflops (eval):  1434.11
  gflops (total): 475.401
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152822,0.00757811,1434.11,475.401

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0246527
  gflops (total): 440.838
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,440.838

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.018049
  gflops (eval):  602.128
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.018049,602.128,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2007
  maximum absolute entry in einsum_ir solution: 60.2007
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151999
  time (eval):    0.00753886
  gflops (eval):  1441.57
  gflops (total): 477.944
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151999,0.00753886,1441.57,477.944

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0243933
  gflops (total): 445.525
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,445.525

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0185321
  gflops (eval):  586.431
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0185321,586.431,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3045
  maximum absolute entry in einsum_ir solution: 61.3045
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151554
  time (eval):    0.00759448
  gflops (eval):  1431.02
  gflops (total): 477.709
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151554,0.00759448,1431.02,477.709

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0236072
  gflops (total): 460.361
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,460.361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177061
  gflops (eval):  613.788
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177061,613.788,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.8545
  maximum absolute entry in einsum_ir solution: 60.8545
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015172
  time (eval):    0.00757746
  gflops (eval):  1434.23
  gflops (total): 477.718
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015172,0.00757746,1434.23,477.718

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0237664
  gflops (total): 457.277
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,457.277

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0178738
  gflops (eval):  608.03
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0178738,608.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8906
  maximum absolute entry in einsum_ir solution: 56.8906
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154449
  time (eval):    0.00776079
  gflops (eval):  1400.35
  gflops (total): 468.326
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154449,0.00776079,1400.35,468.326

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0234206
  gflops (total): 464.028
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,464.028

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175958
  gflops (eval):  617.636
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175958,617.636,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5617
  maximum absolute entry in einsum_ir solution: 56.5617
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151088
  time (eval):    0.00765468
  gflops (eval):  1419.76
  gflops (total): 477.423
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151088,0.00765468,1419.76,477.423

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0249968
  gflops (total): 434.769
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,434.769

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0167421
  gflops (eval):  649.13
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0167421,649.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0305
  maximum absolute entry in einsum_ir solution: 60.0305
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153632
  time (eval):    0.00760526
  gflops (eval):  1428.99
  gflops (total): 473.162
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153632,0.00760526,1428.99,473.162

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0240187
  gflops (total): 452.474
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,452.474

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0178042
  gflops (eval):  610.409
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0178042,610.409,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3529
  maximum absolute entry in einsum_ir solution: 59.3529
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153219
  time (eval):    0.00764451
  gflops (eval):  1421.65
  gflops (total): 473.205
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153219,0.00764451,1421.65,473.205

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0239343
  gflops (total): 454.068
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,454.068

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0167934
  gflops (eval):  647.15
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0167934,647.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5132
  maximum absolute entry in einsum_ir solution: 59.5132
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152705
  time (eval):    0.00779027
  gflops (eval):  1395.05
  gflops (total): 471.268
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152705,0.00779027,1395.05,471.268

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0239084
  gflops (total): 454.56
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,454.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.018019
  gflops (eval):  603.133
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.018019,603.133,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6558
  maximum absolute entry in einsum_ir solution: 56.6558
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152115
  time (eval):    0.0076241
  gflops (eval):  1425.46
  gflops (total): 475.916
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152115,0.0076241,1425.46,475.916

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0240572
  gflops (total): 451.75
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,451.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174786
  gflops (eval):  621.779
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174786,621.779,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1425
  maximum absolute entry in einsum_ir solution: 58.1425
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151057
  time (eval):    0.00763944
  gflops (eval):  1422.59
  gflops (total): 477.807
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151057,0.00763944,1422.59,477.807

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0241646
  gflops (total): 449.742
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,449.742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0170633
  gflops (eval):  636.912
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0170633,636.912,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0018
  maximum absolute entry in einsum_ir solution: 59.0018
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151407
  time (eval):    0.00762756
  gflops (eval):  1424.81
  gflops (total): 477.323
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151407,0.00762756,1424.81,477.323

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0235716
  gflops (total): 461.057
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,461.057

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0169734
  gflops (eval):  640.285
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0169734,640.285,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7432
  maximum absolute entry in einsum_ir solution: 57.7432
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015009
  time (eval):    0.00763825
  gflops (eval):  1422.82
  gflops (total): 479.874
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015009,0.00763825,1422.82,479.874

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0248117
  gflops (total): 438.012
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,438.012

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.018298
  gflops (eval):  593.934
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.018298,593.934,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2278
  maximum absolute entry in einsum_ir solution: 60.2278
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157368
  time (eval):    0.00760556
  gflops (eval):  1428.93
  gflops (total): 465.583
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157368,0.00760556,1428.93,465.583

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0233998
  gflops (total): 464.441
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,464.441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017792
  gflops (eval):  610.828
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017792,610.828,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1016
  maximum absolute entry in einsum_ir solution: 59.1016
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153242
  time (eval):    0.0076087
  gflops (eval):  1428.34
  gflops (total): 473.897
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153242,0.0076087,1428.34,473.897

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0235493
  gflops (total): 461.492
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,461.492

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017717
  gflops (eval):  613.411
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017717,613.411,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9523
  maximum absolute entry in einsum_ir solution: 60.9523
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015521
  time (eval):    0.00760876
  gflops (eval):  1428.33
  gflops (total): 469.863
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015521,0.00760876,1428.33,469.863

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0237884
  gflops (total): 456.854
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,456.854

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0162466
  gflops (eval):  668.929
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0162466,668.929,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.708
  maximum absolute entry in einsum_ir solution: 56.708
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156209
  time (eval):    0.0076373
  gflops (eval):  1422.99
  gflops (total): 467.268
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156209,0.0076373,1422.99,467.268

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0236709
  gflops (total): 459.122
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,459.122

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177423
  gflops (eval):  612.537
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177423,612.537,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9931
  maximum absolute entry in einsum_ir solution: 61.9931
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0147197
  time (eval):    0.00759307
  gflops (eval):  1431.28
  gflops (total): 487.067
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0147197,0.00759307,1431.28,487.067

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0231406
  gflops (total): 469.642
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,469.642

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0179683
  gflops (eval):  604.832
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0179683,604.832,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5737
  maximum absolute entry in einsum_ir solution: 59.5737
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0147878
  time (eval):    0.0076519
  gflops (eval):  1420.28
  gflops (total): 484.312
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0147878,0.0076519,1420.28,484.312

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0242177
  gflops (total): 448.755
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,448.755

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0176202
  gflops (eval):  616.783
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0176202,616.783,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7042
  maximum absolute entry in einsum_ir solution: 57.7042
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0147832
  time (eval):    0.00756011
  gflops (eval):  1437.52
  gflops (total): 486.402
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0147832,0.00756011,1437.52,486.402

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0250623
  gflops (total): 433.633
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,433.633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0170032
  gflops (eval):  639.164
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0170032,639.164,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.241
  maximum absolute entry in einsum_ir solution: 61.241
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015131
  time (eval):    0.00763299
  gflops (eval):  1423.8
  gflops (total): 477.412
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015131,0.00763299,1423.8,477.412

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0228769
  gflops (total): 475.056
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,475.056

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177656
  gflops (eval):  611.734
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177656,611.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9804
  maximum absolute entry in einsum_ir solution: 56.9804
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152824
  time (eval):    0.00760308
  gflops (eval):  1429.4
  gflops (total): 474.879
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152824,0.00760308,1429.4,474.879

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0246231
  gflops (total): 441.367
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,441.367

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0176228
  gflops (eval):  616.692
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0176228,616.692,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8937
  maximum absolute entry in einsum_ir solution: 59.8937
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153274
  time (eval):    0.00779597
  gflops (eval):  1394.03
  gflops (total): 469.993
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153274,0.00779597,1394.03,469.993

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0238544
  gflops (total): 455.591
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,455.591

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174833
  gflops (eval):  621.612
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174833,621.612,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2114
  maximum absolute entry in einsum_ir solution: 59.2114
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152213
  time (eval):    0.00758505
  gflops (eval):  1432.79
  gflops (total): 476.525
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152213,0.00758505,1432.79,476.525

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0239219
  gflops (total): 454.305
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,454.305

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0183289
  gflops (eval):  592.933
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0183289,592.933,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.8123
  maximum absolute entry in einsum_ir solution: 65.8123
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152682
  time (eval):    0.00760968
  gflops (eval):  1428.16
  gflops (total): 475.037
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152682,0.00760968,1428.16,475.037

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0241299
  gflops (total): 450.389
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,450.389

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177726
  gflops (eval):  611.493
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177726,611.493,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6517
  maximum absolute entry in einsum_ir solution: 61.6517
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148678
  time (eval):    0.00758253
  gflops (eval):  1433.27
  gflops (total): 484.083
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148678,0.00758253,1433.27,484.083

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0231199
  gflops (total): 470.064
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,470.064

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177627
  gflops (eval):  611.832
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177627,611.832,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0901
  maximum absolute entry in einsum_ir solution: 60.0901
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156908
  time (eval):    0.00761171
  gflops (eval):  1427.78
  gflops (total): 466.38
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156908,0.00761171,1427.78,466.38

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0240845
  gflops (total): 451.238
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,451.238

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173211
  gflops (eval):  627.432
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173211,627.432,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.4865
  maximum absolute entry in einsum_ir solution: 62.4865
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152232
  time (eval):    0.00763754
  gflops (eval):  1422.95
  gflops (total): 475.393
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152232,0.00763754,1422.95,475.393

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0242172
  gflops (total): 448.765
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,448.765

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175451
  gflops (eval):  619.422
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175451,619.422,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.2107
  maximum absolute entry in einsum_ir solution: 62.2107
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0125838
  time (eval):    0.00764229
  gflops (eval):  1422.06
  gflops (total): 537.317
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0125838,0.00764229,1422.06,537.317

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0247468
  gflops (total): 439.161
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,439.161

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177548
  gflops (eval):  612.105
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177548,612.105,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4874
  maximum absolute entry in einsum_ir solution: 59.4874
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149359
  time (eval):    0.00759756
  gflops (eval):  1430.44
  gflops (total): 482.298
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149359,0.00759756,1430.44,482.298

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0241621
  gflops (total): 449.789
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,449.789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0167407
  gflops (eval):  649.184
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0167407,649.184,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.1213
  maximum absolute entry in einsum_ir solution: 62.1213
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148551
  time (eval):    0.0075962
  gflops (eval):  1430.69
  gflops (total): 484.061
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148551,0.0075962,1430.69,484.061

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0243119
  gflops (total): 447.017
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,447.017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.016946
  gflops (eval):  641.321
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.016946,641.321,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.908
  maximum absolute entry in einsum_ir solution: 58.908
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.014961
  time (eval):    0.00762347
  gflops (eval):  1425.57
  gflops (total): 481.209
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.014961,0.00762347,1425.57,481.209

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0239203
  gflops (total): 454.334
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,454.334

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175865
  gflops (eval):  617.965
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175865,617.965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.7844
  maximum absolute entry in einsum_ir solution: 62.7844
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157734
  time (eval):    0.007572
  gflops (eval):  1435.26
  gflops (total): 465.523
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157734,0.007572,1435.26,465.523

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0242684
  gflops (total): 447.819
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,447.819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175927
  gflops (eval):  617.748
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175927,617.748,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6182
  maximum absolute entry in einsum_ir solution: 58.6182
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155117
  time (eval):    0.0076375
  gflops (eval):  1422.95
  gflops (total): 469.468
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155117,0.0076375,1422.95,469.468

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.023373
  gflops (total): 464.973
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,464.973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0180445
  gflops (eval):  602.28
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0180445,602.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2093
  maximum absolute entry in einsum_ir solution: 61.2093
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151289
  time (eval):    0.00763255
  gflops (eval):  1423.88
  gflops (total): 477.467
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151289,0.00763255,1423.88,477.467

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0246498
  gflops (total): 440.888
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,440.888

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0186682
  gflops (eval):  582.158
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0186682,582.158,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1031
  maximum absolute entry in einsum_ir solution: 59.1031
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152465
  time (eval):    0.00762109
  gflops (eval):  1426.02
  gflops (total): 475.251
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152465,0.00762109,1426.02,475.251

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0231448
  gflops (total): 469.558
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,469.558

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177243
  gflops (eval):  613.159
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177243,613.159,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9445
  maximum absolute entry in einsum_ir solution: 61.9445
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149555
  time (eval):    0.00766372
  gflops (eval):  1418.09
  gflops (total): 480.468
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149555,0.00766372,1418.09,480.468

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0241086
  gflops (total): 450.787
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,450.787

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0169597
  gflops (eval):  640.802
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0169597,640.802,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7896
  maximum absolute entry in einsum_ir solution: 60.7896
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154025
  time (eval):    0.00764473
  gflops (eval):  1421.61
  gflops (total): 471.545
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154025,0.00764473,1421.61,471.545

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0231867
  gflops (total): 468.708
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,468.708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174212
  gflops (eval):  623.826
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174212,623.826,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7034
  maximum absolute entry in einsum_ir solution: 57.7034
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152589
  time (eval):    0.0076184
  gflops (eval):  1426.52
  gflops (total): 475.048
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152589,0.0076184,1426.52,475.048

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0243307
  gflops (total): 446.671
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,446.671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0169735
  gflops (eval):  640.282
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0169735,640.282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2247
  maximum absolute entry in einsum_ir solution: 61.2247
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150166
  time (eval):    0.00760133
  gflops (eval):  1429.73
  gflops (total): 480.496
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150166,0.00760133,1429.73,480.496

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0229543
  gflops (total): 473.454
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,473.454

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173672
  gflops (eval):  625.767
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173672,625.767,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2151
  maximum absolute entry in einsum_ir solution: 58.2151
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152656
  time (eval):    0.00761503
  gflops (eval):  1427.15
  gflops (total): 474.98
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152656,0.00761503,1427.15,474.98

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0240558
  gflops (total): 451.775
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,451.775

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017967
  gflops (eval):  604.875
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017967,604.875,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9416
  maximum absolute entry in einsum_ir solution: 60.9416
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152716
  time (eval):    0.00763029
  gflops (eval):  1424.3
  gflops (total): 474.538
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152716,0.00763029,1424.3,474.538

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0243257
  gflops (total): 446.763
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,446.763

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0183966
  gflops (eval):  590.751
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0183966,590.751,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4599
  maximum absolute entry in einsum_ir solution: 61.4599
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0146674
  time (eval):    0.00765522
  gflops (eval):  1419.66
  gflops (total): 486.853
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0146674,0.00765522,1419.66,486.853

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0241228
  gflops (total): 450.521
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,450.521

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173098
  gflops (eval):  627.844
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173098,627.844,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8904
  maximum absolute entry in einsum_ir solution: 57.8904
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152416
  time (eval):    0.00760945
  gflops (eval):  1428.2
  gflops (total): 475.593
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152416,0.00760945,1428.2,475.593

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0230948
  gflops (total): 470.574
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,470.574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0179926
  gflops (eval):  604.015
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0179926,604.015,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1989
  maximum absolute entry in einsum_ir solution: 56.1989
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152968
  time (eval):    0.00756358
  gflops (eval):  1436.86
  gflops (total): 475.4
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152968,0.00756358,1436.86,475.4

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.02397
  gflops (total): 453.393
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,453.393

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0179753
  gflops (eval):  604.598
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0179753,604.598,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.5091
  maximum absolute entry in einsum_ir solution: 61.5091
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154004
  time (eval):    0.00762874
  gflops (eval):  1424.59
  gflops (total): 471.917
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154004,0.00762874,1424.59,471.917

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0240857
  gflops (total): 451.214
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,451.214

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0178057
  gflops (eval):  610.357
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0178057,610.357,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4152
  maximum absolute entry in einsum_ir solution: 60.4152
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0147707
  time (eval):    0.00755929
  gflops (eval):  1437.68
  gflops (total): 486.691
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0147707,0.00755929,1437.68,486.691

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0237622
  gflops (total): 457.357
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,457.357

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177904
  gflops (eval):  610.882
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177904,610.882,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.3361
  maximum absolute entry in einsum_ir solution: 63.3361
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155272
  time (eval):    0.00751703
  gflops (eval):  1445.76
  gflops (total): 471.607
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155272,0.00751703,1445.76,471.607

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.024918
  gflops (total): 436.143
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,436.143

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177311
  gflops (eval):  612.924
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177311,612.924,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3885
  maximum absolute entry in einsum_ir solution: 60.3885
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153423
  time (eval):    0.0076336
  gflops (eval):  1423.68
  gflops (total): 473.009
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153423,0.0076336,1423.68,473.009

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0237853
  gflops (total): 456.914
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,456.914

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177282
  gflops (eval):  613.026
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177282,613.026,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.5102
  maximum absolute entry in einsum_ir solution: 55.5102
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151729
  time (eval):    0.00766174
  gflops (eval):  1418.45
  gflops (total): 475.936
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151729,0.00766174,1418.45,475.936

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0243398
  gflops (total): 446.504
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,446.504

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175663
  gflops (eval):  618.674
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175663,618.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1672
  maximum absolute entry in einsum_ir solution: 58.1672
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154143
  time (eval):    0.00761229
  gflops (eval):  1427.67
  gflops (total): 471.969
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154143,0.00761229,1427.67,471.969

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0228834
  gflops (total): 474.921
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,474.921

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0179243
  gflops (eval):  606.317
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0179243,606.317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3341
  maximum absolute entry in einsum_ir solution: 59.3341
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152702
  time (eval):    0.007614
  gflops (eval):  1427.35
  gflops (total): 474.905
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152702,0.007614,1427.35,474.905

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.023918
  gflops (total): 454.379
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,454.379

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0181035
  gflops (eval):  600.316
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0181035,600.316,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4214
  maximum absolute entry in einsum_ir solution: 61.4214
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152843
  time (eval):    0.00758733
  gflops (eval):  1432.37
  gflops (total): 475.165
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152843,0.00758733,1432.37,475.165

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0233217
  gflops (total): 465.996
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,465.996

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0179774
  gflops (eval):  604.528
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0179774,604.528,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.5702
  maximum absolute entry in einsum_ir solution: 55.5702
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151954
  time (eval):    0.00765247
  gflops (eval):  1420.17
  gflops (total): 475.661
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151954,0.00765247,1420.17,475.661

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0239826
  gflops (total): 453.154
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,453.154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0178823
  gflops (eval):  607.743
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0178823,607.743,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.7494
  maximum absolute entry in einsum_ir solution: 62.7494
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154295
  time (eval):    0.00778309
  gflops (eval):  1396.34
  gflops (total): 468.186
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154295,0.00778309,1396.34,468.186

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0232836
  gflops (total): 466.759
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,466.759

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175414
  gflops (eval):  619.552
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175414,619.552,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      68.4112
  maximum absolute entry in einsum_ir solution: 68.4112
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152761
  time (eval):    0.00763457
  gflops (eval):  1423.5
  gflops (total): 474.356
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152761,0.00763457,1423.5,474.356

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.025166
  gflops (total): 431.845
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,431.845

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.018504
  gflops (eval):  587.324
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.018504,587.324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3675
  maximum absolute entry in einsum_ir solution: 56.3675
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152512
  time (eval):    0.00761109
  gflops (eval):  1427.89
  gflops (total): 475.36
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152512,0.00761109,1427.89,475.36

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0232583
  gflops (total): 467.266
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,467.266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0179702
  gflops (eval):  604.77
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0179702,604.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5418
  maximum absolute entry in einsum_ir solution: 57.5418
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150712
  time (eval):    0.00757005
  gflops (eval):  1435.63
  gflops (total): 480.001
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150712,0.00757005,1435.63,480.001

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0247246
  gflops (total): 439.554
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,439.554

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175059
  gflops (eval):  620.809
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175059,620.809,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3062
  maximum absolute entry in einsum_ir solution: 58.3062
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153078
  time (eval):    0.00764489
  gflops (eval):  1421.58
  gflops (total): 473.488
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153078,0.00764489,1421.58,473.488

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0236754
  gflops (total): 459.035
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,459.035

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.017316
  gflops (eval):  627.617
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.017316,627.617,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.5549
  maximum absolute entry in einsum_ir solution: 61.5549
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149503
  time (eval):    0.00766347
  gflops (eval):  1418.13
  gflops (total): 480.584
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149503,0.00766347,1418.13,480.584

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.024541
  gflops (total): 442.843
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,442.843

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0176729
  gflops (eval):  614.943
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0176729,614.943,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.225
  maximum absolute entry in einsum_ir solution: 61.225
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152124
  time (eval):    0.00762463
  gflops (eval):  1425.36
  gflops (total): 475.886
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152124,0.00762463,1425.36,475.886

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0236252
  gflops (total): 460.01
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,460.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0162639
  gflops (eval):  668.217
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0162639,668.217,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0585
  maximum absolute entry in einsum_ir solution: 57.0585
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150621
  time (eval):    0.00762563
  gflops (eval):  1425.17
  gflops (total): 479.018
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150621,0.00762563,1425.17,479.018

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0248488
  gflops (total): 437.358
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,437.358

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0180859
  gflops (eval):  600.9
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0180859,600.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6162
  maximum absolute entry in einsum_ir solution: 56.6162
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149384
  time (eval):    0.00764626
  gflops (eval):  1421.32
  gflops (total): 481.204
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149384,0.00764626,1421.32,481.204

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0241613
  gflops (total): 449.802
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,449.802

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0171097
  gflops (eval):  635.183
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0171097,635.183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0506
  maximum absolute entry in einsum_ir solution: 59.0506
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156482
  time (eval):    0.00764635
  gflops (eval):  1421.31
  gflops (total): 466.539
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156482,0.00764635,1421.31,466.539

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0241858
  gflops (total): 449.347
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,449.347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0182501
  gflops (eval):  595.494
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0182501,595.494,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6576
  maximum absolute entry in einsum_ir solution: 57.6576
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153012
  time (eval):    0.0076519
  gflops (eval):  1420.28
  gflops (total): 473.48
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153012,0.0076519,1420.28,473.48

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0246414
  gflops (total): 441.039
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,441.039

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0171594
  gflops (eval):  633.343
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0171594,633.343,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.5415
  maximum absolute entry in einsum_ir solution: 63.5415
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153762
  time (eval):    0.00763056
  gflops (eval):  1424.25
  gflops (total): 472.375
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153762,0.00763056,1424.25,472.375

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0238302
  gflops (total): 456.052
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,456.052

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0169391
  gflops (eval):  641.581
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0169391,641.581,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6083
  maximum absolute entry in einsum_ir solution: 61.6083
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153021
  time (eval):    0.00764207
  gflops (eval):  1422.1
  gflops (total): 473.664
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153021,0.00764207,1422.1,473.664

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0251311
  gflops (total): 432.445
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,432.445

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0181414
  gflops (eval):  599.063
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0181414,599.063,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1995
  maximum absolute entry in einsum_ir solution: 59.1995
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155135
  time (eval):    0.00765224
  gflops (eval):  1420.21
  gflops (total): 469.133
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155135,0.00765224,1420.21,469.133

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0232118
  gflops (total): 468.203
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,468.203

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0176763
  gflops (eval):  614.824
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0176763,614.824,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6845
  maximum absolute entry in einsum_ir solution: 59.6845
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152869
  time (eval):    0.00758466
  gflops (eval):  1432.87
  gflops (total): 475.167
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152869,0.00758466,1432.87,475.167

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0228437
  gflops (total): 475.747
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,475.747

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0176336
  gflops (eval):  616.313
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0176336,616.313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.1562
  maximum absolute entry in einsum_ir solution: 62.1562
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152524
  time (eval):    0.00764549
  gflops (eval):  1421.47
  gflops (total): 474.621
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152524,0.00764549,1421.47,474.621

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0238437
  gflops (total): 455.795
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,455.795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0178193
  gflops (eval):  609.89
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0178193,609.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2295
  maximum absolute entry in einsum_ir solution: 61.2295
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151659
  time (eval):    0.00783128
  gflops (eval):  1387.75
  gflops (total): 472.571
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151659,0.00783128,1387.75,472.571

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0248538
  gflops (total): 437.27
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,437.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0174405
  gflops (eval):  623.137
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0174405,623.137,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6899
  maximum absolute entry in einsum_ir solution: 55.6899
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149413
  time (eval):    0.00761205
  gflops (eval):  1427.71
  gflops (total): 481.872
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149413,0.00761205,1427.71,481.872

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0232247
  gflops (total): 467.943
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,467.943

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0173947
  gflops (eval):  624.779
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0173947,624.779,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.4189
  maximum absolute entry in einsum_ir solution: 65.4189
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150736
  time (eval):    0.0075959
  gflops (eval):  1430.75
  gflops (total): 479.403
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150736,0.0075959,1430.75,479.403

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0244962
  gflops (total): 443.652
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,443.652

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0181408
  gflops (eval):  599.083
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0181408,599.083,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2583
  maximum absolute entry in einsum_ir solution: 57.2583
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152767
  time (eval):    0.00755113
  gflops (eval):  1439.23
  gflops (total): 476.077
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152767,0.00755113,1439.23,476.077

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.02361
  gflops (total): 460.305
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,460.305

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0175065
  gflops (eval):  620.786
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0175065,620.786,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7225
  maximum absolute entry in einsum_ir solution: 57.7225
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151556
  time (eval):    0.00761575
  gflops (eval):  1427.02
  gflops (total): 477.258
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151556,0.00761575,1427.02,477.258

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0230098
  gflops (total): 472.314
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,472.314

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0176697
  gflops (eval):  615.056
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0176697,615.056,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5327
  maximum absolute entry in einsum_ir solution: 60.5327
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155808
  time (eval):    0.00772128
  gflops (eval):  1407.52
  gflops (total): 466.389
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155808,0.00772128,1407.52,466.389

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0231629
  gflops (total): 469.191
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,469.191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0178333
  gflops (eval):  609.411
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0178333,609.411,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2003
  maximum absolute entry in einsum_ir solution: 60.2003
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153444
  time (eval):    0.00762775
  gflops (eval):  1424.77
  gflops (total): 473.087
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153444,0.00762775,1424.77,473.087

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0243762
  gflops (total): 445.837
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,445.837

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0171598
  gflops (eval):  633.331
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0171598,633.331,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3955
  maximum absolute entry in einsum_ir solution: 55.3955
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150849
  time (eval):    0.00760536
  gflops (eval):  1428.97
  gflops (total): 478.964
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150849,0.00760536,1428.97,478.964

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.023371
  gflops (total): 465.013
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,465.013

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0172552
  gflops (eval):  629.83
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0172552,629.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.719
  maximum absolute entry in einsum_ir solution: 59.719
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151109
  time (eval):    0.00759918
  gflops (eval):  1430.13
  gflops (total): 478.546
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151109,0.00759918,1430.13,478.546

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0238974
  gflops (total): 454.771
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,454.771

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0165105
  gflops (eval):  658.236
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0165105,658.236,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.1837
  maximum absolute entry in einsum_ir solution: 64.1837
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015266
  time (eval):    0.00763017
  gflops (eval):  1424.32
  gflops (total): 474.656
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015266,0.00763017,1424.32,474.656

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0230963
  gflops (total): 470.544
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,470.544

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0171558
  gflops (eval):  633.48
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0171558,633.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6001
  maximum absolute entry in einsum_ir solution: 56.6001
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155051
  time (eval):    0.0076213
  gflops (eval):  1425.98
  gflops (total): 469.932
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155051,0.0076213,1425.98,469.932

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0229555
  gflops (total): 473.43
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,473.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0177865
  gflops (eval):  611.014
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0177865,611.014,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.541
  maximum absolute entry in einsum_ir solution: 61.541
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151349
  time (eval):    0.00760655
  gflops (eval):  1428.75
  gflops (total): 477.887
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151349,0.00760655,1428.75,477.887

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0244948
  gflops (total): 443.679
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,443.679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0178304
  gflops (eval):  609.51
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0178304,609.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5126
  maximum absolute entry in einsum_ir solution: 58.5126
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153068
  time (eval):    0.00776713
  gflops (eval):  1399.21
  gflops (total): 470.999
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153068,0.00776713,1399.21,470.999

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531654
  gflops (total): 204.415
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.415

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0227327
  gflops (eval):  478.069
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0227327,478.069,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4502
  maximum absolute entry in einsum_ir solution: 61.4502
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154966
  time (eval):    0.00778945
  gflops (eval):  1395.2
  gflops (total): 466.71
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154966,0.00778945,1395.2,466.71

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540458
  gflops (total): 201.085
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.085

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232084
  gflops (eval):  468.272
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232084,468.272,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.6361
  maximum absolute entry in einsum_ir solution: 62.6361
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157097
  time (eval):    0.00786713
  gflops (eval):  1381.42
  gflops (total): 460.954
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157097,0.00786713,1381.42,460.954

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0537396
  gflops (total): 202.231
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.231

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231691
  gflops (eval):  469.065
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231691,469.065,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7479
  maximum absolute entry in einsum_ir solution: 58.7479
  maximum element-wise difference:              3.24249e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155434
  time (eval):    0.00779382
  gflops (eval):  1394.41
  gflops (total): 465.686
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155434,0.00779382,1394.41,465.686

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529521
  gflops (total): 205.239
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.239

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231855
  gflops (eval):  468.734
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231855,468.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0563
  maximum absolute entry in einsum_ir solution: 60.0563
  maximum element-wise difference:              2.86102e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156966
  time (eval):    0.00779586
  gflops (eval):  1394.05
  gflops (total): 462.609
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156966,0.00779586,1394.05,462.609

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535106
  gflops (total): 203.097
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232382
  gflops (eval):  467.67
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232382,467.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8727
  maximum absolute entry in einsum_ir solution: 56.8727
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153209
  time (eval):    0.00791717
  gflops (eval):  1372.69
  gflops (total): 467.672
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153209,0.00791717,1372.69,467.672

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0536088
  gflops (total): 202.725
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.725

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229536
  gflops (eval):  473.468
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229536,473.468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.8304
  maximum absolute entry in einsum_ir solution: 61.8304
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157115
  time (eval):    0.0077554
  gflops (eval):  1401.32
  gflops (total): 463.113
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157115,0.0077554,1401.32,463.113

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529835
  gflops (total): 205.117
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.117

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230753
  gflops (eval):  470.972
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230753,470.972,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5567
  maximum absolute entry in einsum_ir solution: 57.5567
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150054
  time (eval):    0.00783542
  gflops (eval):  1387.01
  gflops (total): 475.807
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150054,0.00783542,1387.01,475.807

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529701
  gflops (total): 205.169
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.169

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229947
  gflops (eval):  472.624
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229947,472.624,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.7294
  maximum absolute entry in einsum_ir solution: 61.7294
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150663
  time (eval):    0.00783219
  gflops (eval):  1387.58
  gflops (total): 474.61
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150663,0.00783219,1387.58,474.61

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534836
  gflops (total): 203.199
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.199

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0226772
  gflops (eval):  479.239
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0226772,479.239,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9721
  maximum absolute entry in einsum_ir solution: 59.9721
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156275
  time (eval):    0.0077976
  gflops (eval):  1393.74
  gflops (total): 463.939
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156275,0.0077976,1393.74,463.939

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533992
  gflops (total): 203.52
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.022961
  gflops (eval):  473.317
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.022961,473.317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7827
  maximum absolute entry in einsum_ir solution: 56.7827
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0158703
  time (eval):    0.00787545
  gflops (eval):  1379.96
  gflops (total): 457.674
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0158703,0.00787545,1379.96,457.674

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053149
  gflops (total): 204.478
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0227329
  gflops (eval):  478.066
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0227329,478.066,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.5256
  maximum absolute entry in einsum_ir solution: 61.5256
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152915
  time (eval):    0.00780978
  gflops (eval):  1391.56
  gflops (total): 470.442
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152915,0.00780978,1391.56,470.442

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538334
  gflops (total): 201.879
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230863
  gflops (eval):  470.748
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230863,470.748,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0279
  maximum absolute entry in einsum_ir solution: 59.0279
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153021
  time (eval):    0.00782967
  gflops (eval):  1388.03
  gflops (total): 469.822
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153021,0.00782967,1388.03,469.822

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540612
  gflops (total): 201.028
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.028

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230698
  gflops (eval):  471.084
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230698,471.084,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.5738
  maximum absolute entry in einsum_ir solution: 55.5738
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155897
  time (eval):    0.0077996
  gflops (eval):  1393.38
  gflops (total): 464.65
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155897,0.0077996,1393.38,464.65

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0541195
  gflops (total): 200.811
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.811

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233847
  gflops (eval):  464.742
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233847,464.742,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.0279
  maximum absolute entry in einsum_ir solution: 62.0279
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153209
  time (eval):    0.00781561
  gflops (eval):  1390.53
  gflops (total): 469.726
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153209,0.00781561,1390.53,469.726

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532147
  gflops (total): 204.226
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228725
  gflops (eval):  475.148
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228725,475.148,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8083
  maximum absolute entry in einsum_ir solution: 59.8083
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153229
  time (eval):    0.0078028
  gflops (eval):  1392.81
  gflops (total): 469.945
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153229,0.0078028,1392.81,469.945

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534018
  gflops (total): 203.51
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230223
  gflops (eval):  472.057
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230223,472.057,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7434
  maximum absolute entry in einsum_ir solution: 58.7434
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153231
  time (eval):    0.00785229
  gflops (eval):  1384.03
  gflops (total): 468.938
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153231,0.00785229,1384.03,468.938

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0520889
  gflops (total): 208.64
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,208.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0227863
  gflops (eval):  476.946
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0227863,476.946,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1084
  maximum absolute entry in einsum_ir solution: 58.1084
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155306
  time (eval):    0.00781407
  gflops (eval):  1390.8
  gflops (total): 465.538
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155306,0.00781407,1390.8,465.538

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528887
  gflops (total): 205.485
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.485

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229398
  gflops (eval):  473.754
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229398,473.754,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0813
  maximum absolute entry in einsum_ir solution: 60.0813
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155847
  time (eval):    0.00781047
  gflops (eval):  1391.44
  gflops (total): 464.532
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155847,0.00781047,1391.44,464.532

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.054653
  gflops (total): 198.851
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,198.851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229257
  gflops (eval):  474.045
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229257,474.045,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5524
  maximum absolute entry in einsum_ir solution: 57.5524
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154877
  time (eval):    0.00787616
  gflops (eval):  1379.84
  gflops (total): 465.156
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154877,0.00787616,1379.84,465.156

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531192
  gflops (total): 204.593
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.593

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232201
  gflops (eval):  468.034
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232201,468.034,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4036
  maximum absolute entry in einsum_ir solution: 60.4036
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153408
  time (eval):    0.00842547
  gflops (eval):  1289.88
  gflops (total): 457.279
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153408,0.00842547,1289.88,457.279

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528225
  gflops (total): 205.742
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228995
  gflops (eval):  474.588
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228995,474.588,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5071
  maximum absolute entry in einsum_ir solution: 59.5071
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015599
  time (eval):    0.0078207
  gflops (eval):  1389.62
  gflops (total): 464.046
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015599,0.0078207,1389.62,464.046

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533951
  gflops (total): 203.536
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0234504
  gflops (eval):  463.439
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0234504,463.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8535
  maximum absolute entry in einsum_ir solution: 57.8535
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156425
  time (eval):    0.00777747
  gflops (eval):  1397.35
  gflops (total): 464.041
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156425,0.00777747,1397.35,464.041

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0544467
  gflops (total): 199.605
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,199.605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230601
  gflops (eval):  471.282
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230601,471.282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4993
  maximum absolute entry in einsum_ir solution: 58.4993
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157513
  time (eval):    0.00784427
  gflops (eval):  1385.45
  gflops (total): 460.587
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157513,0.00784427,1385.45,460.587

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0536634
  gflops (total): 202.518
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229375
  gflops (eval):  473.802
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229375,473.802,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8843
  maximum absolute entry in einsum_ir solution: 55.8843
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150566
  time (eval):    0.00788228
  gflops (eval):  1378.77
  gflops (total): 473.772
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150566,0.00788228,1378.77,473.772

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531031
  gflops (total): 204.655
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.655

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231503
  gflops (eval):  469.446
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231503,469.446,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9819
  maximum absolute entry in einsum_ir solution: 59.9819
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.014866
  time (eval):    0.00783887
  gflops (eval):  1386.4
  gflops (total): 478.657
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.014866,0.00783887,1386.4,478.657

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0523665
  gflops (total): 207.534
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,207.534

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0227891
  gflops (eval):  476.886
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0227891,476.886,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7568
  maximum absolute entry in einsum_ir solution: 57.7568
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151785
  time (eval):    0.00783761
  gflops (eval):  1386.62
  gflops (total): 472.183
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151785,0.00783761,1386.62,472.183

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0521454
  gflops (total): 208.414
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,208.414

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229677
  gflops (eval):  473.179
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229677,473.179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7169
  maximum absolute entry in einsum_ir solution: 56.7169
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0160978
  time (eval):    0.00784993
  gflops (eval):  1384.45
  gflops (total): 453.814
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0160978,0.00784993,1384.45,453.814

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530022
  gflops (total): 205.045
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023181
  gflops (eval):  468.824
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023181,468.824,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6068
  maximum absolute entry in einsum_ir solution: 59.6068
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156533
  time (eval):    0.00785597
  gflops (eval):  1383.38
  gflops (total): 462.279
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156533,0.00785597,1383.38,462.279

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525137
  gflops (total): 206.952
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232471
  gflops (eval):  467.491
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232471,467.491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4382
  maximum absolute entry in einsum_ir solution: 57.4382
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156496
  time (eval):    0.00789428
  gflops (eval):  1376.67
  gflops (total): 461.598
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156496,0.00789428,1376.67,461.598

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0536957
  gflops (total): 202.396
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.396

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023151
  gflops (eval):  469.431
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023151,469.431,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1667
  maximum absolute entry in einsum_ir solution: 60.1667
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155547
  time (eval):    0.00787268
  gflops (eval):  1380.45
  gflops (total): 463.893
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155547,0.00787268,1380.45,463.893

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530482
  gflops (total): 204.867
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.867

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.02293
  gflops (eval):  473.956
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.02293,473.956,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0459
  maximum absolute entry in einsum_ir solution: 58.0459
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156068
  time (eval):    0.00785942
  gflops (eval):  1382.78
  gflops (total): 463.127
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156068,0.00785942,1382.78,463.127

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534068
  gflops (total): 203.491
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.491

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228566
  gflops (eval):  475.478
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228566,475.478,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6065
  maximum absolute entry in einsum_ir solution: 59.6065
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157441
  time (eval):    0.00786429
  gflops (eval):  1381.92
  gflops (total): 460.338
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157441,0.00786429,1381.92,460.338

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542237
  gflops (total): 200.426
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.426

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229251
  gflops (eval):  474.057
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229251,474.057,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4656
  maximum absolute entry in einsum_ir solution: 57.4656
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150542
  time (eval):    0.00781112
  gflops (eval):  1391.33
  gflops (total): 475.296
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150542,0.00781112,1391.33,475.296

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0527069
  gflops (total): 206.194
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.194

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229312
  gflops (eval):  473.931
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229312,473.931,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7373
  maximum absolute entry in einsum_ir solution: 60.7373
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157236
  time (eval):    0.00791454
  gflops (eval):  1373.15
  gflops (total): 459.758
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157236,0.00791454,1373.15,459.758

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525984
  gflops (total): 206.619
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.619

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230406
  gflops (eval):  471.681
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230406,471.681,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0476
  maximum absolute entry in einsum_ir solution: 61.0476
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0158977
  time (eval):    0.00782293
  gflops (eval):  1389.23
  gflops (total): 458.159
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0158977,0.00782293,1389.23,458.159

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0541762
  gflops (total): 200.601
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.601

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230832
  gflops (eval):  470.81
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230832,470.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7277
  maximum absolute entry in einsum_ir solution: 59.7277
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152244
  time (eval):    0.00783684
  gflops (eval):  1386.76
  gflops (total): 471.259
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152244,0.00783684,1386.76,471.259

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531319
  gflops (total): 204.544
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.544

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0227123
  gflops (eval):  478.499
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0227123,478.499,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.069
  maximum absolute entry in einsum_ir solution: 57.069
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155236
  time (eval):    0.00780895
  gflops (eval):  1391.71
  gflops (total): 465.78
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155236,0.00780895,1391.71,465.78

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532001
  gflops (total): 204.282
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.282

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231445
  gflops (eval):  469.564
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231445,469.564,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2296
  maximum absolute entry in einsum_ir solution: 59.2296
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150415
  time (eval):    0.00783152
  gflops (eval):  1387.7
  gflops (total): 475.137
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150415,0.00783152,1387.7,475.137

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528519
  gflops (total): 205.628
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.628

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.022861
  gflops (eval):  475.387
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.022861,475.387,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.0605
  maximum absolute entry in einsum_ir solution: 62.0605
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149773
  time (eval):    0.00783003
  gflops (eval):  1387.97
  gflops (total): 476.505
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149773,0.00783003,1387.97,476.505

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533863
  gflops (total): 203.569
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.569

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233013
  gflops (eval):  466.403
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233013,466.403,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6676
  maximum absolute entry in einsum_ir solution: 60.6676
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152006
  time (eval):    0.00783293
  gflops (eval):  1387.45
  gflops (total): 471.825
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152006,0.00783293,1387.45,471.825

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0536179
  gflops (total): 202.69
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229833
  gflops (eval):  472.857
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229833,472.857,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3995
  maximum absolute entry in einsum_ir solution: 59.3995
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015837
  time (eval):    0.00786522
  gflops (eval):  1381.76
  gflops (total): 458.515
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015837,0.00786522,1381.76,458.515

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0545595
  gflops (total): 199.192
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,199.192

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231907
  gflops (eval):  468.628
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231907,468.628,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.941
  maximum absolute entry in einsum_ir solution: 58.941
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155552
  time (eval):    0.0078161
  gflops (eval):  1390.44
  gflops (total): 465.007
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155552,0.0078161,1390.44,465.007

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533458
  gflops (total): 203.724
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.724

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228701
  gflops (eval):  475.198
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228701,475.198,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9673
  maximum absolute entry in einsum_ir solution: 61.9673
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015138
  time (eval):    0.00791129
  gflops (eval):  1373.71
  gflops (total): 471.503
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015138,0.00791129,1373.71,471.503

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530926
  gflops (total): 204.695
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.695

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230101
  gflops (eval):  472.307
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230101,472.307,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.1864
  maximum absolute entry in einsum_ir solution: 62.1864
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015503
  time (eval):    0.00781286
  gflops (eval):  1391.02
  gflops (total): 466.112
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015503,0.00781286,1391.02,466.112

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539807
  gflops (total): 201.328
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228404
  gflops (eval):  475.815
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228404,475.815,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1358
  maximum absolute entry in einsum_ir solution: 61.1358
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155198
  time (eval):    0.00779953
  gflops (eval):  1393.39
  gflops (total): 466.043
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155198,0.00779953,1393.39,466.043

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529389
  gflops (total): 205.29
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228773
  gflops (eval):  475.048
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228773,475.048,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8861
  maximum absolute entry in einsum_ir solution: 58.8861
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155545
  time (eval):    0.00787259
  gflops (eval):  1380.46
  gflops (total): 463.9
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155545,0.00787259,1380.46,463.9

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053791
  gflops (total): 202.038
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230307
  gflops (eval):  471.883
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230307,471.883,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9827
  maximum absolute entry in einsum_ir solution: 61.9827
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155761
  time (eval):    0.0078263
  gflops (eval):  1388.63
  gflops (total): 464.39
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155761,0.0078263,1388.63,464.39

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0526931
  gflops (total): 206.248
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232546
  gflops (eval):  467.341
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232546,467.341,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4269
  maximum absolute entry in einsum_ir solution: 60.4269
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0159955
  time (eval):    0.00782378
  gflops (eval):  1389.08
  gflops (total): 456.261
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0159955,0.00782378,1389.08,456.261

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0537781
  gflops (total): 202.086
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229356
  gflops (eval):  473.841
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229356,473.841,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.9351
  maximum absolute entry in einsum_ir solution: 62.9351
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148891
  time (eval):    0.00773359
  gflops (eval):  1405.27
  gflops (total): 480.396
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148891,0.00773359,1405.27,480.396

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534389
  gflops (total): 203.369
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232169
  gflops (eval):  468.1
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232169,468.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6895
  maximum absolute entry in einsum_ir solution: 56.6895
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155864
  time (eval):    0.00778013
  gflops (eval):  1396.87
  gflops (total): 465.101
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155864,0.00778013,1396.87,465.101

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525701
  gflops (total): 206.73
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228755
  gflops (eval):  475.085
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228755,475.085,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.6482
  maximum absolute entry in einsum_ir solution: 62.6482
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155269
  time (eval):    0.00779804
  gflops (eval):  1393.66
  gflops (total): 465.932
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155269,0.00779804,1393.66,465.932

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531258
  gflops (total): 204.568
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.568

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230452
  gflops (eval):  471.586
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230452,471.586,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3578
  maximum absolute entry in einsum_ir solution: 61.3578
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0147481
  time (eval):    0.00782345
  gflops (eval):  1389.13
  gflops (total): 481.483
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0147481,0.00782345,1389.13,481.483

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540273
  gflops (total): 201.154
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023149
  gflops (eval):  469.473
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023149,469.473,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1352
  maximum absolute entry in einsum_ir solution: 58.1352
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153074
  time (eval):    0.00783921
  gflops (eval):  1386.34
  gflops (total): 469.521
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153074,0.00783921,1386.34,469.521

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540553
  gflops (total): 201.05
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229308
  gflops (eval):  473.94
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229308,473.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.3413
  maximum absolute entry in einsum_ir solution: 66.3413
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0162112
  time (eval):    0.00778958
  gflops (eval):  1395.17
  gflops (total): 452.81
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0162112,0.00778958,1395.17,452.81

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0537475
  gflops (total): 202.201
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.201

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229073
  gflops (eval):  474.426
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229073,474.426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4918
  maximum absolute entry in einsum_ir solution: 58.4918
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153078
  time (eval):    0.00778763
  gflops (eval):  1395.52
  gflops (total): 470.562
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153078,0.00778763,1395.52,470.562

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539156
  gflops (total): 201.571
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.571

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229982
  gflops (eval):  472.551
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229982,472.551,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.244
  maximum absolute entry in einsum_ir solution: 58.244
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153891
  time (eval):    0.00800065
  gflops (eval):  1358.37
  gflops (total): 464.64
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153891,0.00800065,1358.37,464.64

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053942
  gflops (total): 201.472
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.02303
  gflops (eval):  471.899
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.02303,471.899,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5123
  maximum absolute entry in einsum_ir solution: 57.5123
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0161216
  time (eval):    0.00778811
  gflops (eval):  1395.44
  gflops (total): 454.536
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0161216,0.00778811,1395.44,454.536

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529134
  gflops (total): 205.389
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.389

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230387
  gflops (eval):  471.721
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230387,471.721,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6784
  maximum absolute entry in einsum_ir solution: 58.6784
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154777
  time (eval):    0.00777753
  gflops (eval):  1397.34
  gflops (total): 467.328
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154777,0.00777753,1397.34,467.328

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538761
  gflops (total): 201.719
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.719

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229365
  gflops (eval):  473.822
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229365,473.822,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.165
  maximum absolute entry in einsum_ir solution: 63.165
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156204
  time (eval):    0.00788447
  gflops (eval):  1378.38
  gflops (total): 462.365
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156204,0.00788447,1378.38,462.365

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053506
  gflops (total): 203.114
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.114

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231116
  gflops (eval):  470.233
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231116,470.233,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7416
  maximum absolute entry in einsum_ir solution: 57.7416
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155385
  time (eval):    0.00777348
  gflops (eval):  1398.06
  gflops (total): 466.191
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155385,0.00777348,1398.06,466.191

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0536466
  gflops (total): 202.582
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.582

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229656
  gflops (eval):  473.223
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229656,473.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1516
  maximum absolute entry in einsum_ir solution: 61.1516
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150644
  time (eval):    0.00779788
  gflops (eval):  1393.69
  gflops (total): 475.361
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150644,0.00779788,1393.69,475.361

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540564
  gflops (total): 201.046
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.046

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233106
  gflops (eval):  466.219
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233106,466.219,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2776
  maximum absolute entry in einsum_ir solution: 57.2776
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152718
  time (eval):    0.00788864
  gflops (eval):  1377.65
  gflops (total): 469.24
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152718,0.00788864,1377.65,469.24

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525876
  gflops (total): 206.661
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.661

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229704
  gflops (eval):  473.122
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229704,473.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6683
  maximum absolute entry in einsum_ir solution: 60.6683
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152377
  time (eval):    0.0078217
  gflops (eval):  1389.45
  gflops (total): 471.297
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152377,0.0078217,1389.45,471.297

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534305
  gflops (total): 203.401
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.401

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229556
  gflops (eval):  473.427
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229556,473.427,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6369
  maximum absolute entry in einsum_ir solution: 57.6369
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152575
  time (eval):    0.00783125
  gflops (eval):  1387.75
  gflops (total): 470.697
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152575,0.00783125,1387.75,470.697

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528978
  gflops (total): 205.45
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228342
  gflops (eval):  475.945
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228342,475.945,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.7297
  maximum absolute entry in einsum_ir solution: 61.7297
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155933
  time (eval):    0.0078142
  gflops (eval):  1390.78
  gflops (total): 464.287
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155933,0.0078142,1390.78,464.287

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538693
  gflops (total): 201.744
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.744

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.02305
  gflops (eval):  471.49
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.02305,471.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0152
  maximum absolute entry in einsum_ir solution: 57.0152
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015676
  time (eval):    0.0078083
  gflops (eval):  1391.83
  gflops (total): 462.769
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015676,0.0078083,1391.83,462.769

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529436
  gflops (total): 205.272
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.272

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.022638
  gflops (eval):  480.069
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.022638,480.069,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.13
  maximum absolute entry in einsum_ir solution: 62.13
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0159957
  time (eval):    0.00780651
  gflops (eval):  1392.15
  gflops (total): 456.588
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0159957,0.00780651,1392.15,456.588

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0526499
  gflops (total): 206.417
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.417

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0227682
  gflops (eval):  477.324
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0227682,477.324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.2801
  maximum absolute entry in einsum_ir solution: 64.2801
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156709
  time (eval):    0.00783114
  gflops (eval):  1387.77
  gflops (total): 462.42
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156709,0.00783114,1387.77,462.42

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525508
  gflops (total): 206.806
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.806

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229837
  gflops (eval):  472.849
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229837,472.849,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2689
  maximum absolute entry in einsum_ir solution: 58.2689
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157128
  time (eval):    0.00777869
  gflops (eval):  1397.13
  gflops (total): 462.628
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157128,0.00777869,1397.13,462.628

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535754
  gflops (total): 202.851
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0236168
  gflops (eval):  460.174
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0236168,460.174,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1864
  maximum absolute entry in einsum_ir solution: 60.1864
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0161466
  time (eval):    0.0078104
  gflops (eval):  1391.46
  gflops (total): 453.638
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0161466,0.0078104,1391.46,453.638

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529647
  gflops (total): 205.19
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.19

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229066
  gflops (eval):  474.441
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229066,474.441,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6979
  maximum absolute entry in einsum_ir solution: 59.6979
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152848
  time (eval):    0.0078568
  gflops (eval):  1383.24
  gflops (total): 469.622
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152848,0.0078568,1383.24,469.622

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535286
  gflops (total): 203.028
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.028

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230032
  gflops (eval):  472.447
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230032,472.447,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.1282
  maximum absolute entry in einsum_ir solution: 65.1282
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153702
  time (eval):    0.00783368
  gflops (eval):  1387.32
  gflops (total): 468.361
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153702,0.00783368,1387.32,468.361

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525781
  gflops (total): 206.699
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.699

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0227827
  gflops (eval):  477.021
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0227827,477.021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7218
  maximum absolute entry in einsum_ir solution: 60.7218
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153013
  time (eval):    0.00799744
  gflops (eval):  1358.91
  gflops (total): 466.454
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153013,0.00799744,1358.91,466.454

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538095
  gflops (total): 201.968
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230317
  gflops (eval):  471.863
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230317,471.863,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6539
  maximum absolute entry in einsum_ir solution: 56.6539
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015709
  time (eval):    0.00787596
  gflops (eval):  1379.87
  gflops (total): 460.795
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015709,0.00787596,1379.87,460.795

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534624
  gflops (total): 203.28
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230938
  gflops (eval):  470.596
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230938,470.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1307
  maximum absolute entry in einsum_ir solution: 61.1307
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155983
  time (eval):    0.00792108
  gflops (eval):  1372.01
  gflops (total): 462.078
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155983,0.00792108,1372.01,462.078

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540329
  gflops (total): 201.133
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.133

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230783
  gflops (eval):  470.91
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230783,470.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1527
  maximum absolute entry in einsum_ir solution: 57.1527
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154266
  time (eval):    0.00781699
  gflops (eval):  1390.28
  gflops (total): 467.562
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154266,0.00781699,1390.28,467.562

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531395
  gflops (total): 204.515
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.515

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228874
  gflops (eval):  474.839
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228874,474.839,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3368
  maximum absolute entry in einsum_ir solution: 61.3368
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156851
  time (eval):    0.00783081
  gflops (eval):  1387.83
  gflops (total): 462.148
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156851,0.00783081,1387.83,462.148

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535784
  gflops (total): 202.84
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231327
  gflops (eval):  469.802
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231327,469.802,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2269
  maximum absolute entry in einsum_ir solution: 57.2269
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152335
  time (eval):    0.00782103
  gflops (eval):  1389.56
  gflops (total): 471.397
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152335,0.00782103,1389.56,471.397

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0543391
  gflops (total): 200
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230694
  gflops (eval):  471.091
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230694,471.091,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.562
  maximum absolute entry in einsum_ir solution: 61.562
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0145195
  time (eval):    0.00788938
  gflops (eval):  1377.53
  gflops (total): 484.979
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0145195,0.00788938,1377.53,484.979

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535998
  gflops (total): 202.759
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.759

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232812
  gflops (eval):  466.806
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232812,466.806,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4448
  maximum absolute entry in einsum_ir solution: 58.4448
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154794
  time (eval):    0.00789499
  gflops (eval):  1376.55
  gflops (total): 464.946
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154794,0.00789499,1376.55,464.946

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529027
  gflops (total): 205.43
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228877
  gflops (eval):  474.833
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228877,474.833,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3547
  maximum absolute entry in einsum_ir solution: 58.3547
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150431
  time (eval):    0.00774276
  gflops (eval):  1403.61
  gflops (total): 476.955
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150431,0.00774276,1403.61,476.955

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053935
  gflops (total): 201.499
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.499

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232275
  gflops (eval):  467.887
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232275,467.887,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.506
  maximum absolute entry in einsum_ir solution: 65.506
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0146409
  time (eval):    0.00784108
  gflops (eval):  1386.01
  gflops (total): 483.401
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0146409,0.00784108,1386.01,483.401

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530959
  gflops (total): 204.683
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.683

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228619
  gflops (eval):  475.368
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228619,475.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.4027
  maximum absolute entry in einsum_ir solution: 65.4027
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156467
  time (eval):    0.00777268
  gflops (eval):  1398.21
  gflops (total): 464.053
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156467,0.00777268,1398.21,464.053

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540662
  gflops (total): 201.009
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230303
  gflops (eval):  471.893
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230303,471.893,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7486
  maximum absolute entry in einsum_ir solution: 59.7486
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153362
  time (eval):    0.00777982
  gflops (eval):  1396.92
  gflops (total): 470.141
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153362,0.00777982,1396.92,470.141

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531233
  gflops (total): 204.577
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229503
  gflops (eval):  473.537
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229503,473.537,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1722
  maximum absolute entry in einsum_ir solution: 59.1722
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153879
  time (eval):    0.00788576
  gflops (eval):  1378.16
  gflops (total): 466.958
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153879,0.00788576,1378.16,466.958

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0527087
  gflops (total): 206.186
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.186

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229764
  gflops (eval):  472.999
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229764,472.999,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5545
  maximum absolute entry in einsum_ir solution: 56.5545
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015648
  time (eval):    0.00789244
  gflops (eval):  1376.99
  gflops (total): 461.667
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.015648,0.00789244,1376.99,461.667

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0537201
  gflops (total): 202.305
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.305

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230053
  gflops (eval):  472.404
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230053,472.404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7257
  maximum absolute entry in einsum_ir solution: 55.7257
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157801
  time (eval):    0.0077727
  gflops (eval):  1398.2
  gflops (total): 461.425
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157801,0.0077727,1398.2,461.425

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531964
  gflops (total): 204.296
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.296

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229116
  gflops (eval):  474.337
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229116,474.337,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.5621
  maximum absolute entry in einsum_ir solution: 62.5621
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154791
  time (eval):    0.00785338
  gflops (eval):  1383.84
  gflops (total): 465.781
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154791,0.00785338,1383.84,465.781

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534818
  gflops (total): 203.206
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230916
  gflops (eval):  470.639
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230916,470.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1147
  maximum absolute entry in einsum_ir solution: 60.1147
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155214
  time (eval):    0.00779858
  gflops (eval):  1393.56
  gflops (total): 466.031
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155214,0.00779858,1393.56,466.031

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540377
  gflops (total): 201.115
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.115

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231013
  gflops (eval):  470.442
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231013,470.442,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5934
  maximum absolute entry in einsum_ir solution: 57.5934
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152704
  time (eval):    0.00789091
  gflops (eval):  1377.26
  gflops (total): 469.222
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152704,0.00789091,1377.26,469.222

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0522176
  gflops (total): 208.126
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,208.126

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231594
  gflops (eval):  469.262
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231594,469.262,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6817
  maximum absolute entry in einsum_ir solution: 60.6817
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154127
  time (eval):    0.00781555
  gflops (eval):  1390.54
  gflops (total): 467.871
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154127,0.00781555,1390.54,467.871

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531406
  gflops (total): 204.511
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231706
  gflops (eval):  469.035
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231706,469.035,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8335
  maximum absolute entry in einsum_ir solution: 59.8335
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152798
  time (eval):    0.00779997
  gflops (eval):  1393.32
  gflops (total): 470.88
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152798,0.00779997,1393.32,470.88

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525649
  gflops (total): 206.75
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229001
  gflops (eval):  474.576
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229001,474.576,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0329
  maximum absolute entry in einsum_ir solution: 57.0329
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152492
  time (eval):    0.00784353
  gflops (eval):  1385.58
  gflops (total): 470.616
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152492,0.00784353,1385.58,470.616

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0537592
  gflops (total): 202.157
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.157

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230226
  gflops (eval):  472.05
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230226,472.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2475
  maximum absolute entry in einsum_ir solution: 60.2475
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0161855
  time (eval):    0.00788349
  gflops (eval):  1378.55
  gflops (total): 451.528
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0161855,0.00788349,1378.55,451.528

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533759
  gflops (total): 203.609
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.609

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228122
  gflops (eval):  476.404
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228122,476.404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4501
  maximum absolute entry in einsum_ir solution: 58.4501
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152558
  time (eval):    0.00778798
  gflops (eval):  1395.46
  gflops (total): 471.617
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152558,0.00778798,1395.46,471.617

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531259
  gflops (total): 204.567
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.567

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229754
  gflops (eval):  473.02
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229754,473.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5926
  maximum absolute entry in einsum_ir solution: 59.5926
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154808
  time (eval):    0.0077709
  gflops (eval):  1398.53
  gflops (total): 467.398
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154808,0.0077709,1398.53,467.398

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539291
  gflops (total): 201.521
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.521

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229584
  gflops (eval):  473.371
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229584,473.371,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.903
  maximum absolute entry in einsum_ir solution: 56.903
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156429
  time (eval):    0.0078525
  gflops (eval):  1384
  gflops (total): 462.55
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156429,0.0078525,1384,462.55

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0527523
  gflops (total): 206.016
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.016

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230308
  gflops (eval):  471.882
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230308,471.882,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6641
  maximum absolute entry in einsum_ir solution: 60.6641
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154755
  time (eval):    0.00777061
  gflops (eval):  1398.58
  gflops (total): 467.511
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154755,0.00777061,1398.58,467.511

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0541048
  gflops (total): 200.866
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.866

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229044
  gflops (eval):  474.485
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229044,474.485,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5748
  maximum absolute entry in einsum_ir solution: 56.5748
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155669
  time (eval):    0.00777721
  gflops (eval):  1397.39
  gflops (total): 465.549
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155669,0.00777721,1397.39,465.549

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539762
  gflops (total): 201.345
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.345

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230471
  gflops (eval):  471.549
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230471,471.549,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0059
  maximum absolute entry in einsum_ir solution: 60.0059
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151129
  time (eval):    0.00397701
  gflops (eval):  2732.66
  gflops (total): 569.298
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151129,0.00397701,2732.66,569.298

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530135
  gflops (total): 205.001
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230247
  gflops (eval):  472.007
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230247,472.007,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3724
  maximum absolute entry in einsum_ir solution: 61.3724
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155963
  time (eval):    0.00396868
  gflops (eval):  2738.4
  gflops (total): 555.474
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155963,0.00396868,2738.4,555.474

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0527245
  gflops (total): 206.125
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.125

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231596
  gflops (eval):  469.258
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231596,469.258,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3974
  maximum absolute entry in einsum_ir solution: 58.3974
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0159096
  time (eval):    0.003933
  gflops (eval):  2763.24
  gflops (total): 547.702
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0159096,0.003933,2763.24,547.702

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542966
  gflops (total): 200.157
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.157

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229815
  gflops (eval):  472.895
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229815,472.895,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2438
  maximum absolute entry in einsum_ir solution: 61.2438
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015463
  time (eval):    0.00394659
  gflops (eval):  2753.72
  gflops (total): 559.919
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015463,0.00394659,2753.72,559.919

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0526007
  gflops (total): 206.61
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023169
  gflops (eval):  469.067
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023169,469.067,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9986
  maximum absolute entry in einsum_ir solution: 58.9986
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148248
  time (eval):    0.00390485
  gflops (eval):  2783.16
  gflops (total): 580.246
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148248,0.00390485,2783.16,580.246

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532188
  gflops (total): 204.21
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231988
  gflops (eval):  468.465
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231988,468.465,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9865
  maximum absolute entry in einsum_ir solution: 60.9865
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156533
  time (eval):    0.00394565
  gflops (eval):  2754.38
  gflops (total): 554.51
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156533,0.00394565,2754.38,554.51

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538533
  gflops (total): 201.804
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0235594
  gflops (eval):  461.294
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0235594,461.294,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7626
  maximum absolute entry in einsum_ir solution: 56.7626
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015056
  time (eval):    0.00396316
  gflops (eval):  2742.21
  gflops (total): 571.416
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015056,0.00396316,2742.21,571.416

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0543922
  gflops (total): 199.805
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,199.805

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229102
  gflops (eval):  474.366
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229102,474.366,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.5479
  maximum absolute entry in einsum_ir solution: 63.5479
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154194
  time (eval):    0.00395065
  gflops (eval):  2750.9
  gflops (total): 561.062
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154194,0.00395065,2750.9,561.062

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.05307
  gflops (total): 204.783
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.783

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232113
  gflops (eval):  468.212
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232113,468.212,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8687
  maximum absolute entry in einsum_ir solution: 59.8687
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156753
  time (eval):    0.00396716
  gflops (eval):  2739.44
  gflops (total): 553.283
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156753,0.00396716,2739.44,553.283

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0541109
  gflops (total): 200.843
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.843

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231405
  gflops (eval):  469.644
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231405,469.644,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9785
  maximum absolute entry in einsum_ir solution: 56.9785
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154887
  time (eval):    0.00391897
  gflops (eval):  2773.13
  gflops (total): 559.975
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154887,0.00391897,2773.13,559.975

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534635
  gflops (total): 203.276
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.276

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231183
  gflops (eval):  470.095
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231183,470.095,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.8915
  maximum absolute entry in einsum_ir solution: 62.8915
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156633
  time (eval):    0.0039625
  gflops (eval):  2742.67
  gflops (total): 553.752
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156633,0.0039625,2742.67,553.752

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053735
  gflops (total): 202.248
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230032
  gflops (eval):  472.448
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230032,472.448,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6702
  maximum absolute entry in einsum_ir solution: 60.6702
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152412
  time (eval):    0.00396669
  gflops (eval):  2739.77
  gflops (total): 565.8
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152412,0.00396669,2739.77,565.8

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542502
  gflops (total): 200.328
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232357
  gflops (eval):  467.72
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232357,467.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1456
  maximum absolute entry in einsum_ir solution: 58.1456
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151108
  time (eval):    0.00397657
  gflops (eval):  2732.96
  gflops (total): 569.371
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151108,0.00397657,2732.96,569.371

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0541273
  gflops (total): 200.782
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023025
  gflops (eval):  472.002
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023025,472.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5309
  maximum absolute entry in einsum_ir solution: 56.5309
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015029
  time (eval):    0.00394611
  gflops (eval):  2754.06
  gflops (total): 572.74
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015029,0.00394611,2754.06,572.74

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534585
  gflops (total): 203.294
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.294

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233663
  gflops (eval):  465.108
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233663,465.108,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9583
  maximum absolute entry in einsum_ir solution: 57.9583
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151443
  time (eval):    0.00393272
  gflops (eval):  2763.43
  gflops (total): 569.681
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151443,0.00393272,2763.43,569.681

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.054221
  gflops (total): 200.436
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.436

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232196
  gflops (eval):  468.046
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232196,468.046,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5961
  maximum absolute entry in einsum_ir solution: 57.5961
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155996
  time (eval):    0.00397089
  gflops (eval):  2736.87
  gflops (total): 555.318
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155996,0.00397089,2736.87,555.318

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538025
  gflops (total): 201.995
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.995

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231661
  gflops (eval):  469.126
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231661,469.126,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.0458
  maximum absolute entry in einsum_ir solution: 63.0458
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0159932
  time (eval):    0.00392624
  gflops (eval):  2768
  gflops (total): 545.59
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0159932,0.00392624,2768,545.59

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0536128
  gflops (total): 202.71
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232358
  gflops (eval):  467.719
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232358,467.719,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0892
  maximum absolute entry in einsum_ir solution: 60.0892
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155251
  time (eval):    0.00402538
  gflops (eval):  2699.82
  gflops (total): 555.884
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155251,0.00402538,2699.82,555.884

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0550656
  gflops (total): 197.361
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,197.361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023376
  gflops (eval):  464.914
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023376,464.914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.85
  maximum absolute entry in einsum_ir solution: 57.85
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154782
  time (eval):    0.00393585
  gflops (eval):  2761.24
  gflops (total): 559.792
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154782,0.00393585,2761.24,559.792

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0548048
  gflops (total): 198.301
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,198.301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232244
  gflops (eval):  467.948
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232244,467.948,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3565
  maximum absolute entry in einsum_ir solution: 58.3565
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148869
  time (eval):    0.00392647
  gflops (eval):  2767.83
  gflops (total): 577.664
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148869,0.00392647,2767.83,577.664

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540918
  gflops (total): 200.914
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.914

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231945
  gflops (eval):  468.552
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231945,468.552,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.4542
  maximum absolute entry in einsum_ir solution: 64.4542
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154109
  time (eval):    0.00394963
  gflops (eval):  2751.6
  gflops (total): 561.338
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154109,0.00394963,2751.6,561.338

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540707
  gflops (total): 200.993
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233585
  gflops (eval):  465.262
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233585,465.262,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8594
  maximum absolute entry in einsum_ir solution: 56.8594
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150791
  time (eval):    0.00397909
  gflops (eval):  2731.23
  gflops (total): 570.243
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150791,0.00397909,2731.23,570.243

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533298
  gflops (total): 203.785
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.785

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231995
  gflops (eval):  468.451
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231995,468.451,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6193
  maximum absolute entry in einsum_ir solution: 59.6193
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152156
  time (eval):    0.00395192
  gflops (eval):  2750.01
  gflops (total): 566.992
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152156,0.00395192,2750.01,566.992

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539728
  gflops (total): 201.357
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.357

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230837
  gflops (eval):  470.8
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230837,470.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7857
  maximum absolute entry in einsum_ir solution: 57.7857
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157698
  time (eval):    0.00395195
  gflops (eval):  2749.99
  gflops (total): 551.057
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157698,0.00395195,2749.99,551.057

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525244
  gflops (total): 206.91
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232905
  gflops (eval):  466.619
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232905,466.619,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0083
  maximum absolute entry in einsum_ir solution: 58.0083
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150474
  time (eval):    0.00396465
  gflops (eval):  2741.18
  gflops (total): 571.627
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150474,0.00396465,2741.18,571.627

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0544536
  gflops (total): 199.58
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,199.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230028
  gflops (eval):  472.456
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230028,472.456,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.9903
  maximum absolute entry in einsum_ir solution: 66.9903
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0146008
  time (eval):    0.00394428
  gflops (eval):  2755.34
  gflops (total): 586.023
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0146008,0.00394428,2755.34,586.023

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532707
  gflops (total): 204.011
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230844
  gflops (eval):  470.786
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230844,470.786,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3029
  maximum absolute entry in einsum_ir solution: 59.3029
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0160327
  time (eval):    0.00396654
  gflops (eval):  2739.87
  gflops (total): 543.411
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0160327,0.00396654,2739.87,543.411

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530523
  gflops (total): 204.851
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230402
  gflops (eval):  471.689
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230402,471.689,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6178
  maximum absolute entry in einsum_ir solution: 60.6178
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155171
  time (eval):    0.00396422
  gflops (eval):  2741.48
  gflops (total): 557.858
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155171,0.00396422,2741.48,557.858

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0545951
  gflops (total): 199.062
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,199.062

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023231
  gflops (eval):  467.814
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023231,467.814,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0929
  maximum absolute entry in einsum_ir solution: 60.0929
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150056
  time (eval):    0.003966
  gflops (eval):  2740.25
  gflops (total): 572.847
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150056,0.003966,2740.25,572.847

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540241
  gflops (total): 201.166
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.166

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233073
  gflops (eval):  466.284
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233073,466.284,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.5879
  maximum absolute entry in einsum_ir solution: 61.5879
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155805
  time (eval):    0.00393953
  gflops (eval):  2758.66
  gflops (total): 556.751
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155805,0.00393953,2758.66,556.751

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530625
  gflops (total): 204.812
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232695
  gflops (eval):  467.042
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232695,467.042,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7777
  maximum absolute entry in einsum_ir solution: 56.7777
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150436
  time (eval):    0.00395576
  gflops (eval):  2747.34
  gflops (total): 572.01
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150436,0.00395576,2747.34,572.01

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528689
  gflops (total): 205.562
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.562

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230202
  gflops (eval):  472.099
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230202,472.099,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6072
  maximum absolute entry in einsum_ir solution: 61.6072
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156273
  time (eval):    0.00393542
  gflops (eval):  2761.54
  gflops (total): 555.538
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156273,0.00393542,2761.54,555.538

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0527821
  gflops (total): 205.9
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229832
  gflops (eval):  472.86
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229832,472.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3642
  maximum absolute entry in einsum_ir solution: 57.3642
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0149798
  time (eval):    0.00395384
  gflops (eval):  2748.68
  gflops (total): 573.996
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0149798,0.00395384,2748.68,573.996

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538132
  gflops (total): 201.954
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.954

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232379
  gflops (eval):  467.677
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232379,467.677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7741
  maximum absolute entry in einsum_ir solution: 56.7741
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157837
  time (eval):    0.00396076
  gflops (eval):  2743.87
  gflops (total): 550.423
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157837,0.00396076,2743.87,550.423

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530915
  gflops (total): 204.7
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.7

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230116
  gflops (eval):  472.275
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230116,472.275,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3997
  maximum absolute entry in einsum_ir solution: 59.3997
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151962
  time (eval):    0.00401148
  gflops (eval):  2709.18
  gflops (total): 565.805
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151962,0.00401148,2709.18,565.805

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534562
  gflops (total): 203.303
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.303

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231466
  gflops (eval):  469.52
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231466,469.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3597
  maximum absolute entry in einsum_ir solution: 56.3597
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015711
  time (eval):    0.00398802
  gflops (eval):  2725.12
  gflops (total): 551.694
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015711,0.00398802,2725.12,551.694

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053831
  gflops (total): 201.888
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.888

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230088
  gflops (eval):  472.334
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230088,472.334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.0864
  maximum absolute entry in einsum_ir solution: 66.0864
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150063
  time (eval):    0.00394655
  gflops (eval):  2753.75
  gflops (total): 573.414
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150063,0.00394655,2753.75,573.414

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0543169
  gflops (total): 200.082
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.082

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230329
  gflops (eval):  471.84
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230329,471.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.6737
  maximum absolute entry in einsum_ir solution: 64.6737
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157641
  time (eval):    0.00396227
  gflops (eval):  2742.82
  gflops (total): 550.928
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157641,0.00396227,2742.82,550.928

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525613
  gflops (total): 206.765
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.765

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230971
  gflops (eval):  470.528
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230971,470.528,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5676
  maximum absolute entry in einsum_ir solution: 59.5676
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0158494
  time (eval):    0.00394009
  gflops (eval):  2758.27
  gflops (total): 549.171
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0158494,0.00394009,2758.27,549.171

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539145
  gflops (total): 201.575
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.575

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230475
  gflops (eval):  471.54
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230475,471.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.019
  maximum absolute entry in einsum_ir solution: 58.019
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150809
  time (eval):    0.00410589
  gflops (eval):  2646.89
  gflops (total): 566.422
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150809,0.00410589,2646.89,566.422

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540339
  gflops (total): 201.13
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231723
  gflops (eval):  469
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231723,469,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.062
  maximum absolute entry in einsum_ir solution: 59.062
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155521
  time (eval):    0.00395239
  gflops (eval):  2749.68
  gflops (total): 557.195
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155521,0.00395239,2749.68,557.195

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534535
  gflops (total): 203.314
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.314

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231136
  gflops (eval):  470.193
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231136,470.193,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.1112
  maximum absolute entry in einsum_ir solution: 63.1112
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152202
  time (eval):    0.00392717
  gflops (eval):  2767.34
  gflops (total): 567.589
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152202,0.00392717,2767.34,567.589

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540607
  gflops (total): 201.03
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231614
  gflops (eval):  469.222
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231614,469.222,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4128
  maximum absolute entry in einsum_ir solution: 58.4128
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0160987
  time (eval):    0.00393524
  gflops (eval):  2761.67
  gflops (total): 542.471
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0160987,0.00393524,2761.67,542.471

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528383
  gflops (total): 205.681
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.681

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230271
  gflops (eval):  471.958
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230271,471.958,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0222
  maximum absolute entry in einsum_ir solution: 59.0222
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151725
  time (eval):    0.00394514
  gflops (eval):  2754.74
  gflops (total): 568.472
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151725,0.00394514,2754.74,568.472

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535313
  gflops (total): 203.018
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.018

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233639
  gflops (eval):  465.155
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233639,465.155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1734
  maximum absolute entry in einsum_ir solution: 59.1734
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153959
  time (eval):    0.00397018
  gflops (eval):  2737.36
  gflops (total): 561.179
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153959,0.00397018,2737.36,561.179

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530362
  gflops (total): 204.913
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.913

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232336
  gflops (eval):  467.763
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232336,467.763,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5476
  maximum absolute entry in einsum_ir solution: 59.5476
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0159107
  time (eval):    0.00394837
  gflops (eval):  2752.48
  gflops (total): 547.248
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0159107,0.00394837,2752.48,547.248

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0536994
  gflops (total): 202.383
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231554
  gflops (eval):  469.343
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231554,469.343,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5817
  maximum absolute entry in einsum_ir solution: 58.5817
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148901
  time (eval):    0.00398096
  gflops (eval):  2729.95
  gflops (total): 575.9
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148901,0.00398096,2729.95,575.9

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531681
  gflops (total): 204.405
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.405

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.022954
  gflops (eval):  473.461
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.022954,473.461,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2249
  maximum absolute entry in einsum_ir solution: 56.2249
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155407
  time (eval):    0.00393342
  gflops (eval):  2762.95
  gflops (total): 558.064
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155407,0.00393342,2762.95,558.064

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532199
  gflops (total): 204.206
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233286
  gflops (eval):  465.859
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233286,465.859,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.8057
  maximum absolute entry in einsum_ir solution: 66.8057
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015595
  time (eval):    0.00399165
  gflops (eval):  2722.64
  gflops (total): 554.858
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015595,0.00399165,2722.64,554.858

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0526135
  gflops (total): 206.559
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.559

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230881
  gflops (eval):  470.711
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230881,470.711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0671
  maximum absolute entry in einsum_ir solution: 61.0671
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0159786
  time (eval):    0.00395343
  gflops (eval):  2748.96
  gflops (total): 545.245
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0159786,0.00395343,2748.96,545.245

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534469
  gflops (total): 203.339
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.339

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0234461
  gflops (eval):  463.524
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0234461,463.524,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.883
  maximum absolute entry in einsum_ir solution: 65.883
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015371
  time (eval):    0.00399113
  gflops (eval):  2723
  gflops (total): 561.293
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015371,0.00399113,2723,561.293

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0536635
  gflops (total): 202.518
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229443
  gflops (eval):  473.662
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229443,473.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1856
  maximum absolute entry in einsum_ir solution: 58.1856
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151401
  time (eval):    0.00394454
  gflops (eval):  2755.15
  gflops (total): 569.455
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151401,0.00394454,2755.15,569.455

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538638
  gflops (total): 201.765
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.765

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233463
  gflops (eval):  465.505
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233463,465.505,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8167
  maximum absolute entry in einsum_ir solution: 56.8167
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0145069
  time (eval):    0.00391194
  gflops (eval):  2778.11
  gflops (total): 590.038
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0145069,0.00391194,2778.11,590.038

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530991
  gflops (total): 204.671
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0234337
  gflops (eval):  463.769
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0234337,463.769,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.262
  maximum absolute entry in einsum_ir solution: 58.262
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155361
  time (eval):    0.00401132
  gflops (eval):  2709.29
  gflops (total): 555.974
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155361,0.00401132,2709.29,555.974

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0544409
  gflops (total): 199.626
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,199.626

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231514
  gflops (eval):  469.424
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231514,469.424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2932
  maximum absolute entry in einsum_ir solution: 58.2932
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015674
  time (eval):    0.00396152
  gflops (eval):  2743.35
  gflops (total): 553.477
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015674,0.00396152,2743.35,553.477

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535527
  gflops (total): 202.937
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.937

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230839
  gflops (eval):  470.796
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230839,470.796,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.229
  maximum absolute entry in einsum_ir solution: 63.229
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151958
  time (eval):    0.0039214
  gflops (eval):  2771.42
  gflops (total): 568.485
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151958,0.0039214,2771.42,568.485

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542281
  gflops (total): 200.409
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.409

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232926
  gflops (eval):  466.578
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232926,466.578,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.074
  maximum absolute entry in einsum_ir solution: 59.074
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154611
  time (eval):    0.00393425
  gflops (eval):  2762.36
  gflops (total): 560.33
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154611,0.00393425,2762.36,560.33

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.054072
  gflops (total): 200.988
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.988

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229959
  gflops (eval):  472.598
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229959,472.598,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8604
  maximum absolute entry in einsum_ir solution: 57.8604
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015342
  time (eval):    0.00395085
  gflops (eval):  2750.75
  gflops (total): 563.308
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015342,0.00395085,2750.75,563.308

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0541948
  gflops (total): 200.532
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.532

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229898
  gflops (eval):  472.724
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229898,472.724,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5919
  maximum absolute entry in einsum_ir solution: 60.5919
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155767
  time (eval):    0.00396789
  gflops (eval):  2738.94
  gflops (total): 556.053
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155767,0.00396789,2738.94,556.053

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0529939
  gflops (total): 205.077
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.077

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0228684
  gflops (eval):  475.233
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0228684,475.233,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7581
  maximum absolute entry in einsum_ir solution: 56.7581
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156264
  time (eval):    0.00392126
  gflops (eval):  2771.52
  gflops (total): 555.965
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156264,0.00392126,2771.52,555.965

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531877
  gflops (total): 204.329
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.329

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023255
  gflops (eval):  467.333
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023255,467.333,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8283
  maximum absolute entry in einsum_ir solution: 59.8283
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154113
  time (eval):    0.00394158
  gflops (eval):  2757.22
  gflops (total): 561.562
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154113,0.00394158,2757.22,561.562

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535663
  gflops (total): 202.885
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230013
  gflops (eval):  472.488
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230013,472.488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.3061
  maximum absolute entry in einsum_ir solution: 63.3061
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156897
  time (eval):    0.00403337
  gflops (eval):  2694.47
  gflops (total): 551.02
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156897,0.00403337,2694.47,551.02

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539053
  gflops (total): 201.609
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.609

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231613
  gflops (eval):  469.223
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231613,469.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.6855
  maximum absolute entry in einsum_ir solution: 63.6855
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154061
  time (eval):    0.00396967
  gflops (eval):  2737.71
  gflops (total): 560.898
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154061,0.00396967,2737.71,560.898

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0541278
  gflops (total): 200.781
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230924
  gflops (eval):  470.624
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230924,470.624,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7756
  maximum absolute entry in einsum_ir solution: 59.7756
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0160933
  time (eval):    0.00390913
  gflops (eval):  2780.11
  gflops (total): 543.324
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0160933,0.00390913,2780.11,543.324

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.052933
  gflops (total): 205.313
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.313

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231142
  gflops (eval):  470.179
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231142,470.179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3697
  maximum absolute entry in einsum_ir solution: 56.3697
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157257
  time (eval):    0.00392133
  gflops (eval):  2771.46
  gflops (total): 553.152
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157257,0.00392133,2771.46,553.152

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531586
  gflops (total): 204.441
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230179
  gflops (eval):  472.147
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230179,472.147,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1572
  maximum absolute entry in einsum_ir solution: 60.1572
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0160845
  time (eval):    0.00394287
  gflops (eval):  2756.33
  gflops (total): 542.647
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0160845,0.00394287,2756.33,542.647

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.054038
  gflops (total): 201.114
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.114

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231115
  gflops (eval):  470.235
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231115,470.235,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2269
  maximum absolute entry in einsum_ir solution: 58.2269
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152069
  time (eval):    0.00395324
  gflops (eval):  2749.09
  gflops (total): 567.21
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152069,0.00395324,2749.09,567.21

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0537521
  gflops (total): 202.184
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.184

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231332
  gflops (eval):  469.793
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231332,469.793,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.646
  maximum absolute entry in einsum_ir solution: 57.646
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151938
  time (eval):    0.00405832
  gflops (eval):  2677.91
  gflops (total): 564.499
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151938,0.00405832,2677.91,564.499

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0536343
  gflops (total): 202.628
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.628

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0234335
  gflops (eval):  463.773
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0234335,463.773,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5056
  maximum absolute entry in einsum_ir solution: 59.5056
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154455
  time (eval):    0.00394057
  gflops (eval):  2757.93
  gflops (total): 560.601
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154455,0.00394057,2757.93,560.601

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0541159
  gflops (total): 200.825
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.825

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.023117
  gflops (eval):  470.122
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.023117,470.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7186
  maximum absolute entry in einsum_ir solution: 57.7186
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151383
  time (eval):    0.0039644
  gflops (eval):  2741.35
  gflops (total): 568.916
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151383,0.0039644,2741.35,568.916

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539852
  gflops (total): 201.311
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.311

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232676
  gflops (eval):  467.079
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232676,467.079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.1717
  maximum absolute entry in einsum_ir solution: 62.1717
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015038
  time (eval):    0.0040132
  gflops (eval):  2708.02
  gflops (total): 570.453
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015038,0.0040132,2708.02,570.453

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532088
  gflops (total): 204.249
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.249

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0234192
  gflops (eval):  464.056
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0234192,464.056,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.5819
  maximum absolute entry in einsum_ir solution: 63.5819
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154821
  time (eval):    0.00392238
  gflops (eval):  2770.72
  gflops (total): 560.069
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154821,0.00392238,2770.72,560.069

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0541314
  gflops (total): 200.767
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.767

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231064
  gflops (eval):  470.339
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231064,470.339,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5973
  maximum absolute entry in einsum_ir solution: 60.5973
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154899
  time (eval):    0.00397217
  gflops (eval):  2735.99
  gflops (total): 558.411
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154899,0.00397217,2735.99,558.411

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539879
  gflops (total): 201.301
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231672
  gflops (eval):  469.104
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231672,469.104,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5595
  maximum absolute entry in einsum_ir solution: 60.5595
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155192
  time (eval):    0.00396376
  gflops (eval):  2741.8
  gflops (total): 557.813
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155192,0.00396376,2741.8,557.813

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542027
  gflops (total): 200.503
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.503

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231319
  gflops (eval):  469.819
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231319,469.819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.317
  maximum absolute entry in einsum_ir solution: 54.317
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156657
  time (eval):    0.00393483
  gflops (eval):  2761.95
  gflops (total): 554.467
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156657,0.00393483,2761.95,554.467

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0535116
  gflops (total): 203.093
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.093

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231934
  gflops (eval):  468.574
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231934,468.574,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6249
  maximum absolute entry in einsum_ir solution: 56.6249
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154855
  time (eval):    0.00394226
  gflops (eval):  2756.75
  gflops (total): 559.398
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154855,0.00394226,2756.75,559.398

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0531752
  gflops (total): 204.378
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.378

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232485
  gflops (eval):  467.463
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232485,467.463,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9217
  maximum absolute entry in einsum_ir solution: 56.9217
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0159441
  time (eval):    0.00392799
  gflops (eval):  2766.76
  gflops (total): 546.889
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0159441,0.00392799,2766.76,546.889

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053333
  gflops (total): 203.773
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230699
  gflops (eval):  471.082
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230699,471.082,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.788
  maximum absolute entry in einsum_ir solution: 60.788
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156291
  time (eval):    0.00395143
  gflops (eval):  2750.35
  gflops (total): 555.031
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156291,0.00395143,2750.35,555.031

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053805
  gflops (total): 201.985
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.985

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231493
  gflops (eval):  469.467
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231493,469.467,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.0442
  maximum absolute entry in einsum_ir solution: 62.0442
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156441
  time (eval):    0.00393278
  gflops (eval):  2763.39
  gflops (total): 555.136
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156441,0.00393278,2763.39,555.136

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0530267
  gflops (total): 204.95
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230603
  gflops (eval):  471.278
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230603,471.278,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6364
  maximum absolute entry in einsum_ir solution: 59.6364
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0157309
  time (eval):    0.00393663
  gflops (eval):  2760.69
  gflops (total): 552.576
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0157309,0.00393663,2760.69,552.576

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0537601
  gflops (total): 202.154
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233671
  gflops (eval):  465.09
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233671,465.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8596
  maximum absolute entry in einsum_ir solution: 59.8596
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152112
  time (eval):    0.00390587
  gflops (eval):  2782.43
  gflops (total): 568.489
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152112,0.00390587,2782.43,568.489

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532147
  gflops (total): 204.226
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231604
  gflops (eval):  469.242
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231604,469.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.9901
  maximum absolute entry in einsum_ir solution: 65.9901
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155059
  time (eval):    0.00397473
  gflops (eval):  2734.23
  gflops (total): 557.879
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155059,0.00397473,2734.23,557.879

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0540707
  gflops (total): 200.993
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231697
  gflops (eval):  469.053
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231697,469.053,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5337
  maximum absolute entry in einsum_ir solution: 60.5337
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154373
  time (eval):    0.00395293
  gflops (eval):  2749.3
  gflops (total): 560.479
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154373,0.00395293,2749.3,560.479

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533115
  gflops (total): 203.855
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230506
  gflops (eval):  471.477
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230506,471.477,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2647
  maximum absolute entry in einsum_ir solution: 57.2647
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0150341
  time (eval):    0.0039642
  gflops (eval):  2741.49
  gflops (total): 572.041
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0150341,0.0039642,2741.49,572.041

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0533958
  gflops (total): 203.533
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.533

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231577
  gflops (eval):  469.297
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231577,469.297,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4993
  maximum absolute entry in einsum_ir solution: 61.4993
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151254
  time (eval):    0.00395454
  gflops (eval):  2748.19
  gflops (total): 569.594
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151254,0.00395454,2748.19,569.594

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538289
  gflops (total): 201.896
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.896

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0229525
  gflops (eval):  473.491
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0229525,473.491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4134
  maximum absolute entry in einsum_ir solution: 56.4134
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154119
  time (eval):    0.00397158
  gflops (eval):  2736.4
  gflops (total): 560.674
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154119,0.00397158,2736.4,560.674

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0525718
  gflops (total): 206.723
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,206.723

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0233362
  gflops (eval):  465.707
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0233362,465.707,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7651
  maximum absolute entry in einsum_ir solution: 58.7651
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156503
  time (eval):    0.00400197
  gflops (eval):  2715.62
  gflops (total): 553.007
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156503,0.00400197,2715.62,553.007

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532164
  gflops (total): 204.219
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230341
  gflops (eval):  471.814
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230341,471.814,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9991
  maximum absolute entry in einsum_ir solution: 59.9991
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151837
  time (eval):    0.00394502
  gflops (eval):  2754.82
  gflops (total): 568.141
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151837,0.00394502,2754.82,568.141

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542253
  gflops (total): 200.42
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232942
  gflops (eval):  466.546
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232942,466.546,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.0049
  maximum absolute entry in einsum_ir solution: 65.0049
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0148026
  time (eval):    0.00395491
  gflops (eval):  2747.93
  gflops (total): 579.386
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0148026,0.00395491,2747.93,579.386

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0528655
  gflops (total): 205.575
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,205.575

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.022996
  gflops (eval):  472.596
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.022996,472.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4292
  maximum absolute entry in einsum_ir solution: 56.4292
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.01511
  time (eval):    0.00398266
  gflops (eval):  2728.79
  gflops (total): 569.216
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.01511,0.00398266,2728.79,569.216

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0532388
  gflops (total): 204.134
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.134

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231847
  gflops (eval):  468.751
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231847,468.751,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5326
  maximum absolute entry in einsum_ir solution: 56.5326
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155604
  time (eval):    0.00396744
  gflops (eval):  2739.25
  gflops (total): 556.529
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155604,0.00396744,2739.25,556.529

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539974
  gflops (total): 201.266
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232132
  gflops (eval):  468.174
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232132,468.174,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4265
  maximum absolute entry in einsum_ir solution: 57.4265
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.015525
  time (eval):    0.00392113
  gflops (eval):  2771.6
  gflops (total): 558.867
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.015525,0.00392113,2771.6,558.867

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538293
  gflops (total): 201.894
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231973
  gflops (eval):  468.494
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231973,468.494,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9103
  maximum absolute entry in einsum_ir solution: 58.9103
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0152589
  time (eval):    0.0039034
  gflops (eval):  2784.2
  gflops (total): 567.147
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0152589,0.0039034,2784.2,567.147

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0534868
  gflops (total): 203.187
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,203.187

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232165
  gflops (eval):  468.108
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232165,468.108,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5051
  maximum absolute entry in einsum_ir solution: 60.5051
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156615
  time (eval):    0.00394069
  gflops (eval):  2757.85
  gflops (total): 554.418
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156615,0.00394069,2757.85,554.418

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0542
  gflops (total): 200.513
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,200.513

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230396
  gflops (eval):  471.701
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230396,471.701,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.3111
  maximum absolute entry in einsum_ir solution: 63.3111
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0153626
  time (eval):    0.00394491
  gflops (eval):  2754.9
  gflops (total): 562.881
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0153626,0.00394491,2754.9,562.881

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0539276
  gflops (total): 201.526
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.526

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0231362
  gflops (eval):  469.732
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0231362,469.732,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4428
  maximum absolute entry in einsum_ir solution: 61.4428
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0156123
  time (eval):    0.00393068
  gflops (eval):  2764.87
  gflops (total): 556.098
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0156123,0.00393068,2764.87,556.098

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0536309
  gflops (total): 202.641
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,202.641

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0230702
  gflops (eval):  471.077
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0230702,471.077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.424
  maximum absolute entry in einsum_ir solution: 58.424
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0151471
  time (eval):    0.00394463
  gflops (eval):  2755.09
  gflops (total): 569.242
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0151471,0.00394463,2755.09,569.242

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0538823
  gflops (total): 201.695
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.695

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.02317
  gflops (eval):  469.046
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.02317,469.046,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0412
  maximum absolute entry in einsum_ir solution: 60.0412
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0155257
  time (eval):    0.00394948
  gflops (eval):  2751.71
  gflops (total): 558.034
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0155257,0.00394948,2751.71,558.034

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053902
  gflops (total): 201.622
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,201.622

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232585
  gflops (eval):  467.262
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232585,467.262,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0697
  maximum absolute entry in einsum_ir solution: 60.0697
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154615
  time (eval):    0.00391958
  gflops (eval):  2772.7
  gflops (total): 560.745
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154615,0.00391958,2772.7,560.745

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.054461
  gflops (total): 199.552
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,199.552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0232842
  gflops (eval):  466.746
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0232842,466.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.2192
  maximum absolute entry in einsum_ir solution: 55.2192
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0154593
  time (eval):    0.00391574
  gflops (eval):  2775.42
  gflops (total): 560.92
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0154593,0.00391574,2775.42,560.92

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.053245
  gflops (total): 204.11
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,204.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0234223
  gflops (eval):  463.994
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0234223,463.994,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.4262
  maximum absolute entry in einsum_ir solution: 63.4262
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131089
  time (eval):    0.00262396
  gflops (eval):  4163.18
  gflops (total): 694.343
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131089,0.00262396,4163.18,694.343

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0291511
  gflops (total): 374.738
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,374.738

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00418188
  gflops (eval):  2612.23
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00418188,2612.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      414.361
  maximum absolute entry in einsum_ir solution: 414.361
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130847
  time (eval):    0.00269248
  gflops (eval):  4057.25
  gflops (total): 692.396
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130847,0.00269248,4057.25,692.396

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028284
  gflops (total): 386.228
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,386.228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00407148
  gflops (eval):  2683.07
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00407148,2683.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      518.927
  maximum absolute entry in einsum_ir solution: 518.927
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130339
  time (eval):    0.00265162
  gflops (eval):  4119.76
  gflops (total): 696.441
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130339,0.00265162,4119.76,696.441

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287095
  gflops (total): 380.503
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.503

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00433283
  gflops (eval):  2521.22
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00433283,2521.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      435.313
  maximum absolute entry in einsum_ir solution: 435.313
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129048
  time (eval):    0.00265668
  gflops (eval):  4111.92
  gflops (total): 701.993
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129048,0.00265668,4111.92,701.993

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287638
  gflops (total): 379.784
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,379.784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0040569
  gflops (eval):  2692.7
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0040569,2692.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      441.85
  maximum absolute entry in einsum_ir solution: 441.85
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0133004
  time (eval):    0.00266805
  gflops (eval):  4094.39
  gflops (total): 684.104
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0133004,0.00266805,4094.39,684.104

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0288721
  gflops (total): 378.36
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00403804
  gflops (eval):  2705.28
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00403804,2705.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      421.147
  maximum absolute entry in einsum_ir solution: 421.147
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130497
  time (eval):    0.00263062
  gflops (eval):  4152.65
  gflops (total): 696.672
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130497,0.00263062,4152.65,696.672

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0279326
  gflops (total): 391.086
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,391.086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00401984
  gflops (eval):  2717.53
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00401984,2717.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      445.015
  maximum absolute entry in einsum_ir solution: 445.015
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129325
  time (eval):    0.00267693
  gflops (eval):  4080.81
  gflops (total): 699.835
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129325,0.00267693,4080.81,699.835

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.029061
  gflops (total): 375.901
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,375.901

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00410157
  gflops (eval):  2663.38
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00410157,2663.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      440.472
  maximum absolute entry in einsum_ir solution: 440.472
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129823
  time (eval):    0.00264434
  gflops (eval):  4131.1
  gflops (total): 699.067
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129823,0.00264434,4131.1,699.067

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.029167
  gflops (total): 374.534
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,374.534

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00421137
  gflops (eval):  2593.94
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00421137,2593.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.201
  maximum absolute entry in einsum_ir solution: 478.201
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131142
  time (eval):    0.0026545
  gflops (eval):  4115.3
  gflops (total): 692.768
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131142,0.0026545,4115.3,692.768

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0288435
  gflops (total): 378.735
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.735

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00413386
  gflops (eval):  2642.57
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00413386,2642.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      420.946
  maximum absolute entry in einsum_ir solution: 420.946
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130601
  time (eval):    0.00263732
  gflops (eval):  4142.1
  gflops (total): 695.915
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130601,0.00263732,4142.1,695.915

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0288665
  gflops (total): 378.434
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00410886
  gflops (eval):  2658.65
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00410886,2658.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      411.882
  maximum absolute entry in einsum_ir solution: 411.882
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131045
  time (eval):    0.00264432
  gflops (eval):  4131.13
  gflops (total): 693.642
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131045,0.00264432,4131.13,693.642

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286317
  gflops (total): 381.536
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,381.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00412614
  gflops (eval):  2647.52
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00412614,2647.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      444.258
  maximum absolute entry in einsum_ir solution: 444.258
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.013028
  time (eval):    0.00270199
  gflops (eval):  4042.97
  gflops (total): 694.474
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.013028,0.00270199,4042.97,694.474

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0280136
  gflops (total): 389.955
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,389.955

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00406923
  gflops (eval):  2684.55
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00406923,2684.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      431.198
  maximum absolute entry in einsum_ir solution: 431.198
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129807
  time (eval):    0.00264131
  gflops (eval):  4135.85
  gflops (total): 699.274
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129807,0.00264131,4135.85,699.274

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0278902
  gflops (total): 391.68
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,391.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0040607
  gflops (eval):  2690.19
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0040607,2690.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      439.729
  maximum absolute entry in einsum_ir solution: 439.729
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130918
  time (eval):    0.0026329
  gflops (eval):  4149.05
  gflops (total): 694.704
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130918,0.0026329,4149.05,694.704

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0280869
  gflops (total): 388.938
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,388.938

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00406063
  gflops (eval):  2690.24
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00406063,2690.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      423.331
  maximum absolute entry in einsum_ir solution: 423.331
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130323
  time (eval):    0.00264159
  gflops (eval):  4135.4
  gflops (total): 696.959
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130323,0.00264159,4135.4,696.959

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283827
  gflops (total): 384.884
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,384.884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00406482
  gflops (eval):  2687.46
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00406482,2687.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      438.245
  maximum absolute entry in einsum_ir solution: 438.245
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131703
  time (eval):    0.00261773
  gflops (eval):  4173.1
  gflops (total): 691.917
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131703,0.00261773,4173.1,691.917

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0285011
  gflops (total): 383.285
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,383.285

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00399126
  gflops (eval):  2736.99
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00399126,2736.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      429.885
  maximum absolute entry in einsum_ir solution: 429.885
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130583
  time (eval):    0.00260118
  gflops (eval):  4199.65
  gflops (total): 697.597
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130583,0.00260118,4199.65,697.597

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0280829
  gflops (total): 388.993
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,388.993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00422279
  gflops (eval):  2586.92
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00422279,2586.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      426.933
  maximum absolute entry in einsum_ir solution: 426.933
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0127316
  time (eval):    0.0025578
  gflops (eval):  4270.88
  gflops (total): 714.487
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0127316,0.0025578,4270.88,714.487

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0291225
  gflops (total): 375.107
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,375.107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00411388
  gflops (eval):  2655.41
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00411388,2655.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      454.677
  maximum absolute entry in einsum_ir solution: 454.677
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128022
  time (eval):    0.00265471
  gflops (eval):  4114.96
  gflops (total): 706.741
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128022,0.00265471,4114.96,706.741

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0289351
  gflops (total): 377.536
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,377.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00408141
  gflops (eval):  2676.54
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00408141,2676.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      432.905
  maximum absolute entry in einsum_ir solution: 432.905
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.013064
  time (eval):    0.0025888
  gflops (eval):  4219.74
  gflops (total): 697.898
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.013064,0.0025888,4219.74,697.898

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0288047
  gflops (total): 379.245
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,379.245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00411833
  gflops (eval):  2652.54
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00411833,2652.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.654
  maximum absolute entry in einsum_ir solution: 466.654
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.013076
  time (eval):    0.00256857
  gflops (eval):  4252.98
  gflops (total): 698.263
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.013076,0.00256857,4252.98,698.263

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028494
  gflops (total): 383.381
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,383.381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00420444
  gflops (eval):  2598.22
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00420444,2598.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      437.357
  maximum absolute entry in einsum_ir solution: 437.356
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128107
  time (eval):    0.00264261
  gflops (eval):  4133.81
  gflops (total): 706.907
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128107,0.00264261,4133.81,706.907

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0282052
  gflops (total): 387.306
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,387.306

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00401854
  gflops (eval):  2718.41
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00401854,2718.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      430.831
  maximum absolute entry in einsum_ir solution: 430.831
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129814
  time (eval):    0.00263339
  gflops (eval):  4148.28
  gflops (total): 699.597
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129814,0.00263339,4148.28,699.597

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028606
  gflops (total): 381.88
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,381.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00405775
  gflops (eval):  2692.14
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00405775,2692.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      434.402
  maximum absolute entry in einsum_ir solution: 434.402
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130053
  time (eval):    0.00264893
  gflops (eval):  4123.95
  gflops (total): 697.834
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130053,0.00264893,4123.95,697.834

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0279922
  gflops (total): 390.253
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,390.253

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00413427
  gflops (eval):  2642.31
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00413427,2642.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.547
  maximum absolute entry in einsum_ir solution: 461.547
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131891
  time (eval):    0.00263548
  gflops (eval):  4144.99
  gflops (total): 690.321
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131891,0.00263548,4144.99,690.321

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0294373
  gflops (total): 371.095
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,371.095

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00409389
  gflops (eval):  2668.38
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00409389,2668.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      448.852
  maximum absolute entry in einsum_ir solution: 448.852
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130201
  time (eval):    0.00264917
  gflops (eval):  4123.57
  gflops (total): 697.163
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130201,0.00264917,4123.57,697.163

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0292143
  gflops (total): 373.927
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,373.927

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00411058
  gflops (eval):  2657.54
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00411058,2657.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      440.066
  maximum absolute entry in einsum_ir solution: 440.066
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130185
  time (eval):    0.00265066
  gflops (eval):  4121.26
  gflops (total): 697.169
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130185,0.00265066,4121.26,697.169

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0285482
  gflops (total): 382.652
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,382.652

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00403435
  gflops (eval):  2707.76
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00403435,2707.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      437.549
  maximum absolute entry in einsum_ir solution: 437.549
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131445
  time (eval):    0.00263835
  gflops (eval):  4140.48
  gflops (total): 692.145
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131445,0.00263835,4140.48,692.145

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0289439
  gflops (total): 377.421
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,377.421

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00411706
  gflops (eval):  2653.36
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00411706,2653.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      429.55
  maximum absolute entry in einsum_ir solution: 429.55
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128499
  time (eval):    0.0026281
  gflops (eval):  4156.62
  gflops (total): 705.777
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128499,0.0026281,4156.62,705.777

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0280639
  gflops (total): 389.255
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,389.255

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00406174
  gflops (eval):  2689.5
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00406174,2689.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      431.059
  maximum absolute entry in einsum_ir solution: 431.059
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129763
  time (eval):    0.00267184
  gflops (eval):  4088.58
  gflops (total): 698.104
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129763,0.00267184,4088.58,698.104

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0290081
  gflops (total): 376.586
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,376.586

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00417416
  gflops (eval):  2617.06
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00417416,2617.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      440.798
  maximum absolute entry in einsum_ir solution: 440.798
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.012932
  time (eval):    0.00262005
  gflops (eval):  4169.4
  gflops (total): 702.418
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.012932,0.00262005,4169.4,702.418

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028802
  gflops (total): 379.281
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,379.281

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00413899
  gflops (eval):  2639.3
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00413899,2639.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      442.252
  maximum absolute entry in einsum_ir solution: 442.252
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130095
  time (eval):    0.00264338
  gflops (eval):  4132.6
  gflops (total): 697.893
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130095,0.00264338,4132.6,697.893

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0284372
  gflops (total): 384.146
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,384.146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00399293
  gflops (eval):  2735.85
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00399293,2735.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      408.274
  maximum absolute entry in einsum_ir solution: 408.274
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0104063
  time (eval):    0.00262451
  gflops (eval):  4162.32
  gflops (total): 838.327
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0104063,0.00262451,4162.32,838.327

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0285901
  gflops (total): 382.092
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,382.092

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00408208
  gflops (eval):  2676.1
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00408208,2676.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      443.056
  maximum absolute entry in einsum_ir solution: 443.056
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129887
  time (eval):    0.00258275
  gflops (eval):  4229.62
  gflops (total): 701.542
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129887,0.00258275,4229.62,701.542

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0284579
  gflops (total): 383.867
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,383.867

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00434994
  gflops (eval):  2511.31
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00434994,2511.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      397.108
  maximum absolute entry in einsum_ir solution: 397.108
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128406
  time (eval):    0.00261871
  gflops (eval):  4171.54
  gflops (total): 706.633
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128406,0.00261871,4171.54,706.633

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283963
  gflops (total): 384.699
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,384.699

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00406554
  gflops (eval):  2686.99
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00406554,2686.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      431.904
  maximum absolute entry in einsum_ir solution: 431.904
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129024
  time (eval):    0.0026692
  gflops (eval):  4092.62
  gflops (total): 701.536
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129024,0.0026692,4092.62,701.536

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0282061
  gflops (total): 387.293
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,387.293

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00412091
  gflops (eval):  2650.88
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00412091,2650.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      420.369
  maximum absolute entry in einsum_ir solution: 420.369
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128274
  time (eval):    0.00266027
  gflops (eval):  4106.37
  gflops (total): 705.339
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128274,0.00266027,4106.37,705.339

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0285243
  gflops (total): 382.973
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,382.973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00429452
  gflops (eval):  2543.72
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00429452,2543.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      423.792
  maximum absolute entry in einsum_ir solution: 423.792
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0127196
  time (eval):    0.00266923
  gflops (eval):  4092.58
  gflops (total): 709.868
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0127196,0.00266923,4092.58,709.868

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0281293
  gflops (total): 388.351
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,388.351

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00412741
  gflops (eval):  2646.71
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00412741,2646.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      452.01
  maximum absolute entry in einsum_ir solution: 452.01
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129992
  time (eval):    0.00268352
  gflops (eval):  4070.79
  gflops (total): 696.567
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129992,0.00268352,4070.79,696.567

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287789
  gflops (total): 379.585
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,379.585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00429357
  gflops (eval):  2544.28
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00429357,2544.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      433.719
  maximum absolute entry in einsum_ir solution: 433.719
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0133442
  time (eval):    0.00265271
  gflops (eval):  4118.07
  gflops (total): 682.885
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0133442,0.00265271,4118.07,682.885

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0279688
  gflops (total): 390.579
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,390.579

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00394066
  gflops (eval):  2772.14
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00394066,2772.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.389
  maximum absolute entry in einsum_ir solution: 475.389
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130642
  time (eval):    0.00271121
  gflops (eval):  4029.21
  gflops (total): 692.471
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130642,0.00271121,4029.21,692.471

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0280672
  gflops (total): 389.21
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,389.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00422666
  gflops (eval):  2584.56
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00422666,2584.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      420.021
  maximum absolute entry in einsum_ir solution: 420.021
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129542
  time (eval):    0.00261719
  gflops (eval):  4173.95
  gflops (total): 701.544
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129542,0.00261719,4173.95,701.544

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0288535
  gflops (total): 378.604
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0039739
  gflops (eval):  2748.95
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0039739,2748.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      444.931
  maximum absolute entry in einsum_ir solution: 444.931
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129898
  time (eval):    0.00263236
  gflops (eval):  4149.9
  gflops (total): 699.265
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129898,0.00263236,4149.9,699.265

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0280244
  gflops (total): 389.804
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,389.804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00419346
  gflops (eval):  2605.02
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00419346,2605.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.212
  maximum absolute entry in einsum_ir solution: 469.212
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0122523
  time (eval):    0.00261059
  gflops (eval):  4184.51
  gflops (total): 734.987
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0122523,0.00261059,4184.51,734.987

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0278057
  gflops (total): 392.87
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,392.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00427636
  gflops (eval):  2554.52
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00427636,2554.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      433.638
  maximum absolute entry in einsum_ir solution: 433.638
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128338
  time (eval):    0.0026351
  gflops (eval):  4145.59
  gflops (total): 706.196
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128338,0.0026351,4145.59,706.196

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287348
  gflops (total): 380.168
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.168

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00407737
  gflops (eval):  2679.19
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00407737,2679.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      425.827
  maximum absolute entry in einsum_ir solution: 425.827
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128957
  time (eval):    0.0026212
  gflops (eval):  4167.57
  gflops (total): 704.011
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128957,0.0026212,4167.57,704.011

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028702
  gflops (total): 380.602
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.602

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0041066
  gflops (eval):  2660.12
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0041066,2660.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.751
  maximum absolute entry in einsum_ir solution: 467.751
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129645
  time (eval):    0.00262461
  gflops (eval):  4162.16
  gflops (total): 700.747
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129645,0.00262461,4162.16,700.747

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0285384
  gflops (total): 382.784
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,382.784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00423088
  gflops (eval):  2581.98
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00423088,2581.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      416.85
  maximum absolute entry in einsum_ir solution: 416.85
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128359
  time (eval):    0.00263502
  gflops (eval):  4145.71
  gflops (total): 706.103
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128359,0.00263502,4145.71,706.103

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028211
  gflops (total): 387.226
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,387.226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00410522
  gflops (eval):  2661.01
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00410522,2661.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      460.304
  maximum absolute entry in einsum_ir solution: 460.304
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129976
  time (eval):    0.00262509
  gflops (eval):  4161.39
  gflops (total): 699.241
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129976,0.00262509,4161.39,699.241

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0285599
  gflops (total): 382.496
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,382.496

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00412796
  gflops (eval):  2646.35
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00412796,2646.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      440.405
  maximum absolute entry in einsum_ir solution: 440.405
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128772
  time (eval):    0.00268498
  gflops (eval):  4068.57
  gflops (total): 701.961
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128772,0.00268498,4068.57,701.961

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286842
  gflops (total): 380.839
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.839

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00410457
  gflops (eval):  2661.44
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00410457,2661.44,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      429.832
  maximum absolute entry in einsum_ir solution: 429.833
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130838
  time (eval):    0.00267911
  gflops (eval):  4077.49
  gflops (total): 693.024
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130838,0.00267911,4077.49,693.024

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287781
  gflops (total): 379.596
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,379.596

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00412228
  gflops (eval):  2650
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00412228,2650,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      619.801
  maximum absolute entry in einsum_ir solution: 619.801
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131567
  time (eval):    0.00262022
  gflops (eval):  4169.14
  gflops (total): 692.407
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131567,0.00262022,4169.14,692.407

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0281278
  gflops (total): 388.372
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,388.372

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00407674
  gflops (eval):  2679.6
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00407674,2679.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      453.467
  maximum absolute entry in einsum_ir solution: 453.467
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128458
  time (eval):    0.00265517
  gflops (eval):  4114.25
  gflops (total): 704.731
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128458,0.00265517,4114.25,704.731

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0291109
  gflops (total): 375.256
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,375.256

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00454662
  gflops (eval):  2402.68
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00454662,2402.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      421.366
  maximum absolute entry in einsum_ir solution: 421.366
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129383
  time (eval):    0.00264027
  gflops (eval):  4137.47
  gflops (total): 701.22
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129383,0.00264027,4137.47,701.22

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0279847
  gflops (total): 390.358
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,390.358

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00450038
  gflops (eval):  2427.36
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00450038,2427.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      424.621
  maximum absolute entry in einsum_ir solution: 424.621
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130332
  time (eval):    0.00265023
  gflops (eval):  4121.92
  gflops (total): 696.534
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130332,0.00265023,4121.92,696.534

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0281406
  gflops (total): 388.195
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,388.195

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00410994
  gflops (eval):  2657.95
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00410994,2657.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      459.914
  maximum absolute entry in einsum_ir solution: 459.914
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129502
  time (eval):    0.00271347
  gflops (eval):  4025.85
  gflops (total): 697.41
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129502,0.00271347,4025.85,697.41

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0278993
  gflops (total): 391.553
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,391.553

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00419201
  gflops (eval):  2605.92
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00419201,2605.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      457.882
  maximum absolute entry in einsum_ir solution: 457.882
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129159
  time (eval):    0.00265272
  gflops (eval):  4118.05
  gflops (total): 701.672
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129159,0.00265272,4118.05,701.672

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286323
  gflops (total): 381.529
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,381.529

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0041239
  gflops (eval):  2648.96
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0041239,2648.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      414.314
  maximum absolute entry in einsum_ir solution: 414.314
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129926
  time (eval):    0.00263753
  gflops (eval):  4141.77
  gflops (total): 698.911
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129926,0.00263753,4141.77,698.911

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0281004
  gflops (total): 388.75
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,388.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00404897
  gflops (eval):  2697.98
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00404897,2697.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      416.005
  maximum absolute entry in einsum_ir solution: 416.005
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.013039
  time (eval):    0.00267451
  gflops (eval):  4084.5
  gflops (total): 695.201
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.013039,0.00267451,4084.5,695.201

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028408
  gflops (total): 384.541
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,384.541

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0042063
  gflops (eval):  2597.06
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0042063,2597.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      431.897
  maximum absolute entry in einsum_ir solution: 431.897
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131569
  time (eval):    0.00257804
  gflops (eval):  4237.35
  gflops (total): 694.254
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131569,0.00257804,4237.35,694.254

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0277478
  gflops (total): 393.691
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,393.691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00442809
  gflops (eval):  2466.99
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00442809,2466.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      453.748
  maximum absolute entry in einsum_ir solution: 453.748
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0127055
  time (eval):    0.00264802
  gflops (eval):  4125.37
  gflops (total): 711.501
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0127055,0.00264802,4125.37,711.501

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0282623
  gflops (total): 386.523
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,386.523

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00425513
  gflops (eval):  2567.27
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00425513,2567.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      443.458
  maximum absolute entry in einsum_ir solution: 443.458
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130908
  time (eval):    0.00266661
  gflops (eval):  4096.6
  gflops (total): 693.262
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130908,0.00266661,4096.6,693.262

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028568
  gflops (total): 382.387
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,382.387

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00406719
  gflops (eval):  2685.9
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00406719,2685.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      428.534
  maximum absolute entry in einsum_ir solution: 428.534
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0127231
  time (eval):    0.0026184
  gflops (eval):  4172.03
  gflops (total): 712.06
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0127231,0.0026184,4172.03,712.06

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0288771
  gflops (total): 378.295
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.295

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00405442
  gflops (eval):  2694.35
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00405442,2694.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      448.499
  maximum absolute entry in einsum_ir solution: 448.499
  maximum element-wise difference:              0.000221252
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130235
  time (eval):    0.00265181
  gflops (eval):  4119.46
  gflops (total): 696.894
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130235,0.00265181,4119.46,696.894

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0292942
  gflops (total): 372.908
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,372.908

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00428793
  gflops (eval):  2547.63
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00428793,2547.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      456.693
  maximum absolute entry in einsum_ir solution: 456.693
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0127597
  time (eval):    0.00261193
  gflops (eval):  4182.37
  gflops (total): 710.661
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0127597,0.00261193,4182.37,710.661

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283322
  gflops (total): 385.569
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,385.569

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00414692
  gflops (eval):  2634.25
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00414692,2634.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      444.857
  maximum absolute entry in einsum_ir solution: 444.857
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130348
  time (eval):    0.00263404
  gflops (eval):  4147.26
  gflops (total): 697.183
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130348,0.00263404,4147.26,697.183

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0288321
  gflops (total): 378.885
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00406331
  gflops (eval):  2688.46
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00406331,2688.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      438.133
  maximum absolute entry in einsum_ir solution: 438.133
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129468
  time (eval):    0.00268181
  gflops (eval):  4073.38
  gflops (total): 698.976
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129468,0.00268181,4073.38,698.976

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028859
  gflops (total): 378.531
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00406474
  gflops (eval):  2687.51
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00406474,2687.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      448.371
  maximum absolute entry in einsum_ir solution: 448.371
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129956
  time (eval):    0.0026411
  gflops (eval):  4136.18
  gflops (total): 698.615
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129956,0.0026411,4136.18,698.615

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287431
  gflops (total): 380.058
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.058

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00399918
  gflops (eval):  2731.57
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00399918,2731.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      447.969
  maximum absolute entry in einsum_ir solution: 447.969
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0121737
  time (eval):    0.00262045
  gflops (eval):  4168.76
  gflops (total): 738.402
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0121737,0.00262045,4168.76,738.402

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0285942
  gflops (total): 382.037
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,382.037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00409408
  gflops (eval):  2668.26
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00409408,2668.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      435.207
  maximum absolute entry in einsum_ir solution: 435.207
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129631
  time (eval):    0.00266643
  gflops (eval):  4096.88
  gflops (total): 698.935
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129631,0.00266643,4096.88,698.935

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0282857
  gflops (total): 386.204
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,386.204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00426301
  gflops (eval):  2562.52
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00426301,2562.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      410.694
  maximum absolute entry in einsum_ir solution: 410.694
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130875
  time (eval):    0.00267345
  gflops (eval):  4086.12
  gflops (total): 693.11
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130875,0.00267345,4086.12,693.11

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028674
  gflops (total): 380.974
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.974

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00414099
  gflops (eval):  2638.03
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00414099,2638.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      429.727
  maximum absolute entry in einsum_ir solution: 429.727
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131444
  time (eval):    0.00264212
  gflops (eval):  4134.57
  gflops (total): 691.984
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131444,0.00264212,4134.57,691.984

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0281473
  gflops (total): 388.103
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,388.103

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00403896
  gflops (eval):  2704.67
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00403896,2704.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      437.663
  maximum absolute entry in einsum_ir solution: 437.663
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129359
  time (eval):    0.00262787
  gflops (eval):  4157
  gflops (total): 701.887
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129359,0.00262787,4157,701.887

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287706
  gflops (total): 379.694
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,379.694

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0044343
  gflops (eval):  2463.54
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0044343,2463.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      443.534
  maximum absolute entry in einsum_ir solution: 443.534
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128791
  time (eval):    0.00262935
  gflops (eval):  4154.66
  gflops (total): 704.391
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128791,0.00262935,4154.66,704.391

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283687
  gflops (total): 385.074
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,385.074

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0043266
  gflops (eval):  2524.86
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0043266,2524.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      446.344
  maximum absolute entry in einsum_ir solution: 446.344
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128841
  time (eval):    0.0026154
  gflops (eval):  4176.82
  gflops (total): 704.802
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128841,0.0026154,4176.82,704.802

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0295551
  gflops (total): 369.616
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,369.616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00405504
  gflops (eval):  2693.94
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00405504,2693.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      457.901
  maximum absolute entry in einsum_ir solution: 457.901
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129667
  time (eval):    0.00264291
  gflops (eval):  4133.34
  gflops (total): 699.83
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129667,0.00264291,4133.34,699.83

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283977
  gflops (total): 384.681
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,384.681

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00431302
  gflops (eval):  2532.8
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00431302,2532.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      437.001
  maximum absolute entry in einsum_ir solution: 437.001
  maximum element-wise difference:              0.000289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129422
  time (eval):    0.00265789
  gflops (eval):  4110.04
  gflops (total): 700.255
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129422,0.00265789,4110.04,700.255

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0291199
  gflops (total): 375.141
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,375.141

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00427086
  gflops (eval):  2557.81
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00427086,2557.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      432.034
  maximum absolute entry in einsum_ir solution: 432.034
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0127698
  time (eval):    0.00266091
  gflops (eval):  4105.38
  gflops (total): 707.94
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0127698,0.00266091,4105.38,707.94

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028621
  gflops (total): 381.679
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,381.679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00419427
  gflops (eval):  2604.52
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00419427,2604.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      422.977
  maximum absolute entry in einsum_ir solution: 422.977
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129707
  time (eval):    0.00263675
  gflops (eval):  4142.99
  gflops (total): 699.926
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129707,0.00263675,4142.99,699.926

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0288244
  gflops (total): 378.986
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00408632
  gflops (eval):  2673.32
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00408632,2673.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      400.926
  maximum absolute entry in einsum_ir solution: 400.926
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129253
  time (eval):    0.0026605
  gflops (eval):  4106.02
  gflops (total): 700.899
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129253,0.0026605,4106.02,700.899

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0280564
  gflops (total): 389.361
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,389.361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00411616
  gflops (eval):  2653.94
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00411616,2653.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      451.056
  maximum absolute entry in einsum_ir solution: 451.056
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130214
  time (eval):    0.00272512
  gflops (eval):  4008.65
  gflops (total): 693.745
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130214,0.00272512,4008.65,693.745

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283423
  gflops (total): 385.433
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,385.433

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00402971
  gflops (eval):  2710.88
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00402971,2710.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      455.9
  maximum absolute entry in einsum_ir solution: 455.9
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.013088
  time (eval):    0.0026838
  gflops (eval):  4070.37
  gflops (total): 692.634
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.013088,0.0026838,4070.37,692.634

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028557
  gflops (total): 382.535
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,382.535

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00452525
  gflops (eval):  2414.02
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00452525,2414.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      410.999
  maximum absolute entry in einsum_ir solution: 410.999
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130968
  time (eval):    0.00263135
  gflops (eval):  4151.5
  gflops (total): 694.554
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130968,0.00263135,4151.5,694.554

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0289736
  gflops (total): 377.034
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,377.034

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0042013
  gflops (eval):  2600.16
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0042013,2600.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      451.269
  maximum absolute entry in einsum_ir solution: 451.269
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128443
  time (eval):    0.00264183
  gflops (eval):  4135.02
  gflops (total): 705.408
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128443,0.00264183,4135.02,705.408

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0282475
  gflops (total): 386.726
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,386.726

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00411806
  gflops (eval):  2652.71
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00411806,2652.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      424.648
  maximum absolute entry in einsum_ir solution: 424.648
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129616
  time (eval):    0.00267392
  gflops (eval):  4085.41
  gflops (total): 698.666
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129616,0.00267392,4085.41,698.666

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0282483
  gflops (total): 386.715
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,386.715

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00453794
  gflops (eval):  2407.27
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00453794,2407.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      430.446
  maximum absolute entry in einsum_ir solution: 430.446
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129055
  time (eval):    0.00263949
  gflops (eval):  4138.7
  gflops (total): 702.739
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129055,0.00263949,4138.7,702.739

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286691
  gflops (total): 381.039
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,381.039

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00438071
  gflops (eval):  2493.67
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00438071,2493.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      449.007
  maximum absolute entry in einsum_ir solution: 449.007
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130489
  time (eval):    0.00264201
  gflops (eval):  4134.75
  gflops (total): 696.203
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130489,0.00264201,4134.75,696.203

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0280732
  gflops (total): 389.127
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,389.127

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00390688
  gflops (eval):  2796.1
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00390688,2796.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.085
  maximum absolute entry in einsum_ir solution: 488.085
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130883
  time (eval):    0.00261535
  gflops (eval):  4176.9
  gflops (total): 695.636
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130883,0.00261535,4176.9,695.636

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283559
  gflops (total): 385.248
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,385.248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00431404
  gflops (eval):  2532.2
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00431404,2532.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      439.677
  maximum absolute entry in einsum_ir solution: 439.677
  maximum element-wise difference:              0.000289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0103442
  time (eval):    0.002621
  gflops (eval):  4167.9
  gflops (total): 842.569
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0103442,0.002621,4167.9,842.569

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0282627
  gflops (total): 386.518
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,386.518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00409611
  gflops (eval):  2666.93
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00409611,2666.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      413.672
  maximum absolute entry in einsum_ir solution: 413.672
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0131554
  time (eval):    0.00269948
  gflops (eval):  4046.72
  gflops (total): 689.002
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0131554,0.00269948,4046.72,689.002

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0282286
  gflops (total): 386.985
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,386.985

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00390497
  gflops (eval):  2797.47
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00390497,2797.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      462.347
  maximum absolute entry in einsum_ir solution: 462.347
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0127859
  time (eval):    0.00263171
  gflops (eval):  4150.92
  gflops (total): 708.542
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0127859,0.00263171,4150.92,708.542

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0292959
  gflops (total): 372.886
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,372.886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00433341
  gflops (eval):  2520.89
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00433341,2520.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      408.718
  maximum absolute entry in einsum_ir solution: 408.718
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0128396
  time (eval):    0.00262678
  gflops (eval):  4158.72
  gflops (total): 706.309
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0128396,0.00262678,4158.72,706.309

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287553
  gflops (total): 379.897
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,379.897

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00424821
  gflops (eval):  2571.45
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00424821,2571.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      419.957
  maximum absolute entry in einsum_ir solution: 419.958
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129186
  time (eval):    0.00263165
  gflops (eval):  4151.03
  gflops (total): 702.498
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129186,0.00263165,4151.03,702.498

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0286585
  gflops (total): 381.18
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,381.18

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0042451
  gflops (eval):  2573.33
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0042451,2573.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      432.028
  maximum absolute entry in einsum_ir solution: 432.028
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130496
  time (eval):    0.0026587
  gflops (eval):  4108.78
  gflops (total): 695.43
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130496,0.0026587,4108.78,695.43

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028291
  gflops (total): 386.132
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,386.132

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00395366
  gflops (eval):  2763.02
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00395366,2763.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      427.18
  maximum absolute entry in einsum_ir solution: 427.18
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130401
  time (eval):    0.00266094
  gflops (eval):  4105.33
  gflops (total): 695.754
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130401,0.00266094,4105.33,695.754

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0290541
  gflops (total): 375.99
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,375.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00409054
  gflops (eval):  2670.56
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00409054,2670.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      439.337
  maximum absolute entry in einsum_ir solution: 439.337
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130131
  time (eval):    0.00270157
  gflops (eval):  4043.58
  gflops (total): 695.148
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130131,0.00270157,4043.58,695.148

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0287416
  gflops (total): 380.077
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,380.077

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00412124
  gflops (eval):  2650.67
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00412124,2650.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      424.438
  maximum absolute entry in einsum_ir solution: 424.438
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0130867
  time (eval):    0.00270397
  gflops (eval):  4040
  gflops (total): 691.803
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0130867,0.00270397,4040,691.803

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0292293
  gflops (total): 373.736
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,373.736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00416698
  gflops (eval):  2621.58
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00416698,2621.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      426.553
  maximum absolute entry in einsum_ir solution: 426.553
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0135465
  time (eval):    0.00267795
  gflops (eval):  4079.26
  gflops (total): 673.309
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0135465,0.00267795,4079.26,673.309

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.028493
  gflops (total): 383.395
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,383.395

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00405499
  gflops (eval):  2693.98
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00405499,2693.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      439.406
  maximum absolute entry in einsum_ir solution: 439.407
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.012955
  time (eval):    0.00262532
  gflops (eval):  4161.04
  gflops (total): 701.142
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.012955,0.00262532,4161.04,701.142

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0283398
  gflops (total): 385.467
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,385.467

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00407273
  gflops (eval):  2682.24
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00407273,2682.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      454.682
  maximum absolute entry in einsum_ir solution: 454.682
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0129791
  time (eval):    0.00263797
  gflops (eval):  4141.07
  gflops (total): 699.492
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0129791,0.00263797,4141.07,699.492

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0288394
  gflops (total): 378.788
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,378.788

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.00413582
  gflops (eval):  2641.33
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.00413582,2641.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.09
  maximum absolute entry in einsum_ir solution: 478.089
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130827
  time (eval):    0.314107
  gflops (eval):  135.56
  gflops (total): 130.14
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130827,0.314107,135.56,130.14

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.050209
  gflops (total): 848.063
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,848.063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00813927
  gflops (eval):  5231.48
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00813927,5231.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1732.54
  maximum absolute entry in einsum_ir solution: 1732.54
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129773
  time (eval):    0.313492
  gflops (eval):  135.826
  gflops (total): 130.427
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129773,0.313492,135.826,130.427

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.049676
  gflops (total): 857.163
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,857.163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00801642
  gflops (eval):  5311.65
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00801642,5311.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1826.37
  maximum absolute entry in einsum_ir solution: 1826.37
  maximum element-wise difference:              0.00427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128941
  time (eval):    0.313523
  gflops (eval):  135.813
  gflops (total): 130.448
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128941,0.313523,135.813,130.448

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0497328
  gflops (total): 856.184
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,856.184

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00811374
  gflops (eval):  5247.94
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00811374,5247.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2195.19
  maximum absolute entry in einsum_ir solution: 2195.19
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128562
  time (eval):    0.313105
  gflops (eval):  135.994
  gflops (total): 130.63
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128562,0.313105,135.994,130.63

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0502692
  gflops (total): 847.049
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,847.049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00822472
  gflops (eval):  5177.13
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00822472,5177.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1724.52
  maximum absolute entry in einsum_ir solution: 1724.53
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130768
  time (eval):    0.31414
  gflops (eval):  135.546
  gflops (total): 130.129
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130768,0.31414,135.546,130.129

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0494847
  gflops (total): 860.477
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,860.477

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00811314
  gflops (eval):  5248.33
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00811314,5248.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1774.02
  maximum absolute entry in einsum_ir solution: 1774.02
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0127799
  time (eval):    0.313663
  gflops (eval):  135.752
  gflops (total): 130.438
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0127799,0.313663,135.752,130.438

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0509399
  gflops (total): 835.896
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,835.896

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00807712
  gflops (eval):  5271.73
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00807712,5271.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1807.02
  maximum absolute entry in einsum_ir solution: 1807.02
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128444
  time (eval):    0.313554
  gflops (eval):  135.799
  gflops (total): 130.456
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128444,0.313554,135.799,130.456

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.050856
  gflops (total): 837.275
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,837.275

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808681
  gflops (eval):  5265.42
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808681,5265.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1682.68
  maximum absolute entry in einsum_ir solution: 1682.68
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129061
  time (eval):    0.313476
  gflops (eval):  135.833
  gflops (total): 130.462
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129061,0.313476,135.833,130.462

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0505533
  gflops (total): 842.288
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,842.288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00810343
  gflops (eval):  5254.62
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00810343,5254.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1824.86
  maximum absolute entry in einsum_ir solution: 1824.86
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130901
  time (eval):    0.313695
  gflops (eval):  135.738
  gflops (total): 130.301
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130901,0.313695,135.738,130.301

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0503093
  gflops (total): 846.373
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,846.373

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00804626
  gflops (eval):  5291.95
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00804626,5291.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1735.15
  maximum absolute entry in einsum_ir solution: 1735.15
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128939
  time (eval):    0.313871
  gflops (eval):  135.662
  gflops (total): 130.309
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128939,0.313871,135.662,130.309

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0497842
  gflops (total): 855.301
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,855.301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00810028
  gflops (eval):  5256.66
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00810028,5256.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1671.92
  maximum absolute entry in einsum_ir solution: 1671.92
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131926
  time (eval):    0.313638
  gflops (eval):  135.763
  gflops (total): 130.283
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131926,0.313638,135.763,130.283

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0494619
  gflops (total): 860.873
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,860.873

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00807222
  gflops (eval):  5274.93
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00807222,5274.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1831.34
  maximum absolute entry in einsum_ir solution: 1831.34
  maximum element-wise difference:              0.00323486
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128931
  time (eval):    0.313346
  gflops (eval):  135.89
  gflops (total): 130.519
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128931,0.313346,135.89,130.519

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0504302
  gflops (total): 844.344
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,844.344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00810537
  gflops (eval):  5253.36
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00810537,5253.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1750.59
  maximum absolute entry in einsum_ir solution: 1750.59
  maximum element-wise difference:              0.00463867
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0115773
  time (eval):    0.314293
  gflops (eval):  135.48
  gflops (total): 130.667
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0115773,0.314293,135.48,130.667

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0497675
  gflops (total): 855.587
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,855.587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808802
  gflops (eval):  5264.63
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808802,5264.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1867.22
  maximum absolute entry in einsum_ir solution: 1867.22
  maximum element-wise difference:              0.00335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130324
  time (eval):    0.315457
  gflops (eval):  134.98
  gflops (total): 129.625
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130324,0.315457,134.98,129.625

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0503338
  gflops (total): 845.96
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,845.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808587
  gflops (eval):  5266.03
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808587,5266.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1888.87
  maximum absolute entry in einsum_ir solution: 1888.87
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128106
  time (eval):    0.313144
  gflops (eval):  135.977
  gflops (total): 130.633
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128106,0.313144,135.977,130.633

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0500105
  gflops (total): 851.43
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,851.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00813649
  gflops (eval):  5233.27
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00813649,5233.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1717.63
  maximum absolute entry in einsum_ir solution: 1717.63
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129663
  time (eval):    0.313763
  gflops (eval):  135.709
  gflops (total): 130.323
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129663,0.313763,135.709,130.323

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0504422
  gflops (total): 844.143
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,844.143

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00817365
  gflops (eval):  5209.47
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00817365,5209.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1879.47
  maximum absolute entry in einsum_ir solution: 1879.47
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130074
  time (eval):    0.313994
  gflops (eval):  135.609
  gflops (total): 130.215
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130074,0.313994,135.609,130.215

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0503181
  gflops (total): 846.225
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,846.225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00809477
  gflops (eval):  5260.24
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00809477,5260.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1889.81
  maximum absolute entry in einsum_ir solution: 1889.81
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128831
  time (eval):    0.314014
  gflops (eval):  135.6
  gflops (total): 130.256
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128831,0.314014,135.6,130.256

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0501629
  gflops (total): 848.843
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,848.843

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00807833
  gflops (eval):  5270.95
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00807833,5270.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1726.44
  maximum absolute entry in einsum_ir solution: 1726.44
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129007
  time (eval):    0.313263
  gflops (eval):  135.926
  gflops (total): 130.549
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129007,0.313263,135.926,130.549

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0501448
  gflops (total): 849.149
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,849.149

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0080753
  gflops (eval):  5272.92
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0080753,5272.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1806.69
  maximum absolute entry in einsum_ir solution: 1806.69
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129776
  time (eval):    0.313228
  gflops (eval):  135.941
  gflops (total): 130.532
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129776,0.313228,135.941,130.532

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0505337
  gflops (total): 842.614
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,842.614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00813091
  gflops (eval):  5236.86
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00813091,5236.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1586.31
  maximum absolute entry in einsum_ir solution: 1586.31
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130719
  time (eval):    0.313922
  gflops (eval):  135.64
  gflops (total): 130.218
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130719,0.313922,135.64,130.218

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0505729
  gflops (total): 841.962
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,841.962

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00815947
  gflops (eval):  5218.53
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00815947,5218.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1682.98
  maximum absolute entry in einsum_ir solution: 1682.98
  maximum element-wise difference:              0.00415039
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0127006
  time (eval):    0.313875
  gflops (eval):  135.661
  gflops (total): 130.385
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0127006,0.313875,135.661,130.385

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0498406
  gflops (total): 854.333
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,854.333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00832154
  gflops (eval):  5116.89
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00832154,5116.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1740.2
  maximum absolute entry in einsum_ir solution: 1740.2
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0127253
  time (eval):    0.313628
  gflops (eval):  135.767
  gflops (total): 130.473
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0127253,0.313628,135.767,130.473

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.048692
  gflops (total): 874.485
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,874.485

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00809827
  gflops (eval):  5257.97
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00809827,5257.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1627.75
  maximum absolute entry in einsum_ir solution: 1627.75
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131576
  time (eval):    0.313588
  gflops (eval):  135.785
  gflops (total): 130.317
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131576,0.313588,135.785,130.317

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0494663
  gflops (total): 860.796
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,860.796

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00811865
  gflops (eval):  5244.77
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00811865,5244.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1923.07
  maximum absolute entry in einsum_ir solution: 1923.08
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0125738
  time (eval):    0.313815
  gflops (eval):  135.686
  gflops (total): 130.459
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0125738,0.313815,135.686,130.459

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0503519
  gflops (total): 845.657
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,845.657

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00805929
  gflops (eval):  5283.39
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00805929,5283.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1961.72
  maximum absolute entry in einsum_ir solution: 1961.72
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130025
  time (eval):    0.313903
  gflops (eval):  135.648
  gflops (total): 130.253
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130025,0.313903,135.648,130.253

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0499769
  gflops (total): 852.002
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,852.002

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00830897
  gflops (eval):  5124.64
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00830897,5124.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1971.59
  maximum absolute entry in einsum_ir solution: 1971.59
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130631
  time (eval):    0.313626
  gflops (eval):  135.768
  gflops (total): 130.339
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130631,0.313626,135.768,130.339

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0503644
  gflops (total): 845.447
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,845.447

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00814552
  gflops (eval):  5227.46
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00814552,5227.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1723.74
  maximum absolute entry in einsum_ir solution: 1723.74
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129943
  time (eval):    0.313454
  gflops (eval):  135.843
  gflops (total): 130.436
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129943,0.313454,135.843,130.436

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0499301
  gflops (total): 852.8
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,852.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00804833
  gflops (eval):  5290.59
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00804833,5290.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1816.04
  maximum absolute entry in einsum_ir solution: 1816.04
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0127567
  time (eval):    0.313848
  gflops (eval):  135.672
  gflops (total): 130.373
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0127567,0.313848,135.672,130.373

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.050479
  gflops (total): 843.528
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,843.528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808247
  gflops (eval):  5268.24
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808247,5268.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1754.78
  maximum absolute entry in einsum_ir solution: 1754.78
  maximum element-wise difference:              0.00335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130438
  time (eval):    0.313363
  gflops (eval):  135.882
  gflops (total): 130.452
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130438,0.313363,135.882,130.452

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0498033
  gflops (total): 854.971
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,854.971

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0081066
  gflops (eval):  5252.56
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0081066,5252.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1806.71
  maximum absolute entry in einsum_ir solution: 1806.71
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.012721
  time (eval):    0.313533
  gflops (eval):  135.808
  gflops (total): 130.513
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.012721,0.313533,135.808,130.513

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0500458
  gflops (total): 850.829
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,850.829

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00811719
  gflops (eval):  5245.71
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00811719,5245.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1784.95
  maximum absolute entry in einsum_ir solution: 1784.95
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131947
  time (eval):    0.31368
  gflops (eval):  135.745
  gflops (total): 130.265
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131947,0.31368,135.745,130.265

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0510516
  gflops (total): 834.066
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,834.066

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00805586
  gflops (eval):  5285.65
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00805586,5285.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1859.35
  maximum absolute entry in einsum_ir solution: 1859.35
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130866
  time (eval):    0.31418
  gflops (eval):  135.529
  gflops (total): 130.109
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130866,0.31418,135.529,130.109

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0494962
  gflops (total): 860.277
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,860.277

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00805908
  gflops (eval):  5283.53
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00805908,5283.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1692.43
  maximum absolute entry in einsum_ir solution: 1692.43
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130152
  time (eval):    0.31379
  gflops (eval):  135.697
  gflops (total): 130.293
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130152,0.31379,135.697,130.293

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0508877
  gflops (total): 836.753
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,836.753

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00812467
  gflops (eval):  5240.88
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00812467,5240.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1975.58
  maximum absolute entry in einsum_ir solution: 1975.58
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130474
  time (eval):    0.313527
  gflops (eval):  135.811
  gflops (total): 130.385
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130474,0.313527,135.811,130.385

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0484202
  gflops (total): 879.393
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,879.393

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00817115
  gflops (eval):  5211.07
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00817115,5211.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1695.18
  maximum absolute entry in einsum_ir solution: 1695.18
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0127976
  time (eval):    0.313725
  gflops (eval):  135.725
  gflops (total): 130.406
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0127976,0.313725,135.725,130.406

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0503217
  gflops (total): 846.164
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,846.164

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00811617
  gflops (eval):  5246.37
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00811617,5246.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1771.47
  maximum absolute entry in einsum_ir solution: 1771.47
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130088
  time (eval):    0.313879
  gflops (eval):  135.659
  gflops (total): 130.26
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130088,0.313879,135.659,130.26

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0492936
  gflops (total): 863.812
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,863.812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00801163
  gflops (eval):  5314.83
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00801163,5314.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1760.22
  maximum absolute entry in einsum_ir solution: 1760.22
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129595
  time (eval):    0.313589
  gflops (eval):  135.784
  gflops (total): 130.395
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129595,0.313589,135.784,130.395

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0503852
  gflops (total): 845.098
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,845.098

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00812344
  gflops (eval):  5241.67
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00812344,5241.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1742.48
  maximum absolute entry in einsum_ir solution: 1742.48
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131878
  time (eval):    0.313335
  gflops (eval):  135.894
  gflops (total): 130.405
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131878,0.313335,135.894,130.405

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.05018
  gflops (total): 848.554
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,848.554

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00814007
  gflops (eval):  5230.97
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00814007,5230.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1595.2
  maximum absolute entry in einsum_ir solution: 1595.2
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0127586
  time (eval):    0.313928
  gflops (eval):  135.637
  gflops (total): 130.34
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0127586,0.313928,135.637,130.34

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0502359
  gflops (total): 847.61
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,847.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00805516
  gflops (eval):  5286.1
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00805516,5286.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1863.83
  maximum absolute entry in einsum_ir solution: 1863.83
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130333
  time (eval):    0.313623
  gflops (eval):  135.769
  gflops (total): 130.352
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130333,0.313623,135.769,130.352

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0511541
  gflops (total): 832.396
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,832.396

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00803939
  gflops (eval):  5296.47
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00803939,5296.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1747.58
  maximum absolute entry in einsum_ir solution: 1747.58
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.012929
  time (eval):    0.31383
  gflops (eval):  135.68
  gflops (total): 130.312
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.012929,0.31383,135.68,130.312

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0501842
  gflops (total): 848.482
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,848.482

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.008263
  gflops (eval):  5153.14
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.008263,5153.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1810.73
  maximum absolute entry in einsum_ir solution: 1810.73
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128917
  time (eval):    0.313647
  gflops (eval):  135.759
  gflops (total): 130.399
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128917,0.313647,135.759,130.399

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0495799
  gflops (total): 858.825
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,858.825

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00817656
  gflops (eval):  5207.62
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00817656,5207.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2091.66
  maximum absolute entry in einsum_ir solution: 2091.66
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130093
  time (eval):    0.313412
  gflops (eval):  135.861
  gflops (total): 130.446
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130093,0.313412,135.861,130.446

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0508947
  gflops (total): 836.637
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,836.637

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0081099
  gflops (eval):  5250.43
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0081099,5250.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1854.32
  maximum absolute entry in einsum_ir solution: 1854.32
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0126947
  time (eval):    0.314227
  gflops (eval):  135.509
  gflops (total): 130.247
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0126947,0.314227,135.509,130.247

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0503938
  gflops (total): 844.953
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,844.953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00813291
  gflops (eval):  5235.57
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00813291,5235.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1865.71
  maximum absolute entry in einsum_ir solution: 1865.71
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129318
  time (eval):    0.313655
  gflops (eval):  135.755
  gflops (total): 130.38
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129318,0.313655,135.755,130.38

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0502448
  gflops (total): 847.459
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,847.459

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00817781
  gflops (eval):  5206.83
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00817781,5206.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1927.9
  maximum absolute entry in einsum_ir solution: 1927.9
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0126815
  time (eval):    0.313156
  gflops (eval):  135.972
  gflops (total): 130.68
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0126815,0.313156,135.972,130.68

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0511198
  gflops (total): 832.954
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,832.954

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00812956
  gflops (eval):  5237.73
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00812956,5237.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1705.03
  maximum absolute entry in einsum_ir solution: 1705.03
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129893
  time (eval):    0.313969
  gflops (eval):  135.62
  gflops (total): 130.232
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129893,0.313969,135.62,130.232

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0500122
  gflops (total): 851.4
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,851.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00810551
  gflops (eval):  5253.27
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00810551,5253.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1804.02
  maximum absolute entry in einsum_ir solution: 1804.02
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130175
  time (eval):    0.314316
  gflops (eval):  135.47
  gflops (total): 130.083
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130175,0.314316,135.47,130.083

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0498904
  gflops (total): 853.48
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,853.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00812102
  gflops (eval):  5243.24
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00812102,5243.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1810.14
  maximum absolute entry in einsum_ir solution: 1810.14
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130326
  time (eval):    0.313984
  gflops (eval):  135.613
  gflops (total): 130.209
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130326,0.313984,135.613,130.209

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0497744
  gflops (total): 855.468
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,855.468

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00804573
  gflops (eval):  5292.3
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00804573,5292.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1942.12
  maximum absolute entry in einsum_ir solution: 1942.12
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0126835
  time (eval):    0.313541
  gflops (eval):  135.805
  gflops (total): 130.525
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0126835,0.313541,135.805,130.525

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0499305
  gflops (total): 852.795
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,852.795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00821387
  gflops (eval):  5183.97
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00821387,5183.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1644.44
  maximum absolute entry in einsum_ir solution: 1644.44
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128989
  time (eval):    0.313617
  gflops (eval):  135.772
  gflops (total): 130.408
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128989,0.313617,135.772,130.408

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0497175
  gflops (total): 856.447
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,856.447

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00809927
  gflops (eval):  5257.32
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00809927,5257.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1664.2
  maximum absolute entry in einsum_ir solution: 1664.2
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131164
  time (eval):    0.313275
  gflops (eval):  135.92
  gflops (total): 130.458
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131164,0.313275,135.92,130.458

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0507644
  gflops (total): 838.785
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,838.785

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00817955
  gflops (eval):  5205.71
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00817955,5205.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1700.57
  maximum absolute entry in einsum_ir solution: 1700.57
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129731
  time (eval):    0.313991
  gflops (eval):  135.61
  gflops (total): 130.23
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129731,0.313991,135.61,130.23

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0499454
  gflops (total): 852.539
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,852.539

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808941
  gflops (eval):  5263.73
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808941,5263.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1786.87
  maximum absolute entry in einsum_ir solution: 1786.87
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131307
  time (eval):    0.313711
  gflops (eval):  135.731
  gflops (total): 130.278
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131307,0.313711,135.731,130.278

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0490561
  gflops (total): 867.994
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,867.994

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00809744
  gflops (eval):  5258.51
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00809744,5258.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1675.9
  maximum absolute entry in einsum_ir solution: 1675.9
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130612
  time (eval):    0.313465
  gflops (eval):  135.838
  gflops (total): 130.405
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130612,0.313465,135.838,130.405

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0510076
  gflops (total): 834.787
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,834.787

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00809364
  gflops (eval):  5260.97
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00809364,5260.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1947.31
  maximum absolute entry in einsum_ir solution: 1947.31
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130739
  time (eval):    0.313783
  gflops (eval):  135.7
  gflops (total): 130.272
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130739,0.313783,135.7,130.272

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0498958
  gflops (total): 853.387
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,853.387

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00805122
  gflops (eval):  5288.69
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00805122,5288.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1785.32
  maximum absolute entry in einsum_ir solution: 1785.32
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0127124
  time (eval):    0.313476
  gflops (eval):  135.833
  gflops (total): 130.539
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0127124,0.313476,135.833,130.539

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0496325
  gflops (total): 857.915
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,857.915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00802236
  gflops (eval):  5307.72
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00802236,5307.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1872.36
  maximum absolute entry in einsum_ir solution: 1872.36
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0126408
  time (eval):    0.313911
  gflops (eval):  135.645
  gflops (total): 130.394
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0126408,0.313911,135.645,130.394

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.050145
  gflops (total): 849.146
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,849.146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00817048
  gflops (eval):  5211.49
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00817048,5211.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1699.38
  maximum absolute entry in einsum_ir solution: 1699.38
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131315
  time (eval):    0.313669
  gflops (eval):  135.749
  gflops (total): 130.295
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131315,0.313669,135.749,130.295

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0503009
  gflops (total): 846.515
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,846.515

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0081578
  gflops (eval):  5219.6
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0081578,5219.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1781.09
  maximum absolute entry in einsum_ir solution: 1781.08
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.012888
  time (eval):    0.31374
  gflops (eval):  135.719
  gflops (total): 130.364
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.012888,0.31374,135.719,130.364

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0504281
  gflops (total): 844.38
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,844.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00810295
  gflops (eval):  5254.93
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00810295,5254.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1753.17
  maximum absolute entry in einsum_ir solution: 1753.17
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.012943
  time (eval):    0.313221
  gflops (eval):  135.944
  gflops (total): 130.549
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.012943,0.313221,135.944,130.549

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0504086
  gflops (total): 844.706
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,844.706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00814626
  gflops (eval):  5226.99
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00814626,5226.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1751.14
  maximum absolute entry in einsum_ir solution: 1751.14
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131849
  time (eval):    0.313141
  gflops (eval):  135.978
  gflops (total): 130.484
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131849,0.313141,135.978,130.484

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0486452
  gflops (total): 875.327
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,875.327

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00809907
  gflops (eval):  5257.45
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00809907,5257.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1594.58
  maximum absolute entry in einsum_ir solution: 1594.58
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.013049
  time (eval):    0.313699
  gflops (eval):  135.737
  gflops (total): 130.316
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.013049,0.313699,135.737,130.316

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0501429
  gflops (total): 849.182
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,849.182

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00813685
  gflops (eval):  5233.03
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00813685,5233.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2206.3
  maximum absolute entry in einsum_ir solution: 2206.3
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129599
  time (eval):    0.314092
  gflops (eval):  135.567
  gflops (total): 130.195
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129599,0.314092,135.567,130.195

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0501519
  gflops (total): 849.03
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,849.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00805931
  gflops (eval):  5283.38
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00805931,5283.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1702.34
  maximum absolute entry in einsum_ir solution: 1702.34
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130187
  time (eval):    0.313479
  gflops (eval):  135.832
  gflops (total): 130.416
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130187,0.313479,135.832,130.416

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0507474
  gflops (total): 839.066
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,839.066

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0083359
  gflops (eval):  5108.08
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0083359,5108.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1853.97
  maximum absolute entry in einsum_ir solution: 1853.97
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130197
  time (eval):    0.313243
  gflops (eval):  135.934
  gflops (total): 130.51
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130197,0.313243,135.934,130.51

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0494157
  gflops (total): 861.677
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,861.677

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00806602
  gflops (eval):  5278.99
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00806602,5278.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1781.97
  maximum absolute entry in einsum_ir solution: 1781.97
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0131457
  time (eval):    0.313668
  gflops (eval):  135.75
  gflops (total): 130.29
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0131457,0.313668,135.75,130.29

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0505508
  gflops (total): 842.329
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,842.329

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00804362
  gflops (eval):  5293.69
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00804362,5293.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1864.52
  maximum absolute entry in einsum_ir solution: 1864.52
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0127974
  time (eval):    0.313682
  gflops (eval):  135.744
  gflops (total): 130.423
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0127974,0.313682,135.744,130.423

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0497218
  gflops (total): 856.373
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,856.373

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00825599
  gflops (eval):  5157.52
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00825599,5157.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2013.53
  maximum absolute entry in einsum_ir solution: 2013.53
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129469
  time (eval):    0.313768
  gflops (eval):  135.707
  gflops (total): 130.329
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129469,0.313768,135.707,130.329

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0508437
  gflops (total): 837.477
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,837.477

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00815357
  gflops (eval):  5222.3
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00815357,5222.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1667.19
  maximum absolute entry in einsum_ir solution: 1667.18
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.01316
  time (eval):    0.313441
  gflops (eval):  135.848
  gflops (total): 130.375
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.01316,0.313441,135.848,130.375

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0500383
  gflops (total): 850.957
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,850.957

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00811044
  gflops (eval):  5250.08
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00811044,5250.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1698.98
  maximum absolute entry in einsum_ir solution: 1698.98
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129616
  time (eval):    0.313441
  gflops (eval):  135.848
  gflops (total): 130.454
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129616,0.313441,135.848,130.454

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0507401
  gflops (total): 839.187
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,839.187

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00810498
  gflops (eval):  5253.61
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00810498,5253.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1690.06
  maximum absolute entry in einsum_ir solution: 1690.06
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128208
  time (eval):    0.313334
  gflops (eval):  135.895
  gflops (total): 130.553
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128208,0.313334,135.895,130.553

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0496697
  gflops (total): 857.272
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,857.272

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00810598
  gflops (eval):  5252.96
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00810598,5252.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1753.91
  maximum absolute entry in einsum_ir solution: 1753.91
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130941
  time (eval):    0.313907
  gflops (eval):  135.647
  gflops (total): 130.215
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130941,0.313907,135.647,130.215

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0504497
  gflops (total): 844.017
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,844.017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00825276
  gflops (eval):  5159.54
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00825276,5159.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1751.97
  maximum absolute entry in einsum_ir solution: 1751.97
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130153
  time (eval):    0.313418
  gflops (eval):  135.858
  gflops (total): 130.441
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130153,0.313418,135.858,130.441

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0501319
  gflops (total): 849.368
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,849.368

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00815511
  gflops (eval):  5221.32
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00815511,5221.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1692.95
  maximum absolute entry in einsum_ir solution: 1692.95
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128988
  time (eval):    0.313317
  gflops (eval):  135.902
  gflops (total): 130.528
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128988,0.313317,135.902,130.528

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0501985
  gflops (total): 848.241
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,848.241

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00811519
  gflops (eval):  5247.01
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00811519,5247.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1750.77
  maximum absolute entry in einsum_ir solution: 1750.77
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0132288
  time (eval):    0.313438
  gflops (eval):  135.85
  gflops (total): 130.348
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0132288,0.313438,135.85,130.348

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0497655
  gflops (total): 855.621
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,855.621

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00805467
  gflops (eval):  5286.43
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00805467,5286.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1650.03
  maximum absolute entry in einsum_ir solution: 1650.03
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128089
  time (eval):    0.313493
  gflops (eval):  135.826
  gflops (total): 130.494
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128089,0.313493,135.826,130.494

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0503915
  gflops (total): 844.992
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,844.992

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00812752
  gflops (eval):  5239.04
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00812752,5239.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1791.84
  maximum absolute entry in einsum_ir solution: 1791.84
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130448
  time (eval):    0.313618
  gflops (eval):  135.772
  gflops (total): 130.35
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130448,0.313618,135.772,130.35

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0502218
  gflops (total): 847.848
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,847.848

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808554
  gflops (eval):  5266.25
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808554,5266.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1753.63
  maximum absolute entry in einsum_ir solution: 1753.63
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128792
  time (eval):    0.31357
  gflops (eval):  135.792
  gflops (total): 130.435
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128792,0.31357,135.792,130.435

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0506243
  gflops (total): 841.107
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,841.107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00811231
  gflops (eval):  5248.87
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00811231,5248.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1728.4
  maximum absolute entry in einsum_ir solution: 1728.4
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129345
  time (eval):    0.313413
  gflops (eval):  135.86
  gflops (total): 130.476
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129345,0.313413,135.86,130.476

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0511248
  gflops (total): 832.873
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,832.873

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00814757
  gflops (eval):  5226.15
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00814757,5226.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1707.7
  maximum absolute entry in einsum_ir solution: 1707.7
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128643
  time (eval):    0.314311
  gflops (eval):  135.472
  gflops (total): 130.146
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128643,0.314311,135.472,130.146

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0498598
  gflops (total): 854.004
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,854.004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00817367
  gflops (eval):  5209.46
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00817367,5209.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1747.08
  maximum absolute entry in einsum_ir solution: 1747.09
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0127753
  time (eval):    0.313332
  gflops (eval):  135.896
  gflops (total): 130.572
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0127753,0.313332,135.896,130.572

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0509763
  gflops (total): 835.299
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,835.299

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808849
  gflops (eval):  5264.33
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808849,5264.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1683.74
  maximum absolute entry in einsum_ir solution: 1683.74
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130152
  time (eval):    0.313475
  gflops (eval):  135.833
  gflops (total): 130.419
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130152,0.313475,135.833,130.419

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.050806
  gflops (total): 838.098
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,838.098

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00804828
  gflops (eval):  5290.63
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00804828,5290.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1966.41
  maximum absolute entry in einsum_ir solution: 1966.41
  maximum element-wise difference:              0.00439453
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.013086
  time (eval):    0.313334
  gflops (eval):  135.895
  gflops (total): 130.447
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.013086,0.313334,135.895,130.447

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0503929
  gflops (total): 844.969
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,844.969

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00815595
  gflops (eval):  5220.78
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00815595,5220.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1781.56
  maximum absolute entry in einsum_ir solution: 1781.55
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129759
  time (eval):    0.313561
  gflops (eval):  135.796
  gflops (total): 130.4
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129759,0.313561,135.796,130.4

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0501648
  gflops (total): 848.811
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,848.811

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00812878
  gflops (eval):  5238.23
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00812878,5238.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1629.22
  maximum absolute entry in einsum_ir solution: 1629.22
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128952
  time (eval):    0.313662
  gflops (eval):  135.752
  gflops (total): 130.392
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128952,0.313662,135.752,130.392

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0504849
  gflops (total): 843.429
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,843.429

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00812923
  gflops (eval):  5237.94
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00812923,5237.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1827.76
  maximum absolute entry in einsum_ir solution: 1827.76
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.012743
  time (eval):    0.313113
  gflops (eval):  135.991
  gflops (total): 130.673
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.012743,0.313113,135.991,130.673

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0492434
  gflops (total): 864.694
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,864.694

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00805437
  gflops (eval):  5286.63
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00805437,5286.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1665.77
  maximum absolute entry in einsum_ir solution: 1665.77
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130406
  time (eval):    0.313292
  gflops (eval):  135.913
  gflops (total): 130.482
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130406,0.313292,135.913,130.482

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0494354
  gflops (total): 861.334
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,861.334

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808068
  gflops (eval):  5269.41
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808068,5269.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1724.51
  maximum absolute entry in einsum_ir solution: 1724.51
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0127763
  time (eval):    0.313998
  gflops (eval):  135.607
  gflops (total): 130.305
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0127763,0.313998,135.607,130.305

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0496759
  gflops (total): 857.165
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,857.165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00813176
  gflops (eval):  5236.31
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00813176,5236.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1787.97
  maximum absolute entry in einsum_ir solution: 1787.97
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130377
  time (eval):    0.313584
  gflops (eval):  135.786
  gflops (total): 130.366
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130377,0.313584,135.786,130.366

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0501896
  gflops (total): 848.391
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,848.391

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00803904
  gflops (eval):  5296.71
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00803904,5296.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1803.75
  maximum absolute entry in einsum_ir solution: 1803.75
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128217
  time (eval):    0.312805
  gflops (eval):  136.125
  gflops (total): 130.765
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128217,0.312805,136.125,130.765

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.049716
  gflops (total): 856.473
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,856.473

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808269
  gflops (eval):  5268.1
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808269,5268.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1738.98
  maximum absolute entry in einsum_ir solution: 1738.98
  maximum element-wise difference:              0.00427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130977
  time (eval):    0.312644
  gflops (eval):  136.195
  gflops (total): 130.718
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130977,0.312644,136.195,130.718

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.050296
  gflops (total): 846.597
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,846.597

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00806417
  gflops (eval):  5280.2
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00806417,5280.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1693.01
  maximum absolute entry in einsum_ir solution: 1693
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0127764
  time (eval):    0.313065
  gflops (eval):  136.011
  gflops (total): 130.678
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0127764,0.313065,136.011,130.678

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0501748
  gflops (total): 848.642
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,848.642

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00825692
  gflops (eval):  5156.94
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00825692,5156.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1748.58
  maximum absolute entry in einsum_ir solution: 1748.58
  maximum element-wise difference:              0.00427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0127276
  time (eval):    0.312997
  gflops (eval):  136.041
  gflops (total): 130.725
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0127276,0.312997,136.041,130.725

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0500557
  gflops (total): 850.661
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,850.661

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00808731
  gflops (eval):  5265.09
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00808731,5265.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1613.54
  maximum absolute entry in einsum_ir solution: 1613.54
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0127881
  time (eval):    0.313161
  gflops (eval):  135.97
  gflops (total): 130.635
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0127881,0.313161,135.97,130.635

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.050068
  gflops (total): 850.452
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,850.452

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00805165
  gflops (eval):  5288.41
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00805165,5288.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1876.81
  maximum absolute entry in einsum_ir solution: 1876.81
  maximum element-wise difference:              0.00360107
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130932
  time (eval):    0.313719
  gflops (eval):  135.728
  gflops (total): 130.29
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130932,0.313719,135.728,130.29

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0507098
  gflops (total): 839.689
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,839.689

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00806165
  gflops (eval):  5281.85
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00806165,5281.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1813.07
  maximum absolute entry in einsum_ir solution: 1813.08
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0128912
  time (eval):    0.313774
  gflops (eval):  135.704
  gflops (total): 130.349
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0128912,0.313774,135.704,130.349

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0501516
  gflops (total): 849.035
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,849.035

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00823598
  gflops (eval):  5170.05
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00823598,5170.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1688.59
  maximum absolute entry in einsum_ir solution: 1688.6
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0130226
  time (eval):    0.313289
  gflops (eval):  135.914
  gflops (total): 130.49
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0130226,0.313289,135.914,130.49

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0502318
  gflops (total): 847.679
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,847.679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00806501
  gflops (eval):  5279.65
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00806501,5279.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1778.85
  maximum absolute entry in einsum_ir solution: 1778.84
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0129639
  time (eval):    0.312858
  gflops (eval):  136.101
  gflops (total): 130.686
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0129639,0.312858,136.101,130.686

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0501762
  gflops (total): 848.618
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,848.618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.00804087
  gflops (eval):  5295.5
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.00804087,5295.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1687.25
  maximum absolute entry in einsum_ir solution: 1687.25
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129062
  time (eval):    0.30596
  gflops (eval):  136.27
  gflops (total): 130.755
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129062,0.30596,136.27,130.755

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371213
  gflops (total): 1123.17
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1123.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00787437
  gflops (eval):  5294.81
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00787437,5294.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1814.9
  maximum absolute entry in einsum_ir solution: 1814.9
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128156
  time (eval):    0.306153
  gflops (eval):  136.184
  gflops (total): 130.713
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128156,0.306153,136.184,130.713

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0370036
  gflops (total): 1126.74
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1126.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00788819
  gflops (eval):  5285.54
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00788819,5285.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1893.4
  maximum absolute entry in einsum_ir solution: 1893.4
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129906
  time (eval):    0.305389
  gflops (eval):  136.525
  gflops (total): 130.955
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129906,0.305389,136.525,130.955

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373019
  gflops (total): 1117.73
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1117.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0078517
  gflops (eval):  5310.1
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0078517,5310.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1725.31
  maximum absolute entry in einsum_ir solution: 1725.31
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.013066
  time (eval):    0.304348
  gflops (eval):  136.992
  gflops (total): 131.353
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.013066,0.304348,136.992,131.353

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374959
  gflops (total): 1111.94
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1111.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00780092
  gflops (eval):  5344.67
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00780092,5344.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1915.26
  maximum absolute entry in einsum_ir solution: 1915.26
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128681
  time (eval):    0.304745
  gflops (eval):  136.814
  gflops (total): 131.271
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128681,0.304745,136.814,131.271

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.037554
  gflops (total): 1110.22
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1110.22

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782712
  gflops (eval):  5326.78
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782712,5326.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1734.62
  maximum absolute entry in einsum_ir solution: 1734.62
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130539
  time (eval):    0.304927
  gflops (eval):  136.732
  gflops (total): 131.119
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130539,0.304927,136.732,131.119

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0377174
  gflops (total): 1105.41
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1105.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0078061
  gflops (eval):  5341.12
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0078061,5341.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1760.05
  maximum absolute entry in einsum_ir solution: 1760.05
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129516
  time (eval):    0.305611
  gflops (eval):  136.426
  gflops (total): 130.88
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129516,0.305611,136.426,130.88

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373572
  gflops (total): 1116.07
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1116.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782218
  gflops (eval):  5330.14
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782218,5330.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1761.66
  maximum absolute entry in einsum_ir solution: 1761.66
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129655
  time (eval):    0.304928
  gflops (eval):  136.732
  gflops (total): 131.155
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129655,0.304928,136.732,131.155

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0368662
  gflops (total): 1130.94
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1130.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00781551
  gflops (eval):  5334.69
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00781551,5334.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1564.03
  maximum absolute entry in einsum_ir solution: 1564.03
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129218
  time (eval):    0.305185
  gflops (eval):  136.617
  gflops (total): 131.067
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129218,0.305185,136.617,131.067

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372041
  gflops (total): 1120.66
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1120.66

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00789334
  gflops (eval):  5282.09
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00789334,5282.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1702.44
  maximum absolute entry in einsum_ir solution: 1702.44
  maximum element-wise difference:              0.00238037
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.012898
  time (eval):    0.305593
  gflops (eval):  136.434
  gflops (total): 130.909
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.012898,0.305593,136.434,130.909

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0368815
  gflops (total): 1130.47
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1130.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779828
  gflops (eval):  5346.48
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779828,5346.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1760.88
  maximum absolute entry in einsum_ir solution: 1760.88
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0127207
  time (eval):    0.304803
  gflops (eval):  136.788
  gflops (total): 131.308
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0127207,0.304803,136.788,131.308

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0369204
  gflops (total): 1129.28
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1129.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00776206
  gflops (eval):  5371.43
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00776206,5371.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1795.35
  maximum absolute entry in einsum_ir solution: 1795.35
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.012864
  time (eval):    0.305463
  gflops (eval):  136.492
  gflops (total): 130.977
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.012864,0.305463,136.492,130.977

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.036939
  gflops (total): 1128.71
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1128.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782551
  gflops (eval):  5327.87
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782551,5327.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1872.29
  maximum absolute entry in einsum_ir solution: 1872.29
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130608
  time (eval):    0.305782
  gflops (eval):  136.35
  gflops (total): 130.764
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130608,0.305782,136.35,130.764

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371181
  gflops (total): 1123.26
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1123.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779917
  gflops (eval):  5345.87
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779917,5345.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1677.66
  maximum absolute entry in einsum_ir solution: 1677.66
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130984
  time (eval):    0.304972
  gflops (eval):  136.712
  gflops (total): 131.082
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130984,0.304972,136.712,131.082

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373297
  gflops (total): 1116.89
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1116.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00781921
  gflops (eval):  5332.17
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00781921,5332.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1709.22
  maximum absolute entry in einsum_ir solution: 1709.22
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.012816
  time (eval):    0.30511
  gflops (eval):  136.65
  gflops (total): 131.142
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.012816,0.30511,136.65,131.142

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.037098
  gflops (total): 1123.87
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1123.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00794281
  gflops (eval):  5249.19
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00794281,5249.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1880.34
  maximum absolute entry in einsum_ir solution: 1880.34
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130986
  time (eval):    0.305511
  gflops (eval):  136.471
  gflops (total): 130.86
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130986,0.305511,136.471,130.86

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0382636
  gflops (total): 1089.63
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1089.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782165
  gflops (eval):  5330.5
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782165,5330.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1771.92
  maximum absolute entry in einsum_ir solution: 1771.92
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130499
  time (eval):    0.304994
  gflops (eval):  136.702
  gflops (total): 131.093
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130499,0.304994,136.702,131.093

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0381818
  gflops (total): 1091.97
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1091.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00796331
  gflops (eval):  5235.68
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00796331,5235.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1589.27
  maximum absolute entry in einsum_ir solution: 1589.26
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130885
  time (eval):    0.305029
  gflops (eval):  136.686
  gflops (total): 131.063
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130885,0.305029,136.686,131.063

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373185
  gflops (total): 1117.23
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1117.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779755
  gflops (eval):  5346.98
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779755,5346.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1800.62
  maximum absolute entry in einsum_ir solution: 1800.62
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130905
  time (eval):    0.304826
  gflops (eval):  136.777
  gflops (total): 131.145
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130905,0.304826,136.777,131.145

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374417
  gflops (total): 1113.55
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1113.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779156
  gflops (eval):  5351.09
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779156,5351.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1718.89
  maximum absolute entry in einsum_ir solution: 1718.89
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130523
  time (eval):    0.30452
  gflops (eval):  136.915
  gflops (total): 131.288
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130523,0.30452,136.915,131.288

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371984
  gflops (total): 1120.84
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1120.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00787263
  gflops (eval):  5295.99
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00787263,5295.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1846.15
  maximum absolute entry in einsum_ir solution: 1846.15
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130732
  time (eval):    0.305416
  gflops (eval):  136.513
  gflops (total): 130.91
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130732,0.305416,136.513,130.91

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371124
  gflops (total): 1123.44
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1123.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00790562
  gflops (eval):  5273.88
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00790562,5273.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1830.72
  maximum absolute entry in einsum_ir solution: 1830.72
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131187
  time (eval):    0.304197
  gflops (eval):  137.06
  gflops (total): 131.394
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131187,0.304197,137.06,131.394

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371854
  gflops (total): 1121.23
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1121.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785683
  gflops (eval):  5306.64
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785683,5306.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1840.21
  maximum absolute entry in einsum_ir solution: 1840.21
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130317
  time (eval):    0.3054
  gflops (eval):  136.52
  gflops (total): 130.933
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130317,0.3054,136.52,130.933

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371745
  gflops (total): 1121.56
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1121.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0078612
  gflops (eval):  5303.68
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0078612,5303.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1765.89
  maximum absolute entry in einsum_ir solution: 1765.89
  maximum element-wise difference:              0.00262451
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129513
  time (eval):    0.304557
  gflops (eval):  136.898
  gflops (total): 131.314
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129513,0.304557,136.898,131.314

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374224
  gflops (total): 1114.13
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1114.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00794337
  gflops (eval):  5248.82
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00794337,5248.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1750.05
  maximum absolute entry in einsum_ir solution: 1750.05
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0125946
  time (eval):    0.304639
  gflops (eval):  136.861
  gflops (total): 131.428
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0125946,0.304639,136.861,131.428

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376098
  gflops (total): 1108.58
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1108.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00792953
  gflops (eval):  5257.98
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00792953,5257.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1850.31
  maximum absolute entry in einsum_ir solution: 1850.31
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0127797
  time (eval):    0.303996
  gflops (eval):  137.151
  gflops (total): 131.618
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0127797,0.303996,137.151,131.618

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.036838
  gflops (total): 1131.8
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1131.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00794089
  gflops (eval):  5250.46
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00794089,5250.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1674.52
  maximum absolute entry in einsum_ir solution: 1674.52
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128842
  time (eval):    0.304682
  gflops (eval):  136.842
  gflops (total): 131.29
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128842,0.304682,136.842,131.29

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0368117
  gflops (total): 1132.61
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1132.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00788003
  gflops (eval):  5291.01
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00788003,5291.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1859.52
  maximum absolute entry in einsum_ir solution: 1859.52
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0127461
  time (eval):    0.304838
  gflops (eval):  136.772
  gflops (total): 131.283
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0127461,0.304838,136.772,131.283

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0370083
  gflops (total): 1126.59
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1126.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00783033
  gflops (eval):  5324.59
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00783033,5324.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1892.69
  maximum absolute entry in einsum_ir solution: 1892.69
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130207
  time (eval):    0.305307
  gflops (eval):  136.562
  gflops (total): 130.976
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130207,0.305307,136.562,130.976

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372146
  gflops (total): 1120.35
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1120.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00786612
  gflops (eval):  5300.37
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00786612,5300.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1752.66
  maximum absolute entry in einsum_ir solution: 1752.66
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129041
  time (eval):    0.305038
  gflops (eval):  136.683
  gflops (total): 131.135
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129041,0.305038,136.683,131.135

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.037486
  gflops (total): 1112.24
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1112.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00786262
  gflops (eval):  5302.73
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00786262,5302.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1676.6
  maximum absolute entry in einsum_ir solution: 1676.6
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130225
  time (eval):    0.304622
  gflops (eval):  136.869
  gflops (total): 131.258
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130225,0.304622,136.869,131.258

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.036818
  gflops (total): 1132.42
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1132.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782857
  gflops (eval):  5325.79
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782857,5325.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1725.9
  maximum absolute entry in einsum_ir solution: 1725.9
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130372
  time (eval):    0.305063
  gflops (eval):  136.671
  gflops (total): 131.07
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130372,0.305063,136.671,131.07

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376331
  gflops (total): 1107.89
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1107.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00783932
  gflops (eval):  5318.49
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00783932,5318.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1670.09
  maximum absolute entry in einsum_ir solution: 1670.09
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128855
  time (eval):    0.305879
  gflops (eval):  136.307
  gflops (total): 130.797
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128855,0.305879,136.307,130.797

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0378622
  gflops (total): 1101.18
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1101.18

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0078624
  gflops (eval):  5302.87
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0078624,5302.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1901.26
  maximum absolute entry in einsum_ir solution: 1901.26
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129743
  time (eval):    0.305202
  gflops (eval):  136.609
  gflops (total): 131.038
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129743,0.305202,136.609,131.038

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374084
  gflops (total): 1114.54
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1114.54

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00780444
  gflops (eval):  5342.26
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00780444,5342.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1756.61
  maximum absolute entry in einsum_ir solution: 1756.61
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0126802
  time (eval):    0.305056
  gflops (eval):  136.675
  gflops (total): 131.22
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0126802,0.305056,136.675,131.22

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371221
  gflops (total): 1123.14
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1123.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.008132
  gflops (eval):  5127.07
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.008132,5127.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1967.95
  maximum absolute entry in einsum_ir solution: 1967.95
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128855
  time (eval):    0.305013
  gflops (eval):  136.693
  gflops (total): 131.153
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128855,0.305013,136.693,131.153

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371972
  gflops (total): 1120.87
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1120.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00789019
  gflops (eval):  5284.2
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00789019,5284.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1807.31
  maximum absolute entry in einsum_ir solution: 1807.31
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0127774
  time (eval):    0.305182
  gflops (eval):  136.618
  gflops (total): 131.128
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0127774,0.305182,136.618,131.128

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374315
  gflops (total): 1113.86
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1113.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00781627
  gflops (eval):  5334.17
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00781627,5334.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1796.21
  maximum absolute entry in einsum_ir solution: 1796.21
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131338
  time (eval):    0.304616
  gflops (eval):  136.872
  gflops (total): 131.214
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131338,0.304616,136.872,131.214

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374807
  gflops (total): 1112.39
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1112.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784015
  gflops (eval):  5317.92
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784015,5317.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1718.49
  maximum absolute entry in einsum_ir solution: 1718.49
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128098
  time (eval):    0.305723
  gflops (eval):  136.376
  gflops (total): 130.892
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128098,0.305723,136.376,130.892

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0378684
  gflops (total): 1101
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1101

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00781506
  gflops (eval):  5335
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00781506,5335,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1784.31
  maximum absolute entry in einsum_ir solution: 1784.31
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129575
  time (eval):    0.305078
  gflops (eval):  136.665
  gflops (total): 131.097
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129575,0.305078,136.665,131.097

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371495
  gflops (total): 1122.31
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1122.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00780447
  gflops (eval):  5342.24
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00780447,5342.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1782.47
  maximum absolute entry in einsum_ir solution: 1782.47
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130186
  time (eval):    0.305308
  gflops (eval):  136.561
  gflops (total): 130.976
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130186,0.305308,136.561,130.976

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376249
  gflops (total): 1108.13
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1108.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779525
  gflops (eval):  5348.56
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779525,5348.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1734.22
  maximum absolute entry in einsum_ir solution: 1734.22
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128841
  time (eval):    0.30495
  gflops (eval):  136.722
  gflops (total): 131.179
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128841,0.30495,136.722,131.179

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376093
  gflops (total): 1108.59
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1108.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00787471
  gflops (eval):  5294.59
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00787471,5294.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1637.81
  maximum absolute entry in einsum_ir solution: 1637.81
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129138
  time (eval):    0.304441
  gflops (eval):  136.951
  gflops (total): 131.378
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129138,0.304441,136.951,131.378

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.036894
  gflops (total): 1130.09
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1130.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00778052
  gflops (eval):  5358.69
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00778052,5358.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1587.18
  maximum absolute entry in einsum_ir solution: 1587.19
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0124823
  time (eval):    0.305328
  gflops (eval):  136.553
  gflops (total): 131.189
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0124823,0.305328,136.553,131.189

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0370497
  gflops (total): 1125.34
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1125.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00783888
  gflops (eval):  5318.79
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00783888,5318.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1672.99
  maximum absolute entry in einsum_ir solution: 1672.98
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130839
  time (eval):    0.305417
  gflops (eval):  136.513
  gflops (total): 130.905
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130839,0.305417,136.513,130.905

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372132
  gflops (total): 1120.39
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1120.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782643
  gflops (eval):  5327.25
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782643,5327.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1779.6
  maximum absolute entry in einsum_ir solution: 1779.6
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129669
  time (eval):    0.305251
  gflops (eval):  136.587
  gflops (total): 131.021
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129669,0.305251,136.587,131.021

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375977
  gflops (total): 1108.93
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1108.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00790301
  gflops (eval):  5275.63
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00790301,5275.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1806.31
  maximum absolute entry in einsum_ir solution: 1806.31
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129977
  time (eval):    0.305528
  gflops (eval):  136.463
  gflops (total): 130.895
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129977,0.305528,136.463,130.895

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374538
  gflops (total): 1113.2
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1113.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00787061
  gflops (eval):  5297.34
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00787061,5297.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1713.9
  maximum absolute entry in einsum_ir solution: 1713.9
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130189
  time (eval):    0.305302
  gflops (eval):  136.564
  gflops (total): 130.979
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130189,0.305302,136.564,130.979

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.036977
  gflops (total): 1127.55
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1127.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00783984
  gflops (eval):  5318.14
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00783984,5318.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1761.67
  maximum absolute entry in einsum_ir solution: 1761.67
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131498
  time (eval):    0.30513
  gflops (eval):  136.641
  gflops (total): 130.996
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131498,0.30513,136.641,130.996

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372142
  gflops (total): 1120.36
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1120.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785387
  gflops (eval):  5308.63
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785387,5308.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1647.42
  maximum absolute entry in einsum_ir solution: 1647.42
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129313
  time (eval):    0.305063
  gflops (eval):  136.671
  gflops (total): 131.113
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129313,0.305063,136.671,131.113

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373248
  gflops (total): 1117.04
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1117.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00791707
  gflops (eval):  5266.26
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00791707,5266.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1653.58
  maximum absolute entry in einsum_ir solution: 1653.58
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0127492
  time (eval):    0.304509
  gflops (eval):  136.92
  gflops (total): 131.417
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0127492,0.304509,136.92,131.417

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0370796
  gflops (total): 1124.43
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1124.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00778799
  gflops (eval):  5353.54
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00778799,5353.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1659.95
  maximum absolute entry in einsum_ir solution: 1659.95
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129552
  time (eval):    0.305093
  gflops (eval):  136.658
  gflops (total): 131.091
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129552,0.305093,136.658,131.091

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374868
  gflops (total): 1112.21
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1112.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00780533
  gflops (eval):  5341.65
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00780533,5341.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1669.7
  maximum absolute entry in einsum_ir solution: 1669.7
  maximum element-wise difference:              0.00250244
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.013874
  time (eval):    0.305159
  gflops (eval):  136.628
  gflops (total): 130.687
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.013874,0.305159,136.628,130.687

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0368731
  gflops (total): 1130.73
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1130.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00791547
  gflops (eval):  5267.32
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00791547,5267.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1815.14
  maximum absolute entry in einsum_ir solution: 1815.14
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129522
  time (eval):    0.304737
  gflops (eval):  136.817
  gflops (total): 131.239
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129522,0.304737,136.817,131.239

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371543
  gflops (total): 1122.17
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1122.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784193
  gflops (eval):  5316.72
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784193,5316.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1707.25
  maximum absolute entry in einsum_ir solution: 1707.26
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131034
  time (eval):    0.304871
  gflops (eval):  136.757
  gflops (total): 131.122
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131034,0.304871,136.757,131.122

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372715
  gflops (total): 1118.64
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1118.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779479
  gflops (eval):  5348.87
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779479,5348.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1845.92
  maximum absolute entry in einsum_ir solution: 1845.92
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129655
  time (eval):    0.305529
  gflops (eval):  136.463
  gflops (total): 130.908
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129655,0.305529,136.463,130.908

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.036997
  gflops (total): 1126.94
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1126.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00785481
  gflops (eval):  5308
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00785481,5308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1881.83
  maximum absolute entry in einsum_ir solution: 1881.83
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0127884
  time (eval):    0.30502
  gflops (eval):  136.691
  gflops (total): 131.19
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0127884,0.30502,136.691,131.19

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0370541
  gflops (total): 1125.2
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1125.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00781365
  gflops (eval):  5335.96
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00781365,5335.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1654.73
  maximum absolute entry in einsum_ir solution: 1654.73
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128961
  time (eval):    0.305048
  gflops (eval):  136.678
  gflops (total): 131.134
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128961,0.305048,136.678,131.134

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373862
  gflops (total): 1115.21
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1115.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00789344
  gflops (eval):  5282.02
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00789344,5282.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1973.92
  maximum absolute entry in einsum_ir solution: 1973.92
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129109
  time (eval):    0.305652
  gflops (eval):  136.408
  gflops (total): 130.88
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129109,0.305652,136.408,130.88

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373826
  gflops (total): 1115.31
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1115.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779664
  gflops (eval):  5347.6
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779664,5347.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1715.16
  maximum absolute entry in einsum_ir solution: 1715.16
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.013098
  time (eval):    0.304902
  gflops (eval):  136.744
  gflops (total): 131.111
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.013098,0.304902,136.744,131.111

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0368728
  gflops (total): 1130.74
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1130.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782399
  gflops (eval):  5328.91
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782399,5328.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1694.77
  maximum absolute entry in einsum_ir solution: 1694.77
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0127654
  time (eval):    0.305766
  gflops (eval):  136.357
  gflops (total): 130.892
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0127654,0.305766,136.357,130.892

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373932
  gflops (total): 1115
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1115

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779128
  gflops (eval):  5351.28
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779128,5351.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1647.23
  maximum absolute entry in einsum_ir solution: 1647.23
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.012939
  time (eval):    0.305714
  gflops (eval):  136.38
  gflops (total): 130.842
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.012939,0.305714,136.38,130.842

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373169
  gflops (total): 1117.28
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1117.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784319
  gflops (eval):  5315.87
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784319,5315.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1704.28
  maximum absolute entry in einsum_ir solution: 1704.28
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129204
  time (eval):    0.305206
  gflops (eval):  136.607
  gflops (total): 131.059
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129204,0.305206,136.607,131.059

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375741
  gflops (total): 1109.63
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1109.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00788221
  gflops (eval):  5289.55
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00788221,5289.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1839.76
  maximum absolute entry in einsum_ir solution: 1839.76
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0132408
  time (eval):    0.305513
  gflops (eval):  136.47
  gflops (total): 130.801
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0132408,0.305513,136.47,130.801

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376359
  gflops (total): 1107.81
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1107.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0079087
  gflops (eval):  5271.83
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0079087,5271.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1581.98
  maximum absolute entry in einsum_ir solution: 1581.98
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128116
  time (eval):    0.304936
  gflops (eval):  136.728
  gflops (total): 131.215
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128116,0.304936,136.728,131.215

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0368387
  gflops (total): 1131.78
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1131.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784738
  gflops (eval):  5313.03
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784738,5313.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1884.16
  maximum absolute entry in einsum_ir solution: 1884.16
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130666
  time (eval):    0.305396
  gflops (eval):  136.522
  gflops (total): 130.921
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130666,0.305396,136.522,130.921

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0370681
  gflops (total): 1124.78
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1124.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779594
  gflops (eval):  5348.08
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779594,5348.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1856.13
  maximum absolute entry in einsum_ir solution: 1856.13
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128548
  time (eval):    0.30516
  gflops (eval):  136.628
  gflops (total): 131.105
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128548,0.30516,136.628,131.105

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0369383
  gflops (total): 1128.73
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1128.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00790511
  gflops (eval):  5274.22
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00790511,5274.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1783.16
  maximum absolute entry in einsum_ir solution: 1783.16
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128733
  time (eval):    0.305104
  gflops (eval):  136.653
  gflops (total): 131.121
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128733,0.305104,136.653,131.121

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.036925
  gflops (total): 1129.14
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1129.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0078807
  gflops (eval):  5290.56
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0078807,5290.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1729.91
  maximum absolute entry in einsum_ir solution: 1729.92
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129176
  time (eval):    0.305701
  gflops (eval):  136.386
  gflops (total): 130.857
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129176,0.305701,136.386,130.857

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372326
  gflops (total): 1119.81
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1119.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784579
  gflops (eval):  5314.1
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784579,5314.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1661.15
  maximum absolute entry in einsum_ir solution: 1661.15
  maximum element-wise difference:              0.00286865
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128986
  time (eval):    0.305691
  gflops (eval):  136.391
  gflops (total): 130.869
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128986,0.305691,136.391,130.869

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0368716
  gflops (total): 1130.77
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1130.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00786967
  gflops (eval):  5297.97
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00786967,5297.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1726.37
  maximum absolute entry in einsum_ir solution: 1726.37
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130863
  time (eval):    0.305555
  gflops (eval):  136.451
  gflops (total): 130.847
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130863,0.305555,136.451,130.847

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0369949
  gflops (total): 1127
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1127

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0079521
  gflops (eval):  5243.06
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0079521,5243.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1907.93
  maximum absolute entry in einsum_ir solution: 1907.93
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131483
  time (eval):    0.305545
  gflops (eval):  136.456
  gflops (total): 130.826
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131483,0.305545,136.456,130.826

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373008
  gflops (total): 1117.76
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1117.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779691
  gflops (eval):  5347.41
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779691,5347.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1822.36
  maximum absolute entry in einsum_ir solution: 1822.36
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130928
  time (eval):    0.305543
  gflops (eval):  136.456
  gflops (total): 130.849
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130928,0.305543,136.456,130.849

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.037014
  gflops (total): 1126.42
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1126.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784398
  gflops (eval):  5315.33
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784398,5315.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1696.84
  maximum absolute entry in einsum_ir solution: 1696.84
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0139206
  time (eval):    0.305423
  gflops (eval):  136.51
  gflops (total): 130.559
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0139206,0.305423,136.51,130.559

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373844
  gflops (total): 1115.26
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1115.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0078168
  gflops (eval):  5333.81
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0078168,5333.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1788.31
  maximum absolute entry in einsum_ir solution: 1788.31
  maximum element-wise difference:              0.00286865
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129166
  time (eval):    0.305223
  gflops (eval):  136.6
  gflops (total): 131.054
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129166,0.305223,136.6,131.054

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0369203
  gflops (total): 1129.28
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1129.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00781926
  gflops (eval):  5332.13
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00781926,5332.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1893.26
  maximum absolute entry in einsum_ir solution: 1893.26
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.012996
  time (eval):    0.305547
  gflops (eval):  136.455
  gflops (total): 130.888
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.012996,0.305547,136.455,130.888

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375285
  gflops (total): 1110.98
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1110.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00781666
  gflops (eval):  5333.9
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00781666,5333.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1613.28
  maximum absolute entry in einsum_ir solution: 1613.28
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128655
  time (eval):    0.305212
  gflops (eval):  136.604
  gflops (total): 131.079
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128655,0.305212,136.604,131.079

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374267
  gflops (total): 1114
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1114

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779204
  gflops (eval):  5350.76
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779204,5350.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1783.33
  maximum absolute entry in einsum_ir solution: 1783.34
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129374
  time (eval):    0.305685
  gflops (eval):  136.393
  gflops (total): 130.855
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129374,0.305685,136.393,130.855

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372267
  gflops (total): 1119.99
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1119.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00787133
  gflops (eval):  5296.86
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00787133,5296.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1573.83
  maximum absolute entry in einsum_ir solution: 1573.83
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0127126
  time (eval):    0.305052
  gflops (eval):  136.676
  gflops (total): 131.208
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0127126,0.305052,136.676,131.208

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0369612
  gflops (total): 1128.03
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1128.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779042
  gflops (eval):  5351.87
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779042,5351.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1733.82
  maximum absolute entry in einsum_ir solution: 1733.82
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128557
  time (eval):    0.305444
  gflops (eval):  136.501
  gflops (total): 130.988
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128557,0.305444,136.501,130.988

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372668
  gflops (total): 1118.78
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1118.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0078477
  gflops (eval):  5312.81
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0078477,5312.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1935.01
  maximum absolute entry in einsum_ir solution: 1935.01
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0126953
  time (eval):    0.304953
  gflops (eval):  136.721
  gflops (total): 131.256
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0126953,0.304953,136.721,131.256

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372542
  gflops (total): 1119.16
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1119.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00786793
  gflops (eval):  5299.15
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00786793,5299.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1733.85
  maximum absolute entry in einsum_ir solution: 1733.85
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129338
  time (eval):    0.30516
  gflops (eval):  136.628
  gflops (total): 131.073
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129338,0.30516,136.628,131.073

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0369349
  gflops (total): 1128.83
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1128.83

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00782179
  gflops (eval):  5330.41
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00782179,5330.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1931.81
  maximum absolute entry in einsum_ir solution: 1931.81
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128617
  time (eval):    0.305501
  gflops (eval):  136.475
  gflops (total): 130.962
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128617,0.305501,136.475,130.962

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0376725
  gflops (total): 1106.73
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1106.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00777102
  gflops (eval):  5365.24
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00777102,5365.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1660.12
  maximum absolute entry in einsum_ir solution: 1660.11
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129458
  time (eval):    0.305605
  gflops (eval):  136.429
  gflops (total): 130.885
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129458,0.305605,136.429,130.885

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.037257
  gflops (total): 1119.07
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1119.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0078075
  gflops (eval):  5340.17
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0078075,5340.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1777.14
  maximum absolute entry in einsum_ir solution: 1777.14
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129546
  time (eval):    0.304661
  gflops (eval):  136.851
  gflops (total): 131.27
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129546,0.304661,136.851,131.27

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375418
  gflops (total): 1110.58
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1110.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00781566
  gflops (eval):  5334.59
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00781566,5334.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1748.72
  maximum absolute entry in einsum_ir solution: 1748.72
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129949
  time (eval):    0.305355
  gflops (eval):  136.541
  gflops (total): 130.967
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129949,0.305355,136.541,130.967

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0370428
  gflops (total): 1125.55
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1125.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00783863
  gflops (eval):  5318.96
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00783863,5318.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1969.61
  maximum absolute entry in einsum_ir solution: 1969.61
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128826
  time (eval):    0.305252
  gflops (eval):  136.587
  gflops (total): 131.056
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128826,0.305252,136.587,131.056

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0370669
  gflops (total): 1124.81
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1124.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00781832
  gflops (eval):  5332.77
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00781832,5332.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1721.41
  maximum absolute entry in einsum_ir solution: 1721.41
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128281
  time (eval):    0.305437
  gflops (eval):  136.504
  gflops (total): 131.002
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128281,0.305437,136.504,131.002

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.037277
  gflops (total): 1118.47
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1118.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00802317
  gflops (eval):  5196.62
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00802317,5196.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1775.77
  maximum absolute entry in einsum_ir solution: 1775.77
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128846
  time (eval):    0.305606
  gflops (eval):  136.429
  gflops (total): 130.909
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128846,0.305606,136.429,130.909

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0375443
  gflops (total): 1110.51
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1110.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00778209
  gflops (eval):  5357.6
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00778209,5357.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1879.17
  maximum absolute entry in einsum_ir solution: 1879.17
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128715
  time (eval):    0.30548
  gflops (eval):  136.485
  gflops (total): 130.966
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128715,0.30548,136.485,130.966

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.038169
  gflops (total): 1092.33
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1092.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00783502
  gflops (eval):  5321.41
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00783502,5321.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1682.86
  maximum absolute entry in einsum_ir solution: 1682.86
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0127915
  time (eval):    0.305132
  gflops (eval):  136.64
  gflops (total): 131.143
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0127915,0.305132,136.64,131.143

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0382355
  gflops (total): 1090.43
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1090.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0079102
  gflops (eval):  5270.83
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0079102,5270.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1850.74
  maximum absolute entry in einsum_ir solution: 1850.74
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0128476
  time (eval):    0.305338
  gflops (eval):  136.548
  gflops (total): 131.035
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0128476,0.305338,136.548,131.035

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371582
  gflops (total): 1122.05
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1122.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00790683
  gflops (eval):  5273.08
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00790683,5273.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1703.17
  maximum absolute entry in einsum_ir solution: 1703.17
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130017
  time (eval):    0.305821
  gflops (eval):  136.332
  gflops (total): 130.773
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130017,0.305821,136.332,130.773

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374267
  gflops (total): 1114
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1114

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0078259
  gflops (eval):  5327.61
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0078259,5327.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1797.75
  maximum absolute entry in einsum_ir solution: 1797.74
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0130576
  time (eval):    0.305278
  gflops (eval):  136.575
  gflops (total): 130.973
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0130576,0.305278,136.575,130.973

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371726
  gflops (total): 1121.61
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1121.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779623
  gflops (eval):  5347.88
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779623,5347.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1659.32
  maximum absolute entry in einsum_ir solution: 1659.32
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129174
  time (eval):    0.305415
  gflops (eval):  136.514
  gflops (total): 130.974
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129174,0.305415,136.514,130.974

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372173
  gflops (total): 1120.27
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1120.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00787511
  gflops (eval):  5294.32
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00787511,5294.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1703.9
  maximum absolute entry in einsum_ir solution: 1703.89
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0127638
  time (eval):    0.305258
  gflops (eval):  136.584
  gflops (total): 131.102
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0127638,0.305258,136.584,131.102

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0372636
  gflops (total): 1118.88
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1118.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779361
  gflops (eval):  5349.68
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779361,5349.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1819.03
  maximum absolute entry in einsum_ir solution: 1819.03
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129536
  time (eval):    0.305446
  gflops (eval):  136.5
  gflops (total): 130.946
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129536,0.305446,136.5,130.946

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0367841
  gflops (total): 1133.46
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1133.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00776597
  gflops (eval):  5368.72
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00776597,5368.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1688.47
  maximum absolute entry in einsum_ir solution: 1688.47
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129643
  time (eval):    0.305544
  gflops (eval):  136.456
  gflops (total): 130.902
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129643,0.305544,136.456,130.902

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0373821
  gflops (total): 1115.33
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1115.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00779999
  gflops (eval):  5345.31
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00779999,5345.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1702.5
  maximum absolute entry in einsum_ir solution: 1702.5
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0131032
  time (eval):    0.305294
  gflops (eval):  136.568
  gflops (total): 130.947
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0131032,0.305294,136.568,130.947

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0374266
  gflops (total): 1114
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1114

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784114
  gflops (eval):  5317.25
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784114,5317.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1672.68
  maximum absolute entry in einsum_ir solution: 1672.68
  maximum element-wise difference:              0.00256348
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0129095
  time (eval):    0.305502
  gflops (eval):  136.475
  gflops (total): 130.942
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0129095,0.305502,136.475,130.942

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.0371208
  gflops (total): 1123.18
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,1123.18

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.00784756
  gflops (eval):  5312.9
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.00784756,5312.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1828.57
  maximum absolute entry in einsum_ir solution: 1828.57
  maximum element-wise difference:              0.00274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129075
  time (eval):    0.0117099
  gflops (eval):  3555.9
  gflops (total): 1691.46
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129075,0.0117099,3555.9,1691.46

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0242015
  gflops (total): 1720.52
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1720.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268207
  gflops (eval):  1552.5
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268207,1552.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.566
  maximum absolute entry in einsum_ir solution: 111.566
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131185
  time (eval):    0.0117672
  gflops (eval):  3538.58
  gflops (total): 1673.22
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131185,0.0117672,3538.58,1673.22

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0236775
  gflops (total): 1758.59
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1758.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0264282
  gflops (eval):  1575.56
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0264282,1575.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.2
  maximum absolute entry in einsum_ir solution: 112.2
  maximum element-wise difference:              0.000118256
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133115
  time (eval):    0.011821
  gflops (eval):  3522.48
  gflops (total): 1656.79
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133115,0.011821,3522.48,1656.79

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0236042
  gflops (total): 1764.06
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1764.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267438
  gflops (eval):  1556.97
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267438,1556.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      127.555
  maximum absolute entry in einsum_ir solution: 127.555
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131752
  time (eval):    0.0118202
  gflops (eval):  3522.73
  gflops (total): 1665.87
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131752,0.0118202,3522.73,1665.87

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234947
  gflops (total): 1772.28
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1772.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0271624
  gflops (eval):  1532.97
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0271624,1532.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.621
  maximum absolute entry in einsum_ir solution: 108.621
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131598
  time (eval):    0.0117942
  gflops (eval):  3530.49
  gflops (total): 1668.64
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131598,0.0117942,3530.49,1668.64

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.023096
  gflops (total): 1802.87
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1802.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0264989
  gflops (eval):  1571.36
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0264989,1571.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.027
  maximum absolute entry in einsum_ir solution: 109.027
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129741
  time (eval):    0.0118793
  gflops (eval):  3505.2
  gflops (total): 1675.39
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129741,0.0118793,3505.2,1675.39

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0248856
  gflops (total): 1673.23
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1673.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0269707
  gflops (eval):  1543.87
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0269707,1543.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.544
  maximum absolute entry in einsum_ir solution: 115.544
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132802
  time (eval):    0.0117485
  gflops (eval):  3544.2
  gflops (total): 1663.66
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132802,0.0117485,3544.2,1663.66

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0227833
  gflops (total): 1827.62
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1827.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0264738
  gflops (eval):  1572.85
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0264738,1572.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.947
  maximum absolute entry in einsum_ir solution: 117.947
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132024
  time (eval):    0.011886
  gflops (eval):  3503.21
  gflops (total): 1659.7
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132024,0.011886,3503.21,1659.7

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0229731
  gflops (total): 1812.52
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1812.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0263084
  gflops (eval):  1582.74
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0263084,1582.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.633
  maximum absolute entry in einsum_ir solution: 114.633
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131583
  time (eval):    0.0118288
  gflops (eval):  3520.17
  gflops (total): 1666.43
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131583,0.0118288,3520.17,1666.43

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0244328
  gflops (total): 1704.23
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1704.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0272438
  gflops (eval):  1528.39
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0272438,1528.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.894
  maximum absolute entry in einsum_ir solution: 110.894
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129966
  time (eval):    0.0117863
  gflops (eval):  3532.85
  gflops (total): 1680.16
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129966,0.0117863,3532.85,1680.16

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0231079
  gflops (total): 1801.95
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1801.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0262931
  gflops (eval):  1583.65
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0262931,1583.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.151
  maximum absolute entry in einsum_ir solution: 113.151
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130611
  time (eval):    0.0117889
  gflops (eval):  3532.08
  gflops (total): 1675.62
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130611,0.0117889,3532.08,1675.62

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0226884
  gflops (total): 1835.26
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1835.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268853
  gflops (eval):  1548.77
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268853,1548.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.874
  maximum absolute entry in einsum_ir solution: 112.874
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131387
  time (eval):    0.0117162
  gflops (eval):  3553.97
  gflops (total): 1675.29
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131387,0.0117162,3553.97,1675.29

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0233979
  gflops (total): 1779.61
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1779.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0264844
  gflops (eval):  1572.21
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0264844,1572.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.293
  maximum absolute entry in einsum_ir solution: 113.293
  maximum element-wise difference:              0.000137329
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0128666
  time (eval):    0.0117703
  gflops (eval):  3537.63
  gflops (total): 1690.11
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0128666,0.0117703,3537.63,1690.11

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0235157
  gflops (total): 1770.69
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1770.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.026565
  gflops (eval):  1567.44
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.026565,1567.44,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.268
  maximum absolute entry in einsum_ir solution: 113.268
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013226
  time (eval):    0.0118554
  gflops (eval):  3512.24
  gflops (total): 1660.16
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013226,0.0118554,3512.24,1660.16

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0231434
  gflops (total): 1799.18
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1799.18

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0262816
  gflops (eval):  1584.35
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0262816,1584.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.806
  maximum absolute entry in einsum_ir solution: 111.806
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130561
  time (eval):    0.0117448
  gflops (eval):  3545.33
  gflops (total): 1678.94
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130561,0.0117448,3545.33,1678.94

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0240293
  gflops (total): 1732.85
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1732.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268888
  gflops (eval):  1548.57
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268888,1548.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.416
  maximum absolute entry in einsum_ir solution: 112.416
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132883
  time (eval):    0.0118188
  gflops (eval):  3523.13
  gflops (total): 1658.46
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132883,0.0118188,3523.13,1658.46

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0235903
  gflops (total): 1765.1
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1765.1

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0269333
  gflops (eval):  1546.01
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0269333,1546.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      122.417
  maximum absolute entry in einsum_ir solution: 122.417
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131922
  time (eval):    0.011851
  gflops (eval):  3513.57
  gflops (total): 1662.7
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131922,0.011851,3513.57,1662.7

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0229318
  gflops (total): 1815.79
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1815.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265128
  gflops (eval):  1570.53
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265128,1570.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      128.733
  maximum absolute entry in einsum_ir solution: 128.733
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130365
  time (eval):    0.0117952
  gflops (eval):  3530.17
  gflops (total): 1676.86
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130365,0.0117952,3530.17,1676.86

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0229702
  gflops (total): 1812.75
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1812.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0269481
  gflops (eval):  1545.16
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0269481,1545.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.099
  maximum absolute entry in einsum_ir solution: 111.099
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131554
  time (eval):    0.0118133
  gflops (eval):  3524.76
  gflops (total): 1667.65
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131554,0.0118133,3524.76,1667.65

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0233654
  gflops (total): 1782.09
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1782.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268789
  gflops (eval):  1549.14
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268789,1549.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.449
  maximum absolute entry in einsum_ir solution: 111.449
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130711
  time (eval):    0.0117889
  gflops (eval):  3532.07
  gflops (total): 1674.95
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130711,0.0117889,3532.07,1674.95

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.023906
  gflops (total): 1741.79
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1741.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266078
  gflops (eval):  1564.93
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266078,1564.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.345
  maximum absolute entry in einsum_ir solution: 110.345
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013009
  time (eval):    0.0118612
  gflops (eval):  3510.54
  gflops (total): 1674.26
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013009,0.0118612,3510.54,1674.26

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0231965
  gflops (total): 1795.06
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1795.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.027031
  gflops (eval):  1540.43
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.027031,1540.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.904
  maximum absolute entry in einsum_ir solution: 117.904
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013061
  time (eval):    0.0118438
  gflops (eval):  3515.69
  gflops (total): 1671.93
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013061,0.0118438,3515.69,1671.93

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0230744
  gflops (total): 1804.56
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1804.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266722
  gflops (eval):  1561.14
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266722,1561.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.131
  maximum absolute entry in einsum_ir solution: 113.131
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130617
  time (eval):    0.0118219
  gflops (eval):  3522.22
  gflops (total): 1673.36
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130617,0.0118219,3522.22,1673.36

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232004
  gflops (total): 1794.76
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1794.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0273378
  gflops (eval):  1523.14
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0273378,1523.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.515
  maximum absolute entry in einsum_ir solution: 116.515
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0135341
  time (eval):    0.0118465
  gflops (eval):  3514.88
  gflops (total): 1640.59
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0135341,0.0118465,3514.88,1640.59

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0223114
  gflops (total): 1866.27
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1866.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0264049
  gflops (eval):  1576.95
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0264049,1576.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.733
  maximum absolute entry in einsum_ir solution: 113.733
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129702
  time (eval):    0.0119099
  gflops (eval):  3496.19
  gflops (total): 1673.6
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129702,0.0119099,3496.19,1673.6

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0229499
  gflops (total): 1814.35
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1814.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266544
  gflops (eval):  1562.19
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266544,1562.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.395
  maximum absolute entry in einsum_ir solution: 114.395
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130194
  time (eval):    0.0118351
  gflops (eval):  3518.28
  gflops (total): 1675.32
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130194,0.0118351,3518.28,1675.32

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0245786
  gflops (total): 1694.12
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1694.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0270546
  gflops (eval):  1539.08
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0270546,1539.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.954
  maximum absolute entry in einsum_ir solution: 116.954
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130285
  time (eval):    0.0118872
  gflops (eval):  3502.85
  gflops (total): 1671.2
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130285,0.0118872,3502.85,1671.2

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232019
  gflops (total): 1794.64
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1794.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0263673
  gflops (eval):  1579.2
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0263673,1579.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.662
  maximum absolute entry in einsum_ir solution: 109.662
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130748
  time (eval):    0.0118661
  gflops (eval):  3509.09
  gflops (total): 1669.52
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130748,0.0118661,3509.09,1669.52

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0229887
  gflops (total): 1811.29
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1811.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265728
  gflops (eval):  1566.99
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265728,1566.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.958
  maximum absolute entry in einsum_ir solution: 109.958
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130642
  time (eval):    0.0118008
  gflops (eval):  3528.52
  gflops (total): 1674.61
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130642,0.0118008,3528.52,1674.61

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234224
  gflops (total): 1777.75
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1777.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265841
  gflops (eval):  1566.32
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265841,1566.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.519
  maximum absolute entry in einsum_ir solution: 110.519
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130424
  time (eval):    0.0118924
  gflops (eval):  3501.32
  gflops (total): 1669.92
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130424,0.0118924,3501.32,1669.92

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0243743
  gflops (total): 1708.32
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1708.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0271028
  gflops (eval):  1536.34
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0271028,1536.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.846
  maximum absolute entry in einsum_ir solution: 107.846
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0128126
  time (eval):    0.0118244
  gflops (eval):  3521.46
  gflops (total): 1690.11
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0128126,0.0118244,3521.46,1690.11

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0235518
  gflops (total): 1767.99
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1767.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0276155
  gflops (eval):  1507.82
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0276155,1507.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      122.983
  maximum absolute entry in einsum_ir solution: 122.983
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130637
  time (eval):    0.0117735
  gflops (eval):  3536.69
  gflops (total): 1676.48
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130637,0.0117735,3536.69,1676.48

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0233143
  gflops (total): 1785.99
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1785.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267382
  gflops (eval):  1557.29
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267382,1557.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.505
  maximum absolute entry in einsum_ir solution: 112.505
  maximum element-wise difference:              0.000137329
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130089
  time (eval):    0.0117931
  gflops (eval):  3530.79
  gflops (total): 1678.86
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130089,0.0117931,3530.79,1678.86

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0230727
  gflops (total): 1804.69
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1804.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0269132
  gflops (eval):  1547.17
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0269132,1547.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.203
  maximum absolute entry in einsum_ir solution: 112.203
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131001
  time (eval):    0.0118097
  gflops (eval):  3525.84
  gflops (total): 1671.59
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131001,0.0118097,3525.84,1671.59

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0236506
  gflops (total): 1760.6
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1760.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266337
  gflops (eval):  1563.4
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266337,1563.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.992
  maximum absolute entry in einsum_ir solution: 110.992
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131527
  time (eval):    0.0117035
  gflops (eval):  3557.84
  gflops (total): 1675.2
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131527,0.0117035,3557.84,1675.2

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0236439
  gflops (total): 1761.1
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1761.1

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0270153
  gflops (eval):  1541.32
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0270153,1541.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.048
  maximum absolute entry in einsum_ir solution: 111.048
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130458
  time (eval):    0.0117638
  gflops (eval):  3539.6
  gflops (total): 1678.35
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130458,0.0117638,3539.6,1678.35

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232037
  gflops (total): 1794.51
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1794.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0269274
  gflops (eval):  1546.35
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0269274,1546.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.764
  maximum absolute entry in einsum_ir solution: 110.764
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131384
  time (eval):    0.0117925
  gflops (eval):  3530.99
  gflops (total): 1670.18
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131384,0.0117925,3530.99,1670.18

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232946
  gflops (total): 1787.5
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1787.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266917
  gflops (eval):  1560.01
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266917,1560.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.431
  maximum absolute entry in einsum_ir solution: 108.43
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132538
  time (eval):    0.0117908
  gflops (eval):  3531.49
  gflops (total): 1662.6
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132538,0.0117908,3531.49,1662.6

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0236008
  gflops (total): 1764.31
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1764.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266599
  gflops (eval):  1561.87
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266599,1561.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.119
  maximum absolute entry in einsum_ir solution: 108.119
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131873
  time (eval):    0.0118169
  gflops (eval):  3523.71
  gflops (total): 1665.29
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131873,0.0118169,3523.71,1665.29

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0243643
  gflops (total): 1709.02
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1709.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268966
  gflops (eval):  1548.12
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268966,1548.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.274
  maximum absolute entry in einsum_ir solution: 113.274
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130601
  time (eval):    0.0118356
  gflops (eval):  3518.13
  gflops (total): 1672.54
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130601,0.0118356,3518.13,1672.54

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234166
  gflops (total): 1778.19
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1778.19

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0264306
  gflops (eval):  1575.41
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0264306,1575.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.327
  maximum absolute entry in einsum_ir solution: 113.327
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.012895
  time (eval):    0.0118932
  gflops (eval):  3501.09
  gflops (total): 1679.8
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.012895,0.0118932,3501.09,1679.8

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232088
  gflops (total): 1794.11
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1794.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265373
  gflops (eval):  1569.08
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265373,1569.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.979
  maximum absolute entry in einsum_ir solution: 111.979
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130639
  time (eval):    0.0118059
  gflops (eval):  3526.98
  gflops (total): 1674.29
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130639,0.0118059,3526.98,1674.29

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0243078
  gflops (total): 1713
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1713

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266913
  gflops (eval):  1560.03
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266913,1560.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.03
  maximum absolute entry in einsum_ir solution: 121.03
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131469
  time (eval):    0.0117409
  gflops (eval):  3546.49
  gflops (total): 1673.07
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131469,0.0117409,3546.49,1673.07

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0225403
  gflops (total): 1847.32
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1847.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267007
  gflops (eval):  1559.48
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267007,1559.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.78
  maximum absolute entry in einsum_ir solution: 111.78
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133935
  time (eval):    0.0117581
  gflops (eval):  3541.33
  gflops (total): 1655.53
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133935,0.0117581,3541.33,1655.53

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0244028
  gflops (total): 1706.33
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1706.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266191
  gflops (eval):  1564.26
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266191,1564.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.485
  maximum absolute entry in einsum_ir solution: 114.485
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130896
  time (eval):    0.0119023
  gflops (eval):  3498.42
  gflops (total): 1666.11
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130896,0.0119023,3498.42,1666.11

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232747
  gflops (total): 1789.04
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1789.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266577
  gflops (eval):  1561.99
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266577,1561.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.675
  maximum absolute entry in einsum_ir solution: 114.675
  maximum element-wise difference:              0.000118256
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131499
  time (eval):    0.0118035
  gflops (eval):  3527.7
  gflops (total): 1668.68
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131499,0.0118035,3527.7,1668.68

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0239266
  gflops (total): 1740.29
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1740.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266749
  gflops (eval):  1560.99
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266749,1560.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.219
  maximum absolute entry in einsum_ir solution: 113.219
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131082
  time (eval):    0.0118382
  gflops (eval):  3517.34
  gflops (total): 1669.14
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131082,0.0118382,3517.34,1669.14

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0231409
  gflops (total): 1799.38
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1799.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266228
  gflops (eval):  1564.04
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266228,1564.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.795
  maximum absolute entry in einsum_ir solution: 110.795
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0134819
  time (eval):    0.0118549
  gflops (eval):  3512.41
  gflops (total): 1643.43
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0134819,0.0118549,3512.41,1643.43

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0241955
  gflops (total): 1720.95
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1720.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0270859
  gflops (eval):  1537.3
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0270859,1537.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.733
  maximum absolute entry in einsum_ir solution: 113.733
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131137
  time (eval):    0.0117493
  gflops (eval):  3543.96
  gflops (total): 1674.74
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131137,0.0117493,3543.96,1674.74

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0236307
  gflops (total): 1762.08
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1762.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267817
  gflops (eval):  1554.76
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267817,1554.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.752
  maximum absolute entry in einsum_ir solution: 110.752
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131144
  time (eval):    0.0118054
  gflops (eval):  3527.13
  gflops (total): 1670.93
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131144,0.0118054,3527.13,1670.93

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0233763
  gflops (total): 1781.26
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1781.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0269709
  gflops (eval):  1543.85
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0269709,1543.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.827
  maximum absolute entry in einsum_ir solution: 111.827
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0128259
  time (eval):    0.0118332
  gflops (eval):  3518.83
  gflops (total): 1688.59
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0128259,0.0118332,3518.83,1688.59

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0233516
  gflops (total): 1783.14
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1783.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265056
  gflops (eval):  1570.96
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265056,1570.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.419
  maximum absolute entry in einsum_ir solution: 109.419
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129856
  time (eval):    0.0117664
  gflops (eval):  3538.81
  gflops (total): 1682.25
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129856,0.0117664,3538.81,1682.25

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0240569
  gflops (total): 1730.86
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1730.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0264648
  gflops (eval):  1573.38
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0264648,1573.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.991
  maximum absolute entry in einsum_ir solution: 116.991
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132421
  time (eval):    0.0118914
  gflops (eval):  3501.63
  gflops (total): 1656.72
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132421,0.0118914,3501.63,1656.72

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0231109
  gflops (total): 1801.71
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1801.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268636
  gflops (eval):  1550.02
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268636,1550.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.523
  maximum absolute entry in einsum_ir solution: 112.523
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131148
  time (eval):    0.0118213
  gflops (eval):  3522.38
  gflops (total): 1669.83
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131148,0.0118213,3522.38,1669.83

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0228464
  gflops (total): 1822.57
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1822.57

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265128
  gflops (eval):  1570.53
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265128,1570.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.612
  maximum absolute entry in einsum_ir solution: 119.612
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131374
  time (eval):    0.0117686
  gflops (eval):  3538.16
  gflops (total): 1671.86
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131374,0.0117686,3538.16,1671.86

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0237395
  gflops (total): 1754
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1754

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267637
  gflops (eval):  1555.81
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267637,1555.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.711
  maximum absolute entry in einsum_ir solution: 110.711
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0106278
  time (eval):    0.0118937
  gflops (eval):  3500.94
  gflops (total): 1848.86
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0106278,0.0118937,3500.94,1848.86

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0244059
  gflops (total): 1706.11
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1706.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265087
  gflops (eval):  1570.78
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265087,1570.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      122.697
  maximum absolute entry in einsum_ir solution: 122.697
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013152
  time (eval):    0.0118651
  gflops (eval):  3509.39
  gflops (total): 1664.43
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013152,0.0118651,3509.39,1664.43

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0240063
  gflops (total): 1734.51
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1734.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.02683
  gflops (eval):  1551.96
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.02683,1551.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.273
  maximum absolute entry in einsum_ir solution: 114.273
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0128662
  time (eval):    0.0117986
  gflops (eval):  3529.17
  gflops (total): 1688.21
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0128662,0.0117986,3529.17,1688.21

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232085
  gflops (total): 1794.14
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1794.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0273824
  gflops (eval):  1520.66
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0273824,1520.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.519
  maximum absolute entry in einsum_ir solution: 120.519
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131708
  time (eval):    0.0118581
  gflops (eval):  3511.45
  gflops (total): 1663.65
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131708,0.0118581,3511.45,1663.65

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0229776
  gflops (total): 1812.16
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1812.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266091
  gflops (eval):  1564.85
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266091,1564.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.606
  maximum absolute entry in einsum_ir solution: 116.606
  maximum element-wise difference:              0.000137329
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130658
  time (eval):    0.011834
  gflops (eval):  3518.6
  gflops (total): 1672.27
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130658,0.011834,3518.6,1672.27

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0237552
  gflops (total): 1752.84
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1752.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0278127
  gflops (eval):  1497.13
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0278127,1497.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.559
  maximum absolute entry in einsum_ir solution: 116.559
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0110344
  time (eval):    0.011863
  gflops (eval):  3509.99
  gflops (total): 1818.51
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0110344,0.011863,3509.99,1818.51

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.023705
  gflops (total): 1756.56
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1756.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267666
  gflops (eval):  1555.64
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267666,1555.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.694
  maximum absolute entry in einsum_ir solution: 116.694
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013127
  time (eval):    0.0117986
  gflops (eval):  3529.16
  gflops (total): 1670.54
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013127,0.0117986,3529.16,1670.54

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0242699
  gflops (total): 1715.67
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1715.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265938
  gflops (eval):  1565.75
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265938,1565.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.626
  maximum absolute entry in einsum_ir solution: 114.626
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132209
  time (eval):    0.0117757
  gflops (eval):  3536.04
  gflops (total): 1665.8
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132209,0.0117757,3536.04,1665.8

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0240003
  gflops (total): 1734.94
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1734.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267407
  gflops (eval):  1557.15
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267407,1557.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.801
  maximum absolute entry in einsum_ir solution: 113.801
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0134797
  time (eval):    0.0117865
  gflops (eval):  3532.78
  gflops (total): 1648.02
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0134797,0.0117865,3532.78,1648.02

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0241564
  gflops (total): 1723.73
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1723.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268271
  gflops (eval):  1552.13
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268271,1552.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.179
  maximum absolute entry in einsum_ir solution: 113.179
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.012958
  time (eval):    0.011758
  gflops (eval):  3541.34
  gflops (total): 1684.7
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.012958,0.011758,3541.34,1684.7

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234867
  gflops (total): 1772.88
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1772.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267722
  gflops (eval):  1555.31
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267722,1555.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.809
  maximum absolute entry in einsum_ir solution: 119.809
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013173
  time (eval):    0.0117816
  gflops (eval):  3534.25
  gflops (total): 1668.6
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013173,0.0117816,3534.25,1668.6

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0236179
  gflops (total): 1763.04
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1763.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0264367
  gflops (eval):  1575.05
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0264367,1575.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.623
  maximum absolute entry in einsum_ir solution: 117.623
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133196
  time (eval):    0.0117821
  gflops (eval):  3534.1
  gflops (total): 1658.82
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133196,0.0117821,3534.1,1658.82

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0240469
  gflops (total): 1731.59
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1731.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267828
  gflops (eval):  1554.7
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267828,1554.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.767
  maximum absolute entry in einsum_ir solution: 111.767
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132149
  time (eval):    0.0118907
  gflops (eval):  3501.82
  gflops (total): 1658.56
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132149,0.0118907,3501.82,1658.56

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0237297
  gflops (total): 1754.73
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1754.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268307
  gflops (eval):  1551.92
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268307,1551.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.702
  maximum absolute entry in einsum_ir solution: 110.701
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131471
  time (eval):    0.0117919
  gflops (eval):  3531.16
  gflops (total): 1669.64
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131471,0.0117919,3531.16,1669.64

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.023401
  gflops (total): 1779.38
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1779.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266421
  gflops (eval):  1562.91
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266421,1562.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.5
  maximum absolute entry in einsum_ir solution: 109.5
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131387
  time (eval):    0.0117638
  gflops (eval):  3539.59
  gflops (total): 1672.09
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131387,0.0117638,3539.59,1672.09

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0239335
  gflops (total): 1739.79
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1739.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0271538
  gflops (eval):  1533.45
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0271538,1533.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.642
  maximum absolute entry in einsum_ir solution: 118.642
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0141025
  time (eval):    0.0119058
  gflops (eval):  3497.4
  gflops (total): 1601
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0141025,0.0119058,3497.4,1601

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0227889
  gflops (total): 1827.17
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1827.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268891
  gflops (eval):  1548.55
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268891,1548.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.584
  maximum absolute entry in einsum_ir solution: 110.583
  maximum element-wise difference:              0.000141144
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129337
  time (eval):    0.0117306
  gflops (eval):  3549.63
  gflops (total): 1688.24
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129337,0.0117306,3549.63,1688.24

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.024297
  gflops (total): 1713.76
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1713.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0270972
  gflops (eval):  1536.66
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0270972,1536.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.691
  maximum absolute entry in einsum_ir solution: 117.691
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129913
  time (eval):    0.0118179
  gflops (eval):  3523.39
  gflops (total): 1678.37
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129913,0.0118179,3523.39,1678.37

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232816
  gflops (total): 1788.51
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1788.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0262792
  gflops (eval):  1584.49
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0262792,1584.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      126.544
  maximum absolute entry in einsum_ir solution: 126.544
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0128907
  time (eval):    0.0117787
  gflops (eval):  3535.13
  gflops (total): 1687.89
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0128907,0.0117787,3535.13,1687.89

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0237564
  gflops (total): 1752.76
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1752.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.026748
  gflops (eval):  1556.72
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.026748,1556.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.024
  maximum absolute entry in einsum_ir solution: 112.024
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130123
  time (eval):    0.011837
  gflops (eval):  3517.71
  gflops (total): 1675.67
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130123,0.011837,3517.71,1675.67

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0242078
  gflops (total): 1720.07
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1720.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0271326
  gflops (eval):  1534.66
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0271326,1534.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.974
  maximum absolute entry in einsum_ir solution: 116.974
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131267
  time (eval):    0.0117576
  gflops (eval):  3541.46
  gflops (total): 1673.31
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131267,0.0117576,3541.46,1673.31

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0236242
  gflops (total): 1762.57
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1762.57

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.026567
  gflops (eval):  1567.33
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.026567,1567.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.213
  maximum absolute entry in einsum_ir solution: 114.213
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131108
  time (eval):    0.0118476
  gflops (eval):  3514.57
  gflops (total): 1668.34
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131108,0.0118476,3514.57,1668.34

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0238961
  gflops (total): 1742.51
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1742.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0271778
  gflops (eval):  1532.1
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0271778,1532.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.936
  maximum absolute entry in einsum_ir solution: 109.936
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131574
  time (eval):    0.0118337
  gflops (eval):  3518.7
  gflops (total): 1666.16
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131574,0.0118337,3518.7,1666.16

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232981
  gflops (total): 1787.24
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1787.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0264989
  gflops (eval):  1571.36
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0264989,1571.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.805
  maximum absolute entry in einsum_ir solution: 117.805
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013049
  time (eval):    0.0118238
  gflops (eval):  3521.64
  gflops (total): 1674.08
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013049,0.0118238,3521.64,1674.08

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0239908
  gflops (total): 1735.63
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1735.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268076
  gflops (eval):  1553.26
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268076,1553.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.118
  maximum absolute entry in einsum_ir solution: 120.118
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013151
  time (eval):    0.0117535
  gflops (eval):  3542.7
  gflops (total): 1671.95
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013151,0.0117535,3542.7,1671.95

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0236698
  gflops (total): 1759.17
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1759.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.026865
  gflops (eval):  1549.94
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.026865,1549.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.162
  maximum absolute entry in einsum_ir solution: 120.162
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132445
  time (eval):    0.0119095
  gflops (eval):  3496.29
  gflops (total): 1655.37
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132445,0.0119095,3496.29,1655.37

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0220414
  gflops (total): 1889.13
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1889.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267012
  gflops (eval):  1559.45
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267012,1559.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.477
  maximum absolute entry in einsum_ir solution: 107.477
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133126
  time (eval):    0.0117732
  gflops (eval):  3536.79
  gflops (total): 1659.88
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133126,0.0117732,3536.79,1659.88

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234618
  gflops (total): 1774.76
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1774.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268499
  gflops (eval):  1550.81
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268499,1550.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.46
  maximum absolute entry in einsum_ir solution: 119.46
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0132582
  time (eval):    0.0118934
  gflops (eval):  3501.04
  gflops (total): 1655.53
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0132582,0.0118934,3501.04,1655.53

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0233037
  gflops (total): 1786.81
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1786.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0268675
  gflops (eval):  1549.8
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0268675,1549.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.293
  maximum absolute entry in einsum_ir solution: 113.293
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.01307
  time (eval):    0.0118283
  gflops (eval):  3520.29
  gflops (total): 1672.37
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.01307,0.0118283,3520.29,1672.37

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0236071
  gflops (total): 1763.84
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1763.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0263984
  gflops (eval):  1577.34
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0263984,1577.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.238
  maximum absolute entry in einsum_ir solution: 110.238
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129385
  time (eval):    0.0118679
  gflops (eval):  3508.55
  gflops (total): 1678.57
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129385,0.0118679,3508.55,1678.57

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0231566
  gflops (total): 1798.16
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1798.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266607
  gflops (eval):  1561.82
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266607,1561.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.234
  maximum absolute entry in einsum_ir solution: 110.234
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131691
  time (eval):    0.0126776
  gflops (eval):  3284.46
  gflops (total): 1611.01
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131691,0.0126776,3284.46,1611.01

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0238227
  gflops (total): 1747.88
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1747.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0264666
  gflops (eval):  1573.27
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0264666,1573.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.243
  maximum absolute entry in einsum_ir solution: 112.243
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013044
  time (eval):    0.0118503
  gflops (eval):  3513.78
  gflops (total): 1672.64
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013044,0.0118503,3513.78,1672.64

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234104
  gflops (total): 1778.66
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1778.66

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0269054
  gflops (eval):  1547.61
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0269054,1547.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.435
  maximum absolute entry in einsum_ir solution: 111.435
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131134
  time (eval):    0.0118163
  gflops (eval):  3523.88
  gflops (total): 1670.27
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131134,0.0118163,3523.88,1670.27

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0248973
  gflops (total): 1672.43
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1672.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267069
  gflops (eval):  1559.12
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267069,1559.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.617
  maximum absolute entry in einsum_ir solution: 119.617
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130032
  time (eval):    0.0117532
  gflops (eval):  3542.8
  gflops (total): 1681.95
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130032,0.0117532,3542.8,1681.95

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.024197
  gflops (total): 1720.84
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1720.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266627
  gflops (eval):  1561.7
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266627,1561.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.511
  maximum absolute entry in einsum_ir solution: 117.511
  maximum element-wise difference:              0.000137329
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131389
  time (eval):    0.0119238
  gflops (eval):  3492.12
  gflops (total): 1661.4
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131389,0.0119238,3492.12,1661.4

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0230354
  gflops (total): 1807.62
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1807.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.026849
  gflops (eval):  1550.87
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.026849,1550.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.564
  maximum absolute entry in einsum_ir solution: 114.564
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130584
  time (eval):    0.0117437
  gflops (eval):  3545.68
  gflops (total): 1678.86
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130584,0.0117437,3545.68,1678.86

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0231769
  gflops (total): 1796.58
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1796.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0267808
  gflops (eval):  1554.81
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0267808,1554.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      124.662
  maximum absolute entry in einsum_ir solution: 124.662
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133316
  time (eval):    0.0118437
  gflops (eval):  3515.72
  gflops (total): 1653.97
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133316,0.0118437,3515.72,1653.97

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0234288
  gflops (total): 1777.27
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1777.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0269819
  gflops (eval):  1543.23
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0269819,1543.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.949
  maximum absolute entry in einsum_ir solution: 118.949
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131648
  time (eval):    0.0118644
  gflops (eval):  3509.59
  gflops (total): 1663.62
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131648,0.0118644,3509.59,1663.62

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0232069
  gflops (total): 1794.26
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1794.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0264342
  gflops (eval):  1575.2
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0264342,1575.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.747
  maximum absolute entry in einsum_ir solution: 110.747
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130506
  time (eval):    0.011831
  gflops (eval):  3519.51
  gflops (total): 1673.5
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130506,0.011831,3519.51,1673.5

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0235931
  gflops (total): 1764.89
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1764.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266633
  gflops (eval):  1561.66
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266633,1561.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.264
  maximum absolute entry in einsum_ir solution: 115.264
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0129859
  time (eval):    0.0117667
  gflops (eval):  3538.72
  gflops (total): 1682.21
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0129859,0.0117667,3538.72,1682.21

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0247604
  gflops (total): 1681.68
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1681.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0270715
  gflops (eval):  1538.12
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0270715,1538.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.698
  maximum absolute entry in einsum_ir solution: 117.698
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.013331
  time (eval):    0.01174
  gflops (eval):  3546.77
  gflops (total): 1660.85
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.013331,0.01174,3546.77,1660.85

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0231129
  gflops (total): 1801.56
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1801.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0264501
  gflops (eval):  1574.25
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0264501,1574.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.221
  maximum absolute entry in einsum_ir solution: 110.221
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130468
  time (eval):    0.0117934
  gflops (eval):  3530.72
  gflops (total): 1676.28
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130468,0.0117934,3530.72,1676.28

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0238745
  gflops (total): 1744.09
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1744.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0265072
  gflops (eval):  1570.86
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0265072,1570.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.851
  maximum absolute entry in einsum_ir solution: 112.851
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0133112
  time (eval):    0.0117618
  gflops (eval):  3540.21
  gflops (total): 1660.72
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0133112,0.0117618,3540.21,1660.72

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0229159
  gflops (total): 1817.04
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1817.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0266742
  gflops (eval):  1561.03
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0266742,1561.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.58
  maximum absolute entry in einsum_ir solution: 109.58
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0131816
  time (eval):    0.0117904
  gflops (eval):  3531.62
  gflops (total): 1667.43
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0131816,0.0117904,3531.62,1667.43

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0239688
  gflops (total): 1737.22
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1737.22

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.026595
  gflops (eval):  1565.67
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.026595,1565.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.043
  maximum absolute entry in einsum_ir solution: 112.043
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0130613
  time (eval):    0.0117849
  gflops (eval):  3533.26
  gflops (total): 1675.88
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0130613,0.0117849,3533.26,1675.88

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0238944
  gflops (total): 1742.63
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,1742.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0277137
  gflops (eval):  1502.48
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0277137,1502.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.826
  maximum absolute entry in einsum_ir solution: 112.826
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129613
  time (eval):    0.00823651
  gflops (eval):  5055.3
  gflops (total): 1964.26
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129613,0.00823651,5055.3,1964.26

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0428147
  gflops (total): 972.518
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,972.518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.027083
  gflops (eval):  1537.42
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.027083,1537.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.196
  maximum absolute entry in einsum_ir solution: 104.196
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130137
  time (eval):    0.00833093
  gflops (eval):  4998.01
  gflops (total): 1950.75
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130137,0.00833093,4998.01,1950.75

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0433421
  gflops (total): 960.684
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,960.684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0273303
  gflops (eval):  1523.51
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0273303,1523.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.266
  maximum absolute entry in einsum_ir solution: 120.266
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131976
  time (eval):    0.00819644
  gflops (eval):  5080.02
  gflops (total): 1946.24
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131976,0.00819644,5080.02,1946.24

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0427785
  gflops (total): 973.34
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,973.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268724
  gflops (eval):  1549.47
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268724,1549.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.122
  maximum absolute entry in einsum_ir solution: 113.122
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129473
  time (eval):    0.00831071
  gflops (eval):  5010.17
  gflops (total): 1958.7
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129473,0.00831071,5010.17,1958.7

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0436013
  gflops (total): 954.973
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,954.973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269465
  gflops (eval):  1545.21
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269465,1545.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.5
  maximum absolute entry in einsum_ir solution: 108.5
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132354
  time (eval):    0.00824319
  gflops (eval):  5051.2
  gflops (total): 1938.59
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132354,0.00824319,5051.2,1938.59

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.043393
  gflops (total): 959.557
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,959.557

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269976
  gflops (eval):  1542.29
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269976,1542.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.894
  maximum absolute entry in einsum_ir solution: 110.894
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130009
  time (eval):    0.00827006
  gflops (eval):  5034.79
  gflops (total): 1957.5
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130009,0.00827006,5034.79,1957.5

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0435022
  gflops (total): 957.147
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,957.147

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270559
  gflops (eval):  1538.97
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270559,1538.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.504
  maximum absolute entry in einsum_ir solution: 113.504
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130861
  time (eval):    0.00820138
  gflops (eval):  5076.96
  gflops (total): 1955.99
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130861,0.00820138,5076.96,1955.99

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0442114
  gflops (total): 941.794
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,941.794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.02749
  gflops (eval):  1514.66
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.02749,1514.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.51
  maximum absolute entry in einsum_ir solution: 113.51
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129213
  time (eval):    0.00829872
  gflops (eval):  5017.41
  gflops (total): 1962.2
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129213,0.00829872,5017.41,1962.2

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0431427
  gflops (total): 965.123
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,965.123

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0272918
  gflops (eval):  1525.66
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0272918,1525.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.405
  maximum absolute entry in einsum_ir solution: 111.405
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129993
  time (eval):    0.00832767
  gflops (eval):  4999.96
  gflops (total): 1952.36
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129993,0.00832767,4999.96,1952.36

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0441356
  gflops (total): 943.412
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,943.412

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270665
  gflops (eval):  1538.36
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270665,1538.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.931
  maximum absolute entry in einsum_ir solution: 111.931
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131524
  time (eval):    0.00823012
  gflops (eval):  5059.23
  gflops (total): 1947.29
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131524,0.00823012,5059.23,1947.29

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0439332
  gflops (total): 947.758
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,947.758

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0276179
  gflops (eval):  1507.65
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0276179,1507.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.767
  maximum absolute entry in einsum_ir solution: 109.766
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129396
  time (eval):    0.00824788
  gflops (eval):  5048.33
  gflops (total): 1965.22
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129396,0.00824788,5048.33,1965.22

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0437203
  gflops (total): 952.373
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,952.373

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267057
  gflops (eval):  1559.14
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267057,1559.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.881
  maximum absolute entry in einsum_ir solution: 111.881
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129599
  time (eval):    0.00823289
  gflops (eval):  5057.52
  gflops (total): 1964.72
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129599,0.00823289,5057.52,1964.72

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0427271
  gflops (total): 974.511
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,974.511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269399
  gflops (eval):  1545.59
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269399,1545.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.833
  maximum absolute entry in einsum_ir solution: 112.833
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129321
  time (eval):    0.00828936
  gflops (eval):  5023.07
  gflops (total): 1962.07
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129321,0.00828936,5023.07,1962.07

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.043985
  gflops (total): 946.642
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,946.642

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0272077
  gflops (eval):  1530.37
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0272077,1530.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.886
  maximum absolute entry in einsum_ir solution: 113.886
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130888
  time (eval):    0.00830039
  gflops (eval):  5016.39
  gflops (total): 1946.68
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130888,0.00830039,5016.39,1946.68

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0446922
  gflops (total): 931.663
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,931.663

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270932
  gflops (eval):  1536.85
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270932,1536.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.48
  maximum absolute entry in einsum_ir solution: 110.48
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130108
  time (eval):    0.00832943
  gflops (eval):  4998.91
  gflops (total): 1951.15
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130108,0.00832943,4998.91,1951.15

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0439032
  gflops (total): 948.406
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,948.406

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0276677
  gflops (eval):  1504.93
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0276677,1504.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      133.034
  maximum absolute entry in einsum_ir solution: 133.034
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.011424
  time (eval):    0.00836103
  gflops (eval):  4980.01
  gflops (total): 2104.52
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.011424,0.00836103,4980.01,2104.52

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0425086
  gflops (total): 979.519
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,979.519

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268408
  gflops (eval):  1551.3
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268408,1551.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.634
  maximum absolute entry in einsum_ir solution: 114.634
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130092
  time (eval):    0.00832426
  gflops (eval):  5002.01
  gflops (total): 1951.77
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130092,0.00832426,5002.01,1951.77

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0448321
  gflops (total): 928.755
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,928.755

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.027277
  gflops (eval):  1526.49
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.027277,1526.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.963
  maximum absolute entry in einsum_ir solution: 110.963
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130404
  time (eval):    0.0082632
  gflops (eval):  5038.97
  gflops (total): 1954.5
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130404,0.0082632,5038.97,1954.5

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0434525
  gflops (total): 958.242
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,958.242

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.026975
  gflops (eval):  1543.58
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.026975,1543.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.259
  maximum absolute entry in einsum_ir solution: 111.259
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129671
  time (eval):    0.00823323
  gflops (eval):  5057.32
  gflops (total): 1964.03
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129671,0.00823323,5057.32,1964.03

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0441698
  gflops (total): 942.681
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,942.681

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270648
  gflops (eval):  1538.46
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270648,1538.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.394
  maximum absolute entry in einsum_ir solution: 110.393
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131371
  time (eval):    0.00834363
  gflops (eval):  4990.4
  gflops (total): 1938.39
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131371,0.00834363,4990.4,1938.39

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.04356
  gflops (total): 955.877
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,955.877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0273926
  gflops (eval):  1520.05
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0273926,1520.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.325
  maximum absolute entry in einsum_ir solution: 118.325
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131813
  time (eval):    0.00833881
  gflops (eval):  4993.29
  gflops (total): 1934.84
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131813,0.00833881,4993.29,1934.84

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0428973
  gflops (total): 970.644
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,970.644

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269668
  gflops (eval):  1544.05
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269668,1544.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.841
  maximum absolute entry in einsum_ir solution: 110.841
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130652
  time (eval):    0.00830703
  gflops (eval):  5012.39
  gflops (total): 1948.23
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130652,0.00830703,5012.39,1948.23

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0436656
  gflops (total): 953.567
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,953.567

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268571
  gflops (eval):  1550.35
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268571,1550.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.007
  maximum absolute entry in einsum_ir solution: 108.007
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130733
  time (eval):    0.00829523
  gflops (eval):  5019.51
  gflops (total): 1948.57
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130733,0.00829523,5019.51,1948.57

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.044441
  gflops (total): 936.928
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,936.928

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0271809
  gflops (eval):  1531.89
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0271809,1531.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.226
  maximum absolute entry in einsum_ir solution: 115.226
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130464
  time (eval):    0.00832636
  gflops (eval):  5000.75
  gflops (total): 1948.18
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130464,0.00832636,5000.75,1948.18

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0442348
  gflops (total): 941.295
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,941.295

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268686
  gflops (eval):  1549.69
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268686,1549.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.693
  maximum absolute entry in einsum_ir solution: 114.693
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131667
  time (eval):    0.00824871
  gflops (eval):  5047.82
  gflops (total): 1944.3
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131667,0.00824871,5047.82,1944.3

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0428996
  gflops (total): 970.593
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,970.593

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0275684
  gflops (eval):  1510.36
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0275684,1510.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.916
  maximum absolute entry in einsum_ir solution: 113.916
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0119813
  time (eval):    0.0083173
  gflops (eval):  5006.2
  gflops (total): 2051.27
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0119813,0.0083173,5006.2,2051.27

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0432866
  gflops (total): 961.915
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,961.915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270577
  gflops (eval):  1538.86
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270577,1538.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.94
  maximum absolute entry in einsum_ir solution: 110.94
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131398
  time (eval):    0.00833152
  gflops (eval):  4997.65
  gflops (total): 1939.24
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131398,0.00833152,4997.65,1939.24

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.042549
  gflops (total): 978.59
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,978.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0271961
  gflops (eval):  1531.03
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0271961,1531.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.75
  maximum absolute entry in einsum_ir solution: 108.75
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0127731
  time (eval):    0.00824966
  gflops (eval):  5047.24
  gflops (total): 1980.62
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0127731,0.00824966,5047.24,1980.62

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0444007
  gflops (total): 937.779
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,937.779

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0276578
  gflops (eval):  1505.47
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0276578,1505.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.424
  maximum absolute entry in einsum_ir solution: 111.424
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.013078
  time (eval):    0.00816551
  gflops (eval):  5099.26
  gflops (total): 1960.04
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.013078,0.00816551,5099.26,1960.04

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0426925
  gflops (total): 975.3
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,975.3

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0266895
  gflops (eval):  1560.09
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0266895,1560.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.452
  maximum absolute entry in einsum_ir solution: 114.452
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131242
  time (eval):    0.00829331
  gflops (eval):  5020.68
  gflops (total): 1944.11
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131242,0.00829331,5020.68,1944.11

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0421704
  gflops (total): 987.377
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,987.377

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270902
  gflops (eval):  1537.02
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270902,1537.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.406
  maximum absolute entry in einsum_ir solution: 112.406
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131536
  time (eval):    0.00823555
  gflops (eval):  5055.89
  gflops (total): 1946.69
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131536,0.00823555,5055.89,1946.69

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0434265
  gflops (total): 958.816
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,958.816

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270159
  gflops (eval):  1541.24
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270159,1541.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.562
  maximum absolute entry in einsum_ir solution: 114.562
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132051
  time (eval):    0.00830857
  gflops (eval):  5011.46
  gflops (total): 1935.42
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132051,0.00830857,5011.46,1935.42

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.043571
  gflops (total): 955.637
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,955.637

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268958
  gflops (eval):  1548.12
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268958,1548.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.961
  maximum absolute entry in einsum_ir solution: 109.961
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129893
  time (eval):    0.00825842
  gflops (eval):  5041.89
  gflops (total): 1959.65
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129893,0.00825842,5041.89,1959.65

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.043759
  gflops (total): 951.53
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,951.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0275104
  gflops (eval):  1513.54
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0275104,1513.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.221
  maximum absolute entry in einsum_ir solution: 112.221
  maximum element-wise difference:              0.000102997
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132189
  time (eval):    0.00835089
  gflops (eval):  4986.06
  gflops (total): 1930.39
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132189,0.00835089,4986.06,1930.39

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.043937
  gflops (total): 947.676
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,947.676

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269796
  gflops (eval):  1543.32
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269796,1543.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.356
  maximum absolute entry in einsum_ir solution: 110.356
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130161
  time (eval):    0.00830432
  gflops (eval):  5014.02
  gflops (total): 1952.97
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130161,0.00830432,5014.02,1952.97

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0426721
  gflops (total): 975.768
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,975.768

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270108
  gflops (eval):  1541.53
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270108,1541.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.285
  maximum absolute entry in einsum_ir solution: 114.285
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129345
  time (eval):    0.00830598
  gflops (eval):  5013.02
  gflops (total): 1960.32
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129345,0.00830598,5013.02,1960.32

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0427558
  gflops (total): 973.857
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,973.857

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.026803
  gflops (eval):  1553.48
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.026803,1553.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.049
  maximum absolute entry in einsum_ir solution: 111.049
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131405
  time (eval):    0.00823287
  gflops (eval):  5057.54
  gflops (total): 1948.13
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131405,0.00823287,5057.54,1948.13

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0434942
  gflops (total): 957.324
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,957.324

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270313
  gflops (eval):  1540.36
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270313,1540.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.775
  maximum absolute entry in einsum_ir solution: 107.775
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131186
  time (eval):    0.00832361
  gflops (eval):  5002.4
  gflops (total): 1941.87
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131186,0.00832361,5002.4,1941.87

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0436014
  gflops (total): 954.971
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,954.971

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0276328
  gflops (eval):  1506.83
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0276328,1506.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.591
  maximum absolute entry in einsum_ir solution: 113.591
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131592
  time (eval):    0.00826499
  gflops (eval):  5037.88
  gflops (total): 1943.5
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131592,0.00826499,5037.88,1943.5

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0431327
  gflops (total): 965.347
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,965.347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0271934
  gflops (eval):  1531.18
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0271934,1531.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.401
  maximum absolute entry in einsum_ir solution: 108.401
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129701
  time (eval):    0.00827593
  gflops (eval):  5031.22
  gflops (total): 1959.81
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129701,0.00827593,5031.22,1959.81

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0443106
  gflops (total): 939.686
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,939.686

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268977
  gflops (eval):  1548.02
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268977,1548.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.401
  maximum absolute entry in einsum_ir solution: 107.401
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.013055
  time (eval):    0.00827922
  gflops (eval):  5029.22
  gflops (total): 1951.7
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.013055,0.00827922,5029.22,1951.7

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0428548
  gflops (total): 971.608
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,971.608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269036
  gflops (eval):  1547.67
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269036,1547.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.161
  maximum absolute entry in einsum_ir solution: 118.161
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.012937
  time (eval):    0.00828248
  gflops (eval):  5027.24
  gflops (total): 1962.26
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.012937,0.00828248,5027.24,1962.26

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0442453
  gflops (total): 941.072
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,941.072

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.026925
  gflops (eval):  1546.45
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.026925,1546.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.442
  maximum absolute entry in einsum_ir solution: 116.442
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132288
  time (eval):    0.00824893
  gflops (eval):  5047.69
  gflops (total): 1938.66
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132288,0.00824893,5047.69,1938.66

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.043825
  gflops (total): 950.097
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,950.097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0279184
  gflops (eval):  1491.42
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0279184,1491.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.627
  maximum absolute entry in einsum_ir solution: 111.627
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0128789
  time (eval):    0.00827801
  gflops (eval):  5029.96
  gflops (total): 1968.05
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0128789,0.00827801,5029.96,1968.05

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0433112
  gflops (total): 961.37
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,961.37

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267802
  gflops (eval):  1554.8
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267802,1554.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.071
  maximum absolute entry in einsum_ir solution: 115.071
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131128
  time (eval):    0.00834195
  gflops (eval):  4991.4
  gflops (total): 1940.74
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131128,0.00834195,4991.4,1940.74

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0438597
  gflops (total): 949.346
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,949.346

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.027202
  gflops (eval):  1530.7
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.027202,1530.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.15
  maximum absolute entry in einsum_ir solution: 121.15
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.012928
  time (eval):    0.00820852
  gflops (eval):  5072.54
  gflops (total): 1969.96
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.012928,0.00820852,5072.54,1969.96

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0433198
  gflops (total): 961.179
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,961.179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0278685
  gflops (eval):  1494.09
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0278685,1494.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.466
  maximum absolute entry in einsum_ir solution: 117.466
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131737
  time (eval):    0.00831951
  gflops (eval):  5004.87
  gflops (total): 1937.26
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131737,0.00831951,5004.87,1937.26

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0430119
  gflops (total): 968.059
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,968.059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.027416
  gflops (eval):  1518.75
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.027416,1518.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.027
  maximum absolute entry in einsum_ir solution: 113.027
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130176
  time (eval):    0.00830153
  gflops (eval):  5015.71
  gflops (total): 1953.08
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130176,0.00830153,5015.71,1953.08

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0446988
  gflops (total): 931.524
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,931.524

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0276434
  gflops (eval):  1506.25
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0276434,1506.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.911
  maximum absolute entry in einsum_ir solution: 110.911
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129361
  time (eval):    0.00827331
  gflops (eval):  5032.81
  gflops (total): 1963.18
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129361,0.00827331,5032.81,1963.18

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0427944
  gflops (total): 972.979
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,972.979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270389
  gflops (eval):  1539.93
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270389,1539.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      122.906
  maximum absolute entry in einsum_ir solution: 122.906
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131553
  time (eval):    0.0083039
  gflops (eval):  5014.27
  gflops (total): 1940.34
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131553,0.0083039,5014.27,1940.34

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0444005
  gflops (total): 937.784
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,937.784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269395
  gflops (eval):  1545.61
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269395,1545.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.742
  maximum absolute entry in einsum_ir solution: 114.742
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0127935
  time (eval):    0.00821435
  gflops (eval):  5068.94
  gflops (total): 1982.02
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0127935,0.00821435,5068.94,1982.02

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0435444
  gflops (total): 956.22
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,956.22

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0275497
  gflops (eval):  1511.38
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0275497,1511.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.539
  maximum absolute entry in einsum_ir solution: 118.539
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130452
  time (eval):    0.00823493
  gflops (eval):  5056.27
  gflops (total): 1956.66
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130452,0.00823493,5056.27,1956.66

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0437797
  gflops (total): 951.081
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,951.081

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269442
  gflops (eval):  1545.34
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269442,1545.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      124.677
  maximum absolute entry in einsum_ir solution: 124.678
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129443
  time (eval):    0.00825246
  gflops (eval):  5045.53
  gflops (total): 1964.36
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129443,0.00825246,5045.53,1964.36

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0441196
  gflops (total): 943.753
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,943.753

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269625
  gflops (eval):  1544.29
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269625,1544.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.879
  maximum absolute entry in einsum_ir solution: 118.879
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131314
  time (eval):    0.00830354
  gflops (eval):  5014.49
  gflops (total): 1942.53
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131314,0.00830354,5014.49,1942.53

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.042838
  gflops (total): 971.989
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,971.989

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269173
  gflops (eval):  1546.89
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269173,1546.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.588
  maximum absolute entry in einsum_ir solution: 110.588
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0133273
  time (eval):    0.00828499
  gflops (eval):  5025.72
  gflops (total): 1926.59
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0133273,0.00828499,5025.72,1926.59

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.043489
  gflops (total): 957.438
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,957.438

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0271245
  gflops (eval):  1535.07
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0271245,1535.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.995
  maximum absolute entry in einsum_ir solution: 110.995
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129314
  time (eval):    0.00830498
  gflops (eval):  5013.62
  gflops (total): 1960.7
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129314,0.00830498,5013.62,1960.7

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0430682
  gflops (total): 966.794
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,966.794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0278517
  gflops (eval):  1494.99
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0278517,1494.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.126
  maximum absolute entry in einsum_ir solution: 111.126
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132975
  time (eval):    0.00826302
  gflops (eval):  5039.09
  gflops (total): 1931.22
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132975,0.00826302,5039.09,1931.22

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0433544
  gflops (total): 960.412
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,960.412

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268446
  gflops (eval):  1551.08
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268446,1551.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.901
  maximum absolute entry in einsum_ir solution: 111.901
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129327
  time (eval):    0.00826348
  gflops (eval):  5038.8
  gflops (total): 1964.41
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129327,0.00826348,5038.8,1964.41

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0429247
  gflops (total): 970.025
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,970.025

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267878
  gflops (eval):  1554.37
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267878,1554.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.255
  maximum absolute entry in einsum_ir solution: 111.255
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.012889
  time (eval):    0.00822883
  gflops (eval):  5060.02
  gflops (total): 1971.7
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.012889,0.00822883,5060.02,1971.7

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0434216
  gflops (total): 958.924
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,958.924

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0276992
  gflops (eval):  1503.22
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0276992,1503.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.504
  maximum absolute entry in einsum_ir solution: 111.504
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131844
  time (eval):    0.00827842
  gflops (eval):  5029.71
  gflops (total): 1940.01
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131844,0.00827842,5029.71,1940.01

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0425106
  gflops (total): 979.475
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,979.475

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268536
  gflops (eval):  1550.56
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268536,1550.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.986
  maximum absolute entry in einsum_ir solution: 109.986
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.012674
  time (eval):    0.00833839
  gflops (eval):  4993.54
  gflops (total): 1981.6
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.012674,0.00833839,4993.54,1981.6

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0438428
  gflops (total): 949.713
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,949.713

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0275549
  gflops (eval):  1511.09
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0275549,1511.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.333
  maximum absolute entry in einsum_ir solution: 111.333
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130539
  time (eval):    0.00827602
  gflops (eval):  5031.17
  gflops (total): 1952.09
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130539,0.00827602,5031.17,1952.09

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0434392
  gflops (total): 958.535
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,958.535

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0274428
  gflops (eval):  1517.27
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0274428,1517.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.926
  maximum absolute entry in einsum_ir solution: 117.926
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132924
  time (eval):    0.00831164
  gflops (eval):  5009.61
  gflops (total): 1927.32
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132924,0.00831164,5009.61,1927.32

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.043875
  gflops (total): 949.015
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,949.015

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0271081
  gflops (eval):  1536
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0271081,1536,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.587
  maximum absolute entry in einsum_ir solution: 115.587
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132301
  time (eval):    0.00822457
  gflops (eval):  5062.64
  gflops (total): 1940.74
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132301,0.00822457,5062.64,1940.74

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0441069
  gflops (total): 944.026
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,944.026

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0276484
  gflops (eval):  1505.99
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0276484,1505.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.387
  maximum absolute entry in einsum_ir solution: 112.387
  maximum element-wise difference:              0.0001297
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130151
  time (eval):    0.00827712
  gflops (eval):  5030.49
  gflops (total): 1955.55
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130151,0.00827712,5030.49,1955.55

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0433573
  gflops (total): 960.346
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,960.346

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0271756
  gflops (eval):  1532.18
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0271756,1532.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.166
  maximum absolute entry in einsum_ir solution: 117.166
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0128573
  time (eval):    0.00822144
  gflops (eval):  5064.56
  gflops (total): 1975.35
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0128573,0.00822144,5064.56,1975.35

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0450296
  gflops (total): 924.68
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,924.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0276884
  gflops (eval):  1503.81
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0276884,1503.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.252
  maximum absolute entry in einsum_ir solution: 112.252
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0133262
  time (eval):    0.00830503
  gflops (eval):  5013.59
  gflops (total): 1924.9
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0133262,0.00830503,5013.59,1924.9

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0437285
  gflops (total): 952.195
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,952.195

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269338
  gflops (eval):  1545.94
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269338,1545.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.211
  maximum absolute entry in einsum_ir solution: 109.211
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130353
  time (eval):    0.00830414
  gflops (eval):  5014.13
  gflops (total): 1951.22
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130353,0.00830414,5014.13,1951.22

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0430344
  gflops (total): 967.552
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,967.552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0266376
  gflops (eval):  1563.13
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0266376,1563.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.398
  maximum absolute entry in einsum_ir solution: 112.398
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130019
  time (eval):    0.0083112
  gflops (eval):  5009.87
  gflops (total): 1953.64
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130019,0.0083112,5009.87,1953.64

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0431992
  gflops (total): 963.862
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,963.862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0277056
  gflops (eval):  1502.87
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0277056,1502.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.238
  maximum absolute entry in einsum_ir solution: 114.238
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130846
  time (eval):    0.00829145
  gflops (eval):  5021.8
  gflops (total): 1947.88
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130846,0.00829145,5021.8,1947.88

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0426388
  gflops (total): 976.529
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,976.529

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267357
  gflops (eval):  1557.39
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267357,1557.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.143
  maximum absolute entry in einsum_ir solution: 113.143
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0126024
  time (eval):    0.00822076
  gflops (eval):  5064.98
  gflops (total): 1999.6
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0126024,0.00822076,5064.98,1999.6

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0437779
  gflops (total): 951.12
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,951.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268337
  gflops (eval):  1551.7
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268337,1551.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.697
  maximum absolute entry in einsum_ir solution: 118.697
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130796
  time (eval):    0.00830685
  gflops (eval):  5012.5
  gflops (total): 1946.94
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130796,0.00830685,5012.5,1946.94

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0432348
  gflops (total): 963.068
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,963.068

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0274396
  gflops (eval):  1517.44
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0274396,1517.44,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.416
  maximum absolute entry in einsum_ir solution: 113.416
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129409
  time (eval):    0.00833545
  gflops (eval):  4995.29
  gflops (total): 1957.01
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129409,0.00833545,4995.29,1957.01

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0435487
  gflops (total): 956.126
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,956.126

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.027126
  gflops (eval):  1534.99
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.027126,1534.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.757
  maximum absolute entry in einsum_ir solution: 114.757
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129446
  time (eval):    0.00827988
  gflops (eval):  5028.82
  gflops (total): 1961.8
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129446,0.00827988,5028.82,1961.8

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0435913
  gflops (total): 955.191
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,955.191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0276969
  gflops (eval):  1503.35
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0276969,1503.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.287
  maximum absolute entry in einsum_ir solution: 108.287
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0136679
  time (eval):    0.00827689
  gflops (eval):  5030.64
  gflops (total): 1897.4
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0136679,0.00827689,5030.64,1897.4

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0437503
  gflops (total): 951.719
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,951.719

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269665
  gflops (eval):  1544.07
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269665,1544.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.322
  maximum absolute entry in einsum_ir solution: 108.322
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130453
  time (eval):    0.0081971
  gflops (eval):  5079.61
  gflops (total): 1960.14
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130453,0.0081971,5079.61,1960.14

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0446875
  gflops (total): 931.76
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,931.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0271688
  gflops (eval):  1532.57
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0271688,1532.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.258
  maximum absolute entry in einsum_ir solution: 108.258
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129389
  time (eval):    0.00829079
  gflops (eval):  5022.2
  gflops (total): 1961.31
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129389,0.00829079,5022.2,1961.31

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0437459
  gflops (total): 951.815
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,951.815

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0278411
  gflops (eval):  1495.56
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0278411,1495.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.345
  maximum absolute entry in einsum_ir solution: 120.345
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130052
  time (eval):    0.00829243
  gflops (eval):  5021.21
  gflops (total): 1955.06
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130052,0.00829243,5021.21,1955.06

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0438732
  gflops (total): 949.054
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,949.054

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270971
  gflops (eval):  1536.62
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270971,1536.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.325
  maximum absolute entry in einsum_ir solution: 108.324
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130617
  time (eval):    0.00831752
  gflops (eval):  5006.06
  gflops (total): 1947.59
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130617,0.00831752,5006.06,1947.59

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0435568
  gflops (total): 955.948
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,955.948

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0272616
  gflops (eval):  1527.35
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0272616,1527.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.173
  maximum absolute entry in einsum_ir solution: 114.173
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0128509
  time (eval):    0.00825898
  gflops (eval):  5041.55
  gflops (total): 1972.45
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0128509,0.00825898,5041.55,1972.45

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0439069
  gflops (total): 948.326
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,948.326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0266921
  gflops (eval):  1559.94
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0266921,1559.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.816
  maximum absolute entry in einsum_ir solution: 112.816
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131403
  time (eval):    0.00829384
  gflops (eval):  5020.36
  gflops (total): 1942.61
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131403,0.00829384,5020.36,1942.61

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0431687
  gflops (total): 964.542
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,964.542

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268099
  gflops (eval):  1553.08
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268099,1553.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.127
  maximum absolute entry in einsum_ir solution: 109.127
  maximum element-wise difference:              0.000110626
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.013026
  time (eval):    0.00823149
  gflops (eval):  5058.39
  gflops (total): 1958.75
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.013026,0.00823149,5058.39,1958.75

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.04393
  gflops (total): 947.828
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,947.828

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0278011
  gflops (eval):  1497.71
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0278011,1497.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.947
  maximum absolute entry in einsum_ir solution: 112.947
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129353
  time (eval):    0.00820127
  gflops (eval):  5077.02
  gflops (total): 1969.95
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129353,0.00820127,5077.02,1969.95

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0431199
  gflops (total): 965.633
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,965.633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0271907
  gflops (eval):  1531.33
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0271907,1531.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.045
  maximum absolute entry in einsum_ir solution: 115.045
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129994
  time (eval):    0.00834657
  gflops (eval):  4988.64
  gflops (total): 1950.63
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129994,0.00834657,4988.64,1950.63

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0435415
  gflops (total): 956.284
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,956.284

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270716
  gflops (eval):  1538.07
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270716,1538.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.856
  maximum absolute entry in einsum_ir solution: 121.856
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0124947
  time (eval):    0.00821858
  gflops (eval):  5066.33
  gflops (total): 2010.21
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0124947,0.00821858,5066.33,2010.21

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0428281
  gflops (total): 972.214
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,972.214

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0276638
  gflops (eval):  1505.14
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0276638,1505.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.157
  maximum absolute entry in einsum_ir solution: 113.157
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132508
  time (eval):    0.00826234
  gflops (eval):  5039.5
  gflops (total): 1935.47
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132508,0.00826234,5039.5,1935.47

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0432776
  gflops (total): 962.116
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,962.116

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270126
  gflops (eval):  1541.43
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270126,1541.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      124.48
  maximum absolute entry in einsum_ir solution: 124.48
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130875
  time (eval):    0.00826359
  gflops (eval):  5038.73
  gflops (total): 1950.16
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130875,0.00826359,5038.73,1950.16

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0435013
  gflops (total): 957.168
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,957.168

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0274299
  gflops (eval):  1517.98
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0274299,1517.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.736
  maximum absolute entry in einsum_ir solution: 112.736
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0132816
  time (eval):    0.00817906
  gflops (eval):  5090.81
  gflops (total): 1940.2
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0132816,0.00817906,5090.81,1940.2

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0430832
  gflops (total): 966.456
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,966.456

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0267265
  gflops (eval):  1557.93
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0267265,1557.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.509
  maximum absolute entry in einsum_ir solution: 111.509
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0128303
  time (eval):    0.00824462
  gflops (eval):  5050.33
  gflops (total): 1975.72
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0128303,0.00824462,5050.33,1975.72

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.044006
  gflops (total): 946.191
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,946.191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0271296
  gflops (eval):  1534.78
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0271296,1534.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.496
  maximum absolute entry in einsum_ir solution: 121.496
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.013154
  time (eval):    0.0083167
  gflops (eval):  5006.56
  gflops (total): 1939.29
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.013154,0.0083167,5006.56,1939.29

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0441518
  gflops (total): 943.065
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,943.065

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0270736
  gflops (eval):  1537.95
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0270736,1537.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.064
  maximum absolute entry in einsum_ir solution: 113.064
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.012824
  time (eval):    0.00823315
  gflops (eval):  5057.37
  gflops (total): 1977.39
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.012824,0.00823315,5057.37,1977.39

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0429885
  gflops (total): 968.586
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,968.586

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268994
  gflops (eval):  1547.92
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268994,1547.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.036
  maximum absolute entry in einsum_ir solution: 114.036
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131203
  time (eval):    0.00821805
  gflops (eval):  5066.66
  gflops (total): 1951.32
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131203,0.00821805,5066.66,1951.32

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0438724
  gflops (total): 949.071
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,949.071

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0277037
  gflops (eval):  1502.98
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0277037,1502.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      128.366
  maximum absolute entry in einsum_ir solution: 128.366
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0130493
  time (eval):    0.00829492
  gflops (eval):  5019.7
  gflops (total): 1950.78
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0130493,0.00829492,5019.7,1950.78

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0433988
  gflops (total): 959.428
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,959.428

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0271807
  gflops (eval):  1531.9
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0271807,1531.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.791
  maximum absolute entry in einsum_ir solution: 116.791
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131138
  time (eval):    0.00824081
  gflops (eval):  5052.67
  gflops (total): 1949.84
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131138,0.00824081,5052.67,1949.84

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.043236
  gflops (total): 963.041
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,963.041

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0269003
  gflops (eval):  1547.87
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0269003,1547.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.334
  maximum absolute entry in einsum_ir solution: 110.334
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131359
  time (eval):    0.00829938
  gflops (eval):  5017.01
  gflops (total): 1942.5
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131359,0.00829938,5017.01,1942.5

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0442931
  gflops (total): 940.057
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,940.057

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0272756
  gflops (eval):  1526.57
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0272756,1526.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.74
  maximum absolute entry in einsum_ir solution: 107.74
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0128792
  time (eval):    0.00829831
  gflops (eval):  5017.65
  gflops (total): 1966.15
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0128792,0.00829831,5017.65,1966.15

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0438207
  gflops (total): 950.19
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,950.19

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0271633
  gflops (eval):  1532.88
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0271633,1532.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.582
  maximum absolute entry in einsum_ir solution: 110.582
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0128136
  time (eval):    0.00828499
  gflops (eval):  5025.72
  gflops (total): 1973.5
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0128136,0.00828499,5025.72,1973.5

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0443112
  gflops (total): 939.673
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,939.673

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0276319
  gflops (eval):  1506.88
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0276319,1506.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.923
  maximum absolute entry in einsum_ir solution: 107.923
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0120561
  time (eval):    0.00827776
  gflops (eval):  5030.11
  gflops (total): 2047.71
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0120561,0.00827776,5030.11,2047.71

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0435367
  gflops (total): 956.389
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,956.389

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0266854
  gflops (eval):  1560.33
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0266854,1560.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.462
  maximum absolute entry in einsum_ir solution: 115.462
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0129675
  time (eval):    0.00823085
  gflops (eval):  5058.78
  gflops (total): 1964.21
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0129675,0.00823085,5058.78,1964.21

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0431747
  gflops (total): 964.407
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,964.407

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0268411
  gflops (eval):  1551.28
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0268411,1551.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.923
  maximum absolute entry in einsum_ir solution: 109.923
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0131558
  time (eval):    0.00827095
  gflops (eval):  5034.25
  gflops (total): 1943.27
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0131558,0.00827095,5034.25,1943.27

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0446183
  gflops (total): 933.205
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,933.205

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0275464
  gflops (eval):  1511.56
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0275464,1511.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.246
  maximum absolute entry in einsum_ir solution: 114.246
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0179171
  time (eval):    0.261851
  gflops (eval):  2904.83
  gflops (total): 2718.8
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0179171,0.261851,2904.83,2718.8

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135336
  gflops (total): 5620.32
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5620.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129497
  gflops (eval):  5873.76
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129497,5873.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      455.14
  maximum absolute entry in einsum_ir solution: 455.141
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0172942
  time (eval):    0.259208
  gflops (eval):  2934.44
  gflops (total): 2750.91
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0172942,0.259208,2934.44,2750.91

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135411
  gflops (total): 5617.2
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5617.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.12991
  gflops (eval):  5855.08
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.12991,5855.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.618
  maximum absolute entry in einsum_ir solution: 491.618
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0161009
  time (eval):    0.259835
  gflops (eval):  2927.36
  gflops (total): 2756.55
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0161009,0.259835,2927.36,2756.55

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135914
  gflops (total): 5596.42
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5596.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129871
  gflops (eval):  5856.82
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129871,5856.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.598
  maximum absolute entry in einsum_ir solution: 487.598
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0173858
  time (eval):    0.257207
  gflops (eval):  2957.27
  gflops (total): 2770.03
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0173858,0.257207,2957.27,2770.03

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.137382
  gflops (total): 5536.62
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5536.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130073
  gflops (eval):  5847.75
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130073,5847.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.307
  maximum absolute entry in einsum_ir solution: 498.307
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0171516
  time (eval):    0.260889
  gflops (eval):  2915.54
  gflops (total): 2735.69
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0171516,0.260889,2915.54,2735.69

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13605
  gflops (total): 5590.84
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5590.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129691
  gflops (eval):  5864.98
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129691,5864.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.461
  maximum absolute entry in einsum_ir solution: 492.461
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0178462
  time (eval):    0.255682
  gflops (eval):  2974.92
  gflops (total): 2780.82
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0178462,0.255682,2974.92,2780.82

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136232
  gflops (total): 5583.37
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5583.37

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130291
  gflops (eval):  5837.97
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130291,5837.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.491
  maximum absolute entry in einsum_ir solution: 506.491
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0182989
  time (eval):    0.264433
  gflops (eval):  2876.47
  gflops (total): 2690.3
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0182989,0.264433,2876.47,2690.3

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135465
  gflops (total): 5614.99
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5614.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129155
  gflops (eval):  5889.29
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129155,5889.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.882
  maximum absolute entry in einsum_ir solution: 485.882
  maximum element-wise difference:              0.00025177
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0173126
  time (eval):    0.260701
  gflops (eval):  2917.64
  gflops (total): 2735.95
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0173126,0.260701,2917.64,2735.95

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136374
  gflops (total): 5577.56
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5577.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130076
  gflops (eval):  5847.62
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130076,5847.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.458
  maximum absolute entry in einsum_ir solution: 499.458
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0185349
  time (eval):    0.258553
  gflops (eval):  2941.88
  gflops (total): 2745.09
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0185349,0.258553,2941.88,2745.09

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136598
  gflops (total): 5568.4
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5568.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129948
  gflops (eval):  5853.35
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129948,5853.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.586
  maximum absolute entry in einsum_ir solution: 487.586
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0182252
  time (eval):    0.258626
  gflops (eval):  2941.05
  gflops (total): 2747.44
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0182252,0.258626,2941.05,2747.44

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135247
  gflops (total): 5624.01
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5624.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129722
  gflops (eval):  5863.54
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129722,5863.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.78
  maximum absolute entry in einsum_ir solution: 477.78
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.01864
  time (eval):    0.257467
  gflops (eval):  2954.29
  gflops (total): 2754.85
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.01864,0.257467,2954.29,2754.85

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136591
  gflops (total): 5568.68
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5568.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129561
  gflops (eval):  5870.83
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129561,5870.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.892
  maximum absolute entry in einsum_ir solution: 481.892
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0173529
  time (eval):    0.260979
  gflops (eval):  2914.53
  gflops (total): 2732.82
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0173529,0.260979,2914.53,2732.82

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136203
  gflops (total): 5584.56
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5584.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129976
  gflops (eval):  5852.1
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129976,5852.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.915
  maximum absolute entry in einsum_ir solution: 468.915
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0189915
  time (eval):    0.258549
  gflops (eval):  2941.93
  gflops (total): 2740.62
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0189915,0.258549,2941.93,2740.62

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136388
  gflops (total): 5576.97
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5576.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129882
  gflops (eval):  5856.31
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129882,5856.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      462.63
  maximum absolute entry in einsum_ir solution: 462.63
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0186357
  time (eval):    0.259113
  gflops (eval):  2935.52
  gflops (total): 2738.56
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0186357,0.259113,2935.52,2738.56

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136248
  gflops (total): 5582.7
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5582.7

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130061
  gflops (eval):  5848.26
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130061,5848.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.205
  maximum absolute entry in einsum_ir solution: 477.205
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0179211
  time (eval):    0.256708
  gflops (eval):  2963.03
  gflops (total): 2769.68
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0179211,0.256708,2963.03,2769.68

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135382
  gflops (total): 5618.43
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5618.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129398
  gflops (eval):  5878.22
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129398,5878.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.883
  maximum absolute entry in einsum_ir solution: 471.883
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0180266
  time (eval):    0.26115
  gflops (eval):  2912.63
  gflops (total): 2724.56
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0180266,0.26115,2912.63,2724.56

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135772
  gflops (total): 5602.26
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5602.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129828
  gflops (eval):  5858.78
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129828,5858.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.298
  maximum absolute entry in einsum_ir solution: 502.298
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0173245
  time (eval):    0.256032
  gflops (eval):  2970.85
  gflops (total): 2782.57
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0173245,0.256032,2970.85,2782.57

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135377
  gflops (total): 5618.63
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5618.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129386
  gflops (eval):  5878.77
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129386,5878.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      463.273
  maximum absolute entry in einsum_ir solution: 463.273
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.019012
  time (eval):    0.262483
  gflops (eval):  2897.83
  gflops (total): 2702.12
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.019012,0.262483,2897.83,2702.12

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13588
  gflops (total): 5597.81
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5597.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129053
  gflops (eval):  5893.95
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129053,5893.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.264
  maximum absolute entry in einsum_ir solution: 484.264
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.019597
  time (eval):    0.259565
  gflops (eval):  2930.41
  gflops (total): 2724.7
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.019597,0.259565,2930.41,2724.7

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136093
  gflops (total): 5589.08
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5589.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129883
  gflops (eval):  5856.29
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129883,5856.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.583
  maximum absolute entry in einsum_ir solution: 482.583
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0177612
  time (eval):    0.262626
  gflops (eval):  2896.26
  gflops (total): 2712.79
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0177612,0.262626,2896.26,2712.79

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135981
  gflops (total): 5593.68
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5593.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129237
  gflops (eval):  5885.57
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129237,5885.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.827
  maximum absolute entry in einsum_ir solution: 492.827
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0174605
  time (eval):    0.256033
  gflops (eval):  2970.84
  gflops (total): 2781.17
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0174605,0.256033,2970.84,2781.17

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135281
  gflops (total): 5622.6
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5622.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130052
  gflops (eval):  5848.7
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130052,5848.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.943
  maximum absolute entry in einsum_ir solution: 501.943
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0171504
  time (eval):    0.258574
  gflops (eval):  2941.65
  gflops (total): 2758.67
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0171504,0.258574,2941.65,2758.67

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136769
  gflops (total): 5561.44
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5561.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129781
  gflops (eval):  5860.9
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129781,5860.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.586
  maximum absolute entry in einsum_ir solution: 504.586
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0192677
  time (eval):    0.259562
  gflops (eval):  2930.44
  gflops (total): 2727.94
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0192677,0.259562,2930.44,2727.94

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13635
  gflops (total): 5578.55
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5578.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129665
  gflops (eval):  5866.12
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129665,5866.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.756
  maximum absolute entry in einsum_ir solution: 479.756
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0170191
  time (eval):    0.256104
  gflops (eval):  2970.02
  gflops (total): 2784.95
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0170191,0.256104,2970.02,2784.95

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136299
  gflops (total): 5580.61
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5580.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130095
  gflops (eval):  5846.77
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130095,5846.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      525.138
  maximum absolute entry in einsum_ir solution: 525.137
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0180462
  time (eval):    0.268967
  gflops (eval):  2827.98
  gflops (total): 2650.17
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0180462,0.268967,2827.98,2650.17

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135876
  gflops (total): 5598
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130746
  gflops (eval):  5817.65
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130746,5817.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.858
  maximum absolute entry in einsum_ir solution: 485.858
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0177217
  time (eval):    0.262881
  gflops (eval):  2893.45
  gflops (total): 2710.71
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0177217,0.262881,2893.45,2710.71

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13612
  gflops (total): 5587.97
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5587.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129877
  gflops (eval):  5856.58
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129877,5856.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.512
  maximum absolute entry in einsum_ir solution: 479.512
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0192139
  time (eval):    0.260067
  gflops (eval):  2924.76
  gflops (total): 2723.54
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0192139,0.260067,2924.76,2723.54

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135908
  gflops (total): 5596.65
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5596.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130051
  gflops (eval):  5848.71
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130051,5848.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.613
  maximum absolute entry in einsum_ir solution: 464.613
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0190106
  time (eval):    0.260906
  gflops (eval):  2915.35
  gflops (total): 2717.35
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0190106,0.260906,2915.35,2717.35

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13587
  gflops (total): 5598.24
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5598.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.13002
  gflops (eval):  5850.14
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.13002,5850.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.968
  maximum absolute entry in einsum_ir solution: 467.968
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0189083
  time (eval):    0.259274
  gflops (eval):  2933.7
  gflops (total): 2734.29
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0189083,0.259274,2933.7,2734.29

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136376
  gflops (total): 5577.47
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5577.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.12966
  gflops (eval):  5866.37
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.12966,5866.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.424
  maximum absolute entry in einsum_ir solution: 488.424
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0173062
  time (eval):    0.256276
  gflops (eval):  2968.02
  gflops (total): 2780.27
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0173062,0.256276,2968.02,2780.27

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135572
  gflops (total): 5610.53
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5610.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.12992
  gflops (eval):  5854.62
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.12992,5854.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.663
  maximum absolute entry in einsum_ir solution: 479.663
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.01919
  time (eval):    0.262686
  gflops (eval):  2895.6
  gflops (total): 2698.47
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.01919,0.262686,2895.6,2698.47

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135834
  gflops (total): 5599.73
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5599.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129951
  gflops (eval):  5853.24
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129951,5853.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.392
  maximum absolute entry in einsum_ir solution: 466.392
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0183569
  time (eval):    0.256083
  gflops (eval):  2970.26
  gflops (total): 2771.58
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0183569,0.256083,2970.26,2771.58

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136164
  gflops (total): 5586.14
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5586.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129953
  gflops (eval):  5853.15
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129953,5853.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.754
  maximum absolute entry in einsum_ir solution: 486.754
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0180196
  time (eval):    0.255965
  gflops (eval):  2971.63
  gflops (total): 2776.19
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0180196,0.255965,2971.63,2776.19

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136175
  gflops (total): 5585.71
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5585.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129422
  gflops (eval):  5877.16
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129422,5877.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.504
  maximum absolute entry in einsum_ir solution: 473.504
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0186677
  time (eval):    0.262843
  gflops (eval):  2893.86
  gflops (total): 2701.97
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0186677,0.262843,2893.86,2701.97

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136587
  gflops (total): 5568.87
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5568.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129531
  gflops (eval):  5872.2
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129531,5872.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.751
  maximum absolute entry in einsum_ir solution: 479.751
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0182451
  time (eval):    0.262079
  gflops (eval):  2902.3
  gflops (total): 2713.4
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0182451,0.262079,2902.3,2713.4

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136084
  gflops (total): 5589.42
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5589.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129987
  gflops (eval):  5851.59
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129987,5851.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.619
  maximum absolute entry in einsum_ir solution: 466.619
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0193829
  time (eval):    0.2574
  gflops (eval):  2955.07
  gflops (total): 2748.12
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0193829,0.2574,2955.07,2748.12

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135347
  gflops (total): 5619.85
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5619.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129923
  gflops (eval):  5854.48
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129923,5854.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.254
  maximum absolute entry in einsum_ir solution: 487.254
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0181836
  time (eval):    0.258048
  gflops (eval):  2947.64
  gflops (total): 2753.6
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0181836,0.258048,2947.64,2753.6

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136507
  gflops (total): 5572.13
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5572.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129619
  gflops (eval):  5868.21
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129619,5868.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.54
  maximum absolute entry in einsum_ir solution: 496.54
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0178998
  time (eval):    0.263563
  gflops (eval):  2885.97
  gflops (total): 2702.43
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0178998,0.263563,2885.97,2702.43

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136067
  gflops (total): 5590.14
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5590.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129797
  gflops (eval):  5860.17
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129797,5860.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.632
  maximum absolute entry in einsum_ir solution: 474.632
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0174394
  time (eval):    0.25611
  gflops (eval):  2969.94
  gflops (total): 2780.6
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0174394,0.25611,2969.94,2780.6

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134503
  gflops (total): 5655.15
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5655.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129955
  gflops (eval):  5853.06
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129955,5853.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.062
  maximum absolute entry in einsum_ir solution: 479.062
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0175957
  time (eval):    0.256737
  gflops (eval):  2962.7
  gflops (total): 2772.67
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0175957,0.256737,2962.7,2772.67

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135551
  gflops (total): 5611.42
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5611.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129813
  gflops (eval):  5859.46
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129813,5859.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.769
  maximum absolute entry in einsum_ir solution: 482.769
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0183035
  time (eval):    0.257394
  gflops (eval):  2955.13
  gflops (total): 2758.94
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0183035,0.257394,2955.13,2758.94

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136314
  gflops (total): 5580.02
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5580.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129959
  gflops (eval):  5852.87
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129959,5852.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.478
  maximum absolute entry in einsum_ir solution: 476.478
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0182251
  time (eval):    0.25611
  gflops (eval):  2969.95
  gflops (total): 2772.64
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0182251,0.25611,2969.95,2772.64

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136037
  gflops (total): 5591.38
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5591.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129779
  gflops (eval):  5860.99
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129779,5860.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.528
  maximum absolute entry in einsum_ir solution: 478.528
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0186829
  time (eval):    0.256248
  gflops (eval):  2968.35
  gflops (total): 2766.63
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0186829,0.256248,2968.35,2766.63

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135143
  gflops (total): 5628.37
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5628.37

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129697
  gflops (eval):  5864.68
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129697,5864.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.019
  maximum absolute entry in einsum_ir solution: 532.019
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0181299
  time (eval):    0.257632
  gflops (eval):  2952.41
  gflops (total): 2758.3
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0181299,0.257632,2952.41,2758.3

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135897
  gflops (total): 5597.12
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5597.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129598
  gflops (eval):  5869.18
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129598,5869.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      517.49
  maximum absolute entry in einsum_ir solution: 517.49
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0183581
  time (eval):    0.261234
  gflops (eval):  2911.69
  gflops (total): 2720.51
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0183581,0.261234,2911.69,2720.51

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136399
  gflops (total): 5576.54
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5576.54

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129736
  gflops (eval):  5862.93
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129736,5862.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.882
  maximum absolute entry in einsum_ir solution: 500.883
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0173526
  time (eval):    0.257686
  gflops (eval):  2951.78
  gflops (total): 2765.55
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0173526,0.257686,2951.78,2765.55

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135761
  gflops (total): 5602.75
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5602.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130074
  gflops (eval):  5847.67
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130074,5847.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.377
  maximum absolute entry in einsum_ir solution: 473.377
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0188772
  time (eval):    0.259146
  gflops (eval):  2935.15
  gflops (total): 2735.86
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0188772,0.259146,2935.15,2735.86

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136143
  gflops (total): 5586.99
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5586.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130018
  gflops (eval):  5850.21
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130018,5850.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.199
  maximum absolute entry in einsum_ir solution: 515.199
  maximum element-wise difference:              0.00025177
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0173956
  time (eval):    0.256155
  gflops (eval):  2969.42
  gflops (total): 2780.59
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0173956,0.256155,2969.42,2780.59

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135327
  gflops (total): 5620.72
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5620.72

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130001
  gflops (eval):  5850.96
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130001,5850.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      449.833
  maximum absolute entry in einsum_ir solution: 449.833
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0180331
  time (eval):    0.25868
  gflops (eval):  2940.44
  gflops (total): 2748.82
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0180331,0.25868,2940.44,2748.82

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136667
  gflops (total): 5565.6
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5565.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130235
  gflops (eval):  5840.48
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130235,5840.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.126
  maximum absolute entry in einsum_ir solution: 481.126
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0192226
  time (eval):    0.259516
  gflops (eval):  2930.97
  gflops (total): 2728.84
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0192226,0.259516,2930.97,2728.84

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136353
  gflops (total): 5578.4
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5578.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130039
  gflops (eval):  5849.28
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130039,5849.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.387
  maximum absolute entry in einsum_ir solution: 496.387
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.017927
  time (eval):    0.25714
  gflops (eval):  2958.04
  gflops (total): 2765.26
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.017927,0.25714,2958.04,2765.26

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13579
  gflops (total): 5601.53
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5601.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129437
  gflops (eval):  5876.48
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129437,5876.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.232
  maximum absolute entry in einsum_ir solution: 509.232
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0175114
  time (eval):    0.262034
  gflops (eval):  2902.8
  gflops (total): 2720.96
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0175114,0.262034,2902.8,2720.96

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13643
  gflops (total): 5575.27
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5575.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129805
  gflops (eval):  5859.8
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129805,5859.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.456
  maximum absolute entry in einsum_ir solution: 476.456
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0187273
  time (eval):    0.262849
  gflops (eval):  2893.8
  gflops (total): 2701.34
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0187273,0.262849,2893.8,2701.34

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135411
  gflops (total): 5617.2
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5617.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129692
  gflops (eval):  5864.9
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129692,5864.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.229
  maximum absolute entry in einsum_ir solution: 504.229
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0172698
  time (eval):    0.263338
  gflops (eval):  2888.42
  gflops (total): 2710.66
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0172698,0.263338,2888.42,2710.66

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136216
  gflops (total): 5584.04
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5584.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130118
  gflops (eval):  5845.72
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130118,5845.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.14
  maximum absolute entry in einsum_ir solution: 501.14
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0175877
  time (eval):    0.257156
  gflops (eval):  2957.87
  gflops (total): 2768.52
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0175877,0.257156,2957.87,2768.52

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136329
  gflops (total): 5579.37
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5579.37

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129693
  gflops (eval):  5864.86
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129693,5864.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      513.13
  maximum absolute entry in einsum_ir solution: 513.13
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0179786
  time (eval):    0.259746
  gflops (eval):  2928.38
  gflops (total): 2738.81
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0179786,0.259746,2928.38,2738.81

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136295
  gflops (total): 5580.77
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5580.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129823
  gflops (eval):  5859
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129823,5859,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.36
  maximum absolute entry in einsum_ir solution: 500.36
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0172801
  time (eval):    0.257364
  gflops (eval):  2955.47
  gflops (total): 2769.52
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0172801,0.257364,2955.47,2769.52

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136277
  gflops (total): 5581.5
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5581.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129648
  gflops (eval):  5866.91
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129648,5866.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.981
  maximum absolute entry in einsum_ir solution: 482.981
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0186541
  time (eval):    0.255596
  gflops (eval):  2975.92
  gflops (total): 2773.5
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0186541,0.255596,2975.92,2773.5

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134529
  gflops (total): 5654.06
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5654.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130596
  gflops (eval):  5824.34
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130596,5824.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.022
  maximum absolute entry in einsum_ir solution: 500.022
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.018628
  time (eval):    0.256351
  gflops (eval):  2967.15
  gflops (total): 2766.15
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.018628,0.256351,2967.15,2766.15

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136311
  gflops (total): 5580.13
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5580.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129768
  gflops (eval):  5861.47
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129768,5861.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.881
  maximum absolute entry in einsum_ir solution: 478.881
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0171431
  time (eval):    0.257804
  gflops (eval):  2950.44
  gflops (total): 2766.47
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0171431,0.257804,2950.44,2766.47

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136403
  gflops (total): 5576.36
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5576.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130062
  gflops (eval):  5848.23
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130062,5848.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.209
  maximum absolute entry in einsum_ir solution: 471.209
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0172257
  time (eval):    0.261271
  gflops (eval):  2911.28
  gflops (total): 2731.21
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0172257,0.261271,2911.28,2731.21

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136418
  gflops (total): 5575.76
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5575.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130054
  gflops (eval):  5848.61
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130054,5848.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.63
  maximum absolute entry in einsum_ir solution: 461.63
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.017402
  time (eval):    0.257033
  gflops (eval):  2959.28
  gflops (total): 2771.63
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.017402,0.257033,2959.28,2771.63

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135762
  gflops (total): 5602.67
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5602.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130151
  gflops (eval):  5844.25
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130151,5844.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.219
  maximum absolute entry in einsum_ir solution: 481.219
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0177598
  time (eval):    0.256233
  gflops (eval):  2968.52
  gflops (total): 2776.11
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0177598,0.256233,2968.52,2776.11

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136293
  gflops (total): 5580.88
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5580.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130187
  gflops (eval):  5842.63
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130187,5842.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      512.421
  maximum absolute entry in einsum_ir solution: 512.421
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0181921
  time (eval):    0.257772
  gflops (eval):  2950.8
  gflops (total): 2756.28
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0181921,0.257772,2950.8,2756.28

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136253
  gflops (total): 5582.52
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5582.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130034
  gflops (eval):  5849.5
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130034,5849.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.996
  maximum absolute entry in einsum_ir solution: 497.996
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0190031
  time (eval):    0.260538
  gflops (eval):  2919.47
  gflops (total): 2721
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0190031,0.260538,2919.47,2721

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135925
  gflops (total): 5595.96
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5595.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130048
  gflops (eval):  5848.84
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130048,5848.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.272
  maximum absolute entry in einsum_ir solution: 467.272
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0194829
  time (eval):    0.257022
  gflops (eval):  2959.4
  gflops (total): 2750.88
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0194829,0.257022,2959.4,2750.88

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134821
  gflops (total): 5641.79
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5641.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129985
  gflops (eval):  5851.68
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129985,5851.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.9
  maximum absolute entry in einsum_ir solution: 472.9
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0179274
  time (eval):    0.257884
  gflops (eval):  2949.51
  gflops (total): 2757.8
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0179274,0.257884,2949.51,2757.8

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135882
  gflops (total): 5597.74
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5597.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129788
  gflops (eval):  5860.56
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129788,5860.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.649
  maximum absolute entry in einsum_ir solution: 475.649
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0182511
  time (eval):    0.257677
  gflops (eval):  2951.88
  gflops (total): 2756.63
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0182511,0.257677,2951.88,2756.63

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135546
  gflops (total): 5611.63
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5611.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130022
  gflops (eval):  5850.02
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130022,5850.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.628
  maximum absolute entry in einsum_ir solution: 464.628
  maximum element-wise difference:              0.00025177
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0168115
  time (eval):    0.255618
  gflops (eval):  2975.66
  gflops (total): 2792.03
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0168115,0.255618,2975.66,2792.03

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134887
  gflops (total): 5639.02
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5639.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129995
  gflops (eval):  5851.23
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129995,5851.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.402
  maximum absolute entry in einsum_ir solution: 466.402
  maximum element-wise difference:              0.000320435
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0177025
  time (eval):    0.258969
  gflops (eval):  2937.16
  gflops (total): 2749.23
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0177025,0.258969,2937.16,2749.23

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136561
  gflops (total): 5569.91
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5569.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129965
  gflops (eval):  5852.6
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129965,5852.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.316
  maximum absolute entry in einsum_ir solution: 472.316
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.01742
  time (eval):    0.25606
  gflops (eval):  2970.52
  gflops (total): 2781.31
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.01742,0.25606,2970.52,2781.31

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134791
  gflops (total): 5643.03
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5643.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129603
  gflops (eval):  5868.94
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129603,5868.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.034
  maximum absolute entry in einsum_ir solution: 489.034
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0192899
  time (eval):    0.26008
  gflops (eval):  2924.61
  gflops (total): 2722.67
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0192899,0.26008,2924.61,2722.67

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13644
  gflops (total): 5574.86
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5574.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129898
  gflops (eval):  5855.61
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129898,5855.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.657
  maximum absolute entry in einsum_ir solution: 472.657
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0175963
  time (eval):    0.255945
  gflops (eval):  2971.85
  gflops (total): 2780.68
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0175963,0.255945,2971.85,2780.68

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134954
  gflops (total): 5636.23
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5636.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.128739
  gflops (eval):  5908.35
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.128739,5908.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.62
  maximum absolute entry in einsum_ir solution: 470.62
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0172226
  time (eval):    0.25607
  gflops (eval):  2970.41
  gflops (total): 2783.22
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0172226,0.25607,2970.41,2783.22

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135753
  gflops (total): 5603.06
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5603.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130441
  gflops (eval):  5831.25
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130441,5831.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.388
  maximum absolute entry in einsum_ir solution: 471.388
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0182721
  time (eval):    0.258243
  gflops (eval):  2945.42
  gflops (total): 2750.78
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0182721,0.258243,2945.42,2750.78

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135748
  gflops (total): 5603.25
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5603.25

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129922
  gflops (eval):  5854.55
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129922,5854.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.777
  maximum absolute entry in einsum_ir solution: 479.777
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.01754
  time (eval):    0.257454
  gflops (eval):  2954.44
  gflops (total): 2766
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.01754,0.257454,2954.44,2766

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135986
  gflops (total): 5593.47
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5593.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129656
  gflops (eval):  5866.55
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129656,5866.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.048
  maximum absolute entry in einsum_ir solution: 472.048
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0178915
  time (eval):    0.256825
  gflops (eval):  2961.67
  gflops (total): 2768.79
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0178915,0.256825,2961.67,2768.79

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135418
  gflops (total): 5616.92
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5616.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129339
  gflops (eval):  5880.94
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129339,5880.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.705
  maximum absolute entry in einsum_ir solution: 466.705
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0188041
  time (eval):    0.258362
  gflops (eval):  2944.06
  gflops (total): 2744.32
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0188041,0.258362,2944.06,2744.32

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136264
  gflops (total): 5582.07
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5582.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130157
  gflops (eval):  5843.95
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130157,5843.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      512.041
  maximum absolute entry in einsum_ir solution: 512.041
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0174389
  time (eval):    0.258144
  gflops (eval):  2946.54
  gflops (total): 2760.08
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0174389,0.258144,2946.54,2760.08

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136095
  gflops (total): 5588.98
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5588.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130337
  gflops (eval):  5835.9
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130337,5835.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      462.719
  maximum absolute entry in einsum_ir solution: 462.719
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0171078
  time (eval):    0.273519
  gflops (eval):  2780.91
  gflops (total): 2617.21
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0171078,0.273519,2780.91,2617.21

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135484
  gflops (total): 5614.2
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5614.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130434
  gflops (eval):  5831.57
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130434,5831.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.785
  maximum absolute entry in einsum_ir solution: 478.785
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0176461
  time (eval):    0.266194
  gflops (eval):  2857.44
  gflops (total): 2679.79
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0176461,0.266194,2857.44,2679.79

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136116
  gflops (total): 5588.11
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5588.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129798
  gflops (eval):  5860.13
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129798,5860.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.802
  maximum absolute entry in einsum_ir solution: 496.802
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0172738
  time (eval):    0.266126
  gflops (eval):  2858.17
  gflops (total): 2683.96
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0172738,0.266126,2858.17,2683.96

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136017
  gflops (total): 5592.2
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5592.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130136
  gflops (eval):  5844.92
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130136,5844.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.532
  maximum absolute entry in einsum_ir solution: 477.532
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0185964
  time (eval):    0.261094
  gflops (eval):  2913.26
  gflops (total): 2719.56
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0185964,0.261094,2913.26,2719.56

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136053
  gflops (total): 5590.7
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5590.7

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129679
  gflops (eval):  5865.5
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129679,5865.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.346
  maximum absolute entry in einsum_ir solution: 484.346
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0179657
  time (eval):    0.255854
  gflops (eval):  2972.92
  gflops (total): 2777.86
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0179657,0.255854,2972.92,2777.86

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13541
  gflops (total): 5617.26
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5617.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129845
  gflops (eval):  5857.98
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129845,5857.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.72
  maximum absolute entry in einsum_ir solution: 499.72
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0180041
  time (eval):    0.261167
  gflops (eval):  2912.44
  gflops (total): 2724.62
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0180041,0.261167,2912.44,2724.62

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136807
  gflops (total): 5559.9
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5559.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129413
  gflops (eval):  5877.58
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129413,5877.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.342
  maximum absolute entry in einsum_ir solution: 500.342
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0188947
  time (eval):    0.259545
  gflops (eval):  2930.64
  gflops (total): 2731.77
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0188947,0.259545,2930.64,2731.77

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136072
  gflops (total): 5589.93
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5589.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130085
  gflops (eval):  5847.21
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130085,5847.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.215
  maximum absolute entry in einsum_ir solution: 475.215
  maximum element-wise difference:              0.00025177
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0177527
  time (eval):    0.256381
  gflops (eval):  2966.8
  gflops (total): 2774.68
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0177527,0.256381,2966.8,2774.68

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136488
  gflops (total): 5572.9
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5572.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129754
  gflops (eval):  5862.11
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129754,5862.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.339
  maximum absolute entry in einsum_ir solution: 474.339
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.018252
  time (eval):    0.256879
  gflops (eval):  2961.06
  gflops (total): 2764.62
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.018252,0.256879,2961.06,2764.62

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135903
  gflops (total): 5596.88
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5596.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.12974
  gflops (eval):  5862.75
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.12974,5862.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.701
  maximum absolute entry in einsum_ir solution: 487.7
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0181747
  time (eval):    0.256155
  gflops (eval):  2969.42
  gflops (total): 2772.69
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0181747,0.256155,2969.42,2772.69

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135535
  gflops (total): 5612.06
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5612.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130158
  gflops (eval):  5843.92
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130158,5843.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.806
  maximum absolute entry in einsum_ir solution: 470.806
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.017651
  time (eval):    0.256868
  gflops (eval):  2961.18
  gflops (total): 2770.78
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.017651,0.256868,2961.18,2770.78

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135221
  gflops (total): 5625.12
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5625.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.13006
  gflops (eval):  5848.34
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.13006,5848.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.18
  maximum absolute entry in einsum_ir solution: 494.18
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0176711
  time (eval):    0.257146
  gflops (eval):  2957.97
  gflops (total): 2767.77
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0176711,0.257146,2957.97,2767.77

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135634
  gflops (total): 5608
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130099
  gflops (eval):  5846.57
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130099,5846.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.349
  maximum absolute entry in einsum_ir solution: 492.349
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0190963
  time (eval):    0.258612
  gflops (eval):  2941.21
  gflops (total): 2738.96
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0190963,0.258612,2941.21,2738.96

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135372
  gflops (total): 5618.85
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5618.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129988
  gflops (eval):  5851.57
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129988,5851.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.305
  maximum absolute entry in einsum_ir solution: 484.305
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0182363
  time (eval):    0.256234
  gflops (eval):  2968.51
  gflops (total): 2771.28
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0182363,0.256234,2968.51,2771.28

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.136564
  gflops (total): 5569.79
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5569.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130137
  gflops (eval):  5844.87
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130137,5844.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.285
  maximum absolute entry in einsum_ir solution: 498.285
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0183015
  time (eval):    0.256341
  gflops (eval):  2967.26
  gflops (total): 2769.53
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0183015,0.256341,2967.26,2769.53

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13646
  gflops (total): 5574.03
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5574.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129537
  gflops (eval):  5871.94
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129537,5871.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.583
  maximum absolute entry in einsum_ir solution: 477.583
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0174595
  time (eval):    0.256846
  gflops (eval):  2961.44
  gflops (total): 2772.94
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0174595,0.256846,2961.44,2772.94

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.134879
  gflops (total): 5639.37
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5639.37

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.128944
  gflops (eval):  5898.95
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.128944,5898.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.237
  maximum absolute entry in einsum_ir solution: 471.237
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0180667
  time (eval):    0.256799
  gflops (eval):  2961.98
  gflops (total): 2767.29
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0180667,0.256799,2961.98,2767.29

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13561
  gflops (total): 5608.96
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5608.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130006
  gflops (eval):  5850.74
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130006,5850.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.849
  maximum absolute entry in einsum_ir solution: 498.848
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0185085
  time (eval):    0.256777
  gflops (eval):  2962.23
  gflops (total): 2763.06
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0185085,0.256777,2962.23,2763.06

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135338
  gflops (total): 5620.25
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5620.25

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129993
  gflops (eval):  5851.33
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129993,5851.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.439
  maximum absolute entry in einsum_ir solution: 472.439
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0193864
  time (eval):    0.259507
  gflops (eval):  2931.07
  gflops (total): 2727.33
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0193864,0.259507,2931.07,2727.33

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.13531
  gflops (total): 5621.42
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5621.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.130253
  gflops (eval):  5839.66
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.130253,5839.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.361
  maximum absolute entry in einsum_ir solution: 484.361
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0171294
  time (eval):    0.265661
  gflops (eval):  2863.17
  gflops (total): 2689.74
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0171294,0.265661,2863.17,2689.74

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135906
  gflops (total): 5596.76
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5596.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129884
  gflops (eval):  5856.23
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129884,5856.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.07
  maximum absolute entry in einsum_ir solution: 475.07
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0169888
  time (eval):    0.256025
  gflops (eval):  2970.93
  gflops (total): 2786.06
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0169888,0.256025,2970.93,2786.06

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.135331
  gflops (total): 5620.54
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,5620.54

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.129777
  gflops (eval):  5861.05
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.129777,5861.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.082
  maximum absolute entry in einsum_ir solution: 466.082
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155742
  time (eval):    0.21125
  gflops (eval):  4343.77
  gflops (total): 4045.52
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155742,0.21125,4343.77,4045.52

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202386
  gflops (total): 4534.01
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4534.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154875
  gflops (eval):  5924.91
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154875,5924.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.091
  maximum absolute entry in einsum_ir solution: 494.092
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0157423
  time (eval):    0.210902
  gflops (eval):  4350.94
  gflops (total): 4048.73
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0157423,0.210902,4350.94,4048.73

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202486
  gflops (total): 4531.76
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4531.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154447
  gflops (eval):  5941.34
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154447,5941.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.6
  maximum absolute entry in einsum_ir solution: 514.6
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.015627
  time (eval):    0.210437
  gflops (eval):  4360.55
  gflops (total): 4059.12
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.015627,0.210437,4360.55,4059.12

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202365
  gflops (total): 4534.48
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4534.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154583
  gflops (eval):  5936.11
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154583,5936.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.651
  maximum absolute entry in einsum_ir solution: 495.65
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155384
  time (eval):    0.211011
  gflops (eval):  4348.69
  gflops (total): 4050.42
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155384,0.211011,4348.69,4050.42

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201849
  gflops (total): 4546.07
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4546.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15427
  gflops (eval):  5948.13
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15427,5948.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.129
  maximum absolute entry in einsum_ir solution: 514.129
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0149295
  time (eval):    0.210963
  gflops (eval):  4349.68
  gflops (total): 4062.2
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0149295,0.210963,4349.68,4062.2

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201095
  gflops (total): 4563.12
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4563.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154489
  gflops (eval):  5939.71
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154489,5939.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.581
  maximum absolute entry in einsum_ir solution: 514.581
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0152396
  time (eval):    0.210689
  gflops (eval):  4355.33
  gflops (total): 4061.55
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0152396,0.210689,4355.33,4061.55

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201689
  gflops (total): 4549.68
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4549.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154511
  gflops (eval):  5938.88
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154511,5938.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.28
  maximum absolute entry in einsum_ir solution: 506.28
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0156572
  time (eval):    0.210918
  gflops (eval):  4350.61
  gflops (total): 4049.96
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0156572,0.210918,4350.61,4049.96

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203888
  gflops (total): 4500.6
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4500.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154373
  gflops (eval):  5944.16
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154373,5944.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.247
  maximum absolute entry in einsum_ir solution: 497.247
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0154723
  time (eval):    0.211121
  gflops (eval):  4346.42
  gflops (total): 4049.63
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0154723,0.211121,4346.42,4049.63

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202469
  gflops (total): 4532.15
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4532.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154708
  gflops (eval):  5931.31
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154708,5931.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.822
  maximum absolute entry in einsum_ir solution: 515.822
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0156302
  time (eval):    0.210777
  gflops (eval):  4353.52
  gflops (total): 4052.97
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0156302,0.210777,4353.52,4052.97

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202049
  gflops (total): 4541.57
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4541.57

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.153957
  gflops (eval):  5960.25
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.153957,5960.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.972
  maximum absolute entry in einsum_ir solution: 526.972
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0158386
  time (eval):    0.240012
  gflops (eval):  3823.22
  gflops (total): 3586.54
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0158386,0.240012,3823.22,3586.54

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202008
  gflops (total): 4542.49
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4542.49

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154391
  gflops (eval):  5943.49
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154391,5943.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.7
  maximum absolute entry in einsum_ir solution: 526.7
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0152568
  time (eval):    0.232045
  gflops (eval):  3954.48
  gflops (total): 3710.52
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0152568,0.232045,3954.48,3710.52

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200878
  gflops (total): 4568.04
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4568.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154902
  gflops (eval):  5923.86
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154902,5923.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      505.635
  maximum absolute entry in einsum_ir solution: 505.635
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0152854
  time (eval):    0.210881
  gflops (eval):  4351.36
  gflops (total): 4057.28
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0152854,0.210881,4351.36,4057.28

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202878
  gflops (total): 4523.01
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4523.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155212
  gflops (eval):  5912.02
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155212,5912.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.869
  maximum absolute entry in einsum_ir solution: 501.869
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0150022
  time (eval):    0.211123
  gflops (eval):  4346.37
  gflops (total): 4058.01
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0150022,0.211123,4346.37,4058.01

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201662
  gflops (total): 4550.28
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4550.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154525
  gflops (eval):  5938.32
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154525,5938.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      517.471
  maximum absolute entry in einsum_ir solution: 517.471
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0157392
  time (eval):    0.208825
  gflops (eval):  4394.21
  gflops (total): 4086.23
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0157392,0.208825,4394.21,4086.23

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202205
  gflops (total): 4538.07
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4538.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154536
  gflops (eval):  5937.91
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154536,5937.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.328
  maximum absolute entry in einsum_ir solution: 532.328
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155047
  time (eval):    0.211014
  gflops (eval):  4348.62
  gflops (total): 4050.97
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155047,0.211014,4348.62,4050.97

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201589
  gflops (total): 4551.93
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4551.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154911
  gflops (eval):  5923.54
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154911,5923.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.832
  maximum absolute entry in einsum_ir solution: 515.832
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155447
  time (eval):    0.21131
  gflops (eval):  4342.53
  gflops (total): 4044.96
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155447,0.21131,4342.53,4044.96

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202053
  gflops (total): 4541.49
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4541.49

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15462
  gflops (eval):  5934.68
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15462,5934.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.242
  maximum absolute entry in einsum_ir solution: 526.242
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.015618
  time (eval):    0.211288
  gflops (eval):  4342.98
  gflops (total): 4044.05
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.015618,0.211288,4342.98,4044.05

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202333
  gflops (total): 4535.19
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4535.19

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154792
  gflops (eval):  5928.07
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154792,5928.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.877
  maximum absolute entry in einsum_ir solution: 494.877
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155754
  time (eval):    0.210769
  gflops (eval):  4353.67
  gflops (total): 4054.09
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155754,0.210769,4353.67,4054.09

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20207
  gflops (total): 4541.1
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4541.1

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154669
  gflops (eval):  5932.81
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154669,5932.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.705
  maximum absolute entry in einsum_ir solution: 503.705
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0149264
  time (eval):    0.210895
  gflops (eval):  4351.08
  gflops (total): 4063.48
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0149264,0.210895,4351.08,4063.48

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203061
  gflops (total): 4518.93
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4518.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154411
  gflops (eval):  5942.71
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154411,5942.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.509
  maximum absolute entry in einsum_ir solution: 501.509
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0153654
  time (eval):    0.222599
  gflops (eval):  4122.3
  gflops (total): 3856.12
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0153654,0.222599,4122.3,3856.12

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203474
  gflops (total): 4509.75
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4509.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154812
  gflops (eval):  5927.3
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154812,5927.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      513.581
  maximum absolute entry in einsum_ir solution: 513.581
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.015944
  time (eval):    0.211139
  gflops (eval):  4346.05
  gflops (total): 4040.9
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.015944,0.211139,4346.05,4040.9

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202131
  gflops (total): 4539.73
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4539.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15518
  gflops (eval):  5913.27
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15518,5913.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.257
  maximum absolute entry in einsum_ir solution: 524.257
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0151642
  time (eval):    0.210946
  gflops (eval):  4350.01
  gflops (total): 4058.28
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0151642,0.210946,4350.01,4058.28

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201606
  gflops (total): 4551.55
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4551.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15499
  gflops (eval):  5920.49
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15499,5920.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.686
  maximum absolute entry in einsum_ir solution: 523.686
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0157434
  time (eval):    0.210526
  gflops (eval):  4358.71
  gflops (total): 4055.44
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0157434,0.210526,4358.71,4055.44

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201355
  gflops (total): 4557.21
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4557.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15458
  gflops (eval):  5936.22
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15458,5936.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.289
  maximum absolute entry in einsum_ir solution: 498.289
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0149318
  time (eval):    0.210659
  gflops (eval):  4355.96
  gflops (total): 4067.64
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0149318,0.210659,4355.96,4067.64

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203573
  gflops (total): 4507.58
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4507.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154954
  gflops (eval):  5921.88
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154954,5921.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.311
  maximum absolute entry in einsum_ir solution: 510.311
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0154559
  time (eval):    0.211164
  gflops (eval):  4345.52
  gflops (total): 4049.15
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0154559,0.211164,4345.52,4049.15

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201068
  gflops (total): 4563.72
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4563.72

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154941
  gflops (eval):  5922.38
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154941,5922.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      545.175
  maximum absolute entry in einsum_ir solution: 545.175
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155517
  time (eval):    0.210837
  gflops (eval):  4352.28
  gflops (total): 4053.3
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155517,0.210837,4352.28,4053.3

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201658
  gflops (total): 4550.38
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4550.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154172
  gflops (eval):  5951.92
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154172,5951.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      553.317
  maximum absolute entry in einsum_ir solution: 553.317
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0159659
  time (eval):    0.211105
  gflops (eval):  4346.74
  gflops (total): 4041.11
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0159659,0.211105,4346.74,4041.11

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201641
  gflops (total): 4550.77
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4550.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154123
  gflops (eval):  5953.81
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154123,5953.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.545
  maximum absolute entry in einsum_ir solution: 508.545
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0154333
  time (eval):    0.210817
  gflops (eval):  4352.68
  gflops (total): 4055.77
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0154333,0.210817,4352.68,4055.77

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202154
  gflops (total): 4539.21
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4539.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154376
  gflops (eval):  5944.07
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154376,5944.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.863
  maximum absolute entry in einsum_ir solution: 510.863
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155332
  time (eval):    0.21086
  gflops (eval):  4351.79
  gflops (total): 4053.21
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155332,0.21086,4351.79,4053.21

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201663
  gflops (total): 4550.25
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4550.25

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.1545
  gflops (eval):  5939.28
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.1545,5939.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      563.086
  maximum absolute entry in einsum_ir solution: 563.086
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0160461
  time (eval):    0.211082
  gflops (eval):  4347.22
  gflops (total): 4040.1
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0160461,0.211082,4347.22,4040.1

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201135
  gflops (total): 4562.2
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4562.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154581
  gflops (eval):  5936.16
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154581,5936.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.392
  maximum absolute entry in einsum_ir solution: 528.392
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155438
  time (eval):    0.211092
  gflops (eval):  4347.02
  gflops (total): 4048.88
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155438,0.211092,4347.02,4048.88

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200903
  gflops (total): 4567.48
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4567.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154685
  gflops (eval):  5932.19
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154685,5932.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      538.468
  maximum absolute entry in einsum_ir solution: 538.468
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0151296
  time (eval):    0.211234
  gflops (eval):  4344.08
  gflops (total): 4053.73
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0151296,0.211234,4344.08,4053.73

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201693
  gflops (total): 4549.58
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4549.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154608
  gflops (eval):  5935.16
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154608,5935.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.002
  maximum absolute entry in einsum_ir solution: 493.002
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0148723
  time (eval):    0.210978
  gflops (eval):  4349.37
  gflops (total): 4062.96
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0148723,0.210978,4349.37,4062.96

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203288
  gflops (total): 4513.89
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4513.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154683
  gflops (eval):  5932.27
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154683,5932.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      505.198
  maximum absolute entry in einsum_ir solution: 505.198
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0160547
  time (eval):    0.210608
  gflops (eval):  4357.01
  gflops (total): 4048.4
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0160547,0.210608,4357.01,4048.4

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202161
  gflops (total): 4539.06
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4539.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154422
  gflops (eval):  5942.27
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154422,5942.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      512.202
  maximum absolute entry in einsum_ir solution: 512.202
  maximum element-wise difference:              0.000320435
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0150392
  time (eval):    0.211025
  gflops (eval):  4348.39
  gflops (total): 4059.1
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0150392,0.211025,4348.39,4059.1

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203043
  gflops (total): 4519.34
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4519.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155155
  gflops (eval):  5914.21
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155155,5914.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      520.016
  maximum absolute entry in einsum_ir solution: 520.016
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155965
  time (eval):    0.210853
  gflops (eval):  4351.94
  gflops (total): 4052.2
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155965,0.210853,4351.94,4052.2

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202055
  gflops (total): 4541.44
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4541.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154959
  gflops (eval):  5921.67
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154959,5921.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      490.608
  maximum absolute entry in einsum_ir solution: 490.608
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0158853
  time (eval):    0.211466
  gflops (eval):  4339.32
  gflops (total): 4036.13
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0158853,0.211466,4339.32,4036.13

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203544
  gflops (total): 4508.21
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4508.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15502
  gflops (eval):  5919.38
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15502,5919.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      511.407
  maximum absolute entry in einsum_ir solution: 511.407
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.015315
  time (eval):    0.211102
  gflops (eval):  4346.81
  gflops (total): 4052.79
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.015315,0.211102,4346.81,4052.79

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202311
  gflops (total): 4535.68
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4535.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154901
  gflops (eval):  5923.93
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154901,5923.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      513.949
  maximum absolute entry in einsum_ir solution: 513.949
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155451
  time (eval):    0.211137
  gflops (eval):  4346.09
  gflops (total): 4048.05
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155451,0.211137,4346.09,4048.05

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201617
  gflops (total): 4551.3
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4551.3

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154518
  gflops (eval):  5938.61
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154518,5938.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.234
  maximum absolute entry in einsum_ir solution: 533.234
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0151117
  time (eval):    0.210306
  gflops (eval):  4363.27
  gflops (total): 4070.76
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0151117,0.210306,4363.27,4070.76

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202214
  gflops (total): 4537.86
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4537.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154519
  gflops (eval):  5938.56
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154519,5938.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.322
  maximum absolute entry in einsum_ir solution: 524.322
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0156642
  time (eval):    0.211186
  gflops (eval):  4345.07
  gflops (total): 4045.04
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0156642,0.211186,4345.07,4045.04

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202863
  gflops (total): 4523.36
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4523.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155053
  gflops (eval):  5918.1
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155053,5918.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.207
  maximum absolute entry in einsum_ir solution: 495.207
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0144699
  time (eval):    0.21073
  gflops (eval):  4354.49
  gflops (total): 4074.7
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0144699,0.21073,4354.49,4074.7

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200959
  gflops (total): 4566.21
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4566.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154953
  gflops (eval):  5921.91
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154953,5921.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      571.362
  maximum absolute entry in einsum_ir solution: 571.362
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0154938
  time (eval):    0.21087
  gflops (eval):  4351.58
  gflops (total): 4053.74
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0154938,0.21087,4351.58,4053.74

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202713
  gflops (total): 4526.69
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4526.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154735
  gflops (eval):  5930.28
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154735,5930.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.157
  maximum absolute entry in einsum_ir solution: 509.157
  maximum element-wise difference:              0.000289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0157465
  time (eval):    0.21132
  gflops (eval):  4342.33
  gflops (total): 4041.2
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0157465,0.21132,4342.33,4041.2

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202884
  gflops (total): 4522.88
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4522.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154619
  gflops (eval):  5934.73
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154619,5934.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      519.711
  maximum absolute entry in einsum_ir solution: 519.711
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0152684
  time (eval):    0.220594
  gflops (eval):  4159.76
  gflops (total): 3890.48
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0152684,0.220594,4159.76,3890.48

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20242
  gflops (total): 4533.24
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4533.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154644
  gflops (eval):  5933.74
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154644,5933.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.868
  maximum absolute entry in einsum_ir solution: 497.868
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0158381
  time (eval):    0.21045
  gflops (eval):  4360.28
  gflops (total): 4055.1
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0158381,0.21045,4360.28,4055.1

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201641
  gflops (total): 4550.76
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4550.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155525
  gflops (eval):  5900.16
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155525,5900.16,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      513.744
  maximum absolute entry in einsum_ir solution: 513.744
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0152108
  time (eval):    0.211259
  gflops (eval):  4343.57
  gflops (total): 4051.83
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0152108,0.211259,4343.57,4051.83

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202031
  gflops (total): 4541.98
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4541.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15439
  gflops (eval):  5943.53
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15439,5943.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      579.116
  maximum absolute entry in einsum_ir solution: 579.116
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0153123
  time (eval):    0.21101
  gflops (eval):  4348.71
  gflops (total): 4054.49
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0153123,0.21101,4348.71,4054.49

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203658
  gflops (total): 4505.68
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4505.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15404
  gflops (eval):  5957.03
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15404,5957.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.472
  maximum absolute entry in einsum_ir solution: 507.472
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0151254
  time (eval):    0.211325
  gflops (eval):  4342.22
  gflops (total): 4052.19
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0151254,0.211325,4342.22,4052.19

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202157
  gflops (total): 4539.15
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4539.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154831
  gflops (eval):  5926.58
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154831,5926.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.191
  maximum absolute entry in einsum_ir solution: 539.191
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0156784
  time (eval):    0.211009
  gflops (eval):  4348.72
  gflops (total): 4047.95
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0156784,0.211009,4348.72,4047.95

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.2001
  gflops (total): 4585.8
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4585.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15464
  gflops (eval):  5933.93
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15464,5933.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.286
  maximum absolute entry in einsum_ir solution: 507.286
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0154854
  time (eval):    0.211171
  gflops (eval):  4345.39
  gflops (total): 4048.51
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0154854,0.211171,4345.39,4048.51

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202564
  gflops (total): 4530.01
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4530.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154759
  gflops (eval):  5929.33
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154759,5929.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.908
  maximum absolute entry in einsum_ir solution: 480.908
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0150532
  time (eval):    0.230838
  gflops (eval):  3975.16
  gflops (total): 3731.81
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0150532,0.230838,3975.16,3731.81

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.204586
  gflops (total): 4485.26
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4485.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154911
  gflops (eval):  5923.52
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154911,5923.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.905
  maximum absolute entry in einsum_ir solution: 529.905
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0149869
  time (eval):    0.211422
  gflops (eval):  4340.22
  gflops (total): 4052.92
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0149869,0.211422,4340.22,4052.92

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201931
  gflops (total): 4544.21
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4544.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154747
  gflops (eval):  5929.82
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154747,5929.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.649
  maximum absolute entry in einsum_ir solution: 484.649
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155713
  time (eval):    0.21097
  gflops (eval):  4349.54
  gflops (total): 4050.57
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155713,0.21097,4349.54,4050.57

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200522
  gflops (total): 4576.16
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4576.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154914
  gflops (eval):  5923.43
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154914,5923.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.446
  maximum absolute entry in einsum_ir solution: 509.446
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0152527
  time (eval):    0.210857
  gflops (eval):  4351.86
  gflops (total): 4058.3
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0152527,0.210857,4351.86,4058.3

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202986
  gflops (total): 4520.61
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4520.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154113
  gflops (eval):  5954.19
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154113,5954.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      545.943
  maximum absolute entry in einsum_ir solution: 545.943
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0156744
  time (eval):    0.211027
  gflops (eval):  4348.35
  gflops (total): 4047.7
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0156744,0.211027,4348.35,4047.7

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201542
  gflops (total): 4552.99
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4552.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154834
  gflops (eval):  5926.49
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154834,5926.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      556.649
  maximum absolute entry in einsum_ir solution: 556.649
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0152575
  time (eval):    0.211003
  gflops (eval):  4348.84
  gflops (total): 4055.58
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0152575,0.211003,4348.84,4055.58

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201616
  gflops (total): 4551.32
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4551.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155246
  gflops (eval):  5910.74
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155246,5910.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.461
  maximum absolute entry in einsum_ir solution: 493.461
  maximum element-wise difference:              0.000350952
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0151956
  time (eval):    0.211267
  gflops (eval):  4343.42
  gflops (total): 4051.97
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0151956,0.211267,4343.42,4051.97

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20143
  gflops (total): 4555.53
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4555.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154488
  gflops (eval):  5939.75
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154488,5939.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.987
  maximum absolute entry in einsum_ir solution: 493.987
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0150558
  time (eval):    0.241593
  gflops (eval):  3798.21
  gflops (total): 3575.39
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0150558,0.241593,3798.21,3575.39

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200689
  gflops (total): 4572.34
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4572.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154442
  gflops (eval):  5941.53
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154442,5941.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.754
  maximum absolute entry in einsum_ir solution: 507.754
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.01461
  time (eval):    0.21109
  gflops (eval):  4347.04
  gflops (total): 4065.65
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.01461,0.21109,4347.04,4065.65

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201862
  gflops (total): 4545.77
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4545.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.153951
  gflops (eval):  5960.46
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.153951,5960.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.254
  maximum absolute entry in einsum_ir solution: 514.254
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155287
  time (eval):    0.211312
  gflops (eval):  4342.48
  gflops (total): 4045.21
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155287,0.211312,4342.48,4045.21

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202317
  gflops (total): 4535.54
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4535.54

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154178
  gflops (eval):  5951.69
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154178,5951.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.341
  maximum absolute entry in einsum_ir solution: 514.341
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0157141
  time (eval):    0.210418
  gflops (eval):  4360.94
  gflops (total): 4057.9
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0157141,0.210418,4360.94,4057.9

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200457
  gflops (total): 4577.63
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4577.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154799
  gflops (eval):  5927.8
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154799,5927.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.127
  maximum absolute entry in einsum_ir solution: 508.127
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0156836
  time (eval):    0.241548
  gflops (eval):  3798.9
  gflops (total): 3567.28
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0156836,0.241548,3798.9,3567.28

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202323
  gflops (total): 4535.42
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4535.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154317
  gflops (eval):  5946.33
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154317,5946.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.436
  maximum absolute entry in einsum_ir solution: 528.437
  maximum element-wise difference:              0.000289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0152199
  time (eval):    0.211389
  gflops (eval):  4340.9
  gflops (total): 4049.35
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0152199,0.211389,4340.9,4049.35

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201417
  gflops (total): 4555.83
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4555.83

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154308
  gflops (eval):  5946.68
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154308,5946.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.717
  maximum absolute entry in einsum_ir solution: 539.717
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.015602
  time (eval):    0.211143
  gflops (eval):  4345.96
  gflops (total): 4046.92
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.015602,0.211143,4345.96,4046.92

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202099
  gflops (total): 4540.43
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4540.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.153275
  gflops (eval):  5986.76
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.153275,5986.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.752
  maximum absolute entry in einsum_ir solution: 524.752
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0157308
  time (eval):    0.210814
  gflops (eval):  4352.75
  gflops (total): 4050.5
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0157308,0.210814,4352.75,4050.5

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202839
  gflops (total): 4523.87
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4523.87

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154744
  gflops (eval):  5929.91
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154744,5929.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      534.544
  maximum absolute entry in einsum_ir solution: 534.544
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0156296
  time (eval):    0.211054
  gflops (eval):  4347.8
  gflops (total): 4048.03
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0156296,0.211054,4347.8,4048.03

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203715
  gflops (total): 4504.43
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4504.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155669
  gflops (eval):  5894.68
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155669,5894.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      554.224
  maximum absolute entry in einsum_ir solution: 554.224
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0151284
  time (eval):    0.211239
  gflops (eval):  4343.99
  gflops (total): 4053.68
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0151284,0.211239,4343.99,4053.68

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201702
  gflops (total): 4549.39
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4549.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154623
  gflops (eval):  5934.58
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154623,5934.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.621
  maximum absolute entry in einsum_ir solution: 506.621
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155794
  time (eval):    0.211228
  gflops (eval):  4344.21
  gflops (total): 4045.8
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155794,0.211228,4344.21,4045.8

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200078
  gflops (total): 4586.31
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4586.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154756
  gflops (eval):  5929.48
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154756,5929.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.582
  maximum absolute entry in einsum_ir solution: 510.582
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0157093
  time (eval):    0.210868
  gflops (eval):  4351.62
  gflops (total): 4049.91
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0157093,0.210868,4351.62,4049.91

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203279
  gflops (total): 4514.09
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4514.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.153464
  gflops (eval):  5979.39
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.153464,5979.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      518.347
  maximum absolute entry in einsum_ir solution: 518.347
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155626
  time (eval):    0.211633
  gflops (eval):  4335.9
  gflops (total): 4038.9
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155626,0.211633,4335.9,4038.9

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202705
  gflops (total): 4526.88
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4526.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154851
  gflops (eval):  5925.82
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154851,5925.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      520.966
  maximum absolute entry in einsum_ir solution: 520.966
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0156038
  time (eval):    0.211111
  gflops (eval):  4346.63
  gflops (total): 4047.47
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0156038,0.211111,4346.63,4047.47

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202023
  gflops (total): 4542.15
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4542.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155346
  gflops (eval):  5906.95
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155346,5906.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.173
  maximum absolute entry in einsum_ir solution: 524.173
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155483
  time (eval):    0.211307
  gflops (eval):  4342.58
  gflops (total): 4044.95
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155483,0.211307,4342.58,4044.95

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202671
  gflops (total): 4527.63
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4527.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155034
  gflops (eval):  5918.83
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155034,5918.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.958
  maximum absolute entry in einsum_ir solution: 495.958
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0149947
  time (eval):    0.211473
  gflops (eval):  4339.17
  gflops (total): 4051.87
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0149947,0.211473,4339.17,4051.87

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201722
  gflops (total): 4548.92
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4548.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.15457
  gflops (eval):  5936.59
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.15457,5936.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.666
  maximum absolute entry in einsum_ir solution: 542.666
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.015437
  time (eval):    0.211468
  gflops (eval):  4339.29
  gflops (total): 4044.08
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.015437,0.211468,4339.29,4044.08

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201168
  gflops (total): 4561.46
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4561.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.153826
  gflops (eval):  5965.31
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.153826,5965.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      511.474
  maximum absolute entry in einsum_ir solution: 511.474
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0144942
  time (eval):    0.211141
  gflops (eval):  4346
  gflops (total): 4066.82
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0144942,0.211141,4346,4066.82

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202709
  gflops (total): 4526.79
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4526.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154137
  gflops (eval):  5953.29
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154137,5953.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.196
  maximum absolute entry in einsum_ir solution: 531.196
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155462
  time (eval):    0.21147
  gflops (eval):  4339.25
  gflops (total): 4042.09
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155462,0.21147,4339.25,4042.09

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202564
  gflops (total): 4530.01
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4530.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154798
  gflops (eval):  5927.86
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154798,5927.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      527.691
  maximum absolute entry in einsum_ir solution: 527.691
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0121629
  time (eval):    0.210852
  gflops (eval):  4351.96
  gflops (total): 4114.61
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0121629,0.210852,4351.96,4114.61

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202472
  gflops (total): 4532.08
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4532.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154611
  gflops (eval):  5935.04
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154611,5935.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.382
  maximum absolute entry in einsum_ir solution: 531.382
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155168
  time (eval):    0.211346
  gflops (eval):  4341.8
  gflops (total): 4044.83
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155168,0.211346,4341.8,4044.83

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20073
  gflops (total): 4571.42
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4571.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154829
  gflops (eval):  5926.66
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154829,5926.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.728
  maximum absolute entry in einsum_ir solution: 501.728
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0156259
  time (eval):    0.21141
  gflops (eval):  4340.47
  gflops (total): 4041.73
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0156259,0.21141,4340.47,4041.73

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201772
  gflops (total): 4547.8
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4547.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154056
  gflops (eval):  5956.39
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154056,5956.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.169
  maximum absolute entry in einsum_ir solution: 507.169
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0156625
  time (eval):    0.211072
  gflops (eval):  4347.41
  gflops (total): 4047.1
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0156625,0.211072,4347.41,4047.1

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20044
  gflops (total): 4578.03
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4578.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154968
  gflops (eval):  5921.36
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154968,5921.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      535.727
  maximum absolute entry in einsum_ir solution: 535.727
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155056
  time (eval):    0.210935
  gflops (eval):  4350.24
  gflops (total): 4052.36
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155056,0.210935,4350.24,4052.36

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202113
  gflops (total): 4540.14
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4540.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154773
  gflops (eval):  5928.82
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154773,5928.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.396
  maximum absolute entry in einsum_ir solution: 542.396
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0157078
  time (eval):    0.211132
  gflops (eval):  4346.19
  gflops (total): 4045.23
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0157078,0.211132,4346.19,4045.23

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200354
  gflops (total): 4579.98
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4579.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154912
  gflops (eval):  5923.5
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154912,5923.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.875
  maximum absolute entry in einsum_ir solution: 503.875
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155188
  time (eval):    0.211113
  gflops (eval):  4346.58
  gflops (total): 4048.94
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155188,0.211113,4346.58,4048.94

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202293
  gflops (total): 4536.08
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4536.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154255
  gflops (eval):  5948.73
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154255,5948.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.411
  maximum absolute entry in einsum_ir solution: 501.411
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0159658
  time (eval):    0.211195
  gflops (eval):  4344.89
  gflops (total): 4039.51
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0159658,0.211195,4344.89,4039.51

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200802
  gflops (total): 4569.78
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4569.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155052
  gflops (eval):  5918.14
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155052,5918.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.629
  maximum absolute entry in einsum_ir solution: 508.629
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0157757
  time (eval):    0.210485
  gflops (eval):  4359.56
  gflops (total): 4055.59
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0157757,0.210485,4359.56,4055.59

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20142
  gflops (total): 4555.75
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4555.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154847
  gflops (eval):  5925.98
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154847,5925.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.299
  maximum absolute entry in einsum_ir solution: 499.299
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0154824
  time (eval):    0.21123
  gflops (eval):  4344.17
  gflops (total): 4047.5
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0154824,0.21123,4344.17,4047.5

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202855
  gflops (total): 4523.52
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4523.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154825
  gflops (eval):  5926.84
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154825,5926.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      522.358
  maximum absolute entry in einsum_ir solution: 522.358
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0157237
  time (eval):    0.211139
  gflops (eval):  4346.04
  gflops (total): 4044.82
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0157237,0.211139,4346.04,4044.82

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.204438
  gflops (total): 4488.51
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4488.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154632
  gflops (eval):  5934.21
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154632,5934.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.529
  maximum absolute entry in einsum_ir solution: 499.529
  maximum element-wise difference:              0.000320435
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0149907
  time (eval):    0.21155
  gflops (eval):  4337.61
  gflops (total): 4050.58
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0149907,0.21155,4337.61,4050.58

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201721
  gflops (total): 4548.95
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4548.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154715
  gflops (eval):  5931.02
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154715,5931.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.692
  maximum absolute entry in einsum_ir solution: 497.692
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0156413
  time (eval):    0.211044
  gflops (eval):  4348.01
  gflops (total): 4048
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0156413,0.211044,4348.01,4048

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20206
  gflops (total): 4541.31
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4541.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154853
  gflops (eval):  5925.74
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154853,5925.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      527.3
  maximum absolute entry in einsum_ir solution: 527.3
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155931
  time (eval):    0.242706
  gflops (eval):  3780.78
  gflops (total): 3552.54
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155931,0.242706,3780.78,3552.54

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20223
  gflops (total): 4537.51
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4537.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155135
  gflops (eval):  5914.99
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155135,5914.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.371
  maximum absolute entry in einsum_ir solution: 508.371
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0145525
  time (eval):    0.226835
  gflops (eval):  4045.32
  gflops (total): 3801.44
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0145525,0.226835,4045.32,3801.44

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201581
  gflops (total): 4552.11
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4552.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154584
  gflops (eval):  5936.07
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154584,5936.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.306
  maximum absolute entry in einsum_ir solution: 489.306
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0157793
  time (eval):    0.211553
  gflops (eval):  4337.53
  gflops (total): 4036.46
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0157793,0.211553,4337.53,4036.46

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200787
  gflops (total): 4570.11
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4570.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154473
  gflops (eval):  5940.33
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154473,5940.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      516.45
  maximum absolute entry in einsum_ir solution: 516.45
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155101
  time (eval):    0.211322
  gflops (eval):  4342.28
  gflops (total): 4045.37
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155101,0.211322,4342.28,4045.37

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20029
  gflops (total): 4581.46
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4581.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154688
  gflops (eval):  5932.06
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154688,5932.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      516.26
  maximum absolute entry in einsum_ir solution: 516.26
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0156399
  time (eval):    0.211674
  gflops (eval):  4335.06
  gflops (total): 4036.79
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0156399,0.211674,4335.06,4036.79

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.20191
  gflops (total): 4544.7
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4544.7

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.155252
  gflops (eval):  5910.53
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.155252,5910.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.305
  maximum absolute entry in einsum_ir solution: 485.305
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.015662
  time (eval):    0.211067
  gflops (eval):  4347.52
  gflops (total): 4047.2
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.015662,0.211067,4347.52,4047.2

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.199715
  gflops (total): 4594.64
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4594.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154556
  gflops (eval):  5937.14
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154556,5937.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.138
  maximum absolute entry in einsum_ir solution: 539.138
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0152988
  time (eval):    0.211412
  gflops (eval):  4340.44
  gflops (total): 4047.54
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0152988,0.211412,4340.44,4047.54

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.202841
  gflops (total): 4523.85
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4523.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154776
  gflops (eval):  5928.68
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154776,5928.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.088
  maximum absolute entry in einsum_ir solution: 501.088
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155622
  time (eval):    0.211302
  gflops (eval):  4342.69
  gflops (total): 4044.8
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155622,0.211302,4342.69,4044.8

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.203394
  gflops (total): 4511.53
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4511.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154688
  gflops (eval):  5932.08
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154688,5932.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      511.826
  maximum absolute entry in einsum_ir solution: 511.827
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0158238
  time (eval):    0.239125
  gflops (eval):  3837.4
  gflops (total): 3599.23
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0158238,0.239125,3837.4,3599.23

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.201529
  gflops (total): 4553.29
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4553.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154198
  gflops (eval):  5950.93
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154198,5950.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.409
  maximum absolute entry in einsum_ir solution: 514.409
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0155932
  time (eval):    0.2112
  gflops (eval):  4344.79
  gflops (total): 4046.06
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0155932,0.2112,4344.79,4046.06

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.200818
  gflops (total): 4569.42
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,4569.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.154177
  gflops (eval):  5951.74
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.154177,5951.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.071
  maximum absolute entry in einsum_ir solution: 529.071
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.015522
  time (eval):    0.246064
  gflops (eval):  4261.96
  gflops (total): 4009.07
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.015522,0.246064,4261.96,4009.07

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226993
  gflops (total): 4620.05
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4620.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178344
  gflops (eval):  5880.3
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178344,5880.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      519.332
  maximum absolute entry in einsum_ir solution: 519.332
  maximum element-wise difference:              0.000350952
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155924
  time (eval):    0.315479
  gflops (eval):  3324.21
  gflops (total): 3167.65
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155924,0.315479,3324.21,3167.65

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226068
  gflops (total): 4638.95
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4638.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17774
  gflops (eval):  5900.27
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17774,5900.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      563.958
  maximum absolute entry in einsum_ir solution: 563.958
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0152158
  time (eval):    0.312932
  gflops (eval):  3351.25
  gflops (total): 3195.86
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0152158,0.312932,3351.25,3195.86

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228459
  gflops (total): 4590.39
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4590.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178103
  gflops (eval):  5888.25
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178103,5888.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      549.766
  maximum absolute entry in einsum_ir solution: 549.766
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0153786
  time (eval):    0.326247
  gflops (eval):  3214.48
  gflops (total): 3069.78
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0153786,0.326247,3214.48,3069.78

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.229133
  gflops (total): 4576.89
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4576.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178453
  gflops (eval):  5876.71
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178453,5876.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      556.616
  maximum absolute entry in einsum_ir solution: 556.616
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0153613
  time (eval):    0.309021
  gflops (eval):  3393.68
  gflops (total): 3232.97
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0153613,0.309021,3393.68,3232.97

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228805
  gflops (total): 4583.46
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4583.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178079
  gflops (eval):  5889.06
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178079,5889.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      518.323
  maximum absolute entry in einsum_ir solution: 518.323
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0153442
  time (eval):    0.312027
  gflops (eval):  3360.98
  gflops (total): 3203.45
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0153442,0.312027,3360.98,3203.45

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228389
  gflops (total): 4591.81
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4591.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178097
  gflops (eval):  5888.45
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178097,5888.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      562.831
  maximum absolute entry in einsum_ir solution: 562.831
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0153728
  time (eval):    0.246124
  gflops (eval):  4260.92
  gflops (total): 4010.43
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0153728,0.246124,4260.92,4010.43

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228138
  gflops (total): 4596.85
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4596.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17814
  gflops (eval):  5887.05
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17814,5887.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      520.444
  maximum absolute entry in einsum_ir solution: 520.444
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156184
  time (eval):    0.245912
  gflops (eval):  4264.6
  gflops (total): 4009.92
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156184,0.245912,4264.6,4009.92

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226569
  gflops (total): 4628.68
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4628.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177613
  gflops (eval):  5904.5
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177613,5904.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.518
  maximum absolute entry in einsum_ir solution: 532.519
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.015425
  time (eval):    0.246507
  gflops (eval):  4254.3
  gflops (total): 4003.77
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.015425,0.246507,4254.3,4003.77

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22603
  gflops (total): 4639.73
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4639.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17815
  gflops (eval):  5886.71
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17815,5886.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      538.84
  maximum absolute entry in einsum_ir solution: 538.84
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155673
  time (eval):    0.246379
  gflops (eval):  4256.52
  gflops (total): 4003.56
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155673,0.246379,4256.52,4003.56

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22698
  gflops (total): 4620.29
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4620.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178315
  gflops (eval):  5881.26
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178315,5881.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      569.133
  maximum absolute entry in einsum_ir solution: 569.133
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0152733
  time (eval):    0.246606
  gflops (eval):  4252.6
  gflops (total): 4004.58
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0152733,0.246606,4252.6,4004.58

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226411
  gflops (total): 4631.91
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4631.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.176471
  gflops (eval):  5942.71
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.176471,5942.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.7
  maximum absolute entry in einsum_ir solution: 533.7
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0154265
  time (eval):    0.319621
  gflops (eval):  3281.13
  gflops (total): 3130.06
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0154265,0.319621,3281.13,3130.06

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227191
  gflops (total): 4616.02
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4616.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177673
  gflops (eval):  5902.52
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177673,5902.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.876
  maximum absolute entry in einsum_ir solution: 542.876
  maximum element-wise difference:              0.000350952
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0150976
  time (eval):    0.246007
  gflops (eval):  4262.96
  gflops (total): 4016.46
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0150976,0.246007,4262.96,4016.46

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227928
  gflops (total): 4601.09
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4601.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177853
  gflops (eval):  5896.54
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177853,5896.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      546.919
  maximum absolute entry in einsum_ir solution: 546.919
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0159303
  time (eval):    0.246103
  gflops (eval):  4261.28
  gflops (total): 4002.22
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0159303,0.246103,4261.28,4002.22

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228165
  gflops (total): 4596.32
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4596.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177993
  gflops (eval):  5891.89
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177993,5891.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      563.301
  maximum absolute entry in einsum_ir solution: 563.302
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155368
  time (eval):    0.246013
  gflops (eval):  4262.85
  gflops (total): 4009.63
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155368,0.246013,4262.85,4009.63

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227564
  gflops (total): 4608.45
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4608.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178338
  gflops (eval):  5880.5
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178338,5880.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.369
  maximum absolute entry in einsum_ir solution: 542.369
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155204
  time (eval):    0.24629
  gflops (eval):  4258.05
  gflops (total): 4005.63
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155204,0.24629,4258.05,4005.63

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.225611
  gflops (total): 4648.34
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4648.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177913
  gflops (eval):  5894.54
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177913,5894.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      554.782
  maximum absolute entry in einsum_ir solution: 554.782
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0151475
  time (eval):    0.321012
  gflops (eval):  3266.91
  gflops (total): 3119.7
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0151475,0.321012,3266.91,3119.7

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228936
  gflops (total): 4580.83
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4580.83

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178215
  gflops (eval):  5884.54
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178215,5884.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      600.102
  maximum absolute entry in einsum_ir solution: 600.102
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0152282
  time (eval):    0.245767
  gflops (eval):  4267.12
  gflops (total): 4018.15
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0152282,0.245767,4267.12,4018.15

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227483
  gflops (total): 4610.08
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4610.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177964
  gflops (eval):  5892.84
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177964,5892.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      574.48
  maximum absolute entry in einsum_ir solution: 574.48
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0149849
  time (eval):    0.246071
  gflops (eval):  4261.85
  gflops (total): 4017.22
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0149849,0.246071,4261.85,4017.22

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226859
  gflops (total): 4622.77
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4622.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177978
  gflops (eval):  5892.38
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177978,5892.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      552.271
  maximum absolute entry in einsum_ir solution: 552.271
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0153827
  time (eval):    0.245856
  gflops (eval):  4265.57
  gflops (total): 4014.4
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0153827,0.245856,4265.57,4014.4

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226567
  gflops (total): 4628.72
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4628.72

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177794
  gflops (eval):  5898.49
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177794,5898.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      544.462
  maximum absolute entry in einsum_ir solution: 544.462
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0157108
  time (eval):    0.245753
  gflops (eval):  4267.36
  gflops (total): 4010.94
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0157108,0.245753,4267.36,4010.94

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22695
  gflops (total): 4620.92
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4620.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178449
  gflops (eval):  5876.84
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178449,5876.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      585.635
  maximum absolute entry in einsum_ir solution: 585.634
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0151773
  time (eval):    0.246434
  gflops (eval):  4255.57
  gflops (total): 4008.68
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0151773,0.246434,4255.57,4008.68

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227303
  gflops (total): 4613.74
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4613.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177972
  gflops (eval):  5892.59
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177972,5892.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      549.331
  maximum absolute entry in einsum_ir solution: 549.331
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0152086
  time (eval):    0.246127
  gflops (eval):  4260.87
  gflops (total): 4012.91
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0152086,0.246127,4260.87,4012.91

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227111
  gflops (total): 4617.63
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4617.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177864
  gflops (eval):  5896.15
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177864,5896.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.783
  maximum absolute entry in einsum_ir solution: 537.783
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.01563
  time (eval):    0.246185
  gflops (eval):  4259.88
  gflops (total): 4005.57
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.01563,0.246185,4259.88,4005.57

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.225496
  gflops (total): 4650.7
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4650.7

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177832
  gflops (eval):  5897.22
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177832,5897.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      520.924
  maximum absolute entry in einsum_ir solution: 520.924
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0139311
  time (eval):    0.246006
  gflops (eval):  4262.98
  gflops (total): 4034.51
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0139311,0.246006,4262.98,4034.51

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226621
  gflops (total): 4627.63
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4627.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178067
  gflops (eval):  5889.44
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178067,5889.44,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      585.844
  maximum absolute entry in einsum_ir solution: 585.844
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0154069
  time (eval):    0.246337
  gflops (eval):  4257.24
  gflops (total): 4006.65
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0154069,0.246337,4257.24,4006.65

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226329
  gflops (total): 4633.59
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4633.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177984
  gflops (eval):  5892.19
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177984,5892.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      600.94
  maximum absolute entry in einsum_ir solution: 600.94
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.015665
  time (eval):    0.308894
  gflops (eval):  3395.07
  gflops (total): 3231.21
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.015665,0.308894,3395.07,3231.21

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228203
  gflops (total): 4595.55
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4595.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178413
  gflops (eval):  5878.02
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178413,5878.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.452
  maximum absolute entry in einsum_ir solution: 528.452
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156423
  time (eval):    0.24612
  gflops (eval):  4261
  gflops (total): 4006.37
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156423,0.24612,4261,4006.37

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22712
  gflops (total): 4617.46
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4617.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178298
  gflops (eval):  5881.81
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178298,5881.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      541.741
  maximum absolute entry in einsum_ir solution: 541.741
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0152741
  time (eval):    0.317834
  gflops (eval):  3299.57
  gflops (total): 3148.28
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0152741,0.317834,3299.57,3148.28

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226755
  gflops (total): 4624.88
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4624.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178258
  gflops (eval):  5883.12
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178258,5883.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.055
  maximum absolute entry in einsum_ir solution: 529.055
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.015385
  time (eval):    0.246047
  gflops (eval):  4262.26
  gflops (total): 4011.44
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.015385,0.246047,4262.26,4011.44

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227696
  gflops (total): 4605.78
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4605.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178012
  gflops (eval):  5891.25
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178012,5891.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      560.949
  maximum absolute entry in einsum_ir solution: 560.949
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0153931
  time (eval):    0.246297
  gflops (eval):  4257.93
  gflops (total): 4007.47
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0153931,0.246297,4257.93,4007.47

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228856
  gflops (total): 4582.42
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4582.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178202
  gflops (eval):  5885
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178202,5885,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      555.572
  maximum absolute entry in einsum_ir solution: 555.572
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0147703
  time (eval):    0.325836
  gflops (eval):  3218.54
  gflops (total): 3078.97
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0147703,0.325836,3218.54,3078.97

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228589
  gflops (total): 4587.78
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4587.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177966
  gflops (eval):  5892.78
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177966,5892.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.488
  maximum absolute entry in einsum_ir solution: 540.487
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0158032
  time (eval):    0.311838
  gflops (eval):  3363.02
  gflops (total): 3200.81
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0158032,0.311838,3363.02,3200.81

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22825
  gflops (total): 4594.59
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4594.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.176278
  gflops (eval):  5949.21
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.176278,5949.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      552.538
  maximum absolute entry in einsum_ir solution: 552.538
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0161662
  time (eval):    0.288445
  gflops (eval):  3635.76
  gflops (total): 3442.8
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0161662,0.288445,3635.76,3442.8

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228723
  gflops (total): 4585.1
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4585.1

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178481
  gflops (eval):  5875.79
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178481,5875.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.991
  maximum absolute entry in einsum_ir solution: 548.991
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155206
  time (eval):    0.323881
  gflops (eval):  3237.97
  gflops (total): 3089.9
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155206,0.323881,3237.97,3089.9

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228248
  gflops (total): 4594.64
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4594.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178403
  gflops (eval):  5878.37
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178403,5878.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      567.204
  maximum absolute entry in einsum_ir solution: 567.204
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0151821
  time (eval):    0.314522
  gflops (eval):  3334.31
  gflops (total): 3180.78
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0151821,0.314522,3334.31,3180.78

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227899
  gflops (total): 4601.67
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4601.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178799
  gflops (eval):  5865.34
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178799,5865.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      565.941
  maximum absolute entry in einsum_ir solution: 565.941
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0149089
  time (eval):    0.315966
  gflops (eval):  3319.08
  gflops (total): 3169.52
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0149089,0.315966,3319.08,3169.52

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228916
  gflops (total): 4581.23
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4581.23

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178454
  gflops (eval):  5876.68
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178454,5876.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      550.079
  maximum absolute entry in einsum_ir solution: 550.079
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0159703
  time (eval):    0.319593
  gflops (eval):  3281.41
  gflops (total): 3125.24
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0159703,0.319593,3281.41,3125.24

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227925
  gflops (total): 4601.15
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4601.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178126
  gflops (eval):  5887.51
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178126,5887.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.039
  maximum absolute entry in einsum_ir solution: 508.039
  maximum element-wise difference:              0.000518799
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0150371
  time (eval):    0.320629
  gflops (eval):  3270.81
  gflops (total): 3124.28
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0150371,0.320629,3270.81,3124.28

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227516
  gflops (total): 4609.42
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4609.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17827
  gflops (eval):  5882.74
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17827,5882.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.09
  maximum absolute entry in einsum_ir solution: 528.09
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0149066
  time (eval):    0.318313
  gflops (eval):  3294.6
  gflops (total): 3147.22
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0149066,0.318313,3294.6,3147.22

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.225782
  gflops (total): 4644.83
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4644.83

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178204
  gflops (eval):  5884.9
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178204,5884.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      550.412
  maximum absolute entry in einsum_ir solution: 550.412
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0154778
  time (eval):    0.320101
  gflops (eval):  3276.2
  gflops (total): 3125.09
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0154778,0.320101,3276.2,3125.09

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228402
  gflops (total): 4591.54
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4591.54

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177621
  gflops (eval):  5904.22
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177621,5904.22,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      555.961
  maximum absolute entry in einsum_ir solution: 555.96
  maximum element-wise difference:              0.000457764
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0152553
  time (eval):    0.24607
  gflops (eval):  4261.87
  gflops (total): 4013.08
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0152553,0.24607,4261.87,4013.08

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22658
  gflops (total): 4628.47
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4628.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178052
  gflops (eval):  5889.94
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178052,5889.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      545.194
  maximum absolute entry in einsum_ir solution: 545.194
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155115
  time (eval):    0.24605
  gflops (eval):  4262.2
  gflops (total): 4009.44
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155115,0.24605,4262.2,4009.44

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227494
  gflops (total): 4609.86
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4609.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177905
  gflops (eval):  5894.81
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177905,5894.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      603.846
  maximum absolute entry in einsum_ir solution: 603.846
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.015232
  time (eval):    0.246192
  gflops (eval):  4259.74
  gflops (total): 4011.55
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.015232,0.246192,4259.74,4011.55

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227925
  gflops (total): 4601.16
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4601.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177933
  gflops (eval):  5893.87
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177933,5893.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      549.578
  maximum absolute entry in einsum_ir solution: 549.578
  maximum element-wise difference:              0.000350952
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0149619
  time (eval):    0.24642
  gflops (eval):  4255.81
  gflops (total): 4012.2
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0149619,0.24642,4255.81,4012.2

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227381
  gflops (total): 4612.14
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4612.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178315
  gflops (eval):  5881.27
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178315,5881.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.175
  maximum absolute entry in einsum_ir solution: 531.175
  maximum element-wise difference:              0.000350952
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0149356
  time (eval):    0.320509
  gflops (eval):  3272.03
  gflops (total): 3126.34
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0149356,0.320509,3272.03,3126.34

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226537
  gflops (total): 4629.35
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4629.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.176671
  gflops (eval):  5935.99
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.176671,5935.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      556.338
  maximum absolute entry in einsum_ir solution: 556.338
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0153358
  time (eval):    0.246074
  gflops (eval):  4261.8
  gflops (total): 4011.78
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0153358,0.246074,4261.8,4011.78

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.225947
  gflops (total): 4641.42
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4641.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178054
  gflops (eval):  5889.88
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178054,5889.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.598
  maximum absolute entry in einsum_ir solution: 548.598
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156338
  time (eval):    0.246005
  gflops (eval):  4262.99
  gflops (total): 4008.26
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156338,0.246005,4262.99,4008.26

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22561
  gflops (total): 4648.36
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4648.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177644
  gflops (eval):  5903.46
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177644,5903.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.878
  maximum absolute entry in einsum_ir solution: 548.878
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0154145
  time (eval):    0.296563
  gflops (eval):  3536.24
  gflops (total): 3361.51
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0154145,0.296563,3536.24,3361.51

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228041
  gflops (total): 4598.81
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4598.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178271
  gflops (eval):  5882.7
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178271,5882.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.816
  maximum absolute entry in einsum_ir solution: 536.816
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156406
  time (eval):    0.285132
  gflops (eval):  3678
  gflops (total): 3486.74
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156406,0.285132,3678,3486.74

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227951
  gflops (total): 4600.62
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4600.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178052
  gflops (eval):  5889.93
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178052,5889.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      555.331
  maximum absolute entry in einsum_ir solution: 555.331
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0157428
  time (eval):    0.264746
  gflops (eval):  3961.22
  gflops (total): 3738.89
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0157428,0.264746,3961.22,3738.89

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228153
  gflops (total): 4596.54
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4596.54

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.176529
  gflops (eval):  5940.76
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.176529,5940.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      558.884
  maximum absolute entry in einsum_ir solution: 558.884
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155149
  time (eval):    0.315803
  gflops (eval):  3320.79
  gflops (total): 3165.29
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155149,0.315803,3320.79,3165.29

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227909
  gflops (total): 4601.46
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4601.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177785
  gflops (eval):  5898.78
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177785,5898.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      552.024
  maximum absolute entry in einsum_ir solution: 552.024
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156007
  time (eval):    0.325185
  gflops (eval):  3224.98
  gflops (total): 3077.35
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156007,0.325185,3224.98,3077.35

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228053
  gflops (total): 4598.57
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4598.57

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178113
  gflops (eval):  5887.91
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178113,5887.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      563.629
  maximum absolute entry in einsum_ir solution: 563.629
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156073
  time (eval):    0.246375
  gflops (eval):  4256.58
  gflops (total): 4003
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156073,0.246375,4256.58,4003

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22633
  gflops (total): 4633.58
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4633.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17781
  gflops (eval):  5897.95
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17781,5897.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.446
  maximum absolute entry in einsum_ir solution: 537.446
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0158078
  time (eval):    0.246432
  gflops (eval):  4255.61
  gflops (total): 3999.08
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0158078,0.246432,4255.61,3999.08

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226001
  gflops (total): 4640.32
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4640.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178436
  gflops (eval):  5877.26
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178436,5877.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.257
  maximum absolute entry in einsum_ir solution: 531.257
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.015557
  time (eval):    0.246257
  gflops (eval):  4258.63
  gflops (total): 4005.58
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.015557,0.246257,4258.63,4005.58

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228236
  gflops (total): 4594.88
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4594.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178078
  gflops (eval):  5889.09
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178078,5889.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      581.443
  maximum absolute entry in einsum_ir solution: 581.443
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.015434
  time (eval):    0.308063
  gflops (eval):  3404.22
  gflops (total): 3241.81
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.015434,0.308063,3404.22,3241.81

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228758
  gflops (total): 4584.4
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4584.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178192
  gflops (eval):  5885.3
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178192,5885.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      541.089
  maximum absolute entry in einsum_ir solution: 541.089
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155875
  time (eval):    0.245852
  gflops (eval):  4265.64
  gflops (total): 4011.31
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155875,0.245852,4265.64,4011.31

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228258
  gflops (total): 4594.44
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4594.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.176615
  gflops (eval):  5937.87
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.176615,5937.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      521.365
  maximum absolute entry in einsum_ir solution: 521.365
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155324
  time (eval):    0.245551
  gflops (eval):  4270.88
  gflops (total): 4016.79
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155324,0.245551,4270.88,4016.79

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227076
  gflops (total): 4618.35
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4618.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177983
  gflops (eval):  5892.23
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177983,5892.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      543.246
  maximum absolute entry in einsum_ir solution: 543.246
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0152076
  time (eval):    0.317977
  gflops (eval):  3298.09
  gflops (total): 3147.55
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0152076,0.317977,3298.09,3147.55

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22902
  gflops (total): 4579.15
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4579.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178541
  gflops (eval):  5873.82
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178541,5873.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      550.827
  maximum absolute entry in einsum_ir solution: 550.827
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.015379
  time (eval):    0.326205
  gflops (eval):  3214.9
  gflops (total): 3070.16
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.015379,0.326205,3214.9,3070.16

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227155
  gflops (total): 4616.74
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4616.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178339
  gflops (eval):  5880.45
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178339,5880.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.733
  maximum absolute entry in einsum_ir solution: 526.733
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155014
  time (eval):    0.322377
  gflops (eval):  3253.08
  gflops (total): 3103.83
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155014,0.322377,3253.08,3103.83

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227664
  gflops (total): 4606.43
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4606.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177938
  gflops (eval):  5893.73
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177938,5893.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      596.719
  maximum absolute entry in einsum_ir solution: 596.719
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155686
  time (eval):    0.321436
  gflops (eval):  3262.6
  gflops (total): 3111.88
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155686,0.321436,3262.6,3111.88

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228282
  gflops (total): 4593.94
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4593.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178028
  gflops (eval):  5890.75
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178028,5890.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.857
  maximum absolute entry in einsum_ir solution: 539.857
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0153845
  time (eval):    0.321139
  gflops (eval):  3265.62
  gflops (total): 3116.33
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0153845,0.321139,3265.62,3116.33

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228209
  gflops (total): 4595.42
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4595.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177738
  gflops (eval):  5900.34
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177738,5900.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      554.081
  maximum absolute entry in einsum_ir solution: 554.08
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155868
  time (eval):    0.322013
  gflops (eval):  3256.75
  gflops (total): 3106.39
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155868,0.322013,3256.75,3106.39

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227807
  gflops (total): 4603.52
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4603.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178272
  gflops (eval):  5882.68
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178272,5882.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.496
  maximum absolute entry in einsum_ir solution: 540.497
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0152241
  time (eval):    0.320298
  gflops (eval):  3274.19
  gflops (total): 3125.63
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0152241,0.320298,3274.19,3125.63

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228141
  gflops (total): 4596.78
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4596.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177974
  gflops (eval):  5892.51
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177974,5892.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.554
  maximum absolute entry in einsum_ir solution: 548.554
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156592
  time (eval):    0.246289
  gflops (eval):  4258.08
  gflops (total): 4003.53
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156592,0.246289,4258.08,4003.53

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228552
  gflops (total): 4588.53
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4588.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178346
  gflops (eval):  5880.23
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178346,5880.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      549.764
  maximum absolute entry in einsum_ir solution: 549.764
  maximum element-wise difference:              0.00038147
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0154543
  time (eval):    0.279232
  gflops (eval):  3755.72
  gflops (total): 3558.76
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0154543,0.279232,3755.72,3558.76

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227996
  gflops (total): 4599.71
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4599.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.17799
  gflops (eval):  5891.99
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.17799,5891.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      530.42
  maximum absolute entry in einsum_ir solution: 530.42
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0153647
  time (eval):    0.276264
  gflops (eval):  3796.06
  gflops (total): 3596.06
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0153647,0.276264,3796.06,3596.06

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226579
  gflops (total): 4628.47
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4628.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178102
  gflops (eval):  5888.29
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178102,5888.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.241
  maximum absolute entry in einsum_ir solution: 515.241
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156411
  time (eval):    0.322238
  gflops (eval):  3254.47
  gflops (total): 3103.82
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156411,0.322238,3254.47,3103.82

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227549
  gflops (total): 4608.76
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4608.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178303
  gflops (eval):  5881.66
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178303,5881.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      573.027
  maximum absolute entry in einsum_ir solution: 573.028
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0151532
  time (eval):    0.320896
  gflops (eval):  3268.09
  gflops (total): 3120.72
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0151532,0.320896,3268.09,3120.72

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226754
  gflops (total): 4624.9
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4624.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177959
  gflops (eval):  5893.02
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177959,5893.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      534.625
  maximum absolute entry in einsum_ir solution: 534.625
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156519
  time (eval):    0.316007
  gflops (eval):  3318.65
  gflops (total): 3162.03
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156519,0.316007,3318.65,3162.03

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.229522
  gflops (total): 4569.13
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4569.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178493
  gflops (eval):  5875.38
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178493,5875.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      522.783
  maximum absolute entry in einsum_ir solution: 522.784
  maximum element-wise difference:              0.000320435
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156615
  time (eval):    0.319353
  gflops (eval):  3283.88
  gflops (total): 3130.36
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156615,0.319353,3283.88,3130.36

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227572
  gflops (total): 4608.28
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4608.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.176415
  gflops (eval):  5944.61
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.176415,5944.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      535.106
  maximum absolute entry in einsum_ir solution: 535.106
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155554
  time (eval):    0.32367
  gflops (eval):  3240.07
  gflops (total): 3091.5
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155554,0.32367,3240.07,3091.5

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227764
  gflops (total): 4604.4
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4604.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177874
  gflops (eval):  5895.85
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177874,5895.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.358
  maximum absolute entry in einsum_ir solution: 529.358
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0157457
  time (eval):    0.246144
  gflops (eval):  4260.59
  gflops (total): 4004.42
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0157457,0.246144,4260.59,4004.42

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228208
  gflops (total): 4595.43
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4595.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178684
  gflops (eval):  5869.12
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178684,5869.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      591.46
  maximum absolute entry in einsum_ir solution: 591.46
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0148393
  time (eval):    0.24606
  gflops (eval):  4262.04
  gflops (total): 4019.62
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0148393,0.24606,4262.04,4019.62

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226959
  gflops (total): 4620.73
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4620.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177823
  gflops (eval):  5897.52
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177823,5897.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      544.598
  maximum absolute entry in einsum_ir solution: 544.597
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0152926
  time (eval):    0.246063
  gflops (eval):  4261.98
  gflops (total): 4012.6
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0152926,0.246063,4261.98,4012.6

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227665
  gflops (total): 4606.41
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4606.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177664
  gflops (eval):  5902.81
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177664,5902.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      550.684
  maximum absolute entry in einsum_ir solution: 550.684
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156101
  time (eval):    0.245895
  gflops (eval):  4264.9
  gflops (total): 4010.31
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156101,0.245895,4264.9,4010.31

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228176
  gflops (total): 4596.08
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4596.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177755
  gflops (eval):  5899.8
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177755,5899.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      520.042
  maximum absolute entry in einsum_ir solution: 520.042
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0151334
  time (eval):    0.305763
  gflops (eval):  3429.84
  gflops (total): 3268.09
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0151334,0.305763,3429.84,3268.09

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22783
  gflops (total): 4603.06
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4603.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177412
  gflops (eval):  5911.19
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177412,5911.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      566.472
  maximum absolute entry in einsum_ir solution: 566.472
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156299
  time (eval):    0.245952
  gflops (eval):  4263.9
  gflops (total): 4009.13
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156299,0.245952,4263.9,4009.13

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228606
  gflops (total): 4587.43
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4587.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177723
  gflops (eval):  5900.84
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177723,5900.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      547.306
  maximum absolute entry in einsum_ir solution: 547.306
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156843
  time (eval):    0.323801
  gflops (eval):  3238.77
  gflops (total): 3089.13
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156843,0.323801,3238.77,3089.13

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226885
  gflops (total): 4622.24
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4622.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178393
  gflops (eval):  5878.7
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178393,5878.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.386
  maximum absolute entry in einsum_ir solution: 533.386
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156284
  time (eval):    0.245993
  gflops (eval):  4263.19
  gflops (total): 4008.52
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156284,0.245993,4263.19,4008.52

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227887
  gflops (total): 4601.92
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4601.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177829
  gflops (eval):  5897.33
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177829,5897.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.765
  maximum absolute entry in einsum_ir solution: 533.765
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0151777
  time (eval):    0.246061
  gflops (eval):  4262.02
  gflops (total): 4014.4
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0151777,0.246061,4262.02,4014.4

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228316
  gflops (total): 4593.26
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4593.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177964
  gflops (eval):  5892.86
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177964,5892.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      557.711
  maximum absolute entry in einsum_ir solution: 557.711
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0154684
  time (eval):    0.318438
  gflops (eval):  3293.31
  gflops (total): 3140.75
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0154684,0.318438,3293.31,3140.75

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227758
  gflops (total): 4604.52
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4604.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177926
  gflops (eval):  5894.13
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177926,5894.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      543.94
  maximum absolute entry in einsum_ir solution: 543.94
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155947
  time (eval):    0.246135
  gflops (eval):  4260.73
  gflops (total): 4006.86
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155947,0.246135,4260.73,4006.86

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226907
  gflops (total): 4621.8
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4621.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178127
  gflops (eval):  5887.47
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178127,5887.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      534.167
  maximum absolute entry in einsum_ir solution: 534.167
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155844
  time (eval):    0.245787
  gflops (eval):  4266.77
  gflops (total): 4012.36
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155844,0.245787,4266.77,4012.36

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227543
  gflops (total): 4608.88
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4608.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178426
  gflops (eval):  5877.6
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178426,5877.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.382
  maximum absolute entry in einsum_ir solution: 537.382
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0154602
  time (eval):    0.31947
  gflops (eval):  3282.68
  gflops (total): 3131.15
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0154602,0.31947,3282.68,3131.15

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.225228
  gflops (total): 4656.25
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4656.25

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178114
  gflops (eval):  5887.89
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178114,5887.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      607.865
  maximum absolute entry in einsum_ir solution: 607.865
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0153953
  time (eval):    0.319424
  gflops (eval):  3283.15
  gflops (total): 3132.19
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0153953,0.319424,3283.15,3132.19

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227675
  gflops (total): 4606.2
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4606.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178158
  gflops (eval):  5886.43
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178158,5886.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.866
  maximum absolute entry in einsum_ir solution: 542.866
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155028
  time (eval):    0.313502
  gflops (eval):  3345.17
  gflops (total): 3187.54
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155028,0.313502,3345.17,3187.54

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.229558
  gflops (total): 4568.42
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4568.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177884
  gflops (eval):  5895.51
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177884,5895.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      560.088
  maximum absolute entry in einsum_ir solution: 560.088
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0152353
  time (eval):    0.315947
  gflops (eval):  3319.27
  gflops (total): 3166.58
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0152353,0.315947,3319.27,3166.58

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228568
  gflops (total): 4588.21
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4588.21

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177818
  gflops (eval):  5897.69
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177818,5897.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.484
  maximum absolute entry in einsum_ir solution: 548.484
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156728
  time (eval):    0.321314
  gflops (eval):  3263.83
  gflops (total): 3112.04
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156728,0.321314,3263.83,3112.04

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228177
  gflops (total): 4596.07
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4596.07

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177914
  gflops (eval):  5894.5
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177914,5894.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      573.51
  maximum absolute entry in einsum_ir solution: 573.51
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0158003
  time (eval):    0.245793
  gflops (eval):  4266.66
  gflops (total): 4008.95
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0158003,0.245793,4266.66,4008.95

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227358
  gflops (total): 4612.62
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4612.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178378
  gflops (eval):  5879.18
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178378,5879.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.04
  maximum absolute entry in einsum_ir solution: 533.04
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156888
  time (eval):    0.246039
  gflops (eval):  4262.39
  gflops (total): 4006.89
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156888,0.246039,4262.39,4006.89

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227699
  gflops (total): 4605.71
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4605.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178304
  gflops (eval):  5881.6
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178304,5881.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      551.255
  maximum absolute entry in einsum_ir solution: 551.255
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0151807
  time (eval):    0.246482
  gflops (eval):  4254.73
  gflops (total): 4007.89
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0151807,0.246482,4254.73,4007.89

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227875
  gflops (total): 4602.15
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4602.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177886
  gflops (eval):  5895.43
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177886,5895.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.929
  maximum absolute entry in einsum_ir solution: 536.929
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0153267
  time (eval):    0.246034
  gflops (eval):  4262.48
  gflops (total): 4012.52
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0153267,0.246034,4262.48,4012.52

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227714
  gflops (total): 4605.42
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4605.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178293
  gflops (eval):  5881.97
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178293,5881.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      555.557
  maximum absolute entry in einsum_ir solution: 555.557
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156329
  time (eval):    0.320099
  gflops (eval):  3276.23
  gflops (total): 3123.67
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156329,0.320099,3276.23,3123.67

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227908
  gflops (total): 4601.5
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4601.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177446
  gflops (eval):  5910.07
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177446,5910.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      560.769
  maximum absolute entry in einsum_ir solution: 560.769
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0148927
  time (eval):    0.246603
  gflops (eval):  4252.64
  gflops (total): 4010.45
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0148927,0.246603,4252.64,4010.45

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.22619
  gflops (total): 4636.45
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4636.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177752
  gflops (eval):  5899.89
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177752,5899.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.984
  maximum absolute entry in einsum_ir solution: 539.984
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0152822
  time (eval):    0.253808
  gflops (eval):  4131.93
  gflops (total): 3897.27
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0152822,0.253808,4131.93,3897.27

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.226656
  gflops (total): 4626.92
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4626.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177605
  gflops (eval):  5904.78
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177605,5904.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      551.535
  maximum absolute entry in einsum_ir solution: 551.536
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0156832
  time (eval):    0.322201
  gflops (eval):  3254.85
  gflops (total): 3103.77
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0156832,0.322201,3254.85,3103.77

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.228233
  gflops (total): 4594.94
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4594.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.177709
  gflops (eval):  5901.31
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.177709,5901.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      556.023
  maximum absolute entry in einsum_ir solution: 556.023
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0155082
  time (eval):    0.30537
  gflops (eval):  3434.25
  gflops (total): 3268.27
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0155082,0.30537,3434.25,3268.27

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   0.227384
  gflops (total): 4612.08
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,4612.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    0.178222
  gflops (eval):  5884.34
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0.178222,5884.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      576.178
  maximum absolute entry in einsum_ir solution: 576.178
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0155159
  time (eval):    0.19212
  gflops (eval):  4776.25
  gflops (total): 4419.34
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0155159,0.19212,4776.25,4419.34

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212893
  gflops (total): 4310.2
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4310.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156746
  gflops (eval):  5854.14
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156746,5854.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.94
  maximum absolute entry in einsum_ir solution: 493.94
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0155617
  time (eval):    0.191984
  gflops (eval):  4779.63
  gflops (total): 4421.26
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0155617,0.191984,4779.63,4421.26

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.21368
  gflops (total): 4294.32
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4294.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156908
  gflops (eval):  5848.09
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156908,5848.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      516.603
  maximum absolute entry in einsum_ir solution: 516.603
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0151786
  time (eval):    0.190384
  gflops (eval):  4819.79
  gflops (total): 4463.9
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0151786,0.190384,4819.79,4463.9

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211983
  gflops (total): 4328.69
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4328.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156616
  gflops (eval):  5858.98
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156616,5858.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.332
  maximum absolute entry in einsum_ir solution: 493.332
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0154991
  time (eval):    0.192499
  gflops (eval):  4766.84
  gflops (total): 4411.64
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0154991,0.192499,4766.84,4411.64

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212219
  gflops (total): 4323.9
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4323.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157379
  gflops (eval):  5830.59
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157379,5830.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.057
  maximum absolute entry in einsum_ir solution: 500.057
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156322
  time (eval):    0.190557
  gflops (eval):  4815.42
  gflops (total): 4450.34
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156322,0.190557,4815.42,4450.34

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212002
  gflops (total): 4328.32
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4328.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156823
  gflops (eval):  5851.25
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156823,5851.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.601
  maximum absolute entry in einsum_ir solution: 478.601
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0153862
  time (eval):    0.191658
  gflops (eval):  4787.75
  gflops (total): 4431.95
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0153862,0.191658,4787.75,4431.95

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212022
  gflops (total): 4327.91
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4327.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156734
  gflops (eval):  5854.57
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156734,5854.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.398
  maximum absolute entry in einsum_ir solution: 508.398
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0150882
  time (eval):    0.191949
  gflops (eval):  4780.48
  gflops (total): 4432.1
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0150882,0.191949,4780.48,4432.1

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212905
  gflops (total): 4309.96
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4309.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156498
  gflops (eval):  5863.42
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156498,5863.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.697
  maximum absolute entry in einsum_ir solution: 476.697
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156448
  time (eval):    0.192656
  gflops (eval):  4762.96
  gflops (total): 4405.23
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156448,0.192656,4762.96,4405.23

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212252
  gflops (total): 4323.22
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4323.22

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15669
  gflops (eval):  5856.21
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15669,5856.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.411
  maximum absolute entry in einsum_ir solution: 483.411
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0157385
  time (eval):    0.190554
  gflops (eval):  4815.48
  gflops (total): 4448.1
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0157385,0.190554,4815.48,4448.1

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211476
  gflops (total): 4339.08
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4339.08

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157302
  gflops (eval):  5833.43
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157302,5833.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.514
  maximum absolute entry in einsum_ir solution: 476.514
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0153992
  time (eval):    0.190158
  gflops (eval):  4825.52
  gflops (total): 4464.02
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0153992,0.190158,4825.52,4464.02

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210774
  gflops (total): 4353.53
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4353.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157374
  gflops (eval):  5830.77
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157374,5830.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      462.219
  maximum absolute entry in einsum_ir solution: 462.219
  maximum element-wise difference:              0.000289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0150434
  time (eval):    0.192278
  gflops (eval):  4772.32
  gflops (total): 4426.04
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0150434,0.192278,4772.32,4426.04

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211389
  gflops (total): 4340.86
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4340.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157069
  gflops (eval):  5842.11
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157069,5842.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.281
  maximum absolute entry in einsum_ir solution: 487.281
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.015081
  time (eval):    0.192149
  gflops (eval):  4775.52
  gflops (total): 4427.99
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.015081,0.192149,4775.52,4427.99

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210996
  gflops (total): 4348.95
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4348.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15708
  gflops (eval):  5841.69
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15708,5841.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.686
  maximum absolute entry in einsum_ir solution: 483.686
  maximum element-wise difference:              0.000289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0153798
  time (eval):    0.19216
  gflops (eval):  4775.24
  gflops (total): 4421.37
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0153798,0.19216,4775.24,4421.37

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.21134
  gflops (total): 4341.88
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4341.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.155303
  gflops (eval):  5908.52
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.155303,5908.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      455.769
  maximum absolute entry in einsum_ir solution: 455.769
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0153217
  time (eval):    0.192088
  gflops (eval):  4777.04
  gflops (total): 4424.15
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0153217,0.192088,4777.04,4424.15

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211162
  gflops (total): 4345.53
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4345.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156816
  gflops (eval):  5851.51
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156816,5851.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.15
  maximum absolute entry in einsum_ir solution: 481.15
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0154874
  time (eval):    0.192069
  gflops (eval):  4777.52
  gflops (total): 4421.03
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0154874,0.192069,4777.52,4421.03

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211876
  gflops (total): 4330.88
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4330.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157099
  gflops (eval):  5840.96
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157099,5840.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.949
  maximum absolute entry in einsum_ir solution: 529.949
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0152503
  time (eval):    0.192723
  gflops (eval):  4761.29
  gflops (total): 4412.16
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0152503,0.192723,4761.29,4412.16

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210102
  gflops (total): 4367.47
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4367.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157559
  gflops (eval):  5823.92
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157559,5823.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.936
  maximum absolute entry in einsum_ir solution: 477.936
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0150365
  time (eval):    0.1921
  gflops (eval):  4776.73
  gflops (total): 4429.98
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0150365,0.1921,4776.73,4429.98

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212176
  gflops (total): 4324.76
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4324.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157115
  gflops (eval):  5840.38
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157115,5840.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.209
  maximum absolute entry in einsum_ir solution: 477.209
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0149586
  time (eval):    0.192037
  gflops (eval):  4778.31
  gflops (total): 4433
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0149586,0.192037,4778.31,4433

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.209913
  gflops (total): 4371.39
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4371.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.155491
  gflops (eval):  5901.39
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.155491,5901.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.733
  maximum absolute entry in einsum_ir solution: 474.733
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0155917
  time (eval):    0.191868
  gflops (eval):  4782.5
  gflops (total): 4423.08
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0155917,0.191868,4782.5,4423.08

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211728
  gflops (total): 4333.92
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4333.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156645
  gflops (eval):  5857.91
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156645,5857.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.691
  maximum absolute entry in einsum_ir solution: 461.691
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.015244
  time (eval):    0.192126
  gflops (eval):  4776.1
  gflops (total): 4425
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.015244,0.192126,4776.1,4425

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211986
  gflops (total): 4328.65
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4328.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157211
  gflops (eval):  5836.8
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157211,5836.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.114
  maximum absolute entry in einsum_ir solution: 474.114
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.014558
  time (eval):    0.190729
  gflops (eval):  4811.08
  gflops (total): 4469.9
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.014558,0.190729,4811.08,4469.9

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211879
  gflops (total): 4330.82
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4330.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157057
  gflops (eval):  5842.53
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157057,5842.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.755
  maximum absolute entry in einsum_ir solution: 494.756
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156368
  time (eval):    0.192657
  gflops (eval):  4762.93
  gflops (total): 4405.37
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156368,0.192657,4762.93,4405.37

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210585
  gflops (total): 4357.43
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4357.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157339
  gflops (eval):  5832.06
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157339,5832.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      490.309
  maximum absolute entry in einsum_ir solution: 490.309
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0157058
  time (eval):    0.192186
  gflops (eval):  4774.61
  gflops (total): 4413.89
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0157058,0.192186,4774.61,4413.89

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211069
  gflops (total): 4347.45
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4347.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157097
  gflops (eval):  5841.07
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157097,5841.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.491
  maximum absolute entry in einsum_ir solution: 498.491
  maximum element-wise difference:              0.000289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0148078
  time (eval):    0.191989
  gflops (eval):  4779.5
  gflops (total): 4437.26
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0148078,0.191989,4779.5,4437.26

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211678
  gflops (total): 4334.95
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4334.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156624
  gflops (eval):  5858.68
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156624,5858.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.648
  maximum absolute entry in einsum_ir solution: 533.648
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0151438
  time (eval):    0.192013
  gflops (eval):  4778.89
  gflops (total): 4429.54
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0151438,0.192013,4778.89,4429.54

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211602
  gflops (total): 4336.5
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4336.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156693
  gflops (eval):  5856.1
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156693,5856.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.02
  maximum absolute entry in einsum_ir solution: 486.02
  maximum element-wise difference:              0.000289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0155246
  time (eval):    0.191995
  gflops (eval):  4779.34
  gflops (total): 4421.8
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0155246,0.191995,4779.34,4421.8

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211008
  gflops (total): 4348.7
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4348.7

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15725
  gflops (eval):  5835.37
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15725,5835.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.871
  maximum absolute entry in einsum_ir solution: 504.871
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.015086
  time (eval):    0.192292
  gflops (eval):  4771.98
  gflops (total): 4424.83
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.015086,0.192292,4771.98,4424.83

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212306
  gflops (total): 4322.11
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4322.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.158233
  gflops (eval):  5799.11
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.158233,5799.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.306
  maximum absolute entry in einsum_ir solution: 489.306
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0151165
  time (eval):    0.192481
  gflops (eval):  4767.27
  gflops (total): 4420.14
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0151165,0.192481,4767.27,4420.14

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210552
  gflops (total): 4358.12
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4358.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157142
  gflops (eval):  5839.39
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157142,5839.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      514.615
  maximum absolute entry in einsum_ir solution: 514.615
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0155376
  time (eval):    0.192062
  gflops (eval):  4777.7
  gflops (total): 4420.11
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0155376,0.192062,4777.7,4420.11

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.21098
  gflops (total): 4349.29
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4349.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156574
  gflops (eval):  5860.56
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156574,5860.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504
  maximum absolute entry in einsum_ir solution: 504
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0155241
  time (eval):    0.192083
  gflops (eval):  4777.15
  gflops (total): 4419.93
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0155241,0.192083,4777.15,4419.93

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212956
  gflops (total): 4308.92
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4308.92

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157177
  gflops (eval):  5838.09
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157177,5838.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.502
  maximum absolute entry in einsum_ir solution: 494.502
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0154854
  time (eval):    0.19224
  gflops (eval):  4773.25
  gflops (total): 4417.42
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0154854,0.19224,4773.25,4417.42

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211912
  gflops (total): 4330.16
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4330.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156618
  gflops (eval):  5858.91
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156618,5858.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.052
  maximum absolute entry in einsum_ir solution: 482.052
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0152975
  time (eval):    0.192097
  gflops (eval):  4776.82
  gflops (total): 4424.48
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0152975,0.192097,4776.82,4424.48

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211773
  gflops (total): 4333
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156631
  gflops (eval):  5858.41
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156631,5858.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.591
  maximum absolute entry in einsum_ir solution: 479.591
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156162
  time (eval):    0.192038
  gflops (eval):  4778.29
  gflops (total): 4418.95
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156162,0.192038,4778.29,4418.95

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211587
  gflops (total): 4336.8
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4336.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157037
  gflops (eval):  5843.29
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157037,5843.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.239
  maximum absolute entry in einsum_ir solution: 482.239
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0149843
  time (eval):    0.192152
  gflops (eval):  4775.45
  gflops (total): 4429.99
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0149843,0.192152,4775.45,4429.99

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210564
  gflops (total): 4357.88
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4357.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156982
  gflops (eval):  5845.35
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156982,5845.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.386
  maximum absolute entry in einsum_ir solution: 469.386
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156538
  time (eval):    0.192255
  gflops (eval):  4772.89
  gflops (total): 4413.53
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156538,0.192255,4772.89,4413.53

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210678
  gflops (total): 4355.52
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4355.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157583
  gflops (eval):  5823.04
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157583,5823.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      459.455
  maximum absolute entry in einsum_ir solution: 459.455
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0159085
  time (eval):    0.192201
  gflops (eval):  4774.23
  gflops (total): 4409.27
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0159085,0.192201,4774.23,4409.27

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.214618
  gflops (total): 4275.55
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4275.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15705
  gflops (eval):  5842.78
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15705,5842.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.289
  maximum absolute entry in einsum_ir solution: 507.289
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0153718
  time (eval):    0.191989
  gflops (eval):  4779.51
  gflops (total): 4425.2
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0153718,0.191989,4779.51,4425.2

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211941
  gflops (total): 4329.56
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4329.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156927
  gflops (eval):  5847.39
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156927,5847.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.349
  maximum absolute entry in einsum_ir solution: 479.349
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0154466
  time (eval):    0.190688
  gflops (eval):  4812.1
  gflops (total): 4451.51
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0154466,0.190688,4812.1,4451.51

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211918
  gflops (total): 4330.02
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4330.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156913
  gflops (eval):  5847.9
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156913,5847.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.338
  maximum absolute entry in einsum_ir solution: 478.338
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0148138
  time (eval):    0.192012
  gflops (eval):  4778.93
  gflops (total): 4436.64
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0148138,0.192012,4778.93,4436.64

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211805
  gflops (total): 4332.35
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4332.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157255
  gflops (eval):  5835.18
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157255,5835.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.664
  maximum absolute entry in einsum_ir solution: 487.664
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0149184
  time (eval):    0.191794
  gflops (eval):  4784.36
  gflops (total): 4439.07
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0149184,0.191794,4784.36,4439.07

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210864
  gflops (total): 4351.67
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4351.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156998
  gflops (eval):  5844.73
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156998,5844.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.188
  maximum absolute entry in einsum_ir solution: 464.188
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156837
  time (eval):    0.192214
  gflops (eval):  4773.9
  gflops (total): 4413.76
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156837,0.192214,4773.9,4413.76

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212106
  gflops (total): 4326.19
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4326.19

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15719
  gflops (eval):  5837.58
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15719,5837.58,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.189
  maximum absolute entry in einsum_ir solution: 484.189
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0154452
  time (eval):    0.192025
  gflops (eval):  4778.61
  gflops (total): 4422.86
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0154452,0.192025,4778.61,4422.86

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211121
  gflops (total): 4346.37
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4346.37

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.155883
  gflops (eval):  5886.55
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.155883,5886.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.538
  maximum absolute entry in einsum_ir solution: 508.538
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156173
  time (eval):    0.192136
  gflops (eval):  4775.84
  gflops (total): 4416.83
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156173,0.192136,4775.84,4416.83

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212184
  gflops (total): 4324.6
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4324.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156482
  gflops (eval):  5864.01
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156482,5864.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.882
  maximum absolute entry in einsum_ir solution: 469.882
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0143979
  time (eval):    0.192084
  gflops (eval):  4777.14
  gflops (total): 4444.03
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0143979,0.192084,4777.14,4444.03

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211881
  gflops (total): 4330.79
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4330.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156654
  gflops (eval):  5857.56
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156654,5857.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.786
  maximum absolute entry in einsum_ir solution: 471.786
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0152226
  time (eval):    0.191992
  gflops (eval):  4779.43
  gflops (total): 4428.32
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0152226,0.191992,4779.43,4428.32

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210504
  gflops (total): 4359.12
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4359.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157242
  gflops (eval):  5835.65
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157242,5835.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.941
  maximum absolute entry in einsum_ir solution: 488.941
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0152638
  time (eval):    0.192039
  gflops (eval):  4778.26
  gflops (total): 4426.43
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0152638,0.192039,4778.26,4426.43

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210613
  gflops (total): 4356.86
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4356.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157508
  gflops (eval):  5825.8
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157508,5825.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.306
  maximum absolute entry in einsum_ir solution: 468.306
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.015016
  time (eval):    0.191612
  gflops (eval):  4788.91
  gflops (total): 4440.89
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.015016,0.191612,4788.91,4440.89

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.21214
  gflops (total): 4325.49
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4325.49

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156435
  gflops (eval):  5865.76
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156435,5865.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.692
  maximum absolute entry in einsum_ir solution: 479.692
  maximum element-wise difference:              0.000289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0152363
  time (eval):    0.19196
  gflops (eval):  4780.22
  gflops (total): 4428.71
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0152363,0.19196,4780.22,4428.71

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.2104
  gflops (total): 4361.27
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4361.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156816
  gflops (eval):  5851.52
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156816,5851.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.56
  maximum absolute entry in einsum_ir solution: 468.56
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.015718
  time (eval):    0.192004
  gflops (eval):  4779.13
  gflops (total): 4417.5
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.015718,0.192004,4779.13,4417.5

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210783
  gflops (total): 4353.36
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4353.36

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157028
  gflops (eval):  5843.63
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157028,5843.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.31
  maximum absolute entry in einsum_ir solution: 507.31
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0149361
  time (eval):    0.192448
  gflops (eval):  4768.11
  gflops (total): 4424.7
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0149361,0.192448,4768.11,4424.7

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212102
  gflops (total): 4326.27
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4326.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157527
  gflops (eval):  5825.1
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157527,5825.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      453.631
  maximum absolute entry in einsum_ir solution: 453.631
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0157247
  time (eval):    0.192232
  gflops (eval):  4773.47
  gflops (total): 4412.52
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0157247,0.192232,4773.47,4412.52

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210892
  gflops (total): 4351.1
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4351.1

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157368
  gflops (eval):  5831
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157368,5831,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.773
  maximum absolute entry in einsum_ir solution: 473.773
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156845
  time (eval):    0.192174
  gflops (eval):  4774.91
  gflops (total): 4414.61
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156845,0.192174,4774.91,4414.61

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210981
  gflops (total): 4349.26
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4349.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157005
  gflops (eval):  5844.48
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157005,5844.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.885
  maximum absolute entry in einsum_ir solution: 491.885
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0150884
  time (eval):    0.192281
  gflops (eval):  4772.25
  gflops (total): 4425.02
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0150884,0.192281,4772.25,4425.02

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211596
  gflops (total): 4336.63
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4336.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156901
  gflops (eval):  5848.33
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156901,5848.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.592
  maximum absolute entry in einsum_ir solution: 470.592
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.015235
  time (eval):    0.192016
  gflops (eval):  4778.82
  gflops (total): 4427.53
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.015235,0.192016,4778.82,4427.53

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211781
  gflops (total): 4332.83
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4332.83

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15633
  gflops (eval):  5869.71
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15633,5869.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.426
  maximum absolute entry in einsum_ir solution: 464.426
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0151548
  time (eval):    0.192061
  gflops (eval):  4777.72
  gflops (total): 4428.3
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0151548,0.192061,4777.72,4428.3

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211216
  gflops (total): 4344.41
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4344.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156932
  gflops (eval):  5847.2
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156932,5847.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.82
  maximum absolute entry in einsum_ir solution: 472.82
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0158117
  time (eval):    0.192016
  gflops (eval):  4778.82
  gflops (total): 4415.24
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0158117,0.192016,4778.82,4415.24

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211868
  gflops (total): 4331.06
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4331.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15742
  gflops (eval):  5829.08
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15742,5829.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.859
  maximum absolute entry in einsum_ir solution: 524.859
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156184
  time (eval):    0.19197
  gflops (eval):  4779.97
  gflops (total): 4420.34
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156184,0.19197,4779.97,4420.34

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210881
  gflops (total): 4351.33
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4351.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157208
  gflops (eval):  5836.93
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157208,5836.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.092
  maximum absolute entry in einsum_ir solution: 473.092
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156118
  time (eval):    0.192556
  gflops (eval):  4765.42
  gflops (total): 4408.03
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156118,0.192556,4765.42,4408.03

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210474
  gflops (total): 4359.73
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4359.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157329
  gflops (eval):  5832.45
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157329,5832.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.735
  maximum absolute entry in einsum_ir solution: 484.735
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0152411
  time (eval):    0.192228
  gflops (eval):  4773.56
  gflops (total): 4422.88
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0152411,0.192228,4773.56,4422.88

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210495
  gflops (total): 4359.31
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4359.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15679
  gflops (eval):  5852.47
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15679,5852.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      458.369
  maximum absolute entry in einsum_ir solution: 458.369
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156107
  time (eval):    0.192192
  gflops (eval):  4774.45
  gflops (total): 4415.78
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156107,0.192192,4774.45,4415.78

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212639
  gflops (total): 4315.35
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4315.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15653
  gflops (eval):  5862.2
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15653,5862.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.19
  maximum absolute entry in einsum_ir solution: 485.19
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0157151
  time (eval):    0.192239
  gflops (eval):  4773.29
  gflops (total): 4412.57
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0157151,0.192239,4773.29,4412.57

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210261
  gflops (total): 4364.16
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4364.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157037
  gflops (eval):  5843.28
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157037,5843.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.552
  maximum absolute entry in einsum_ir solution: 488.552
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156691
  time (eval):    0.191013
  gflops (eval):  4803.93
  gflops (total): 4439.73
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156691,0.191013,4803.93,4439.73

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210436
  gflops (total): 4360.53
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4360.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157584
  gflops (eval):  5823
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157584,5823,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.953
  maximum absolute entry in einsum_ir solution: 494.953
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0157141
  time (eval):    0.192241
  gflops (eval):  4773.24
  gflops (total): 4412.55
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0157141,0.192241,4773.24,4412.55

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211274
  gflops (total): 4343.24
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4343.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157097
  gflops (eval):  5841.03
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157097,5841.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.719
  maximum absolute entry in einsum_ir solution: 489.719
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0151786
  time (eval):    0.192143
  gflops (eval):  4775.67
  gflops (total): 4426.03
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0151786,0.192143,4775.67,4426.03

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211135
  gflops (total): 4346.09
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4346.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156626
  gflops (eval):  5858.62
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156626,5858.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.372
  maximum absolute entry in einsum_ir solution: 474.372
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0157603
  time (eval):    0.192185
  gflops (eval):  4774.61
  gflops (total): 4412.75
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0157603,0.192185,4774.61,4412.75

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212141
  gflops (total): 4325.48
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4325.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157147
  gflops (eval):  5839.19
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157147,5839.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.814
  maximum absolute entry in einsum_ir solution: 499.814
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156627
  time (eval):    0.192251
  gflops (eval):  4773
  gflops (total): 4413.43
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156627,0.192251,4773,4413.43

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211517
  gflops (total): 4338.25
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4338.25

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.155872
  gflops (eval):  5886.96
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.155872,5886.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      463.531
  maximum absolute entry in einsum_ir solution: 463.531
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0155966
  time (eval):    0.192189
  gflops (eval):  4774.53
  gflops (total): 4416.15
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0155966,0.192189,4774.53,4416.15

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210526
  gflops (total): 4358.65
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4358.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156608
  gflops (eval):  5859.27
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156608,5859.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.306
  maximum absolute entry in einsum_ir solution: 515.306
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0154893
  time (eval):    0.191714
  gflops (eval):  4786.36
  gflops (total): 4428.56
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0154893,0.191714,4786.36,4428.56

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211354
  gflops (total): 4341.58
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4341.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157224
  gflops (eval):  5836.34
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157224,5836.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.581
  maximum absolute entry in einsum_ir solution: 483.581
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0148779
  time (eval):    0.192091
  gflops (eval):  4776.96
  gflops (total): 4433.57
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0148779,0.192091,4776.96,4433.57

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210658
  gflops (total): 4355.94
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4355.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157054
  gflops (eval):  5842.64
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157054,5842.64,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.553
  maximum absolute entry in einsum_ir solution: 481.553
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0155362
  time (eval):    0.192046
  gflops (eval):  4778.09
  gflops (total): 4420.48
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0155362,0.192046,4778.09,4420.48

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211165
  gflops (total): 4345.47
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4345.47

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156702
  gflops (eval):  5855.79
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156702,5855.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.121
  maximum absolute entry in einsum_ir solution: 481.121
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0153948
  time (eval):    0.192014
  gflops (eval):  4778.88
  gflops (total): 4424.17
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0153948,0.192014,4778.88,4424.17

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210887
  gflops (total): 4351.2
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4351.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.155451
  gflops (eval):  5902.88
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.155451,5902.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      455.737
  maximum absolute entry in einsum_ir solution: 455.737
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156069
  time (eval):    0.191796
  gflops (eval):  4784.3
  gflops (total): 4424.28
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156069,0.191796,4784.3,4424.28

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212308
  gflops (total): 4322.09
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4322.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157107
  gflops (eval):  5840.7
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157107,5840.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.257
  maximum absolute entry in einsum_ir solution: 477.257
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0149544
  time (eval):    0.192196
  gflops (eval):  4774.36
  gflops (total): 4429.69
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0149544,0.192196,4774.36,4429.69

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.21205
  gflops (total): 4327.33
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4327.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157492
  gflops (eval):  5826.42
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157492,5826.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.255
  maximum absolute entry in einsum_ir solution: 486.255
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0152396
  time (eval):    0.191841
  gflops (eval):  4783.2
  gflops (total): 4431.19
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0152396,0.191841,4783.2,4431.19

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211123
  gflops (total): 4346.34
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4346.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157095
  gflops (eval):  5841.14
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157095,5841.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.089
  maximum absolute entry in einsum_ir solution: 476.089
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0150985
  time (eval):    0.191941
  gflops (eval):  4780.71
  gflops (total): 4432.07
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0150985,0.191941,4780.71,4432.07

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210539
  gflops (total): 4358.39
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4358.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157362
  gflops (eval):  5831.2
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157362,5831.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.151
  maximum absolute entry in einsum_ir solution: 504.151
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156255
  time (eval):    0.192169
  gflops (eval):  4775.01
  gflops (total): 4415.95
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156255,0.192169,4775.01,4415.95

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211604
  gflops (total): 4336.46
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4336.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.155466
  gflops (eval):  5902.34
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.155466,5902.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.592
  maximum absolute entry in einsum_ir solution: 485.592
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0157358
  time (eval):    0.192154
  gflops (eval):  4775.41
  gflops (total): 4413.94
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0157358,0.192154,4775.41,4413.94

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212526
  gflops (total): 4317.63
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4317.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.1567
  gflops (eval):  5855.84
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.1567,5855.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      459.93
  maximum absolute entry in einsum_ir solution: 459.93
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0154859
  time (eval):    0.192031
  gflops (eval):  4778.46
  gflops (total): 4421.87
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0154859,0.192031,4778.46,4421.87

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212385
  gflops (total): 4320.51
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4320.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156714
  gflops (eval):  5855.33
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156714,5855.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.684
  maximum absolute entry in einsum_ir solution: 475.684
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0162016
  time (eval):    0.192089
  gflops (eval):  4777.01
  gflops (total): 4405.44
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0162016,0.192089,4777.01,4405.44

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211601
  gflops (total): 4336.52
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4336.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157142
  gflops (eval):  5839.38
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157142,5839.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.145
  maximum absolute entry in einsum_ir solution: 488.145
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.015636
  time (eval):    0.192041
  gflops (eval):  4778.21
  gflops (total): 4418.46
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.015636,0.192041,4778.21,4418.46

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.20939
  gflops (total): 4382.31
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4382.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15677
  gflops (eval):  5853.24
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15677,5853.24,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      560.156
  maximum absolute entry in einsum_ir solution: 560.156
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0152866
  time (eval):    0.192164
  gflops (eval):  4775.15
  gflops (total): 4423.28
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0152866,0.192164,4775.15,4423.28

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211702
  gflops (total): 4334.44
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4334.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.155759
  gflops (eval):  5891.23
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.155759,5891.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.346
  maximum absolute entry in einsum_ir solution: 477.346
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0154256
  time (eval):    0.192529
  gflops (eval):  4766.1
  gflops (total): 4412.56
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0154256,0.192529,4766.1,4412.56

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210314
  gflops (total): 4363.05
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4363.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156628
  gflops (eval):  5858.56
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156628,5858.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.858
  maximum absolute entry in einsum_ir solution: 469.858
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0158432
  time (eval):    0.191994
  gflops (eval):  4779.37
  gflops (total): 4415.04
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0158432,0.191994,4779.37,4415.04

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212079
  gflops (total): 4326.74
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4326.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156942
  gflops (eval):  5846.83
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156942,5846.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.496
  maximum absolute entry in einsum_ir solution: 483.497
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0150973
  time (eval):    0.192111
  gflops (eval):  4776.46
  gflops (total): 4428.44
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0150973,0.192111,4776.46,4428.44

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211308
  gflops (total): 4342.52
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4342.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157316
  gflops (eval):  5832.93
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157316,5832.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.885
  maximum absolute entry in einsum_ir solution: 489.885
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156991
  time (eval):    0.192181
  gflops (eval):  4774.73
  gflops (total): 4414.15
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156991,0.192181,4774.73,4414.15

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211211
  gflops (total): 4344.52
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4344.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156049
  gflops (eval):  5880.27
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156049,5880.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.883
  maximum absolute entry in einsum_ir solution: 487.883
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0155234
  time (eval):    0.192119
  gflops (eval):  4776.27
  gflops (total): 4419.19
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0155234,0.192119,4776.27,4419.19

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211367
  gflops (total): 4341.31
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4341.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157099
  gflops (eval):  5840.99
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157099,5840.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.939
  maximum absolute entry in einsum_ir solution: 469.939
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0158327
  time (eval):    0.192159
  gflops (eval):  4775.27
  gflops (total): 4411.77
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0158327,0.192159,4775.27,4411.77

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210419
  gflops (total): 4360.88
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4360.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156722
  gflops (eval):  5855.04
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156722,5855.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      520.704
  maximum absolute entry in einsum_ir solution: 520.705
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0154703
  time (eval):    0.19198
  gflops (eval):  4779.72
  gflops (total): 4423.28
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0154703,0.19198,4779.72,4423.28

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211619
  gflops (total): 4336.16
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4336.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156666
  gflops (eval):  5857.11
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156666,5857.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.473
  maximum absolute entry in einsum_ir solution: 478.473
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156332
  time (eval):    0.192462
  gflops (eval):  4767.76
  gflops (total): 4409.58
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156332,0.192462,4767.76,4409.58

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.213131
  gflops (total): 4305.39
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4305.39

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157147
  gflops (eval):  5839.2
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157147,5839.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.103
  maximum absolute entry in einsum_ir solution: 469.103
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0151756
  time (eval):    0.192114
  gflops (eval):  4776.39
  gflops (total): 4426.71
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0151756,0.192114,4776.39,4426.71

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210911
  gflops (total): 4350.71
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4350.71

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157571
  gflops (eval):  5823.47
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157571,5823.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.547
  maximum absolute entry in einsum_ir solution: 493.547
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0152613
  time (eval):    0.192164
  gflops (eval):  4775.14
  gflops (total): 4423.81
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0152613,0.192164,4775.14,4423.81

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210686
  gflops (total): 4355.35
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4355.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157481
  gflops (eval):  5826.81
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157481,5826.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.855
  maximum absolute entry in einsum_ir solution: 507.855
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156722
  time (eval):    0.192059
  gflops (eval):  4777.77
  gflops (total): 4417.31
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156722,0.192059,4777.77,4417.31

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211415
  gflops (total): 4340.33
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4340.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157209
  gflops (eval):  5836.9
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157209,5836.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.205
  maximum absolute entry in einsum_ir solution: 474.205
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156768
  time (eval):    0.19238
  gflops (eval):  4769.79
  gflops (total): 4410.39
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156768,0.19238,4769.79,4410.39

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210566
  gflops (total): 4357.84
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4357.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156974
  gflops (eval):  5845.63
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156974,5845.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.351
  maximum absolute entry in einsum_ir solution: 471.351
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0142307
  time (eval):    0.191961
  gflops (eval):  4780.2
  gflops (total): 4450.28
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0142307,0.191961,4780.2,4450.28

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212886
  gflops (total): 4310.34
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4310.34

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156657
  gflops (eval):  5857.45
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156657,5857.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.003
  maximum absolute entry in einsum_ir solution: 484.003
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0155776
  time (eval):    0.191951
  gflops (eval):  4780.45
  gflops (total): 4421.62
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0155776,0.191951,4780.45,4421.62

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.210927
  gflops (total): 4350.37
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4350.37

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156709
  gflops (eval):  5855.53
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156709,5855.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      511.791
  maximum absolute entry in einsum_ir solution: 511.791
  maximum element-wise difference:              0.000289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0155453
  time (eval):    0.191643
  gflops (eval):  4788.12
  gflops (total): 4428.87
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0155453,0.191643,4788.12,4428.87

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212412
  gflops (total): 4319.96
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4319.96

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.156944
  gflops (eval):  5846.74
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.156944,5846.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.841
  maximum absolute entry in einsum_ir solution: 480.841
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0150849
  time (eval):    0.190131
  gflops (eval):  4826.2
  gflops (total): 4471.44
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0150849,0.190131,4826.2,4471.44

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.211574
  gflops (total): 4337.06
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4337.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157247
  gflops (eval):  5835.47
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157247,5835.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.28
  maximum absolute entry in einsum_ir solution: 480.28
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0156805
  time (eval):    0.191475
  gflops (eval):  4792.33
  gflops (total): 4429.58
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0156805,0.191475,4792.33,4429.58

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212407
  gflops (total): 4320.06
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4320.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.157097
  gflops (eval):  5841.04
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.157097,5841.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.03
  maximum absolute entry in einsum_ir solution: 477.03
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0157049
  time (eval):    0.191935
  gflops (eval):  4780.83
  gflops (total): 4419.24
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0157049,0.191935,4780.83,4419.24

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.209094
  gflops (total): 4388.52
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4388.52

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.15704
  gflops (eval):  5843.17
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.15704,5843.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.79
  maximum absolute entry in einsum_ir solution: 486.79
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.015605
  time (eval):    0.192075
  gflops (eval):  4777.35
  gflops (total): 4418.38
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.015605,0.192075,4777.35,4418.38

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   0.212061
  gflops (total): 4327.11
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,4327.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.155767
  gflops (eval):  5890.92
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.155767,5890.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.936
  maximum absolute entry in einsum_ir solution: 491.936
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
