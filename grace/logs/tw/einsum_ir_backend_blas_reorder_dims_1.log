parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000613575
  time (eval):    0.000199736
  gflops (eval):  1510.22
  gflops (total): 370.885
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000613575,0.000199736,1510.22,370.885

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00319174
  gflops (total): 94.5079
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,94.5079

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000349394
  gflops (eval):  863.337
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000349394,863.337,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3452.67
  maximum absolute entry in einsum_ir solution: 3452.67
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00062023
  time (eval):    0.000198744
  gflops (eval):  1517.76
  gflops (total): 368.32
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00062023,0.000198744,1517.76,368.32

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00291582
  gflops (total): 103.451
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,103.451

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000351985
  gflops (eval):  856.982
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000351985,856.982,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3227.71
  maximum absolute entry in einsum_ir solution: 3227.71
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000626086
  time (eval):    0.000199512
  gflops (eval):  1511.91
  gflops (total): 365.365
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000626086,0.000199512,1511.91,365.365

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.002646
  gflops (total): 114
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,114

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000351345
  gflops (eval):  858.543
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000351345,858.543,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3175.52
  maximum absolute entry in einsum_ir solution: 3175.52
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000564137
  time (eval):    0.000200504
  gflops (eval):  1504.43
  gflops (total): 394.492
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000564137,0.000200504,1504.43,394.492

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00337788
  gflops (total): 89.3001
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,89.3001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000361777
  gflops (eval):  833.787
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000361777,833.787,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3233.82
  maximum absolute entry in einsum_ir solution: 3233.82
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000587208
  time (eval):    0.000198008
  gflops (eval):  1523.4
  gflops (total): 384.155
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000587208,0.000198008,1523.4,384.155

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00323632
  gflops (total): 93.2062
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,93.2062

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000378351
  gflops (eval):  797.262
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000378351,797.262,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3143.99
  maximum absolute entry in einsum_ir solution: 3143.99
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000617831
  time (eval):    0.000199352
  gflops (eval):  1513.13
  gflops (total): 369.128
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000617831,0.000199352,1513.13,369.128

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0032966
  gflops (total): 91.5018
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,91.5018

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000348178
  gflops (eval):  866.352
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000348178,866.352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3201.54
  maximum absolute entry in einsum_ir solution: 3201.54
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000612967
  time (eval):    0.000198264
  gflops (eval):  1521.43
  gflops (total): 371.836
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000612967,0.000198264,1521.43,371.836

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00317536
  gflops (total): 94.9955
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,94.9955

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000364945
  gflops (eval):  826.549
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000364945,826.549,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3046.73
  maximum absolute entry in einsum_ir solution: 3046.73
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000572873
  time (eval):    0.000198616
  gflops (eval):  1518.73
  gflops (total): 390.99
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000572873,0.000198616,1518.73,390.99

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00298596
  gflops (total): 101.021
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,101.021

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000358225
  gflops (eval):  842.054
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000358225,842.054,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3140.75
  maximum absolute entry in einsum_ir solution: 3140.75
  maximum element-wise difference:              0.0020752
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000568937
  time (eval):    0.000199672
  gflops (eval):  1510.7
  gflops (total): 392.455
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000568937,0.000199672,1510.7,392.455

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00300145
  gflops (total): 100.5
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,100.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000373041
  gflops (eval):  808.61
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000373041,808.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3025.13
  maximum absolute entry in einsum_ir solution: 3025.13
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00062327
  time (eval):    0.000200408
  gflops (eval):  1505.15
  gflops (total): 366.217
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00062327,0.000200408,1505.15,366.217

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00332655
  gflops (total): 90.6779
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,90.6779

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000354451
  gflops (eval):  851.02
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000354451,851.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3947.8
  maximum absolute entry in einsum_ir solution: 3947.8
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000612007
  time (eval):    0.000199352
  gflops (eval):  1513.13
  gflops (total): 371.777
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000612007,0.000199352,1513.13,371.777

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00278222
  gflops (total): 108.419
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,108.419

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000362707
  gflops (eval):  831.649
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000362707,831.649,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3077.02
  maximum absolute entry in einsum_ir solution: 3077.02
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000612199
  time (eval):    0.000196696
  gflops (eval):  1533.56
  gflops (total): 372.91
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000612199,0.000196696,1533.56,372.91

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00268629
  gflops (total): 112.29
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,112.29

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00036021
  gflops (eval):  837.414
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00036021,837.414,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3643.06
  maximum absolute entry in einsum_ir solution: 3643.06
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000622279
  time (eval):    0.000196088
  gflops (eval):  1538.31
  gflops (total): 368.594
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000622279,0.000196088,1538.31,368.594

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00302045
  gflops (total): 99.8674
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,99.8674

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000357107
  gflops (eval):  844.69
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000357107,844.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3403.52
  maximum absolute entry in einsum_ir solution: 3403.52
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000576872
  time (eval):    0.000199832
  gflops (eval):  1509.49
  gflops (total): 388.365
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000576872,0.000199832,1509.49,388.365

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00296189
  gflops (total): 101.842
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,101.842

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000356722
  gflops (eval):  845.602
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000356722,845.602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3555.23
  maximum absolute entry in einsum_ir solution: 3555.23
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000626055
  time (eval):    0.000199064
  gflops (eval):  1515.32
  gflops (total): 365.577
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000626055,0.000199064,1515.32,365.577

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00323161
  gflops (total): 93.3419
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,93.3419

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000357522
  gflops (eval):  843.71
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000357522,843.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3212.72
  maximum absolute entry in einsum_ir solution: 3212.72
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00061639
  time (eval):    0.000200984
  gflops (eval):  1500.84
  gflops (total): 369.041
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00061639,0.000200984,1500.84,369.041

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00323792
  gflops (total): 93.1602
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,93.1602

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000355537
  gflops (eval):  848.42
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000355537,848.42,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3139.13
  maximum absolute entry in einsum_ir solution: 3139.13
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000572488
  time (eval):    0.000197816
  gflops (eval):  1524.88
  gflops (total): 391.592
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000572488,0.000197816,1524.88,391.592

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00349874
  gflops (total): 86.2153
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,86.2153

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000348433
  gflops (eval):  865.718
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000348433,865.718,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3284.17
  maximum absolute entry in einsum_ir solution: 3284.17
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000562729
  time (eval):    0.00019916
  gflops (eval):  1514.59
  gflops (total): 395.917
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000562729,0.00019916,1514.59,395.917

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00270914
  gflops (total): 111.344
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,111.344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000345362
  gflops (eval):  873.416
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000345362,873.416,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3154.95
  maximum absolute entry in einsum_ir solution: 3154.95
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000566633
  time (eval):    0.00019964
  gflops (eval):  1510.94
  gflops (total): 393.652
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000566633,0.00019964,1510.94,393.652

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00336405
  gflops (total): 89.667
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,89.667

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000359985
  gflops (eval):  837.937
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000359985,837.937,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2895.64
  maximum absolute entry in einsum_ir solution: 2895.64
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000569001
  time (eval):    0.000200663
  gflops (eval):  1503.24
  gflops (total): 391.918
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000569001,0.000200663,1503.24,391.918

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00275387
  gflops (total): 109.535
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,109.535

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000384624
  gflops (eval):  784.259
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000384624,784.259,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2868.97
  maximum absolute entry in einsum_ir solution: 2868.97
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00056804
  time (eval):    0.000202072
  gflops (eval):  1492.76
  gflops (total): 391.69
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00056804,0.000202072,1492.76,391.69

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00291188
  gflops (total): 103.591
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,103.591

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000368081
  gflops (eval):  819.507
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000368081,819.507,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3308.84
  maximum absolute entry in einsum_ir solution: 3308.84
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000582344
  time (eval):    0.000199511
  gflops (eval):  1511.92
  gflops (total): 385.807
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000582344,0.000199511,1511.92,385.807

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00309805
  gflops (total): 97.366
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,97.366

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000367377
  gflops (eval):  821.077
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000367377,821.077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3194.67
  maximum absolute entry in einsum_ir solution: 3194.67
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00062983
  time (eval):    0.000202136
  gflops (eval):  1492.29
  gflops (total): 362.569
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00062983,0.000202136,1492.29,362.569

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00267739
  gflops (total): 112.664
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,112.664

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000345427
  gflops (eval):  873.252
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000345427,873.252,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3598.07
  maximum absolute entry in einsum_ir solution: 3598.07
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000627014
  time (eval):    0.000198488
  gflops (eval):  1519.71
  gflops (total): 365.408
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000627014,0.000198488,1519.71,365.408

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00299626
  gflops (total): 100.674
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,100.674

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000346545
  gflops (eval):  870.435
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000346545,870.435,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3517.15
  maximum absolute entry in einsum_ir solution: 3517.15
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000623687
  time (eval):    0.000200408
  gflops (eval):  1505.15
  gflops (total): 366.032
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000623687,0.000200408,1505.15,366.032

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00293409
  gflops (total): 102.807
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,102.807

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000341971
  gflops (eval):  882.077
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000341971,882.077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2939.84
  maximum absolute entry in einsum_ir solution: 2939.84
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000559913
  time (eval):    0.000199288
  gflops (eval):  1513.61
  gflops (total): 397.319
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000559913,0.000199288,1513.61,397.319

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00340693
  gflops (total): 88.5385
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,88.5385

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000351569
  gflops (eval):  857.996
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000351569,857.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3349.83
  maximum absolute entry in einsum_ir solution: 3349.83
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000567881
  time (eval):    0.000198359
  gflops (eval):  1520.7
  gflops (total): 393.669
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000567881,0.000198359,1520.7,393.669

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00329833
  gflops (total): 91.4538
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,91.4538

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000351665
  gflops (eval):  857.762
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000351665,857.762,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3011.29
  maximum absolute entry in einsum_ir solution: 3011.29
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000604359
  time (eval):    0.000199416
  gflops (eval):  1512.64
  gflops (total): 375.285
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000604359,0.000199416,1512.64,375.285

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00329785
  gflops (total): 91.4671
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,91.4671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000367696
  gflops (eval):  820.365
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000367696,820.365,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3154.28
  maximum absolute entry in einsum_ir solution: 3154.28
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000662245
  time (eval):    0.000201272
  gflops (eval):  1498.69
  gflops (total): 349.321
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000662245,0.000201272,1498.69,349.321

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00322352
  gflops (total): 93.5763
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,93.5763

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000358001
  gflops (eval):  842.581
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000358001,842.581,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3267.19
  maximum absolute entry in einsum_ir solution: 3267.18
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000659685
  time (eval):    0.000198904
  gflops (eval):  1516.53
  gflops (total): 351.326
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000659685,0.000198904,1516.53,351.326

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00278193
  gflops (total): 108.43
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,108.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00035333
  gflops (eval):  853.72
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00035333,853.72,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3046.87
  maximum absolute entry in einsum_ir solution: 3046.87
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000567945
  time (eval):    0.000200695
  gflops (eval):  1503
  gflops (total): 392.44
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000567945,0.000200695,1503,392.44

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0031559
  gflops (total): 95.5811
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,95.5811

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00037016
  gflops (eval):  814.904
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00037016,814.904,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3357.47
  maximum absolute entry in einsum_ir solution: 3357.47
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000620742
  time (eval):    0.000198167
  gflops (eval):  1522.17
  gflops (total): 368.35
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000620742,0.000198167,1522.17,368.35

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00292138
  gflops (total): 103.254
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,103.254

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000349137
  gflops (eval):  863.973
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000349137,863.973,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3117.85
  maximum absolute entry in einsum_ir solution: 3117.85
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000624359
  time (eval):    0.00019916
  gflops (eval):  1514.59
  gflops (total): 366.288
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000624359,0.00019916,1514.59,366.288

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00296474
  gflops (total): 101.744
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,101.744

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000361873
  gflops (eval):  833.565
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000361873,833.565,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3303.65
  maximum absolute entry in einsum_ir solution: 3303.65
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000619495
  time (eval):    0.000201912
  gflops (eval):  1493.94
  gflops (total): 367.229
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000619495,0.000201912,1493.94,367.229

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00295732
  gflops (total): 101.999
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,101.999

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00035173
  gflops (eval):  857.603
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00035173,857.603,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3010.54
  maximum absolute entry in einsum_ir solution: 3010.54
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000573641
  time (eval):    0.000201016
  gflops (eval):  1500.6
  gflops (total): 389.391
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000573641,0.000201016,1500.6,389.391

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00323145
  gflops (total): 93.3465
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,93.3465

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000349937
  gflops (eval):  861.997
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000349937,861.997,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3905.52
  maximum absolute entry in einsum_ir solution: 3905.52
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000626438
  time (eval):    0.000200952
  gflops (eval):  1501.08
  gflops (total): 364.574
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000626438,0.000200952,1501.08,364.574

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00341637
  gflops (total): 88.2939
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,88.2939

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000358513
  gflops (eval):  841.378
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000358513,841.378,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3729.63
  maximum absolute entry in einsum_ir solution: 3729.64
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000626375
  time (eval):    0.00020188
  gflops (eval):  1494.18
  gflops (total): 364.193
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000626375,0.00020188,1494.18,364.193

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0029002
  gflops (total): 104.008
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,104.008

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000358961
  gflops (eval):  840.328
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000358961,840.328,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3050.71
  maximum absolute entry in einsum_ir solution: 3050.71
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000622279
  time (eval):    0.000198488
  gflops (eval):  1519.71
  gflops (total): 367.516
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000622279,0.000198488,1519.71,367.516

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0032311
  gflops (total): 93.3567
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,93.3567

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000365937
  gflops (eval):  824.308
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000365937,824.308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2753.18
  maximum absolute entry in einsum_ir solution: 2753.18
  maximum element-wise difference:              0.0012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000613607
  time (eval):    0.00019996
  gflops (eval):  1508.53
  gflops (total): 370.768
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000613607,0.00019996,1508.53,370.768

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00293182
  gflops (total): 102.887
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,102.887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000349457
  gflops (eval):  863.181
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000349457,863.181,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3135.31
  maximum absolute entry in einsum_ir solution: 3135.31
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000569513
  time (eval):    0.000199608
  gflops (eval):  1511.19
  gflops (total): 392.194
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000569513,0.000199608,1511.19,392.194

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00652972
  gflops (total): 46.1957
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,46.1957

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000404367
  gflops (eval):  745.968
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000404367,745.968,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      4533.08
  maximum absolute entry in einsum_ir solution: 4533.08
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000574889
  time (eval):    0.000199736
  gflops (eval):  1510.22
  gflops (total): 389.408
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000574889,0.000199736,1510.22,389.408

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00269813
  gflops (total): 111.798
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,111.798

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000350193
  gflops (eval):  861.367
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000350193,861.367,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3267.33
  maximum absolute entry in einsum_ir solution: 3267.33
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000619303
  time (eval):    0.000201176
  gflops (eval):  1499.41
  gflops (total): 367.645
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000619303,0.000201176,1499.41,367.645

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00264722
  gflops (total): 113.948
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,113.948

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000351602
  gflops (eval):  857.915
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000351602,857.915,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3218.35
  maximum absolute entry in einsum_ir solution: 3218.35
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000612967
  time (eval):    0.000199319
  gflops (eval):  1513.38
  gflops (total): 371.353
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000612967,0.000199319,1513.38,371.353

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00327881
  gflops (total): 91.9983
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,91.9983

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000355858
  gflops (eval):  847.655
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000355858,847.655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2884.78
  maximum absolute entry in einsum_ir solution: 2884.78
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000628454
  time (eval):    0.000199544
  gflops (eval):  1511.67
  gflops (total): 364.306
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000628454,0.000199544,1511.67,364.306

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00314074
  gflops (total): 96.0427
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,96.0427

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000360721
  gflops (eval):  836.227
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000360721,836.227,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3728.59
  maximum absolute entry in einsum_ir solution: 3728.59
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000631014
  time (eval):    0.000199704
  gflops (eval):  1510.46
  gflops (total): 363.113
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000631014,0.000199704,1510.46,363.113

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00334124
  gflops (total): 90.2793
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,90.2793

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000365392
  gflops (eval):  825.538
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000365392,825.538,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3592.42
  maximum absolute entry in einsum_ir solution: 3592.42
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000619463
  time (eval):    0.000199992
  gflops (eval):  1508.28
  gflops (total): 368.104
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000619463,0.000199992,1508.28,368.104

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00287966
  gflops (total): 104.75
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,104.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000349617
  gflops (eval):  862.786
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000349617,862.786,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3086.89
  maximum absolute entry in einsum_ir solution: 3086.89
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00063575
  time (eval):    0.00020108
  gflops (eval):  1500.12
  gflops (total): 360.461
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00063575,0.00020108,1500.12,360.461

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00272149
  gflops (total): 110.838
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,110.838

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000365617
  gflops (eval):  825.029
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000365617,825.029,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3024.95
  maximum absolute entry in einsum_ir solution: 3024.95
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000564329
  time (eval):    0.00019724
  gflops (eval):  1529.33
  gflops (total): 396.083
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000564329,0.00019724,1529.33,396.083

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00329545
  gflops (total): 91.5337
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,91.5337

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00035685
  gflops (eval):  845.299
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00035685,845.299,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3430.06
  maximum absolute entry in einsum_ir solution: 3430.06
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000613447
  time (eval):    0.000222071
  gflops (eval):  1358.33
  gflops (total): 361.027
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000613447,0.000222071,1358.33,361.027

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00270501
  gflops (total): 111.513
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,111.513

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000359537
  gflops (eval):  838.981
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000359537,838.981,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2983.72
  maximum absolute entry in einsum_ir solution: 2983.72
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000626278
  time (eval):    0.000199288
  gflops (eval):  1513.61
  gflops (total): 365.379
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000626278,0.000199288,1513.61,365.379

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00338437
  gflops (total): 89.1287
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,89.1287

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000342194
  gflops (eval):  881.502
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000342194,881.502,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3376.58
  maximum absolute entry in einsum_ir solution: 3376.58
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000610439
  time (eval):    0.000199096
  gflops (eval):  1515.07
  gflops (total): 372.615
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000610439,0.000199096,1515.07,372.615

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00337362
  gflops (total): 89.4127
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,89.4127

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000357712
  gflops (eval):  843.262
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000357712,843.262,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3798.7
  maximum absolute entry in einsum_ir solution: 3798.7
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000629126
  time (eval):    0.000198424
  gflops (eval):  1520.2
  gflops (total): 364.503
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000629126,0.000198424,1520.2,364.503

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00332921
  gflops (total): 90.6056
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,90.6056

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000360912
  gflops (eval):  835.785
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000360912,835.785,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3813.92
  maximum absolute entry in einsum_ir solution: 3813.92
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000573449
  time (eval):    0.000200344
  gflops (eval):  1505.63
  gflops (total): 389.826
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000573449,0.000200344,1505.63,389.826

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00343119
  gflops (total): 87.9126
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,87.9126

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000359346
  gflops (eval):  839.427
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000359346,839.427,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2948.98
  maximum absolute entry in einsum_ir solution: 2948.98
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000602632
  time (eval):    0.000196504
  gflops (eval):  1535.06
  gflops (total): 377.464
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000602632,0.000196504,1535.06,377.464

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00299226
  gflops (total): 100.808
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,100.808

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000357041
  gflops (eval):  844.846
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000357041,844.846,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3375.06
  maximum absolute entry in einsum_ir solution: 3375.06
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000572617
  time (eval):    0.000199768
  gflops (eval):  1509.98
  gflops (total): 390.537
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000572617,0.000199768,1509.98,390.537

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00259807
  gflops (total): 116.103
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,116.103

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000361617
  gflops (eval):  834.155
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000361617,834.155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2983.75
  maximum absolute entry in einsum_ir solution: 2983.75
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000555337
  time (eval):    0.000199992
  gflops (eval):  1508.28
  gflops (total): 399.356
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000555337,0.000199992,1508.28,399.356

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00309351
  gflops (total): 97.509
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,97.509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000361521
  gflops (eval):  834.377
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000361521,834.377,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3185.37
  maximum absolute entry in einsum_ir solution: 3185.37
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000559305
  time (eval):    0.000197944
  gflops (eval):  1523.89
  gflops (total): 398.343
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000559305,0.000197944,1523.89,398.343

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0035107
  gflops (total): 85.9215
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,85.9215

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000352945
  gflops (eval):  854.651
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000352945,854.651,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2990.47
  maximum absolute entry in einsum_ir solution: 2990.47
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000571912
  time (eval):    0.000200952
  gflops (eval):  1501.08
  gflops (total): 390.295
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000571912,0.000200952,1501.08,390.295

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00269759
  gflops (total): 111.82
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,111.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000345906
  gflops (eval):  872.043
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000345906,872.043,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3214.47
  maximum absolute entry in einsum_ir solution: 3214.47
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000579048
  time (eval):    0.000200087
  gflops (eval):  1507.57
  gflops (total): 387.153
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000579048,0.000200087,1507.57,387.153

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00307296
  gflops (total): 98.1609
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,98.1609

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000361777
  gflops (eval):  833.787
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000361777,833.787,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3394.11
  maximum absolute entry in einsum_ir solution: 3394.11
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000566121
  time (eval):    0.000199832
  gflops (eval):  1509.49
  gflops (total): 393.816
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000566121,0.000199832,1509.49,393.816

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00328332
  gflops (total): 91.8718
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,91.8718

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.0003636
  gflops (eval):  829.606
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.0003636,829.606,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3733.56
  maximum absolute entry in einsum_ir solution: 3733.57
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000578377
  time (eval):    0.000198296
  gflops (eval):  1521.18
  gflops (total): 388.381
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000578377,0.000198296,1521.18,388.381

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00284088
  gflops (total): 106.18
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,106.18

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000354578
  gflops (eval):  850.715
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000354578,850.715,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3256.07
  maximum absolute entry in einsum_ir solution: 3256.07
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000570313
  time (eval):    0.000199927
  gflops (eval):  1508.77
  gflops (total): 391.624
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000570313,0.000199927,1508.77,391.624

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00317843
  gflops (total): 94.9037
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,94.9037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000354449
  gflops (eval):  851.025
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000354449,851.025,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3296.07
  maximum absolute entry in einsum_ir solution: 3296.07
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000564329
  time (eval):    0.000198872
  gflops (eval):  1516.78
  gflops (total): 395.236
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000564329,0.000198872,1516.78,395.236

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00330348
  gflops (total): 91.3112
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,91.3112

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000361937
  gflops (eval):  833.418
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000361937,833.418,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2970.97
  maximum absolute entry in einsum_ir solution: 2970.96
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00055873
  time (eval):    0.000197784
  gflops (eval):  1525.12
  gflops (total): 398.73
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00055873,0.000197784,1525.12,398.73

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00272488
  gflops (total): 110.7
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,110.7

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000361809
  gflops (eval):  833.713
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000361809,833.713,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3152.59
  maximum absolute entry in einsum_ir solution: 3152.59
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000561449
  time (eval):    0.000200087
  gflops (eval):  1507.57
  gflops (total): 396.101
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000561449,0.000200087,1507.57,396.101

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00332018
  gflops (total): 90.8518
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,90.8518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000389073
  gflops (eval):  775.291
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000389073,775.291,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3433.67
  maximum absolute entry in einsum_ir solution: 3433.67
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000620966
  time (eval):    0.000200568
  gflops (eval):  1503.95
  gflops (total): 367.173
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000620966,0.000200568,1503.95,367.173

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0031369
  gflops (total): 96.1603
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,96.1603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000366481
  gflops (eval):  823.084
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000366481,823.084,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3962.45
  maximum absolute entry in einsum_ir solution: 3962.45
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000612391
  time (eval):    0.000198968
  gflops (eval):  1516.05
  gflops (total): 371.777
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000612391,0.000198968,1516.05,371.777

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00300506
  gflops (total): 100.379
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,100.379

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000352435
  gflops (eval):  855.888
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000352435,855.888,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3180.43
  maximum absolute entry in einsum_ir solution: 3180.43
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000623207
  time (eval):    0.000198328
  gflops (eval):  1520.94
  gflops (total): 367.172
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000623207,0.000198328,1520.94,367.172

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00313418
  gflops (total): 96.2437
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,96.2437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00034917
  gflops (eval):  863.891
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00034917,863.891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3120.66
  maximum absolute entry in einsum_ir solution: 3120.66
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000543465
  time (eval):    0.000199704
  gflops (eval):  1510.46
  gflops (total): 405.89
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000543465,0.000199704,1510.46,405.89

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00336604
  gflops (total): 89.6142
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,89.6142

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000373809
  gflops (eval):  806.949
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000373809,806.949,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2947.52
  maximum absolute entry in einsum_ir solution: 2947.52
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000624967
  time (eval):    0.000198648
  gflops (eval):  1518.49
  gflops (total): 366.245
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000624967,0.000198648,1518.49,366.245

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00324723
  gflops (total): 92.893
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,92.893

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000361937
  gflops (eval):  833.418
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000361937,833.418,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3556
  maximum absolute entry in einsum_ir solution: 3556
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000613543
  time (eval):    0.000199704
  gflops (eval):  1510.46
  gflops (total): 370.914
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000613543,0.000199704,1510.46,370.914

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00333276
  gflops (total): 90.509
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,90.509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000364273
  gflops (eval):  828.073
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000364273,828.073,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3851.78
  maximum absolute entry in einsum_ir solution: 3851.78
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000623047
  time (eval):    0.000198488
  gflops (eval):  1519.71
  gflops (total): 367.172
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000623047,0.000198488,1519.71,367.172

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00313648
  gflops (total): 96.173
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,96.173

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000365169
  gflops (eval):  826.042
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000365169,826.042,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3288.35
  maximum absolute entry in einsum_ir solution: 3288.35
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000627846
  time (eval):    0.000198904
  gflops (eval):  1516.53
  gflops (total): 364.856
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000627846,0.000198904,1516.53,364.856

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00276248
  gflops (total): 109.194
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,109.194

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000354098
  gflops (eval):  851.868
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000354098,851.868,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3350.7
  maximum absolute entry in einsum_ir solution: 3350.7
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000566633
  time (eval):    0.000199896
  gflops (eval):  1509.01
  gflops (total): 393.52
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000566633,0.000199896,1509.01,393.52

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0027683
  gflops (total): 108.964
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,108.964

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000359121
  gflops (eval):  839.953
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000359121,839.953,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3074.65
  maximum absolute entry in einsum_ir solution: 3074.65
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000617031
  time (eval):    0.000200952
  gflops (eval):  1501.08
  gflops (total): 368.767
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000617031,0.000200952,1501.08,368.767

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00266783
  gflops (total): 113.068
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,113.068

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000361361
  gflops (eval):  834.746
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000361361,834.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3212.14
  maximum absolute entry in einsum_ir solution: 3212.14
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00064087
  time (eval):    0.000202008
  gflops (eval):  1493.23
  gflops (total): 357.875
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00064087,0.000202008,1493.23,357.875

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00328953
  gflops (total): 91.6985
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,91.6985

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000348625
  gflops (eval):  865.241
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000348625,865.241,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3278.46
  maximum absolute entry in einsum_ir solution: 3278.46
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000618407
  time (eval):    0.000219575
  gflops (eval):  1373.77
  gflops (total): 359.966
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000618407,0.000219575,1373.77,359.966

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00309104
  gflops (total): 97.5868
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,97.5868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000355858
  gflops (eval):  847.655
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000355858,847.655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3193.59
  maximum absolute entry in einsum_ir solution: 3193.59
  maximum element-wise difference:              0.00231934
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000577385
  time (eval):    0.000196728
  gflops (eval):  1533.31
  gflops (total): 389.665
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000577385,0.000196728,1533.31,389.665

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00324352
  gflops (total): 92.9993
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,92.9993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000351826
  gflops (eval):  857.369
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000351826,857.369,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3346.45
  maximum absolute entry in einsum_ir solution: 3346.45
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000578249
  time (eval):    0.000199768
  gflops (eval):  1509.98
  gflops (total): 387.71
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000578249,0.000199768,1509.98,387.71

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00303661
  gflops (total): 99.336
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,99.336

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000373681
  gflops (eval):  807.225
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000373681,807.225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3164.51
  maximum absolute entry in einsum_ir solution: 3164.51
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000623622
  time (eval):    0.000199192
  gflops (eval):  1514.34
  gflops (total): 366.601
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000623622,0.000199192,1514.34,366.601

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00317264
  gflops (total): 95.077
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,95.077

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00036837
  gflops (eval):  818.864
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00036837,818.864,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3282.29
  maximum absolute entry in einsum_ir solution: 3282.29
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000611175
  time (eval):    0.000200376
  gflops (eval):  1505.39
  gflops (total): 371.689
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000611175,0.000200376,1505.39,371.689

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0029155
  gflops (total): 103.463
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,103.463

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000353329
  gflops (eval):  853.722
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000353329,853.722,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3100.69
  maximum absolute entry in einsum_ir solution: 3100.69
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000613735
  time (eval):    0.000199064
  gflops (eval):  1515.32
  gflops (total): 371.119
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000613735,0.000199064,1515.32,371.119

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00321206
  gflops (total): 93.9101
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,93.9101

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000373936
  gflops (eval):  806.675
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000373936,806.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3401.06
  maximum absolute entry in einsum_ir solution: 3401.05
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000617735
  time (eval):    0.000199416
  gflops (eval):  1512.64
  gflops (total): 369.142
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000617735,0.000199416,1512.64,369.142

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00331862
  gflops (total): 90.8948
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,90.8948

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000395727
  gflops (eval):  762.255
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000395727,762.255,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3183.07
  maximum absolute entry in einsum_ir solution: 3183.07
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000551626
  time (eval):    0.000199191
  gflops (eval):  1514.35
  gflops (total): 401.755
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000551626,0.000199191,1514.35,401.755

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00317859
  gflops (total): 94.8989
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,94.8989

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000358609
  gflops (eval):  841.152
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000358609,841.152,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3162.7
  maximum absolute entry in einsum_ir solution: 3162.7
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000651333
  time (eval):    0.000230359
  gflops (eval):  1309.46
  gflops (total): 342.12
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000651333,0.000230359,1309.46,342.12

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00296029
  gflops (total): 101.897
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,101.897

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000350257
  gflops (eval):  861.21
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000350257,861.21,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3879.67
  maximum absolute entry in einsum_ir solution: 3879.67
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000618983
  time (eval):    0.0002006
  gflops (eval):  1503.71
  gflops (total): 368.047
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000618983,0.0002006,1503.71,368.047

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00328796
  gflops (total): 91.7422
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,91.7422

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00405273
  gflops (eval):  74.43
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00405273,74.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3398.88
  maximum absolute entry in einsum_ir solution: 3398.88
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000617479
  time (eval):    0.000199256
  gflops (eval):  1513.86
  gflops (total): 369.33
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000617479,0.000199256,1513.86,369.33

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00287991
  gflops (total): 104.741
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,104.741

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000363537
  gflops (eval):  829.75
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000363537,829.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3075.86
  maximum absolute entry in einsum_ir solution: 3075.86
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000631398
  time (eval):    0.00019836
  gflops (eval):  1520.69
  gflops (total): 363.533
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000631398,0.00019836,1520.69,363.533

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00300401
  gflops (total): 100.414
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,100.414

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000361425
  gflops (eval):  834.599
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000361425,834.599,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3166.02
  maximum absolute entry in einsum_ir solution: 3166.02
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000574312
  time (eval):    0.000199288
  gflops (eval):  1513.61
  gflops (total): 389.923
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000574312,0.000199288,1513.61,389.923

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0033932
  gflops (total): 88.8967
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,88.8967

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000347602
  gflops (eval):  867.788
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000347602,867.788,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3567.43
  maximum absolute entry in einsum_ir solution: 3567.43
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00060324
  time (eval):    0.000198039
  gflops (eval):  1523.16
  gflops (total): 376.454
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00060324,0.000198039,1523.16,376.454

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00307821
  gflops (total): 97.9935
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,97.9935

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000348433
  gflops (eval):  865.718
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000348433,865.718,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3308.96
  maximum absolute entry in einsum_ir solution: 3308.96
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000635271
  time (eval):    0.000200504
  gflops (eval):  1504.43
  gflops (total): 360.916
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000635271,0.000200504,1504.43,360.916

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00317699
  gflops (total): 94.9467
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,94.9467

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00038344
  gflops (eval):  786.681
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00038344,786.681,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3153.69
  maximum absolute entry in einsum_ir solution: 3153.69
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000581768
  time (eval):    0.000201367
  gflops (eval):  1497.99
  gflops (total): 385.176
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000581768,0.000201367,1497.99,385.176

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00275013
  gflops (total): 109.684
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,109.684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000357233
  gflops (eval):  844.392
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000357233,844.392,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2870.19
  maximum absolute entry in einsum_ir solution: 2870.19
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000583465
  time (eval):    0.000199032
  gflops (eval):  1515.56
  gflops (total): 385.49
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000583465,0.000199032,1515.56,385.49

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00270357
  gflops (total): 111.573
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,111.573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000359089
  gflops (eval):  840.028
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000359089,840.028,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3424.83
  maximum absolute entry in einsum_ir solution: 3424.83
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000637286
  time (eval):    0.000199192
  gflops (eval):  1514.34
  gflops (total): 360.613
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000637286,0.000199192,1514.34,360.613

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00334086
  gflops (total): 90.2897
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,90.2897

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000349618
  gflops (eval):  862.784
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000349618,862.784,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2918.08
  maximum absolute entry in einsum_ir solution: 2918.08
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000569609
  time (eval):    0.00020188
  gflops (eval):  1494.18
  gflops (total): 390.99
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000569609,0.00020188,1494.18,390.99

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00311539
  gflops (total): 96.824
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,96.824

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000361426
  gflops (eval):  834.596
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000361426,834.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2824.97
  maximum absolute entry in einsum_ir solution: 2824.97
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000574761
  time (eval):    0.000199096
  gflops (eval):  1515.07
  gflops (total): 389.794
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000574761,0.000199096,1515.07,389.794

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0028147
  gflops (total): 107.168
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,107.168

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000376913
  gflops (eval):  800.304
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000376913,800.304,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3319.24
  maximum absolute entry in einsum_ir solution: 3319.25
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00061847
  time (eval):    0.000200696
  gflops (eval):  1502.99
  gflops (total): 368.234
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00061847,0.000200696,1502.99,368.234

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00338351
  gflops (total): 89.1514
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,89.1514

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000366354
  gflops (eval):  823.37
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000366354,823.37,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3059.59
  maximum absolute entry in einsum_ir solution: 3059.58
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000565705
  time (eval):    0.000199832
  gflops (eval):  1509.49
  gflops (total): 394.03
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000565705,0.000199832,1509.49,394.03

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00335583
  gflops (total): 89.8868
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,89.8868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000353617
  gflops (eval):  853.027
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000353617,853.027,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3070.59
  maximum absolute entry in einsum_ir solution: 3070.59
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000614791
  time (eval):    0.000197976
  gflops (eval):  1523.64
  gflops (total): 371.133
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000614791,0.000197976,1523.64,371.133

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00288542
  gflops (total): 104.541
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,104.541

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000352497
  gflops (eval):  855.737
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000352497,855.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3433.31
  maximum absolute entry in einsum_ir solution: 3433.31
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000567145
  time (eval):    0.000200056
  gflops (eval):  1507.8
  gflops (total): 393.176
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000567145,0.000200056,1507.8,393.176

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00333417
  gflops (total): 90.4708
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,90.4708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00035861
  gflops (eval):  841.15
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00035861,841.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3066.14
  maximum absolute entry in einsum_ir solution: 3066.14
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
