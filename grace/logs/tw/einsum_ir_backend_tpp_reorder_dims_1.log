parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000780896
  time (eval):    0.000173945
  gflops (eval):  1734.14
  gflops (total): 315.911
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000780896,0.000173945,1734.14,315.911

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00226007
  gflops (total): 133.467
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,133.467

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000355858
  gflops (eval):  847.655
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000355858,847.655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3446.61
  maximum absolute entry in einsum_ir solution: 3446.61
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000833662
  time (eval):    0.000160122
  gflops (eval):  1883.84
  gflops (total): 303.532
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000833662,0.000160122,1883.84,303.532

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0021817
  gflops (total): 138.261
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,138.261

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000348786
  gflops (eval):  864.842
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000348786,864.842,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3140.02
  maximum absolute entry in einsum_ir solution: 3140.02
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000848702
  time (eval):    0.000151386
  gflops (eval):  1992.55
  gflops (total): 301.618
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000848702,0.000151386,1992.55,301.618

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00254329
  gflops (total): 118.604
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,118.604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000346065
  gflops (eval):  871.642
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000346065,871.642,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3684.8
  maximum absolute entry in einsum_ir solution: 3684.8
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000900539
  time (eval):    0.000165657
  gflops (eval):  1820.9
  gflops (total): 282.917
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000900539,0.000165657,1820.9,282.917

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00282113
  gflops (total): 106.923
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,106.923

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000350673
  gflops (eval):  860.188
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000350673,860.188,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3016.21
  maximum absolute entry in einsum_ir solution: 3016.21
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000835582
  time (eval):    0.00015785
  gflops (eval):  1910.96
  gflops (total): 303.639
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000835582,0.00015785,1910.96,303.639

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00215102
  gflops (total): 140.234
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,140.234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00034533
  gflops (eval):  873.497
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00034533,873.497,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3310.31
  maximum absolute entry in einsum_ir solution: 3310.31
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00082307
  time (eval):    0.000159066
  gflops (eval):  1896.35
  gflops (total): 307.131
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00082307,0.000159066,1896.35,307.131

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00277934
  gflops (total): 108.531
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,108.531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000360337
  gflops (eval):  837.119
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000360337,837.119,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2985.26
  maximum absolute entry in einsum_ir solution: 2985.26
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000843933
  time (eval):    0.000168313
  gflops (eval):  1792.17
  gflops (total): 297.996
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000843933,0.000168313,1792.17,297.996

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00264268
  gflops (total): 114.144
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,114.144

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000354001
  gflops (eval):  852.102
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000354001,852.102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3204.4
  maximum absolute entry in einsum_ir solution: 3204.4
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00082931
  time (eval):    0.000160889
  gflops (eval):  1874.86
  gflops (total): 304.63
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00082931,0.000160889,1874.86,304.63

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00273755
  gflops (total): 110.188
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,110.188

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000364625
  gflops (eval):  827.274
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000364625,827.274,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3030.48
  maximum absolute entry in einsum_ir solution: 3030.48
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000927226
  time (eval):    0.00015705
  gflops (eval):  1920.69
  gflops (total): 278.199
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000927226,0.00015705,1920.69,278.199

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.002738
  gflops (total): 110.17
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,110.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000350193
  gflops (eval):  861.367
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000350193,861.367,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3102.32
  maximum absolute entry in einsum_ir solution: 3102.32
  maximum element-wise difference:              0.00158691
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000850877
  time (eval):    0.000156634
  gflops (eval):  1925.79
  gflops (total): 299.396
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000850877,0.000156634,1925.79,299.396

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0029993
  gflops (total): 100.572
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,100.572

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000364496
  gflops (eval):  827.567
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000364496,827.567,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3660.82
  maximum absolute entry in einsum_ir solution: 3660.82
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00082947
  time (eval):    0.000155257
  gflops (eval):  1942.87
  gflops (total): 306.323
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00082947,0.000155257,1942.87,306.323

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00275605
  gflops (total): 109.448
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,109.448

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000360147
  gflops (eval):  837.56
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000360147,837.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3110.3
  maximum absolute entry in einsum_ir solution: 3110.3
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00082755
  time (eval):    0.000162521
  gflops (eval):  1856.04
  gflops (total): 304.67
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00082755,0.000162521,1856.04,304.67

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00275006
  gflops (total): 109.686
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,109.686

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000355697
  gflops (eval):  848.039
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000355697,848.039,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2913.2
  maximum absolute entry in einsum_ir solution: 2913.2
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000844221
  time (eval):    0.000155321
  gflops (eval):  1942.07
  gflops (total): 301.783
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000844221,0.000155321,1942.07,301.783

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00255791
  gflops (total): 117.926
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,117.926

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000350609
  gflops (eval):  860.345
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000350609,860.345,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3109.43
  maximum absolute entry in einsum_ir solution: 3109.43
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000838142
  time (eval):    0.000151609
  gflops (eval):  1989.62
  gflops (total): 304.768
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000838142,0.000151609,1989.62,304.768

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00263032
  gflops (total): 114.68
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,114.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000354578
  gflops (eval):  850.715
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000354578,850.715,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3092.89
  maximum absolute entry in einsum_ir solution: 3092.89
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000839005
  time (eval):    0.000161081
  gflops (eval):  1872.63
  gflops (total): 301.619
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000839005,0.000161081,1872.63,301.619

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00302231
  gflops (total): 99.8061
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,99.8061

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000363505
  gflops (eval):  829.823
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000363505,829.823,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3234.36
  maximum absolute entry in einsum_ir solution: 3234.37
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000899099
  time (eval):    0.000153978
  gflops (eval):  1959.01
  gflops (total): 286.441
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000899099,0.000153978,1959.01,286.441

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00253244
  gflops (total): 119.112
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,119.112

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000350033
  gflops (eval):  861.761
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000350033,861.761,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2846.66
  maximum absolute entry in einsum_ir solution: 2846.66
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000879388
  time (eval):    0.000156953
  gflops (eval):  1921.88
  gflops (total): 291.067
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000879388,0.000156953,1921.88,291.067

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00280804
  gflops (total): 107.422
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,107.422

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000356882
  gflops (eval):  845.223
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000356882,845.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3483.58
  maximum absolute entry in einsum_ir solution: 3483.58
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000830238
  time (eval):    0.00015529
  gflops (eval):  1942.46
  gflops (total): 306.074
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000830238,0.00015529,1942.46,306.074

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00303056
  gflops (total): 99.5342
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,99.5342

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000361649
  gflops (eval):  834.082
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000361649,834.082,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3243.56
  maximum absolute entry in einsum_ir solution: 3243.57
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000840221
  time (eval):    0.00016041
  gflops (eval):  1880.46
  gflops (total): 301.455
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000840221,0.00016041,1880.46,301.455

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00212228
  gflops (total): 142.132
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,142.132

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000374673
  gflops (eval):  805.088
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000374673,805.088,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3310.82
  maximum absolute entry in einsum_ir solution: 3310.82
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000821375
  time (eval):    0.000159802
  gflops (eval):  1887.62
  gflops (total): 307.432
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000821375,0.000159802,1887.62,307.432

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00227018
  gflops (total): 132.873
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,132.873

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000357458
  gflops (eval):  843.861
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000357458,843.861,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3351.24
  maximum absolute entry in einsum_ir solution: 3351.24
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000847229
  time (eval):    0.000160249
  gflops (eval):  1882.35
  gflops (total): 299.406
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000847229,0.000160249,1882.35,299.406

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00253506
  gflops (total): 118.989
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,118.989

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000370128
  gflops (eval):  814.974
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000370128,814.974,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3095.4
  maximum absolute entry in einsum_ir solution: 3095.4
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00083219
  time (eval):    0.00015881
  gflops (eval):  1899.41
  gflops (total): 304.384
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00083219,0.00015881,1899.41,304.384

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00221828
  gflops (total): 135.982
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,135.982

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000393584
  gflops (eval):  766.405
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000393584,766.405,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3111.58
  maximum absolute entry in einsum_ir solution: 3111.58
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00084051
  time (eval):    0.000156442
  gflops (eval):  1928.16
  gflops (total): 302.567
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00084051,0.000156442,1928.16,302.567

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00288001
  gflops (total): 104.737
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,104.737

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000361841
  gflops (eval):  833.639
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000361841,833.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3212.68
  maximum absolute entry in einsum_ir solution: 3212.68
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000851581
  time (eval):    0.000156569
  gflops (eval):  1926.59
  gflops (total): 299.206
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000851581,0.000156569,1926.59,299.206

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00232224
  gflops (total): 129.894
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,129.894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000371185
  gflops (eval):  812.654
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000371185,812.654,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2993.1
  maximum absolute entry in einsum_ir solution: 2993.1
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000841726
  time (eval):    0.000165369
  gflops (eval):  1824.07
  gflops (total): 299.52
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000841726,0.000165369,1824.07,299.52

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00236931
  gflops (total): 127.313
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,127.313

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00037064
  gflops (eval):  813.848
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00037064,813.848,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3512.87
  maximum absolute entry in einsum_ir solution: 3512.87
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000894747
  time (eval):    0.000165241
  gflops (eval):  1825.48
  gflops (total): 284.574
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000894747,0.000165241,1825.48,284.574

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00276117
  gflops (total): 109.245
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,109.245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00036005
  gflops (eval):  837.786
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00036005,837.786,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3113.69
  maximum absolute entry in einsum_ir solution: 3113.69
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000891644
  time (eval):    0.000153946
  gflops (eval):  1959.42
  gflops (total): 288.492
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000891644,0.000153946,1959.42,288.492

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00219652
  gflops (total): 137.329
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,137.329

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000369552
  gflops (eval):  816.245
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000369552,816.245,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3626.6
  maximum absolute entry in einsum_ir solution: 3626.6
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000843934
  time (eval):    0.000152953
  gflops (eval):  1972.14
  gflops (total): 302.587
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000843934,0.000152953,1972.14,302.587

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00288622
  gflops (total): 104.512
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,104.512

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000365105
  gflops (eval):  826.186
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000365105,826.186,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3189.16
  maximum absolute entry in einsum_ir solution: 3189.16
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000806335
  time (eval):    0.000159801
  gflops (eval):  1887.63
  gflops (total): 312.218
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000806335,0.000159801,1887.63,312.218

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00252476
  gflops (total): 119.475
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,119.475

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000350513
  gflops (eval):  860.581
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000350513,860.581,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3155.55
  maximum absolute entry in einsum_ir solution: 3155.55
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000894716
  time (eval):    0.000158265
  gflops (eval):  1905.95
  gflops (total): 286.467
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000894716,0.000158265,1905.95,286.467

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00288196
  gflops (total): 104.666
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,104.666

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000354834
  gflops (eval):  850.101
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000354834,850.101,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2988.49
  maximum absolute entry in einsum_ir solution: 2988.49
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000828638
  time (eval):    0.000155866
  gflops (eval):  1935.28
  gflops (total): 306.393
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000828638,0.000155866,1935.28,306.393

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00272939
  gflops (total): 110.517
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,110.517

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000352018
  gflops (eval):  856.902
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000352018,856.902,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3305.9
  maximum absolute entry in einsum_ir solution: 3305.9
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000838974
  time (eval):    0.000162329
  gflops (eval):  1858.23
  gflops (total): 301.252
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000838974,0.000162329,1858.23,301.252

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0028052
  gflops (total): 107.531
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,107.531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000371537
  gflops (eval):  811.884
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000371537,811.884,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3293.94
  maximum absolute entry in einsum_ir solution: 3293.94
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000830942
  time (eval):    0.000177113
  gflops (eval):  1703.12
  gflops (total): 299.234
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000830942,0.000177113,1703.12,299.234

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0026949
  gflops (total): 111.932
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,111.932

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000355697
  gflops (eval):  848.039
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000355697,848.039,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3627.96
  maximum absolute entry in einsum_ir solution: 3627.96
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000849149
  time (eval):    0.000150265
  gflops (eval):  2007.42
  gflops (total): 301.822
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000849149,0.000150265,2007.42,301.822

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00231418
  gflops (total): 130.346
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,130.346

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000354705
  gflops (eval):  850.41
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000354705,850.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3561.72
  maximum absolute entry in einsum_ir solution: 3561.72
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000899867
  time (eval):    0.000160601
  gflops (eval):  1878.22
  gflops (total): 284.445
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000899867,0.000160601,1878.22,284.445

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00248396
  gflops (total): 121.437
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,121.437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000356561
  gflops (eval):  845.984
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000356561,845.984,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2991.48
  maximum absolute entry in einsum_ir solution: 2991.48
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000836062
  time (eval):    0.000163129
  gflops (eval):  1849.12
  gflops (total): 301.889
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000836062,0.000163129,1849.12,301.889

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00230525
  gflops (total): 130.851
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,130.851

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000359985
  gflops (eval):  837.937
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000359985,837.937,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3175.56
  maximum absolute entry in einsum_ir solution: 3175.56
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000837085
  time (eval):    0.000325459
  gflops (eval):  926.829
  gflops (total): 259.47
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000837085,0.000325459,926.829,259.47

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00272168
  gflops (total): 110.83
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,110.83

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000354258
  gflops (eval):  851.483
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000354258,851.483,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3594.12
  maximum absolute entry in einsum_ir solution: 3594.12
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000808096
  time (eval):    0.000162169
  gflops (eval):  1860.06
  gflops (total): 310.889
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000808096,0.000162169,1860.06,310.889

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00255737
  gflops (total): 117.951
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,117.951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000355249
  gflops (eval):  849.108
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000355249,849.108,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3846.42
  maximum absolute entry in einsum_ir solution: 3846.42
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00084659
  time (eval):    0.000158073
  gflops (eval):  1908.26
  gflops (total): 300.245
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00084659,0.000158073,1908.26,300.245

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00230493
  gflops (total): 130.869
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,130.869

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000349458
  gflops (eval):  863.179
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000349458,863.179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3412.63
  maximum absolute entry in einsum_ir solution: 3412.63
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000852702
  time (eval):    0.000165209
  gflops (eval):  1825.84
  gflops (total): 296.337
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000852702,0.000165209,1825.84,296.337

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00271695
  gflops (total): 111.024
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,111.024

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000349233
  gflops (eval):  863.735
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000349233,863.735,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3361.2
  maximum absolute entry in einsum_ir solution: 3361.21
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000810495
  time (eval):    0.000160153
  gflops (eval):  1883.48
  gflops (total): 310.766
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000810495,0.000160153,1883.48,310.766

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00273925
  gflops (total): 110.12
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,110.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000364818
  gflops (eval):  826.836
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000364818,826.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3693.64
  maximum absolute entry in einsum_ir solution: 3693.64
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000816543
  time (eval):    0.000165145
  gflops (eval):  1826.55
  gflops (total): 307.272
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000816543,0.000165145,1826.55,307.272

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00239315
  gflops (total): 126.045
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,126.045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000360945
  gflops (eval):  835.708
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000360945,835.708,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3210.13
  maximum absolute entry in einsum_ir solution: 3210.13
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000891196
  time (eval):    0.000158233
  gflops (eval):  1906.33
  gflops (total): 287.437
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000891196,0.000158233,1906.33,287.437

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00216599
  gflops (total): 139.264
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,139.264

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000348977
  gflops (eval):  864.369
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000348977,864.369,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3488.59
  maximum absolute entry in einsum_ir solution: 3488.59
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000852829
  time (eval):    0.000152346
  gflops (eval):  1980
  gflops (total): 300.092
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000852829,0.000152346,1980,300.092

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00278753
  gflops (total): 108.212
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,108.212

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000354929
  gflops (eval):  849.874
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000354929,849.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3145.58
  maximum absolute entry in einsum_ir solution: 3145.58
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000854717
  time (eval):    0.000154618
  gflops (eval):  1950.9
  gflops (total): 298.855
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000854717,0.000154618,1950.9,298.855

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00265346
  gflops (total): 113.68
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,113.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000356882
  gflops (eval):  845.223
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000356882,845.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3120.03
  maximum absolute entry in einsum_ir solution: 3120.03
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000834462
  time (eval):    0.000157434
  gflops (eval):  1916.01
  gflops (total): 304.109
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000834462,0.000157434,1916.01,304.109

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00269807
  gflops (total): 111.8
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,111.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00035525
  gflops (eval):  849.106
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00035525,849.106,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3656.05
  maximum absolute entry in einsum_ir solution: 3656.05
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000821695
  time (eval):    0.000156378
  gflops (eval):  1928.95
  gflops (total): 308.407
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000821695,0.000156378,1928.95,308.407

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00303424
  gflops (total): 99.4135
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,99.4135

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000362833
  gflops (eval):  831.36
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000362833,831.36,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3414.85
  maximum absolute entry in einsum_ir solution: 3414.85
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000841086
  time (eval):    0.000157786
  gflops (eval):  1911.73
  gflops (total): 301.985
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000841086,0.000157786,1911.73,301.985

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0025807
  gflops (total): 116.885
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,116.885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000365009
  gflops (eval):  826.404
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000365009,826.404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3040.62
  maximum absolute entry in einsum_ir solution: 3040.62
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000821055
  time (eval):    0.000159737
  gflops (eval):  1888.38
  gflops (total): 307.552
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000821055,0.000159737,1888.38,307.552

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00216231
  gflops (total): 139.501
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,139.501

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000347441
  gflops (eval):  868.19
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000347441,868.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3519.9
  maximum absolute entry in einsum_ir solution: 3519.9
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000843518
  time (eval):    0.000155129
  gflops (eval):  1944.48
  gflops (total): 302.053
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000843518,0.000155129,1944.48,302.053

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00297412
  gflops (total): 101.423
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,101.423

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000348979
  gflops (eval):  864.364
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000348979,864.364,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3592.25
  maximum absolute entry in einsum_ir solution: 3592.25
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000819903
  time (eval):    0.00015625
  gflops (eval):  1930.53
  gflops (total): 309.014
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000819903,0.00015625,1930.53,309.014

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00235578
  gflops (total): 128.045
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,128.045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000347666
  gflops (eval):  867.628
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000347666,867.628,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3484.91
  maximum absolute entry in einsum_ir solution: 3484.91
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000846909
  time (eval):    0.000162265
  gflops (eval):  1858.96
  gflops (total): 298.903
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000846909,0.000162265,1858.96,298.903

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00291316
  gflops (total): 103.546
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,103.546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000391536
  gflops (eval):  770.414
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000391536,770.414,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3464.19
  maximum absolute entry in einsum_ir solution: 3464.19
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000845278
  time (eval):    0.000154906
  gflops (eval):  1947.28
  gflops (total): 301.589
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000845278,0.000154906,1947.28,301.589

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00278456
  gflops (total): 108.328
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,108.328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000350737
  gflops (eval):  860.031
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000350737,860.031,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2885.35
  maximum absolute entry in einsum_ir solution: 2885.35
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000911675
  time (eval):    0.000157401
  gflops (eval):  1916.41
  gflops (total): 282.155
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000911675,0.000157401,1916.41,282.155

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00289563
  gflops (total): 104.173
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,104.173

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000358129
  gflops (eval):  842.28
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000358129,842.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2994.65
  maximum absolute entry in einsum_ir solution: 2994.65
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00081715
  time (eval):    0.000162489
  gflops (eval):  1856.4
  gflops (total): 307.914
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00081715,0.000162489,1856.4,307.914

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00306618
  gflops (total): 98.3781
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,98.3781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000357617
  gflops (eval):  843.486
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000357617,843.486,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3287.8
  maximum absolute entry in einsum_ir solution: 3287.8
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000855101
  time (eval):    0.000162361
  gflops (eval):  1857.86
  gflops (total): 296.468
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000855101,0.000162361,1857.86,296.468

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00252431
  gflops (total): 119.496
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,119.496

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000350259
  gflops (eval):  861.205
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000350259,861.205,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3158.32
  maximum absolute entry in einsum_ir solution: 3158.32
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000842237
  time (eval):    0.000160826
  gflops (eval):  1875.6
  gflops (total): 300.724
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000842237,0.000160826,1875.6,300.724

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00284104
  gflops (total): 106.174
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,106.174

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000351507
  gflops (eval):  858.147
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000351507,858.147,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3209.84
  maximum absolute entry in einsum_ir solution: 3209.84
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000899483
  time (eval):    0.000159897
  gflops (eval):  1886.49
  gflops (total): 284.737
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000899483,0.000159897,1886.49,284.737

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00226461
  gflops (total): 133.199
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,133.199

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000361841
  gflops (eval):  833.639
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000361841,833.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3191.92
  maximum absolute entry in einsum_ir solution: 3191.92
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000851037
  time (eval):    0.000154425
  gflops (eval):  1953.34
  gflops (total): 300.006
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000851037,0.000154425,1953.34,300.006

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00259989
  gflops (total): 116.022
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,116.022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000351922
  gflops (eval):  857.135
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000351922,857.135,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3262.94
  maximum absolute entry in einsum_ir solution: 3262.94
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000896444
  time (eval):    0.000167769
  gflops (eval):  1797.98
  gflops (total): 283.444
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000896444,0.000167769,1797.98,283.444

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.002917
  gflops (total): 103.409
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,103.409

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000360401
  gflops (eval):  836.97
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000360401,836.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3196.26
  maximum absolute entry in einsum_ir solution: 3196.26
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000845469
  time (eval):    0.000164506
  gflops (eval):  1833.64
  gflops (total): 298.666
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000845469,0.000164506,1833.64,298.666

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00306842
  gflops (total): 98.3063
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,98.3063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000357074
  gflops (eval):  844.768
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000357074,844.768,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2762.41
  maximum absolute entry in einsum_ir solution: 2762.41
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000890619
  time (eval):    0.000156537
  gflops (eval):  1926.99
  gflops (total): 288.061
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000890619,0.000156537,1926.99,288.061

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0029889
  gflops (total): 100.922
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,100.922

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000373105
  gflops (eval):  808.472
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000373105,808.472,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2979.69
  maximum absolute entry in einsum_ir solution: 2979.69
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000837406
  time (eval):    0.000161626
  gflops (eval):  1866.31
  gflops (total): 301.937
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000837406,0.000161626,1866.31,301.937

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0031271
  gflops (total): 96.4614
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,96.4614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000354513
  gflops (eval):  850.871
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000354513,850.871,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3047.45
  maximum absolute entry in einsum_ir solution: 3047.45
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000880124
  time (eval):    0.00015241
  gflops (eval):  1979.17
  gflops (total): 292.14
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000880124,0.00015241,1979.17,292.14

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00246169
  gflops (total): 122.536
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,122.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000351921
  gflops (eval):  857.138
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000351921,857.138,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3143.67
  maximum absolute entry in einsum_ir solution: 3143.67
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000859324
  time (eval):    0.000168441
  gflops (eval):  1790.8
  gflops (total): 293.496
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000859324,0.000168441,1790.8,293.496

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00289659
  gflops (total): 104.138
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,104.138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000358961
  gflops (eval):  840.328
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000358961,840.328,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3436.77
  maximum absolute entry in einsum_ir solution: 3436.77
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000849117
  time (eval):    0.000154969
  gflops (eval):  1946.48
  gflops (total): 300.417
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000849117,0.000154969,1946.48,300.417

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0030448
  gflops (total): 99.0687
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,99.0687

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000359857
  gflops (eval):  838.235
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000359857,838.235,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2878.25
  maximum absolute entry in einsum_ir solution: 2878.25
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000909019
  time (eval):    0.000159162
  gflops (eval):  1895.21
  gflops (total): 282.391
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000909019,0.000159162,1895.21,282.391

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00270043
  gflops (total): 111.702
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,111.702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000352145
  gflops (eval):  856.593
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000352145,856.593,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3079.86
  maximum absolute entry in einsum_ir solution: 3079.86
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000849758
  time (eval):    0.000184825
  gflops (eval):  1632.06
  gflops (total): 291.562
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000849758,0.000184825,1632.06,291.562

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00280475
  gflops (total): 107.548
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,107.548

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000365041
  gflops (eval):  826.331
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000365041,826.331,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3105.51
  maximum absolute entry in einsum_ir solution: 3105.51
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000837406
  time (eval):    0.000152953
  gflops (eval):  1972.14
  gflops (total): 304.581
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000837406,0.000152953,1972.14,304.581

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00259493
  gflops (total): 116.244
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,116.244

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000359057
  gflops (eval):  840.103
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000359057,840.103,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2960.52
  maximum absolute entry in einsum_ir solution: 2960.52
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000830974
  time (eval):    0.00015993
  gflops (eval):  1886.11
  gflops (total): 304.414
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000830974,0.00015993,1886.11,304.414

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00288094
  gflops (total): 104.704
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,104.704

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000356625
  gflops (eval):  845.832
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000356625,845.832,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2827.87
  maximum absolute entry in einsum_ir solution: 2827.87
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00082563
  time (eval):    0.000159482
  gflops (eval):  1891.4
  gflops (total): 306.204
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00082563,0.000159482,1891.4,306.204

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00283601
  gflops (total): 106.362
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,106.362

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00036101
  gflops (eval):  835.558
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00036101,835.558,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3799.14
  maximum absolute entry in einsum_ir solution: 3799.14
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000856925
  time (eval):    0.000161273
  gflops (eval):  1870.4
  gflops (total): 296.254
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000856925,0.000161273,1870.4,296.254

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0028442
  gflops (total): 106.056
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,106.056

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000361585
  gflops (eval):  834.229
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000361585,834.229,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2999
  maximum absolute entry in einsum_ir solution: 2999
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000829246
  time (eval):    0.00015961
  gflops (eval):  1889.89
  gflops (total): 305.044
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000829246,0.00015961,1889.89,305.044

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00303031
  gflops (total): 99.5426
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,99.5426

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00035157
  gflops (eval):  857.994
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00035157,857.994,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3130.96
  maximum absolute entry in einsum_ir solution: 3130.96
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000905755
  time (eval):    0.000152986
  gflops (eval):  1971.72
  gflops (total): 284.909
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000905755,0.000152986,1971.72,284.909

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0027908
  gflops (total): 108.086
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,108.086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000359985
  gflops (eval):  837.937
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000359985,837.937,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3220.79
  maximum absolute entry in einsum_ir solution: 3220.79
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000895612
  time (eval):    0.000151738
  gflops (eval):  1987.93
  gflops (total): 288.008
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000895612,0.000151738,1987.93,288.008

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0055031
  gflops (total): 54.8136
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,54.8136

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000363825
  gflops (eval):  829.093
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000363825,829.093,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3244.09
  maximum absolute entry in einsum_ir solution: 3244.09
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000907227
  time (eval):    0.000153273
  gflops (eval):  1968.02
  gflops (total): 284.436
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000907227,0.000153273,1968.02,284.436

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00261848
  gflops (total): 115.198
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,115.198

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000355698
  gflops (eval):  848.036
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000355698,848.036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3070.49
  maximum absolute entry in einsum_ir solution: 3070.49
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000832254
  time (eval):    0.00015417
  gflops (eval):  1956.57
  gflops (total): 305.796
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000832254,0.00015417,1956.57,305.796

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00260841
  gflops (total): 115.643
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,115.643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000359857
  gflops (eval):  838.235
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000359857,838.235,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3208.68
  maximum absolute entry in einsum_ir solution: 3208.68
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000843902
  time (eval):    0.00015113
  gflops (eval):  1995.93
  gflops (total): 303.151
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000843902,0.00015113,1995.93,303.151

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00274958
  gflops (total): 109.706
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,109.706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000353234
  gflops (eval):  853.952
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000353234,853.952,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3494.45
  maximum absolute entry in einsum_ir solution: 3494.45
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000838109
  time (eval):    0.000156346
  gflops (eval):  1929.34
  gflops (total): 303.327
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000838109,0.000156346,1929.34,303.327

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00279025
  gflops (total): 108.107
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,108.107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.00034872
  gflops (eval):  865.006
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.00034872,865.006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3434.19
  maximum absolute entry in einsum_ir solution: 3434.19
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000852637
  time (eval):    0.00015785
  gflops (eval):  1910.96
  gflops (total): 298.514
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000852637,0.00015785,1910.96,298.514

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00253356
  gflops (total): 119.06
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,119.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000362161
  gflops (eval):  832.902
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000362161,832.902,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3272.17
  maximum absolute entry in einsum_ir solution: 3272.17
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000868252
  time (eval):    0.000181017
  gflops (eval):  1666.39
  gflops (total): 287.481
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000868252,0.000181017,1666.39,287.481

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00254262
  gflops (total): 118.636
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,118.636

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000365457
  gflops (eval):  825.391
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000365457,825.391,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3386.4
  maximum absolute entry in einsum_ir solution: 3386.4
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000893211
  time (eval):    0.000153498
  gflops (eval):  1965.14
  gflops (total): 288.184
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000893211,0.000153498,1965.14,288.184

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00281131
  gflops (total): 107.297
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,107.297

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000360721
  gflops (eval):  836.227
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000360721,836.227,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3836.41
  maximum absolute entry in einsum_ir solution: 3836.41
  maximum element-wise difference:              0.00219727
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000859357
  time (eval):    0.000159001
  gflops (eval):  1897.13
  gflops (total): 296.207
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000859357,0.000159001,1897.13,296.207

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00273013
  gflops (total): 110.487
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,110.487

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000357169
  gflops (eval):  844.544
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000357169,844.544,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3338.04
  maximum absolute entry in einsum_ir solution: 3338.04
  maximum element-wise difference:              0.00244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000830431
  time (eval):    0.00015337
  gflops (eval):  1966.78
  gflops (total): 306.612
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000830431,0.00015337,1966.78,306.612

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00285822
  gflops (total): 105.536
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,105.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000359025
  gflops (eval):  840.178
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000359025,840.178,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3175.94
  maximum absolute entry in einsum_ir solution: 3175.94
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000824415
  time (eval):    0.000156249
  gflops (eval):  1930.54
  gflops (total): 307.592
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000824415,0.000156249,1930.54,307.592

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00307408
  gflops (total): 98.1251
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,98.1251

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000364242
  gflops (eval):  828.144
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000364242,828.144,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3545.31
  maximum absolute entry in einsum_ir solution: 3545.31
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000855197
  time (eval):    0.000159161
  gflops (eval):  1895.22
  gflops (total): 297.375
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000855197,0.000159161,1895.22,297.375

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0022625
  gflops (total): 133.324
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,133.324

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000352049
  gflops (eval):  856.826
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000352049,856.826,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3346.47
  maximum absolute entry in einsum_ir solution: 3346.47
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000833758
  time (eval):    0.000179385
  gflops (eval):  1681.55
  gflops (total): 297.732
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000833758,0.000179385,1681.55,297.732

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00219364
  gflops (total): 137.509
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,137.509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000346354
  gflops (eval):  870.915
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000346354,870.915,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3037.12
  maximum absolute entry in einsum_ir solution: 3037.12
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000862429
  time (eval):    0.000158073
  gflops (eval):  1908.26
  gflops (total): 295.585
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000862429,0.000158073,1908.26,295.585

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00250335
  gflops (total): 120.496
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,120.496

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000354098
  gflops (eval):  851.868
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000354098,851.868,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3116.53
  maximum absolute entry in einsum_ir solution: 3116.53
  maximum element-wise difference:              0.00146484
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000891964
  time (eval):    0.000161945
  gflops (eval):  1862.64
  gflops (total): 286.215
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000891964,0.000161945,1862.64,286.215

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00298138
  gflops (total): 101.176
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,101.176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000366833
  gflops (eval):  822.295
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000366833,822.295,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3353.96
  maximum absolute entry in einsum_ir solution: 3353.96
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000867004
  time (eval):    0.000163097
  gflops (eval):  1849.48
  gflops (total): 292.83
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000867004,0.000163097,1849.48,292.83

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00266082
  gflops (total): 113.365
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,113.365

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000366704
  gflops (eval):  822.584
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000366704,822.584,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      4123.9
  maximum absolute entry in einsum_ir solution: 4123.9
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000826847
  time (eval):    0.000160569
  gflops (eval):  1878.6
  gflops (total): 305.489
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000826847,0.000160569,1878.6,305.489

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0026308
  gflops (total): 114.659
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,114.659

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000363666
  gflops (eval):  829.456
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000363666,829.456,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3760.29
  maximum absolute entry in einsum_ir solution: 3760.29
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000839838
  time (eval):    0.000156314
  gflops (eval):  1929.74
  gflops (total): 302.81
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000839838,0.000156314,1929.74,302.81

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00269973
  gflops (total): 111.731
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,111.731

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000351505
  gflops (eval):  858.152
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000351505,858.152,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2886.14
  maximum absolute entry in einsum_ir solution: 2886.14
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000845502
  time (eval):    0.000169049
  gflops (eval):  1784.36
  gflops (total): 297.319
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000845502,0.000169049,1784.36,297.319

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00271515
  gflops (total): 111.097
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,111.097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000358706
  gflops (eval):  840.925
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000358706,840.925,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3633.25
  maximum absolute entry in einsum_ir solution: 3633.25
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000817311
  time (eval):    0.000165049
  gflops (eval):  1827.61
  gflops (total): 307.061
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000817311,0.000165049,1827.61,307.061

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00226608
  gflops (total): 133.113
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,133.113

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000358321
  gflops (eval):  841.828
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000358321,841.828,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3746.3
  maximum absolute entry in einsum_ir solution: 3746.3
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000823295
  time (eval):    0.000165178
  gflops (eval):  1826.18
  gflops (total): 305.162
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000823295,0.000165178,1826.18,305.162

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0027339
  gflops (total): 110.335
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,110.335

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000360786
  gflops (eval):  836.077
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000360786,836.077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3322.26
  maximum absolute entry in einsum_ir solution: 3322.27
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.00083683
  time (eval):    0.000165082
  gflops (eval):  1827.24
  gflops (total): 301.069
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.00083683,0.000165082,1827.24,301.069

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00254623
  gflops (total): 118.467
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,118.467

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000355121
  gflops (eval):  849.414
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000355121,849.414,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3606.82
  maximum absolute entry in einsum_ir solution: 3606.82
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000838302
  time (eval):    0.000161177
  gflops (eval):  1871.51
  gflops (total): 301.802
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000838302,0.000161177,1871.51,301.802

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00218948
  gflops (total): 137.77
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,137.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000366993
  gflops (eval):  821.936
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000366993,821.936,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3382.98
  maximum absolute entry in einsum_ir solution: 3382.98
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000837278
  time (eval):    0.000186744
  gflops (eval):  1615.29
  gflops (total): 294.569
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000837278,0.000186744,1615.29,294.569

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00229053
  gflops (total): 131.692
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,131.692

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000349745
  gflops (eval):  862.471
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000349745,862.471,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3235.81
  maximum absolute entry in einsum_ir solution: 3235.81
  maximum element-wise difference:              0.00183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000820286
  time (eval):    0.000160314
  gflops (eval):  1881.59
  gflops (total): 307.612
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000820286,0.000160314,1881.59,307.612

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.0029074
  gflops (total): 103.751
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,103.751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000368657
  gflops (eval):  818.226
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000368657,818.226,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3413.61
  maximum absolute entry in einsum_ir solution: 3413.61
  maximum element-wise difference:              0.00195312
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,f,i
  b,f,g,j
  c,g,h,k
  d,h,e,l
  i,j,k,l
  a,b,c,d
parsed contraction path: 2 3 2 3 0 2 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
  h: 7
  i: 8
  j: 9
  k: 10
  l: 11
parsed dimension sizes:
  a: 40
  b: 40
  c: 20
  d: 20
  e: 6
  f: 6
  g: 6
  h: 6
  i: 4
  j: 4
  k: 4
  l: 4
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 4 4 4 
  string_dim_ids: 0 4 5 8 1 5 6 9 2 6 7 10 3 7 4 11 8 9 10 11 0 1 2 3 

*** benchmarking einsum_ir ***
[[[[[3,7,4,11]->[4,11,7,3]],[[2,6,7,10]->[6,10,2,7]]->[6,4,10,11,2,3]],[[8,9,10,11]->[9,8,10,11]]->[9,6,8,4,2,3]],[[0,4,5,8]->[0,5,8,4]]->[0,9,5,6,2,3]],[[1,5,6,9]->[1,9,5,6]]->[0,1,2,3]
  #flops:         301644800
  time (compile): 0.000898651
  time (eval):    0.000154714
  gflops (eval):  1949.69
  gflops (total): 286.363
CSV_DATA: einsum_ir,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0.000898651,0.000154714,1949.69,286.363

*** benchmarking at::einsum ***
  #flops:         301644800
  time (total):   0.00269426
  gflops (total): 111.958
CSV_DATA: at::einsum,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0,0,111.958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 480 480 6
    #1: 1 14400 16 16
    #2: 1 9600 240 24
    #3: 1 16000 40 144
  #flops:         301644800
  time (eval):    0.000355154
  gflops (eval):  849.335
CSV_DATA: at::matmul,"aefi,bfgj,cghk,dhel,ijkl->abcd","40,40,20,20,6,6,6,6,4,4,4,4","(2,3),(2,3),(0,2),(0,1)",301644800,0,0.000355154,849.335,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      3616.56
  maximum absolute entry in einsum_ir solution: 3616.56
  maximum element-wise difference:              0.00170898
warning: einsum_ir solution is not close to at:einsum!
