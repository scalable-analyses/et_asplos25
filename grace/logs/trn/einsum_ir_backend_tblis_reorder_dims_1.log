parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000540746
  time (eval):    0.00156867
  gflops (eval):  995.364
  gflops (total): 740.204
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000540746,0.00156867,995.364,740.204

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0129509
  gflops (total): 120.563
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,120.563

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00343583
  gflops (eval):  454.447
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00343583,454.447,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.10885e+08
  maximum absolute entry in einsum_ir solution: 8.10885e+08
  maximum element-wise difference:              896
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00050462
  time (eval):    0.00152509
  gflops (eval):  1023.81
  gflops (total): 769.273
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00050462,0.00152509,1023.81,769.273

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00538103
  gflops (total): 290.168
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,290.168

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00254297
  gflops (eval):  614.006
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00254297,614.006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.58822e+08
  maximum absolute entry in einsum_ir solution: 7.58821e+08
  maximum element-wise difference:              1024
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000565385
  time (eval):    0.00158173
  gflops (eval):  987.148
  gflops (total): 727.209
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000565385,0.00158173,987.148,727.209

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00638108
  gflops (total): 244.692
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,244.692

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00421003
  gflops (eval):  370.876
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00421003,370.876,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.65201e+08
  maximum absolute entry in einsum_ir solution: 6.65201e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000567049
  time (eval):    0.00157725
  gflops (eval):  989.953
  gflops (total): 728.164
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000567049,0.00157725,989.953,728.164

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00502168
  gflops (total): 310.932
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,310.932

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00641084
  gflops (eval):  243.556
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00641084,243.556,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.48754e+08
  maximum absolute entry in einsum_ir solution: 8.48754e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000410192
  time (eval):    0.00152989
  gflops (eval):  1020.6
  gflops (total): 804.811
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000410192,0.00152989,1020.6,804.811

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00459178
  gflops (total): 340.042
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,340.042

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00404057
  gflops (eval):  386.431
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00404057,386.431,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.69713e+08
  maximum absolute entry in einsum_ir solution: 7.69713e+08
  maximum element-wise difference:              832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000462285
  time (eval):    0.00177782
  gflops (eval):  878.269
  gflops (total): 697.022
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000462285,0.00177782,878.269,697.022

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00680446
  gflops (total): 229.467
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,229.467

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00343682
  gflops (eval):  454.316
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00343682,454.316,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.60576e+08
  maximum absolute entry in einsum_ir solution: 8.60576e+08
  maximum element-wise difference:              864
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000524906
  time (eval):    0.00181637
  gflops (eval):  859.625
  gflops (total): 666.9
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000524906,0.00181637,859.625,666.9

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00708406
  gflops (total): 220.41
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,220.41

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00282216
  gflops (eval):  553.265
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00282216,553.265,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.13515e+08
  maximum absolute entry in einsum_ir solution: 7.13515e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00052161
  time (eval):    0.00170803
  gflops (eval):  914.155
  gflops (total): 700.294
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00052161,0.00170803,914.155,700.294

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00534996
  gflops (total): 291.853
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,291.853

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00349448
  gflops (eval):  446.819
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00349448,446.819,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.40632e+08
  maximum absolute entry in einsum_ir solution: 7.40632e+08
  maximum element-wise difference:              608
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000550922
  time (eval):    0.00159648
  gflops (eval):  978.027
  gflops (total): 727.112
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000550922,0.00159648,978.027,727.112

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0051803
  gflops (total): 301.411
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,301.411

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00611767
  gflops (eval):  255.228
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00611767,255.228,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.72184e+08
  maximum absolute entry in einsum_ir solution: 7.72185e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000557417
  time (eval):    0.00184012
  gflops (eval):  848.533
  gflops (total): 651.253
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000557417,0.00184012,848.533,651.253

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00949225
  gflops (total): 164.492
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,164.492

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00465952
  gflops (eval):  335.099
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00465952,335.099,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.33712e+08
  maximum absolute entry in einsum_ir solution: 7.33712e+08
  maximum element-wise difference:              544
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000459982
  time (eval):    0.00155971
  gflops (eval):  1001.08
  gflops (total): 773.087
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000459982,0.00155971,1001.08,773.087

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0056758
  gflops (total): 275.098
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,275.098

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00371274
  gflops (eval):  420.551
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00371274,420.551,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.68696e+08
  maximum absolute entry in einsum_ir solution: 8.68697e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000470572
  time (eval):    0.0015624
  gflops (eval):  999.36
  gflops (total): 768.038
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000470572,0.0015624,999.36,768.038

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00519089
  gflops (total): 300.796
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,300.796

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00323788
  gflops (eval):  482.229
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00323788,482.229,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.37117e+08
  maximum absolute entry in einsum_ir solution: 7.37117e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000515915
  time (eval):    0.00190277
  gflops (eval):  820.593
  gflops (total): 645.557
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000515915,0.00190277,820.593,645.557

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0058548
  gflops (total): 266.687
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,266.687

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00410841
  gflops (eval):  380.05
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00410841,380.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.73981e+08
  maximum absolute entry in einsum_ir solution: 7.73981e+08
  maximum element-wise difference:              736
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000458478
  time (eval):    0.00178226
  gflops (eval):  876.077
  gflops (total): 696.823
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000458478,0.00178226,876.077,696.823

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00439726
  gflops (total): 355.085
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,355.085

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00356946
  gflops (eval):  437.434
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00356946,437.434,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.80151e+08
  maximum absolute entry in einsum_ir solution: 7.80151e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000553129
  time (eval):    0.00156954
  gflops (eval):  994.816
  gflops (total): 735.585
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000553129,0.00156954,994.816,735.585

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00570082
  gflops (total): 273.89
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,273.89

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0046921
  gflops (eval):  332.772
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0046921,332.772,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.95299e+08
  maximum absolute entry in einsum_ir solution: 7.95299e+08
  maximum element-wise difference:              608
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000523819
  time (eval):    0.00190466
  gflops (eval):  819.78
  gflops (total): 642.954
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000523819,0.00190466,819.78,642.954

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00639686
  gflops (total): 244.089
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,244.089

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00269644
  gflops (eval):  579.06
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00269644,579.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.50537e+08
  maximum absolute entry in einsum_ir solution: 7.50537e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000461741
  time (eval):    0.00182869
  gflops (eval):  853.833
  gflops (total): 681.705
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000461741,0.00182869,853.833,681.705

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00498335
  gflops (total): 313.323
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,313.323

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00555776
  gflops (eval):  280.941
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00555776,280.941,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.32029e+08
  maximum absolute entry in einsum_ir solution: 7.32028e+08
  maximum element-wise difference:              896
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000463117
  time (eval):    0.00152096
  gflops (eval):  1026.59
  gflops (total): 786.965
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000463117,0.00152096,1026.59,786.965

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00556425
  gflops (total): 280.613
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,280.613

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00386618
  gflops (eval):  403.861
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00386618,403.861,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.04831e+08
  maximum absolute entry in einsum_ir solution: 8.04831e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000477196
  time (eval):    0.00179685
  gflops (eval):  868.963
  gflops (total): 686.616
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000477196,0.00179685,868.963,686.616

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00620842
  gflops (total): 251.497
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,251.497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00349541
  gflops (eval):  446.7
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00349541,446.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.62008e+08
  maximum absolute entry in einsum_ir solution: 7.62009e+08
  maximum element-wise difference:              640
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000463821
  time (eval):    0.00151597
  gflops (eval):  1029.97
  gflops (total): 788.669
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000463821,0.00151597,1029.97,788.669

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00529943
  gflops (total): 294.635
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,294.635

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00374164
  gflops (eval):  417.304
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00374164,417.304,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.89911e+08
  maximum absolute entry in einsum_ir solution: 7.89911e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000566985
  time (eval):    0.00195234
  gflops (eval):  799.76
  gflops (total): 619.77
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000566985,0.00195234,799.76,619.77

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0074476
  gflops (total): 209.651
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,209.651

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00341589
  gflops (eval):  457.099
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00341589,457.099,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.46137e+08
  maximum absolute entry in einsum_ir solution: 7.46137e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000431758
  time (eval):    0.00156157
  gflops (eval):  999.892
  gflops (total): 783.314
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000431758,0.00156157,999.892,783.314

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00670427
  gflops (total): 232.896
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,232.896

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00188629
  gflops (eval):  827.762
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00188629,827.762,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.71525e+08
  maximum absolute entry in einsum_ir solution: 7.71524e+08
  maximum element-wise difference:              960
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000520971
  time (eval):    0.00153994
  gflops (eval):  1013.94
  gflops (total): 757.627
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000520971,0.00153994,1013.94,757.627

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00656693
  gflops (total): 237.767
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,237.767

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00322153
  gflops (eval):  484.676
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00322153,484.676,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.11467e+08
  maximum absolute entry in einsum_ir solution: 7.11467e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000506891
  time (eval):    0.00148935
  gflops (eval):  1048.38
  gflops (total): 782.171
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000506891,0.00148935,1048.38,782.171

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00631094
  gflops (total): 247.412
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,247.412

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0042884
  gflops (eval):  364.098
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0042884,364.098,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.71673e+08
  maximum absolute entry in einsum_ir solution: 7.71672e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000522891
  time (eval):    0.00172796
  gflops (eval):  903.608
  gflops (total): 693.693
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000522891,0.00172796,903.608,693.693

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00574009
  gflops (total): 272.017
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,272.017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00441323
  gflops (eval):  353.8
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00441323,353.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.87602e+08
  maximum absolute entry in einsum_ir solution: 7.87602e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000518794
  time (eval):    0.00159555
  gflops (eval):  978.596
  gflops (total): 738.479
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000518794,0.00159555,978.596,738.479

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00688666
  gflops (total): 226.728
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,226.728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00395785
  gflops (eval):  394.507
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00395785,394.507,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.24093e+08
  maximum absolute entry in einsum_ir solution: 8.24093e+08
  maximum element-wise difference:              640
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000465261
  time (eval):    0.00165305
  gflops (eval):  944.555
  gflops (total): 737.096
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000465261,0.00165305,944.555,737.096

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00469299
  gflops (total): 332.709
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,332.709

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00379639
  gflops (eval):  411.286
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00379639,411.286,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.43519e+08
  maximum absolute entry in einsum_ir solution: 7.43519e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000516043
  time (eval):    0.00179369
  gflops (eval):  870.498
  gflops (total): 676.01
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000516043,0.00179369,870.498,676.01

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00793552
  gflops (total): 196.761
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,196.761

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00234147
  gflops (eval):  666.845
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00234147,666.845,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.16418e+08
  maximum absolute entry in einsum_ir solution: 8.16418e+08
  maximum element-wise difference:              672
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000483564
  time (eval):    0.00154333
  gflops (eval):  1011.71
  gflops (total): 770.342
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000483564,0.00154333,1011.71,770.342

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00546934
  gflops (total): 285.482
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,285.482

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00448193
  gflops (eval):  348.377
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00448193,348.377,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.98e+08
  maximum absolute entry in einsum_ir solution: 6.98e+08
  maximum element-wise difference:              640
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000521579
  time (eval):    0.00180943
  gflops (eval):  862.924
  gflops (total): 669.839
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000521579,0.00180943,862.924,669.839

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0034197
  gflops (total): 456.59
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,456.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00454554
  gflops (eval):  343.501
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00454554,343.501,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.75521e+08
  maximum absolute entry in einsum_ir solution: 7.75522e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000524266
  time (eval):    0.00154211
  gflops (eval):  1012.51
  gflops (total): 755.621
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000524266,0.00154211,1012.51,755.621

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00582891
  gflops (total): 267.872
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,267.872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00422213
  gflops (eval):  369.813
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00422213,369.813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.65049e+08
  maximum absolute entry in einsum_ir solution: 7.65049e+08
  maximum element-wise difference:              640
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000455309
  time (eval):    0.00156291
  gflops (eval):  999.033
  gflops (total): 773.652
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000455309,0.00156291,999.033,773.652

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00600609
  gflops (total): 259.969
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,259.969

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00445566
  gflops (eval):  350.431
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00445566,350.431,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.24887e+08
  maximum absolute entry in einsum_ir solution: 7.24887e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000530155
  time (eval):    0.00173625
  gflops (eval):  899.295
  gflops (total): 688.933
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000530155,0.00173625,899.295,688.933

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00701318
  gflops (total): 222.638
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,222.638

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00486991
  gflops (eval):  320.622
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00486991,320.622,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      9.4751e+08
  maximum absolute entry in einsum_ir solution: 9.4751e+08
  maximum element-wise difference:              608
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000478477
  time (eval):    0.0018764
  gflops (eval):  832.124
  gflops (total): 663.048
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000478477,0.0018764,832.124,663.048

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00476211
  gflops (total): 327.88
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,327.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00194408
  gflops (eval):  803.157
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00194408,803.157,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.71366e+08
  maximum absolute entry in einsum_ir solution: 7.71366e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000519787
  time (eval):    0.00182594
  gflops (eval):  855.121
  gflops (total): 665.636
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000519787,0.00182594,855.121,665.636

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00707754
  gflops (total): 220.614
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,220.614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00430034
  gflops (eval):  363.088
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00430034,363.088,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.28665e+08
  maximum absolute entry in einsum_ir solution: 7.28665e+08
  maximum element-wise difference:              736
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000495756
  time (eval):    0.00185727
  gflops (eval):  840.697
  gflops (total): 663.571
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000495756,0.00185727,840.697,663.571

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00602942
  gflops (total): 258.964
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,258.964

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00440405
  gflops (eval):  354.538
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00440405,354.538,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.25998e+08
  maximum absolute entry in einsum_ir solution: 8.25998e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000479372
  time (eval):    0.00152947
  gflops (eval):  1020.87
  gflops (total): 777.263
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000479372,0.00152947,1020.87,777.263

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0113127
  gflops (total): 138.022
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,138.022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0050669
  gflops (eval):  308.157
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0050669,308.157,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.1196e+08
  maximum absolute entry in einsum_ir solution: 7.1196e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000533162
  time (eval):    0.00173715
  gflops (eval):  898.831
  gflops (total): 687.748
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000533162,0.00173715,898.831,687.748

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00625619
  gflops (total): 249.577
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,249.577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00464151
  gflops (eval):  336.399
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00464151,336.399,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.56877e+08
  maximum absolute entry in einsum_ir solution: 7.56877e+08
  maximum element-wise difference:              592
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000514667
  time (eval):    0.00152167
  gflops (eval):  1026.11
  gflops (total): 766.771
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000514667,0.00152167,1026.11,766.771

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00545603
  gflops (total): 286.179
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,286.179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00479888
  gflops (eval):  325.368
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00479888,325.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.47436e+08
  maximum absolute entry in einsum_ir solution: 7.47436e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000523243
  time (eval):    0.00163485
  gflops (eval):  955.075
  gflops (total): 723.511
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000523243,0.00163485,955.075,723.511

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00486134
  gflops (total): 321.187
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,321.187

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.000868508
  gflops (eval):  1797.8
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.000868508,1797.8,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.78202e+08
  maximum absolute entry in einsum_ir solution: 6.78202e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000461357
  time (eval):    0.00153786
  gflops (eval):  1015.31
  gflops (total): 781.007
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000461357,0.00153786,1015.31,781.007

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00524318
  gflops (total): 297.797
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,297.797

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00299118
  gflops (eval):  522.002
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00299118,522.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.29425e+08
  maximum absolute entry in einsum_ir solution: 8.29425e+08
  maximum element-wise difference:              640
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000465005
  time (eval):    0.00531822
  gflops (eval):  293.595
  gflops (total): 269.988
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000465005,0.00531822,293.595,269.988

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00415142
  gflops (total): 376.113
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,376.113

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00359765
  gflops (eval):  434.006
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00359765,434.006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.74373e+08
  maximum absolute entry in einsum_ir solution: 7.74373e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000490828
  time (eval):    0.00187167
  gflops (eval):  834.229
  gflops (total): 660.911
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000490828,0.00187167,834.229,660.911

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0116088
  gflops (total): 134.501
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,134.501

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00317501
  gflops (eval):  491.778
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00317501,491.778,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.67415e+08
  maximum absolute entry in einsum_ir solution: 7.67415e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000516459
  time (eval):    0.00184559
  gflops (eval):  846.017
  gflops (total): 661.037
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000516459,0.00184559,846.017,661.037

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00446091
  gflops (total): 350.019
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,350.019

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00471158
  gflops (eval):  331.396
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00471158,331.396,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.86398e+08
  maximum absolute entry in einsum_ir solution: 7.86398e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000473677
  time (eval):    0.00170134
  gflops (eval):  917.748
  gflops (total): 717.88
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000473677,0.00170134,917.748,717.88

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00626067
  gflops (total): 249.398
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,249.398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00490399
  gflops (eval):  318.394
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00490399,318.394,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.34137e+08
  maximum absolute entry in einsum_ir solution: 7.34137e+08
  maximum element-wise difference:              608
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000514155
  time (eval):    0.00183356
  gflops (eval):  851.569
  gflops (total): 665.073
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000514155,0.00183356,851.569,665.073

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.005114
  gflops (total): 305.319
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,305.319

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00316621
  gflops (eval):  493.145
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00316621,493.145,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.33825e+08
  maximum absolute entry in einsum_ir solution: 7.33826e+08
  maximum element-wise difference:              672
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000421519
  time (eval):    0.00149882
  gflops (eval):  1041.75
  gflops (total): 813.086
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000421519,0.00149882,1041.75,813.086

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00655468
  gflops (total): 238.212
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,238.212

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00289751
  gflops (eval):  538.876
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00289751,538.876,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.99063e+08
  maximum absolute entry in einsum_ir solution: 6.99063e+08
  maximum element-wise difference:              568
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000473709
  time (eval):    0.0015529
  gflops (eval):  1005.48
  gflops (total): 770.451
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000473709,0.0015529,1005.48,770.451

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00641308
  gflops (total): 243.471
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,243.471

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00443111
  gflops (eval):  352.372
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00443111,352.372,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.58477e+08
  maximum absolute entry in einsum_ir solution: 7.58477e+08
  maximum element-wise difference:              608
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000479948
  time (eval):    0.00153046
  gflops (eval):  1020.21
  gflops (total): 776.656
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000479948,0.00153046,1020.21,776.656

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00560678
  gflops (total): 278.484
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,278.484

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00373985
  gflops (eval):  417.504
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00373985,417.504,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.87427e+08
  maximum absolute entry in einsum_ir solution: 6.87427e+08
  maximum element-wise difference:              640
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000466605
  time (eval):    0.00158198
  gflops (eval):  986.989
  gflops (total): 762.184
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000466605,0.00158198,986.989,762.184

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00646694
  gflops (total): 241.444
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,241.444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00464227
  gflops (eval):  336.344
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00464227,336.344,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.91164e+08
  maximum absolute entry in einsum_ir solution: 7.91163e+08
  maximum element-wise difference:              544
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000465677
  time (eval):    0.00153306
  gflops (eval):  1018.49
  gflops (total): 781.194
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000465677,0.00153306,1018.49,781.194

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00628259
  gflops (total): 248.528
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,248.528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00691565
  gflops (eval):  225.778
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00691565,225.778,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.25939e+08
  maximum absolute entry in einsum_ir solution: 8.25939e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000565769
  time (eval):    0.00155222
  gflops (eval):  1005.91
  gflops (total): 737.207
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000565769,0.00155222,1005.91,737.207

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00680395
  gflops (total): 229.484
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,229.484

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00434113
  gflops (eval):  359.676
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00434113,359.676,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.43227e+08
  maximum absolute entry in einsum_ir solution: 7.43228e+08
  maximum element-wise difference:              672
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000442222
  time (eval):    0.00169564
  gflops (eval):  920.831
  gflops (total): 730.355
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000442222,0.00169564,920.831,730.355

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00550659
  gflops (total): 283.551
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,283.551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0034964
  gflops (eval):  446.574
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0034964,446.574,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.10063e+08
  maximum absolute entry in einsum_ir solution: 7.10063e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000470861
  time (eval):    0.00172642
  gflops (eval):  904.412
  gflops (total): 710.604
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000470861,0.00172642,904.412,710.604

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00614503
  gflops (total): 254.092
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,254.092

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00393437
  gflops (eval):  396.862
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00393437,396.862,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.53806e+08
  maximum absolute entry in einsum_ir solution: 7.53806e+08
  maximum element-wise difference:              656
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000414351
  time (eval):    0.00170169
  gflops (eval):  917.558
  gflops (total): 737.887
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000414351,0.00170169,917.558,737.887

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0071398
  gflops (total): 218.689
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,218.689

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00487456
  gflops (eval):  320.316
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00487456,320.316,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.37724e+08
  maximum absolute entry in einsum_ir solution: 7.37723e+08
  maximum element-wise difference:              800
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000521323
  time (eval):    0.00160441
  gflops (eval):  973.19
  gflops (total): 734.522
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000521323,0.00160441,973.19,734.522

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00586431
  gflops (total): 266.255
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,266.255

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00379764
  gflops (eval):  411.15
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00379764,411.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.51535e+08
  maximum absolute entry in einsum_ir solution: 7.51536e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000472525
  time (eval):    0.0015473
  gflops (eval):  1009.11
  gflops (total): 773.038
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000472525,0.0015473,1009.11,773.038

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00620423
  gflops (total): 251.667
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,251.667

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00406825
  gflops (eval):  383.801
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00406825,383.801,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.40355e+08
  maximum absolute entry in einsum_ir solution: 7.40356e+08
  maximum element-wise difference:              768
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000524043
  time (eval):    0.0015927
  gflops (eval):  980.346
  gflops (total): 737.642
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000524043,0.0015927,980.346,737.642

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00567919
  gflops (total): 274.933
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,274.933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00373886
  gflops (eval):  417.614
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00373886,417.614,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.38619e+08
  maximum absolute entry in einsum_ir solution: 7.38618e+08
  maximum element-wise difference:              768
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000454189
  time (eval):    0.00151747
  gflops (eval):  1028.95
  gflops (total): 791.92
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000454189,0.00151747,1028.95,791.92

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00714038
  gflops (total): 218.672
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,218.672

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00455956
  gflops (eval):  342.445
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00455956,342.445,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.50907e+08
  maximum absolute entry in einsum_ir solution: 7.50908e+08
  maximum element-wise difference:              640
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000517131
  time (eval):    0.00171884
  gflops (eval):  908.402
  gflops (total): 698.309
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000517131,0.00171884,908.402,698.309

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00671915
  gflops (total): 232.381
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,232.381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00402367
  gflops (eval):  388.053
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00402367,388.053,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.87271e+08
  maximum absolute entry in einsum_ir solution: 8.87271e+08
  maximum element-wise difference:              768
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000532682
  time (eval):    0.00161741
  gflops (eval):  965.373
  gflops (total): 726.203
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000532682,0.00161741,965.373,726.203

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00438049
  gflops (total): 356.444
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,356.444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00361521
  gflops (eval):  431.897
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00361521,431.897,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.50832e+08
  maximum absolute entry in einsum_ir solution: 7.50832e+08
  maximum element-wise difference:              896
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000512236
  time (eval):    0.00149143
  gflops (eval):  1046.92
  gflops (total): 779.273
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000512236,0.00149143,1046.92,779.273

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00360821
  gflops (total): 432.736
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,432.736

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00388074
  gflops (eval):  402.346
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00388074,402.346,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.99482e+08
  maximum absolute entry in einsum_ir solution: 7.99482e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000523627
  time (eval):    0.00157539
  gflops (eval):  991.118
  gflops (total): 743.871
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000523627,0.00157539,991.118,743.871

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00452023
  gflops (total): 345.425
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,345.425

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00568764
  gflops (eval):  274.525
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00568764,274.525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.9711e+08
  maximum absolute entry in einsum_ir solution: 7.9711e+08
  maximum element-wise difference:              608
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000462029
  time (eval):    0.00156685
  gflops (eval):  996.523
  gflops (total): 769.588
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000462029,0.00156685,996.523,769.588

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00585055
  gflops (total): 266.881
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,266.881

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00332326
  gflops (eval):  469.84
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00332326,469.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.9689e+08
  maximum absolute entry in einsum_ir solution: 6.96891e+08
  maximum element-wise difference:              544
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000520043
  time (eval):    0.00152339
  gflops (eval):  1024.95
  gflops (total): 764.105
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000520043,0.00152339,1024.95,764.105

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00486771
  gflops (total): 320.767
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,320.767

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00466544
  gflops (eval):  334.674
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00466544,334.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.59563e+08
  maximum absolute entry in einsum_ir solution: 7.59564e+08
  maximum element-wise difference:              640
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000512939
  time (eval):    0.00163305
  gflops (eval):  956.123
  gflops (total): 727.589
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000512939,0.00163305,956.123,727.589

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00607242
  gflops (total): 257.13
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,257.13

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00537485
  gflops (eval):  290.501
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00537485,290.501,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.04408e+08
  maximum absolute entry in einsum_ir solution: 7.04408e+08
  maximum element-wise difference:              544
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000534058
  time (eval):    0.00167334
  gflops (eval):  933.104
  gflops (total): 707.349
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000534058,0.00167334,933.104,707.349

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00952454
  gflops (total): 163.934
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,163.934

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00372241
  gflops (eval):  419.46
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00372241,419.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.00985e+08
  maximum absolute entry in einsum_ir solution: 8.00985e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000506123
  time (eval):    0.00170659
  gflops (eval):  914.926
  gflops (total): 705.651
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000506123,0.00170659,914.926,705.651

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00575449
  gflops (total): 271.336
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,271.336

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00409545
  gflops (eval):  381.253
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00409545,381.253,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.25446e+08
  maximum absolute entry in einsum_ir solution: 7.25445e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000495084
  time (eval):    0.0015385
  gflops (eval):  1014.89
  gflops (total): 767.808
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000495084,0.0015385,1014.89,767.808

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00649551
  gflops (total): 240.381
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,240.381

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00229146
  gflops (eval):  681.4
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00229146,681.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.74209e+08
  maximum absolute entry in einsum_ir solution: 7.74209e+08
  maximum element-wise difference:              640
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000507659
  time (eval):    0.00160019
  gflops (eval):  975.759
  gflops (total): 740.755
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000507659,0.00160019,975.759,740.755

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00555267
  gflops (total): 281.198
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,281.198

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00366049
  gflops (eval):  426.555
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00366049,426.555,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.68128e+08
  maximum absolute entry in einsum_ir solution: 8.68128e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000514379
  time (eval):    0.00153174
  gflops (eval):  1019.36
  gflops (total): 763.101
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000514379,0.00153174,1019.36,763.101

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0056094
  gflops (total): 278.354
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,278.354

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00322141
  gflops (eval):  484.695
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00322141,484.695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.55802e+08
  maximum absolute entry in einsum_ir solution: 7.55801e+08
  maximum element-wise difference:              720
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000479149
  time (eval):    0.0052387
  gflops (eval):  298.051
  gflops (total): 273.075
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000479149,0.0052387,298.051,273.075

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00469888
  gflops (total): 332.292
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,332.292

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0040358
  gflops (eval):  386.887
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0040358,386.887,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.73147e+08
  maximum absolute entry in einsum_ir solution: 7.73147e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000553161
  time (eval):    0.00158422
  gflops (eval):  985.593
  gflops (total): 730.519
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000553161,0.00158422,985.593,730.519

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00924772
  gflops (total): 168.842
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,168.842

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00372631
  gflops (eval):  419.02
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00372631,419.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.69172e+08
  maximum absolute entry in einsum_ir solution: 7.69171e+08
  maximum element-wise difference:              832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000532842
  time (eval):    0.00166188
  gflops (eval):  939.536
  gflops (total): 711.433
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000532842,0.00166188,939.536,711.433

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00630246
  gflops (total): 247.744
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,247.744

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00400464
  gflops (eval):  389.898
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00400464,389.898,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.00433e+08
  maximum absolute entry in einsum_ir solution: 8.00433e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000421583
  time (eval):    0.00172559
  gflops (eval):  904.848
  gflops (total): 727.188
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000421583,0.00172559,904.848,727.188

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00564476
  gflops (total): 276.61
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,276.61

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00248131
  gflops (eval):  629.265
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00248131,629.265,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.24185e+08
  maximum absolute entry in einsum_ir solution: 7.24185e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000520683
  time (eval):    0.00157517
  gflops (eval):  991.259
  gflops (total): 744.996
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000520683,0.00157517,991.259,744.996

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00499928
  gflops (total): 312.325
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,312.325

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00323309
  gflops (eval):  482.944
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00323309,482.944,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.69713e+08
  maximum absolute entry in einsum_ir solution: 7.69713e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000410031
  time (eval):    0.00171398
  gflops (eval):  910.98
  gflops (total): 735.119
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000410031,0.00171398,910.98,735.119

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00719091
  gflops (total): 217.135
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,217.135

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00432085
  gflops (eval):  361.364
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00432085,361.364,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.81932e+08
  maximum absolute entry in einsum_ir solution: 7.81932e+08
  maximum element-wise difference:              704
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000477965
  time (eval):    0.0015505
  gflops (eval):  1007.03
  gflops (total): 769.746
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000477965,0.0015505,1007.03,769.746

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00676686
  gflops (total): 230.742
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,230.742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00385914
  gflops (eval):  404.598
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00385914,404.598,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.07371e+08
  maximum absolute entry in einsum_ir solution: 7.07371e+08
  maximum element-wise difference:              656
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000498956
  time (eval):    0.00158234
  gflops (eval):  986.77
  gflops (total): 750.207
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000498956,0.00158234,986.77,750.207

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00521009
  gflops (total): 299.688
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,299.688

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00401948
  gflops (eval):  388.458
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00401948,388.458,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.50832e+08
  maximum absolute entry in einsum_ir solution: 7.50832e+08
  maximum element-wise difference:              544
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000510956
  time (eval):    0.00168931
  gflops (eval):  924.284
  gflops (total): 709.642
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000510956,0.00168931,924.284,709.642

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00625811
  gflops (total): 249.5
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,249.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00419458
  gflops (eval):  372.242
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00419458,372.242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.02821e+08
  maximum absolute entry in einsum_ir solution: 8.02821e+08
  maximum element-wise difference:              640
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000520139
  time (eval):    0.00153549
  gflops (eval):  1016.87
  gflops (total): 759.573
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000520139,0.00153549,1016.87,759.573

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00571951
  gflops (total): 272.995
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,272.995

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00342207
  gflops (eval):  456.274
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00342207,456.274,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.05082e+08
  maximum absolute entry in einsum_ir solution: 7.05082e+08
  maximum element-wise difference:              640
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000446798
  time (eval):    0.00191195
  gflops (eval):  816.651
  gflops (total): 661.96
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000446798,0.00191195,816.651,661.96

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00550214
  gflops (total): 283.78
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,283.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00405171
  gflops (eval):  385.368
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00405171,385.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.42294e+08
  maximum absolute entry in einsum_ir solution: 7.42294e+08
  maximum element-wise difference:              1088
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000528171
  time (eval):    0.00167507
  gflops (eval):  932.142
  gflops (total): 708.684
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000528171,0.00167507,932.142,708.684

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00338431
  gflops (total): 461.365
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,461.365

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00301834
  gflops (eval):  517.304
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00301834,517.304,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.52698e+08
  maximum absolute entry in einsum_ir solution: 7.52698e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000462253
  time (eval):    0.00155146
  gflops (eval):  1006.41
  gflops (total): 775.385
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000462253,0.00155146,1006.41,775.385

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00670974
  gflops (total): 232.706
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,232.706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00346123
  gflops (eval):  451.111
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00346123,451.111,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.42249e+08
  maximum absolute entry in einsum_ir solution: 7.42249e+08
  maximum element-wise difference:              640
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000514987
  time (eval):    0.0016167
  gflops (eval):  965.793
  gflops (total): 732.471
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000514987,0.0016167,965.793,732.471

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00923217
  gflops (total): 169.126
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,169.126

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00213655
  gflops (eval):  730.803
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00213655,730.803,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.3727e+08
  maximum absolute entry in einsum_ir solution: 7.3727e+08
  maximum element-wise difference:              928
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000521963
  time (eval):    0.00162614
  gflops (eval):  960.187
  gflops (total): 726.874
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000521963,0.00162614,960.187,726.874

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00558345
  gflops (total): 279.648
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,279.648

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00500971
  gflops (eval):  311.674
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00500971,311.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.62141e+08
  maximum absolute entry in einsum_ir solution: 8.62142e+08
  maximum element-wise difference:              736
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000452653
  time (eval):    0.00182671
  gflops (eval):  854.761
  gflops (total): 685.016
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000452653,0.00182671,854.761,685.016

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00670949
  gflops (total): 232.715
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,232.715

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00383421
  gflops (eval):  407.229
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00383421,407.229,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.3356e+08
  maximum absolute entry in einsum_ir solution: 7.3356e+08
  maximum element-wise difference:              544
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000521227
  time (eval):    0.00184297
  gflops (eval):  847.222
  gflops (total): 660.437
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000521227,0.00184297,847.222,660.437

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00725801
  gflops (total): 215.128
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,215.128

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00257522
  gflops (eval):  606.317
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00257522,606.317,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.06178e+08
  maximum absolute entry in einsum_ir solution: 8.06177e+08
  maximum element-wise difference:              608
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000524138
  time (eval):    0.00157008
  gflops (eval):  994.472
  gflops (total): 745.577
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000524138,0.00157008,994.472,745.577

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00611277
  gflops (total): 255.432
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,255.432

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00531687
  gflops (eval):  293.669
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00531687,293.669,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.60304e+08
  maximum absolute entry in einsum_ir solution: 7.60304e+08
  maximum element-wise difference:              736
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000560393
  time (eval):    0.00168768
  gflops (eval):  925.178
  gflops (total): 694.552
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000560393,0.00168768,925.178,694.552

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00699623
  gflops (total): 223.177
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,223.177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0039704
  gflops (eval):  393.26
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0039704,393.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.14537e+08
  maximum absolute entry in einsum_ir solution: 7.14537e+08
  maximum element-wise difference:              640
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000409583
  time (eval):    0.0018294
  gflops (eval):  853.505
  gflops (total): 697.371
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000409583,0.0018294,853.505,697.371

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0047718
  gflops (total): 327.214
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,327.214

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00535892
  gflops (eval):  291.365
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00535892,291.365,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.44553e+08
  maximum absolute entry in einsum_ir solution: 7.44552e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000465517
  time (eval):    0.00155818
  gflops (eval):  1002.07
  gflops (total): 771.559
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000465517,0.00155818,1002.07,771.559

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00642089
  gflops (total): 243.175
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,243.175

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00419679
  gflops (eval):  372.046
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00419679,372.046,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.11192e+08
  maximum absolute entry in einsum_ir solution: 7.11191e+08
  maximum element-wise difference:              576
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000466637
  time (eval):    0.00168137
  gflops (eval):  928.647
  gflops (total): 726.906
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000466637,0.00168137,928.647,726.906

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00702375
  gflops (total): 222.303
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,222.303

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00469549
  gflops (eval):  332.532
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00469549,332.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.37895e+08
  maximum absolute entry in einsum_ir solution: 7.37895e+08
  maximum element-wise difference:              608
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000524426
  time (eval):    0.00153917
  gflops (eval):  1014.44
  gflops (total): 756.641
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000524426,0.00153917,1014.44,756.641

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00525767
  gflops (total): 296.975
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,296.975

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00392093
  gflops (eval):  398.222
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00392093,398.222,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.60572e+08
  maximum absolute entry in einsum_ir solution: 7.60572e+08
  maximum element-wise difference:              608
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000510315
  time (eval):    0.00171011
  gflops (eval):  913.043
  gflops (total): 703.2
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000510315,0.00171011,913.043,703.2

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00725199
  gflops (total): 215.306
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,215.306

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00342568
  gflops (eval):  455.792
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00342568,455.792,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.58771e+08
  maximum absolute entry in einsum_ir solution: 7.58771e+08
  maximum element-wise difference:              544
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000463853
  time (eval):    0.00184216
  gflops (eval):  847.59
  gflops (total): 677.098
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000463853,0.00184216,847.59,677.098

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00612612
  gflops (total): 254.876
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,254.876

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00269839
  gflops (eval):  578.642
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00269839,578.642,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.75058e+08
  maximum absolute entry in einsum_ir solution: 7.75059e+08
  maximum element-wise difference:              768
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000531179
  time (eval):    0.00181263
  gflops (eval):  861.4
  gflops (total): 666.181
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000531179,0.00181263,861.4,666.181

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00557248
  gflops (total): 280.199
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,280.199

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00241507
  gflops (eval):  646.524
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00241507,646.524,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.4789e+08
  maximum absolute entry in einsum_ir solution: 7.4789e+08
  maximum element-wise difference:              768
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000523339
  time (eval):    0.00175308
  gflops (eval):  890.661
  gflops (total): 685.902
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000523339,0.00175308,890.661,685.902

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0059667
  gflops (total): 261.686
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,261.686

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00424482
  gflops (eval):  367.837
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00424482,367.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.00287e+08
  maximum absolute entry in einsum_ir solution: 7.00287e+08
  maximum element-wise difference:              640
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000475596
  time (eval):    0.00166038
  gflops (eval):  940.387
  gflops (total): 731
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000475596,0.00166038,940.387,731

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00375037
  gflops (total): 416.332
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,416.332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00365886
  gflops (eval):  426.745
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00365886,426.745,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.99743e+08
  maximum absolute entry in einsum_ir solution: 6.99743e+08
  maximum element-wise difference:              592
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.000475149
  time (eval):    0.00172582
  gflops (eval):  904.73
  gflops (total): 709.415
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.000475149,0.00172582,904.73,709.415

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00614215
  gflops (total): 254.211
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,254.211

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00249219
  gflops (eval):  626.519
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00249219,626.519,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.8991e+08
  maximum absolute entry in einsum_ir solution: 7.89909e+08
  maximum element-wise difference:              896
warning: einsum_ir solution is not close to at:einsum!
